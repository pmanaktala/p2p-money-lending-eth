{
	"id": "6f105baac0459b3808995e299fa7de1b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.4.18",
	"solcLongVersion": "0.4.18+commit.9cf6e910",
	"input": {
		"language": "Solidity",
		"sources": {
			"smart-contracts/contracts/PeerToPeerLending.sol": {
				"content": "pragma solidity ^0.4.18;\r\n\r\nimport './common/SafeMath.sol';\r\nimport './common/Destructible.sol';\r\nimport './Credit.sol';\r\n\r\ncontract PeerToPeerLending is Destructible {\r\n    // Using SafeMath for our calculations with uints.\r\n    using SafeMath for uint;\r\n\r\n    // User structure\r\n    struct User {\r\n        // Is the user currently credited.\r\n        bool credited;\r\n\r\n        // The adress of the active credit.\r\n        address activeCredit;\r\n\r\n        // Is the user marked as fraudlent.\r\n        bool fraudStatus;\r\n\r\n        // All user credits.\r\n        address[] allCredits;\r\n    }\r\n\r\n    // We store all users in a mapping.\r\n    mapping(address => User) public users;\r\n\r\n    // Array of all credits adresses.\r\n    address[] public credits;\r\n\r\n    event LogCreditCreated(address indexed _address, address indexed _borrower, uint indexed timestamp);\r\n    event LogCreditStateChanged(address indexed _address, Credit.State indexed state, uint indexed timestamp);\r\n    event LogCreditActiveChanged(address indexed _address, bool indexed active, uint indexed timestamp);\r\n    event LogUserSetFraud(address indexed _address, bool fraudStatus, uint timestamp);\r\n\r\n    function PeerToPeerLending() public {\r\n\r\n    }\r\n\r\n    function applyForCredit(uint requestedAmount, uint repaymentsCount, uint interest, bytes32 creditDescription) public returns(address _credit) {\r\n        // The user should not have been credited;\r\n        require(users[msg.sender].credited == false);\r\n\r\n        // THe user should not be marked as fraudlent.\r\n        require(users[msg.sender].fraudStatus == false);\r\n\r\n        // Assert there is no active credit for the user.\r\n        assert(users[msg.sender].activeCredit == 0);\r\n\r\n        // Mark the user as credited. Prevent from reentrancy.\r\n        users[msg.sender].credited = true;\r\n\r\n        // Create a new credit contract with the given parameters.\r\n        Credit credit = new Credit(requestedAmount, repaymentsCount, interest, creditDescription);\r\n\r\n        // Set the user's active credit contract.\r\n        users[msg.sender].activeCredit = credit;\r\n\r\n        // Add the credit contract to our list with contracts.\r\n        credits.push(credit);\r\n\r\n        // Add the credit to the user's profile.\r\n        users[msg.sender].allCredits.push(credit);\r\n\r\n        // Log the credit creation event.\r\n        LogCreditCreated(credit, msg.sender, block.timestamp);\r\n\r\n        return credit;\r\n    }\r\n\r\n    function getCredits() public view returns (address[]) {\r\n        return credits;\r\n    }\r\n\r\n    function getUserCredits() public view returns (address[]) {\r\n        return users[msg.sender].allCredits;\r\n    }\r\n\r\n    function setFraudStatus(address _borrower) external returns (bool) {\r\n        // Update user fraud status.\r\n        users[_borrower].fraudStatus = true;\r\n\r\n        // Log fraud status.\r\n        LogUserSetFraud(_borrower, users[_borrower].fraudStatus, block.timestamp);\r\n\r\n        return users[_borrower].fraudStatus;\r\n    }\r\n\r\n    function changeCreditState (Credit _credit, Credit.State state) public onlyOwner {\r\n        // Call credit contract changeStage.\r\n        Credit credit = Credit(_credit);\r\n        credit.changeState(state);\r\n\r\n        // Log state change.\r\n        LogCreditStateChanged(credit, state, block.timestamp);\r\n    }\r\n\r\n    function changeCreditState (Credit _credit) public onlyOwner {\r\n        // Call credit contract toggleActive method.\r\n        Credit credit = Credit(_credit);\r\n        bool active = credit.toggleActive();\r\n\r\n        // Log state change.\r\n        LogCreditActiveChanged(credit, active, block.timestamp);\r\n    }\r\n}"
			},
			"smart-contracts/contracts/Credit.sol": {
				"content": "pragma solidity ^0.4.18;\r\n\r\nimport './common/SafeMath.sol';\r\nimport './common/Destructible.sol';\r\n\r\n/** @title Credit contract.\r\n  * Inherits the Ownable and Destructible contracts.\r\n  */\r\ncontract Credit is Destructible {\r\n\r\n    /** @dev Usings */\r\n    // Using SafeMath for our calculations with uints.\r\n    using SafeMath for uint;\r\n\r\n    /** @dev State variables */\r\n    // Borrower is the person who generated the credit contract.\r\n    address borrower;\r\n\r\n    // Amount requested to be funded (in wei).\r\n    uint requestedAmount;\r\n\r\n    // Amount that will be returned by the borrower (including the interest).\r\n    uint returnAmount;\r\n\r\n    // Currently repaid amount.\r\n    uint repaidAmount;\r\n\r\n    // Credit interest.\r\n    uint interest;\r\n\r\n    // Requested number of repayment installments.\r\n    uint requestedRepayments;\r\n\r\n    // Remaining repayment installments.\r\n    uint remainingRepayments;\r\n\r\n    // The value of the repayment installment.\r\n    uint repaymentInstallment;\r\n\r\n    // The timestamp of credit creation.\r\n    uint requestedDate;\r\n\r\n    // The timestamp of last repayment date.\r\n    uint lastRepaymentDate;\r\n\r\n    // Description of the credit.\r\n    bytes32 description;\r\n\r\n    // Active state of the credit.\r\n    bool active;\r\n\r\n    /** Stages that every credit contract gets trough.\r\n      *   investment - During this state only investments are allowed.\r\n      *   repayment - During this stage only repayments are allowed.\r\n      *   interestReturns - This stage gives investors opportunity to request their returns.\r\n      *   expired - This is the stage when the contract is finished its purpose.\r\n      *   fraud - The borrower was marked as fraud.\r\n    */\r\n    enum State { investment, repayment, interestReturns, expired, revoked, fraud }\r\n    State state;\r\n\r\n    // Storing the lenders for this credit.\r\n    mapping(address => bool) public lenders;\r\n\r\n    // Storing the invested amount by each lender.\r\n    mapping(address => uint) lendersInvestedAmount;\r\n\r\n    // Store the lenders count, later needed for revoke vote.\r\n    uint lendersCount;\r\n\r\n    // Revoke votes count.\r\n    uint revokeVotes;\r\n\r\n    // Revoke voters.\r\n    mapping(address => bool) revokeVoters;\r\n\r\n    // Time needed for a revoke voting to start.\r\n    // To be changed in production accordingly.\r\n    uint revokeTimeNeeded;\r\n\r\n    // Revoke votes count.\r\n    uint fraudVotes;\r\n\r\n    // Revoke voters.\r\n    mapping(address => bool) fraudVoters;\r\n\r\n\r\n    /** @dev Events\r\n    *\r\n    */\r\n    event LogCreditInitialized(address indexed _address, uint indexed timestamp);\r\n    event LogCreditStateChanged(State indexed state, uint indexed timestamp);\r\n    event LogCreditStateActiveChanged(bool indexed active, uint indexed timestamp);\r\n\r\n    event LogBorrowerWithdrawal(address indexed _address, uint indexed _amount, uint indexed timestamp);\r\n    event LogBorrowerRepaymentInstallment(address indexed _address, uint indexed _amount, uint indexed timestamp);\r\n    event LogBorrowerRepaymentFinished(address indexed _address, uint indexed timestamp);\r\n    event LogBorrowerChangeReturned(address indexed _address, uint indexed _amount, uint indexed timestamp);\r\n    event LogBorrowerIsFraud(address indexed _address, bool indexed fraudStatus, uint indexed timestamp);\r\n\r\n    event LogLenderInvestment(address indexed _address, uint indexed _amount, uint indexed timestamp);\r\n    event LogLenderWithdrawal(address indexed _address, uint indexed _amount, uint indexed timestamp);\r\n    event LogLenderChangeReturned(address indexed _address, uint indexed _amount, uint indexed timestamp);\r\n    event LogLenderVoteForRevoking(address indexed _address, uint indexed timestamp);\r\n    event LogLenderVoteForFraud(address indexed _address, uint indexed timestamp);\r\n    event LogLenderRefunded(address indexed _address, uint indexed _amount, uint indexed timestamp);\r\n\r\n    /** @dev Modifiers\r\n    *\r\n    */\r\n    modifier isActive() {\r\n        require(active == true);\r\n        _;\r\n    }\r\n\r\n    modifier onlyBorrower() {\r\n        require(msg.sender == borrower);\r\n        _;\r\n    }\r\n\r\n    modifier onlyLender() {\r\n        require(lenders[msg.sender] == true);\r\n        _;\r\n    }\r\n\r\n    modifier canAskForInterest() {\r\n        require(state == State.interestReturns);\r\n        require(lendersInvestedAmount[msg.sender] > 0);\r\n        _;\r\n    }\r\n\r\n    modifier canInvest() {\r\n        require(state == State.investment);\r\n        _;\r\n    }\r\n\r\n    modifier canRepay() {\r\n        require(state == State.repayment);\r\n        _;\r\n    }\r\n\r\n    modifier canWithdraw() {\r\n        require(this.balance >= requestedAmount);\r\n        _;\r\n    }\r\n\r\n    modifier isNotFraud() {\r\n        require(state != State.fraud);\r\n        _;\r\n    }\r\n\r\n    modifier isRevokable() {\r\n        require(block.timestamp >= revokeTimeNeeded);\r\n        require(state == State.investment);\r\n        _;\r\n    }\r\n\r\n    modifier isRevoked() {\r\n        require(state == State.revoked);\r\n        _;\r\n    }\r\n\r\n    /** @dev Constructor.\r\n      * @param _requestedAmount Requested credit amount (in wei).\r\n      * @param _requestedRepayments Requested number of repayments.\r\n      * @param _description Credit description.\r\n      */\r\n    function Credit(uint _requestedAmount, uint _requestedRepayments, uint _interest, bytes32 _description) public {\r\n        /* Set the borrower of the contract to the tx.origin\r\n          * We are using tx.origin, because the contract is going to be published\r\n          * by the main contract and msg.sender will break our logic.\r\n        */\r\n        borrower = tx.origin;\r\n\r\n        // Set the interest for the credit.\r\n        interest = _interest;\r\n\r\n        // Set the requested amount.\r\n        requestedAmount = _requestedAmount;\r\n\r\n        // Set the requested repayments.\r\n        requestedRepayments = _requestedRepayments;\r\n\r\n        /** Set the remaining repayments.\r\n          * Initially this is equal to the requested repayments.\r\n          */\r\n        remainingRepayments = _requestedRepayments;\r\n\r\n        /** Calculate the amount to be returned by the borrower.\r\n          * At this point this is the addition of the requested amount and the interest.\r\n          */\r\n        returnAmount = requestedAmount.add(interest);\r\n\r\n        /** Calculating the repayment installment.\r\n          * We divide the amount to be returned by the requested repayments count to get it.\r\n          */\r\n        repaymentInstallment = returnAmount.div(requestedRepayments);\r\n\r\n        // Set the credit description.\r\n        description = _description;\r\n\r\n        // Set the initialization date.\r\n        requestedDate = block.timestamp;\r\n\r\n        // Log credit initialization.\r\n        LogCreditInitialized(borrower, block.timestamp);\r\n    }\r\n\r\n    /** @dev Get current balance.\r\n      * return this.balance.\r\n      */\r\n    function getBalance() public view returns (uint256) {\r\n        return this.balance;\r\n    }\r\n\r\n    /** @dev Invest function.\r\n      * Provides functionality for person to invest in someone's credit,\r\n      * incentivised by the return of interest.\r\n      */\r\n    function invest() public canInvest payable {\r\n        // Initialize an memory variable for the extra money that may have been sent.\r\n        uint extraMoney = 0;\r\n\r\n        // Check if contract balance is reached the requested amount.\r\n        if (this.balance >= requestedAmount) {\r\n\r\n            // Calculate the extra money that may have been sent.\r\n            extraMoney = this.balance.sub(requestedAmount);\r\n\r\n            // Assert the calculations\r\n            assert(requestedAmount == this.balance.sub(extraMoney));\r\n\r\n            // Assert for possible underflow / overflow\r\n            assert(extraMoney <= msg.value);\r\n\r\n            // Check if extra money is greater than 0 wei.\r\n            if (extraMoney > 0) {\r\n                // Return the extra money to the sender.\r\n                msg.sender.transfer(extraMoney);\r\n\r\n                // Log change returned.\r\n                LogLenderChangeReturned(msg.sender, extraMoney, block.timestamp);\r\n            }\r\n\r\n            // Set the contract state to repayment.\r\n            state = State.repayment;\r\n\r\n            // Log state change.\r\n            LogCreditStateChanged(state, block.timestamp);\r\n        }\r\n\r\n        /** Add the investor to the lenders mapping.\r\n          * So that we know he invested in this contract.\r\n          */\r\n        lenders[msg.sender] = true;\r\n\r\n        // Increment the lenders count.\r\n        lendersCount++;\r\n\r\n        // Add the amount invested to the amount mapping.\r\n        lendersInvestedAmount[msg.sender] = lendersInvestedAmount[msg.sender].add(msg.value.sub(extraMoney));\r\n\r\n        // Log lender invested amount.\r\n        LogLenderInvestment(msg.sender, msg.value.sub(extraMoney), block.timestamp);\r\n    }\r\n\r\n    /** @dev Repayment function.\r\n      * Allows borrower to make repayment installments.\r\n      */\r\n    function repay() public onlyBorrower canRepay payable {\r\n        // The remaining repayments should be greater than 0 to continue.\r\n        require(remainingRepayments > 0);\r\n\r\n        // The value sent should be greater than the repayment installment.\r\n        require(msg.value >= repaymentInstallment);\r\n\r\n        /** Assert that the amount to be returned is greater\r\n          * than the sum of repayments made until now.\r\n          * Otherwise the credit is already repaid.\r\n          */\r\n        assert(repaidAmount < returnAmount);\r\n\r\n        // Decrement the remaining repayments.\r\n        remainingRepayments--;\r\n\r\n        // Update last repayment date.\r\n        lastRepaymentDate = block.timestamp;\r\n\r\n        // Initialize an memory variable for the extra money that may have been sent.\r\n        uint extraMoney = 0;\r\n\r\n        /** Check if the value (in wei) that is being sent is greather than the repayment installment.\r\n          * In this case we should return the change to the msg.sender.\r\n          */\r\n        if (msg.value > repaymentInstallment) {\r\n\r\n            // Calculate the extra money being sent in the transaction.\r\n            extraMoney = msg.value.sub(repaymentInstallment);\r\n\r\n            // Assert the calculations.\r\n            assert(repaymentInstallment == msg.value.sub(extraMoney));\r\n\r\n            // Assert for underflow.\r\n            assert(extraMoney <= msg.value);\r\n\r\n            // Return the change/extra money to the msg.sender.\r\n            msg.sender.transfer(extraMoney);\r\n\r\n            // Log the return of the extra money.\r\n            LogBorrowerChangeReturned(msg.sender, extraMoney, block.timestamp);\r\n        }\r\n\r\n        // Log borrower installment received.\r\n        LogBorrowerRepaymentInstallment(msg.sender, msg.value.sub(extraMoney), block.timestamp);\r\n\r\n        // Add the repayment installment amount to the total repaid amount.\r\n        repaidAmount = repaidAmount.add(msg.value.sub(extraMoney));\r\n\r\n        // Check the repaid amount reached the amount to be returned.\r\n        if (repaidAmount == returnAmount) {\r\n\r\n            // Log credit repaid.\r\n            LogBorrowerRepaymentFinished(msg.sender, block.timestamp);\r\n\r\n            // Set the credit state to \"returning interests\".\r\n            state = State.interestReturns;\r\n\r\n            // Log state change.\r\n            LogCreditStateChanged(state, block.timestamp);\r\n        }\r\n    }\r\n\r\n    /** @dev Withdraw function.\r\n      * It can only be executed while contract is in active state.\r\n      * It is only accessible to the borrower.\r\n      * It is only accessible if the needed amount is gathered in the contract.\r\n      * It can only be executed once.\r\n      * Transfers the gathered amount to the borrower.\r\n      */\r\n    function withdraw() public isActive onlyBorrower canWithdraw isNotFraud {\r\n        // Set the state to repayment so we can avoid reentrancy.\r\n        state = State.repayment;\r\n\r\n        // Log state change.\r\n        LogCreditStateChanged(state, block.timestamp);\r\n\r\n        // Log borrower withdrawal.\r\n        LogBorrowerWithdrawal(msg.sender, this.balance, block.timestamp);\r\n\r\n        // Transfer the gathered amount to the credit borrower.\r\n        borrower.transfer(this.balance);\r\n    }\r\n\r\n    /** @dev Request interest function.\r\n      * It can only be executed while contract is in active state.\r\n      * It is only accessible to lenders.\r\n      * It is only accessible if lender funded 1 or more wei.\r\n      * It can only be executed once.\r\n      * Transfers the lended amount + interest to the lender.\r\n      */\r\n    function requestInterest() public isActive onlyLender canAskForInterest {\r\n\r\n        // Calculate the amount to be returned to lender.\r\n//        uint lenderReturnAmount = lendersInvestedAmount[msg.sender].mul(returnAmount.div(lendersCount).div(lendersInvestedAmount[msg.sender]));\r\n        uint lenderReturnAmount = returnAmount / lendersCount;\r\n\r\n        // Assert the contract has enough balance to pay the lender.\r\n        assert(this.balance >= lenderReturnAmount);\r\n\r\n        // Transfer the return amount with interest to the lender.\r\n        msg.sender.transfer(lenderReturnAmount);\r\n\r\n        // Log the transfer to lender.\r\n        LogLenderWithdrawal(msg.sender, lenderReturnAmount, block.timestamp);\r\n\r\n        // Check if the contract balance is drawned.\r\n        if (this.balance == 0) {\r\n\r\n            // Set the active state to false.\r\n            active = false;\r\n\r\n            // Log active state change.\r\n            LogCreditStateActiveChanged(active, block.timestamp);\r\n\r\n            // Set the contract stage to expired e.g. its lifespan is over.\r\n            state = State.expired;\r\n\r\n            // Log state change.\r\n            LogCreditStateChanged(state, block.timestamp);\r\n        }\r\n    }\r\n\r\n    /** @dev Function to get the whole credit information.\r\n      * return borrower\r\n      * return description\r\n      * return requestedAmount\r\n      * return requestedRepayments\r\n      * return remainingRepayments\r\n      * return interest\r\n      * return returnAmount\r\n      * return state\r\n      * return active\r\n      * return this.balance\r\n      */\r\n    function getCreditInfo() public view returns (address, bytes32, uint, uint, uint, uint, uint, uint, State, bool, uint) {\r\n        return (\r\n        borrower,\r\n        description,\r\n        requestedAmount,\r\n        requestedRepayments,\r\n        repaymentInstallment,\r\n        remainingRepayments,\r\n        interest,\r\n        returnAmount,\r\n        state,\r\n        active,\r\n        this.balance\r\n        );\r\n    }\r\n\r\n    /** @dev Function for revoking the credit.\r\n      */\r\n    function revokeVote() public isActive isRevokable onlyLender {\r\n        // Require only one vote per lender.\r\n        require(revokeVoters[msg.sender] == false);\r\n\r\n        // Increment the revokeVotes.\r\n        revokeVotes++;\r\n\r\n        // Note the lender has voted.\r\n        revokeVoters[msg.sender] == true;\r\n\r\n        // Log lender vote for revoking the credit contract.\r\n        LogLenderVoteForRevoking(msg.sender, block.timestamp);\r\n\r\n        // If the consensus is reached.\r\n        if (lendersCount == revokeVotes) {\r\n            // Call internal revoke function.\r\n            revoke();\r\n        }\r\n    }\r\n\r\n    /** @dev Revoke internal function.\r\n      */\r\n    function revoke() internal {\r\n        // Change the state to revoked.\r\n        state = State.revoked;\r\n\r\n        // Log credit revoked.\r\n        LogCreditStateChanged(state, block.timestamp);\r\n    }\r\n\r\n    /** @dev Function for refunding people. */\r\n    function refund() public isActive onlyLender isRevoked {\r\n        // assert the contract have enough balance.\r\n        assert(this.balance >= lendersInvestedAmount[msg.sender]);\r\n\r\n        // Transfer the return amount with interest to the lender.\r\n        msg.sender.transfer(lendersInvestedAmount[msg.sender]);\r\n\r\n        // Log the transfer to lender.\r\n        LogLenderRefunded(msg.sender, lendersInvestedAmount[msg.sender], block.timestamp);\r\n\r\n        // Check if the contract balance is drawned.\r\n        if (this.balance == 0) {\r\n\r\n            // Set the active state to false.\r\n            active = false;\r\n\r\n            // Log active status change.\r\n            LogCreditStateActiveChanged(active, block.timestamp);\r\n\r\n            // Set the contract stage to expired e.g. its lifespan is over.\r\n            state = State.expired;\r\n\r\n            // Log state change.\r\n            LogCreditStateChanged(state, block.timestamp);\r\n        }\r\n    }\r\n\r\n    /** @dev Function for voting the borrower as fraudster.\r\n     */\r\n    function fraudVote() public isActive onlyLender returns (bool) {\r\n        // A lender could vote only once.\r\n        require(fraudVoters[msg.sender] == false);\r\n\r\n        // Increment fraudVotes count.\r\n        fraudVotes++;\r\n\r\n        // Note the lender has voted.\r\n        fraudVoters[msg.sender] == true;\r\n\r\n        // Log lenders vote for fraud\r\n        LogLenderVoteForFraud(msg.sender, block.timestamp);\r\n\r\n        // Check if consensus is reached.\r\n        if (lendersCount == fraudVotes) {\r\n            // Invoke fraud function.\r\n            return fraud();\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /** @dev Fraund function\r\n      * return\r\n      * calls the owner contract and marks the borrower as fraudster.\r\n      */\r\n    function fraud() internal returns (bool) {\r\n        // call the owner address function with param borrower's address\r\n        bool fraudStatusResult = owner.call(bytes4(keccak256(\"setFraudStatus(address)\")), borrower);\r\n\r\n        // Log user marked as fraud.\r\n        LogBorrowerIsFraud(borrower, fraudStatusResult, block.timestamp);\r\n\r\n        return fraudStatusResult;\r\n    }\r\n\r\n    /** @dev Change state function.\r\n      * @param _state New state.\r\n      * Only accessible to the owner of the contract.\r\n      * Changes the state of the contract.\r\n      */\r\n    function changeState(State _state) external onlyOwner returns (uint) {\r\n        state = _state;\r\n\r\n        // Log state change.\r\n        LogCreditStateChanged(state, block.timestamp);\r\n    }\r\n\r\n    /** @dev Toggle active state function.\r\n      * Only accessible to the owner of the contract.\r\n      * Toggles the active state of the contract.\r\n      * return bool\r\n      */\r\n    function toggleActive() external onlyOwner returns (bool) {\r\n        active = !active;\r\n\r\n        // Log active status change.\r\n        LogCreditStateActiveChanged(active, block.timestamp);\r\n\r\n        return active;\r\n    }\r\n\r\n}"
			},
			"smart-contracts/contracts/common/Destructible.sol": {
				"content": "pragma solidity ^0.4.18;\r\n\r\nimport './Ownable.sol';\r\n\r\ncontract Destructible is Ownable {\r\n    \r\n    function Destructible() public payable { }\r\n\r\n    function destroy() public onlyOwner {\r\n        selfdestruct(owner);\r\n    }\r\n    \r\n    function destroyAndSend(address _recipient) public onlyOwner {\r\n        selfdestruct(_recipient);\r\n    }\r\n}"
			},
			"smart-contracts/contracts/common/SafeMath.sol": {
				"content": "pragma solidity ^0.4.18;\r\n\r\n\r\nlibrary SafeMath {\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n        uint256 c = a * b;\r\n        assert(c / a == b);\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        //there is no case where this function can overflow/underflow\r\n        uint256 c = a / b;\r\n        return c;\r\n    }\r\n    \r\n    \r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        assert(b <= a);\r\n        return a - b;\r\n    }\r\n    \r\n    \r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        assert(c >= a);\r\n        return c;\r\n    }\r\n}\r\n"
			},
			"smart-contracts/contracts/common/Ownable.sol": {
				"content": "pragma solidity ^0.4.18;\r\n\r\n\r\ncontract Ownable {\r\n    address public owner;\r\n\r\n    event LogOwnershipTransfered(address indexed _currentOwner, address indexed _newOwner);\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    // @dev - The ownership shouldn't be transferrable. Otherwise it will mess up the members logic.\r\n    /* function transferOwnership(address _newOwner) public onlyOwner {\r\n         owner = _newOwner;\r\n         LogOwnershipTransfered(msg.sender, _newOwner);\r\n     } */\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"smart-contracts/contracts/Credit.sol": {
				"Credit": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "getBalance",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_state",
									"type": "uint8"
								}
							],
							"name": "changeState",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"name": "lenders",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "toggleActive",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "repay",
							"outputs": [],
							"payable": true,
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "revokeVote",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "refund",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "destroy",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "fraudVote",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "invest",
							"outputs": [],
							"payable": true,
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "requestInterest",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getCreditInfo",
							"outputs": [
								{
									"name": "",
									"type": "address"
								},
								{
									"name": "",
									"type": "bytes32"
								},
								{
									"name": "",
									"type": "uint256"
								},
								{
									"name": "",
									"type": "uint256"
								},
								{
									"name": "",
									"type": "uint256"
								},
								{
									"name": "",
									"type": "uint256"
								},
								{
									"name": "",
									"type": "uint256"
								},
								{
									"name": "",
									"type": "uint256"
								},
								{
									"name": "",
									"type": "uint8"
								},
								{
									"name": "",
									"type": "bool"
								},
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_recipient",
									"type": "address"
								}
							],
							"name": "destroyAndSend",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"name": "_requestedAmount",
									"type": "uint256"
								},
								{
									"name": "_requestedRepayments",
									"type": "uint256"
								},
								{
									"name": "_interest",
									"type": "uint256"
								},
								{
									"name": "_description",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "_address",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "LogCreditInitialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "state",
									"type": "uint8"
								},
								{
									"indexed": true,
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "LogCreditStateChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "active",
									"type": "bool"
								},
								{
									"indexed": true,
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "LogCreditStateActiveChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "_address",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "_amount",
									"type": "uint256"
								},
								{
									"indexed": true,
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "LogBorrowerWithdrawal",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "_address",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "_amount",
									"type": "uint256"
								},
								{
									"indexed": true,
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "LogBorrowerRepaymentInstallment",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "_address",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "LogBorrowerRepaymentFinished",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "_address",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "_amount",
									"type": "uint256"
								},
								{
									"indexed": true,
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "LogBorrowerChangeReturned",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "_address",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "fraudStatus",
									"type": "bool"
								},
								{
									"indexed": true,
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "LogBorrowerIsFraud",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "_address",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "_amount",
									"type": "uint256"
								},
								{
									"indexed": true,
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "LogLenderInvestment",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "_address",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "_amount",
									"type": "uint256"
								},
								{
									"indexed": true,
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "LogLenderWithdrawal",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "_address",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "_amount",
									"type": "uint256"
								},
								{
									"indexed": true,
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "LogLenderChangeReturned",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "_address",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "LogLenderVoteForRevoking",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "_address",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "LogLenderVoteForFraud",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "_address",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "_amount",
									"type": "uint256"
								},
								{
									"indexed": true,
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "LogLenderRefunded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "_currentOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "_newOwner",
									"type": "address"
								}
							],
							"name": "LogOwnershipTransfered",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {
							"changeState(uint8)": {
								"details": "Change state function.\r",
								"params": {
									"_state": "New state.\r Only accessible to the owner of the contract.\r Changes the state of the contract.\r"
								}
							},
							"fraudVote()": {
								"details": "Function for voting the borrower as fraudster.\r"
							},
							"getBalance()": {
								"details": "Get current balance.\r return this.balance.\r"
							},
							"getCreditInfo()": {
								"details": "Function to get the whole credit information.\r return borrower\r return description\r return requestedAmount\r return requestedRepayments\r return remainingRepayments\r return interest\r return returnAmount\r return state\r return active\r return this.balance\r"
							},
							"invest()": {
								"details": "Invest function.\r Provides functionality for person to invest in someone's credit,\r incentivised by the return of interest.\r"
							},
							"refund()": {
								"details": "Function for refunding people. "
							},
							"repay()": {
								"details": "Repayment function.\r Allows borrower to make repayment installments.\r"
							},
							"requestInterest()": {
								"details": "Request interest function.\r It can only be executed while contract is in active state.\r It is only accessible to lenders.\r It is only accessible if lender funded 1 or more wei.\r It can only be executed once.\r Transfers the lended amount + interest to the lender.\r"
							},
							"revokeVote()": {
								"details": "Function for revoking the credit.\r"
							},
							"toggleActive()": {
								"details": "Toggle active state function.\r Only accessible to the owner of the contract.\r Toggles the active state of the contract.\r return bool\r"
							},
							"withdraw()": {
								"details": "Withdraw function.\r It can only be executed while contract is in active state.\r It is only accessible to the borrower.\r It is only accessible if the needed amount is gathered in the contract.\r It can only be executed once.\r Transfers the gathered amount to the borrower.\r"
							}
						},
						"title": "Credit contract.\r Inherits the Ownable and Destructible contracts.\r"
					},
					"evm": {
						"assembly": "    /* \"smart-contracts/contracts/Credit.sol\":189:18405  contract Credit is Destructible {\r... */\n  mstore(0x40, 0x60)\n    /* \"smart-contracts/contracts/Credit.sol\":5188:6727  function Credit(uint _requestedAmount, uint _requestedRepayments, uint _interest, bytes32 _description) public {\r... */\n  jumpi(tag_1, iszero(callvalue))\n  0x0\n  dup1\n  revert\ntag_1:\n  mload(0x40)\n  0x80\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  mstore\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap2\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap2\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap2\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap2\n  swap1\n  pop\n  pop\n    /* \"smart-contracts/contracts/Credit.sol\":5549:5558  tx.origin */\n  origin\n    /* \"smart-contracts/contracts/Credit.sol\":5538:5546  borrower */\n  0x1\n  0x0\n    /* \"smart-contracts/contracts/Credit.sol\":5538:5558  borrower = tx.origin */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"smart-contracts/contracts/Credit.sol\":5627:5636  _interest */\n  dup2\n    /* \"smart-contracts/contracts/Credit.sol\":5616:5624  interest */\n  0x5\n    /* \"smart-contracts/contracts/Credit.sol\":5616:5636  interest = _interest */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"smart-contracts/contracts/Credit.sol\":5705:5721  _requestedAmount */\n  dup4\n    /* \"smart-contracts/contracts/Credit.sol\":5687:5702  requestedAmount */\n  0x2\n    /* \"smart-contracts/contracts/Credit.sol\":5687:5721  requestedAmount = _requestedAmount */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"smart-contracts/contracts/Credit.sol\":5798:5818  _requestedRepayments */\n  dup3\n    /* \"smart-contracts/contracts/Credit.sol\":5776:5795  requestedRepayments */\n  0x6\n    /* \"smart-contracts/contracts/Credit.sol\":5776:5818  requestedRepayments = _requestedRepayments */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"smart-contracts/contracts/Credit.sol\":5976:5996  _requestedRepayments */\n  dup3\n    /* \"smart-contracts/contracts/Credit.sol\":5954:5973  remainingRepayments */\n  0x7\n    /* \"smart-contracts/contracts/Credit.sol\":5954:5996  remainingRepayments = _requestedRepayments */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"smart-contracts/contracts/Credit.sol\":6194:6223  requestedAmount.add(interest) */\n  tag_6\n    /* \"smart-contracts/contracts/Credit.sol\":6214:6222  interest */\n  sload(0x5)\n    /* \"smart-contracts/contracts/Credit.sol\":6194:6209  requestedAmount */\n  sload(0x2)\n    /* \"smart-contracts/contracts/Credit.sol\":6194:6213  requestedAmount.add */\n  or(tag_0_104, mul(0x100000000, tag_7))\n  swap1\n    /* \"smart-contracts/contracts/Credit.sol\":6194:6223  requestedAmount.add(interest) */\n  swap2\n  swap1\n  0x100000000\n  swap1\n  div\n  jump\t// in\ntag_6:\n    /* \"smart-contracts/contracts/Credit.sol\":6179:6191  returnAmount */\n  0x3\n    /* \"smart-contracts/contracts/Credit.sol\":6179:6223  returnAmount = requestedAmount.add(interest) */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"smart-contracts/contracts/Credit.sol\":6419:6456  returnAmount.div(requestedRepayments) */\n  tag_8\n    /* \"smart-contracts/contracts/Credit.sol\":6436:6455  requestedRepayments */\n  sload(0x6)\n    /* \"smart-contracts/contracts/Credit.sol\":6419:6431  returnAmount */\n  sload(0x3)\n    /* \"smart-contracts/contracts/Credit.sol\":6419:6435  returnAmount.div */\n  or(tag_0_193, mul(0x100000000, tag_9))\n  swap1\n    /* \"smart-contracts/contracts/Credit.sol\":6419:6456  returnAmount.div(requestedRepayments) */\n  swap2\n  swap1\n  0x100000000\n  swap1\n  div\n  jump\t// in\ntag_8:\n    /* \"smart-contracts/contracts/Credit.sol\":6396:6416  repaymentInstallment */\n  0x8\n    /* \"smart-contracts/contracts/Credit.sol\":6396:6456  repaymentInstallment = returnAmount.div(requestedRepayments) */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"smart-contracts/contracts/Credit.sol\":6523:6535  _description */\n  dup1\n    /* \"smart-contracts/contracts/Credit.sol\":6509:6520  description */\n  0xb\n    /* \"smart-contracts/contracts/Credit.sol\":6509:6535  description = _description */\n  dup2\n  not(0x0)\n  and\n  swap1\n  sstore\n  pop\n    /* \"smart-contracts/contracts/Credit.sol\":6605:6620  block.timestamp */\n  timestamp\n    /* \"smart-contracts/contracts/Credit.sol\":6589:6602  requestedDate */\n  0x9\n    /* \"smart-contracts/contracts/Credit.sol\":6589:6620  requestedDate = block.timestamp */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"smart-contracts/contracts/Credit.sol\":6703:6718  block.timestamp */\n  timestamp\n    /* \"smart-contracts/contracts/Credit.sol\":6693:6701  borrower */\n  0x1\n  0x0\n  swap1\n  sload\n  swap1\n  0x100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"smart-contracts/contracts/Credit.sol\":6672:6719  LogCreditInitialized(borrower, block.timestamp) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xf9f75c99c0e3522cd19ffc66fd6c94989a3f0821d37d5c5bb176aab904c6335d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"smart-contracts/contracts/Credit.sol\":5188:6727  function Credit(uint _requestedAmount, uint _requestedRepayments, uint _interest, bytes32 _description) public {\r... */\n  pop\n  pop\n  pop\n  pop\n    /* \"smart-contracts/contracts/Credit.sol\":189:18405  contract Credit is Destructible {\r... */\n  jump(tag_10)\n    /* \"smart-contracts/contracts/common/SafeMath.sol\":622:769  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\ntag_7:\n    /* \"smart-contracts/contracts/common/SafeMath.sol\":680:687  uint256 */\n  0x0\n    /* \"smart-contracts/contracts/common/SafeMath.sol\":700:709  uint256 c */\n  dup1\n    /* \"smart-contracts/contracts/common/SafeMath.sol\":716:717  b */\n  dup3\n    /* \"smart-contracts/contracts/common/SafeMath.sol\":712:713  a */\n  dup5\n    /* \"smart-contracts/contracts/common/SafeMath.sol\":712:717  a + b */\n  add\n    /* \"smart-contracts/contracts/common/SafeMath.sol\":700:717  uint256 c = a + b */\n  swap1\n  pop\n    /* \"smart-contracts/contracts/common/SafeMath.sol\":740:741  a */\n  dup4\n    /* \"smart-contracts/contracts/common/SafeMath.sol\":735:736  c */\n  dup2\n    /* \"smart-contracts/contracts/common/SafeMath.sol\":735:741  c >= a */\n  lt\n  iszero\n    /* \"smart-contracts/contracts/common/SafeMath.sol\":728:742  assert(c >= a) */\n  iszero\n  iszero\n  tag_12\n  jumpi\n  invalid\ntag_12:\n    /* \"smart-contracts/contracts/common/SafeMath.sol\":760:761  c */\n  dup1\n    /* \"smart-contracts/contracts/common/SafeMath.sol\":753:761  return c */\n  swap2\n  pop\n    /* \"smart-contracts/contracts/common/SafeMath.sol\":622:769  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n  pop\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"smart-contracts/contracts/common/SafeMath.sol\":270:463  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\ntag_9:\n    /* \"smart-contracts/contracts/common/SafeMath.sol\":328:335  uint256 */\n  0x0\n    /* \"smart-contracts/contracts/common/SafeMath.sol\":419:428  uint256 c */\n  dup1\n    /* \"smart-contracts/contracts/common/SafeMath.sol\":435:436  b */\n  dup3\n    /* \"smart-contracts/contracts/common/SafeMath.sol\":431:432  a */\n  dup5\n    /* \"smart-contracts/contracts/common/SafeMath.sol\":431:436  a / b */\n  dup2\n  iszero\n  iszero\n  tag_14\n  jumpi\n  invalid\ntag_14:\n  div\n    /* \"smart-contracts/contracts/common/SafeMath.sol\":419:436  uint256 c = a / b */\n  swap1\n  pop\n    /* \"smart-contracts/contracts/common/SafeMath.sol\":454:455  c */\n  dup1\n    /* \"smart-contracts/contracts/common/SafeMath.sol\":447:455  return c */\n  swap2\n  pop\n    /* \"smart-contracts/contracts/common/SafeMath.sol\":270:463  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n  pop\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"smart-contracts/contracts/Credit.sol\":189:18405  contract Credit is Destructible {\r... */\ntag_10:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"smart-contracts/contracts/Credit.sol\":189:18405  contract Credit is Destructible {\r... */\n      mstore(0x40, 0x60)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x12065fe0\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x268f1153\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x28fd10d7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x29c68dc1\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x3ccfd60b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x402d8883\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x43c14b22\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x590e1ae3\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x83197ef0\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xd85da7b6\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xe8b5e51f\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xefd475ab\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xf06817cf\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xf5074f41\n      eq\n      tag_16\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"smart-contracts/contracts/Credit.sol\":6810:6900  function getBalance() public view returns (uint256) {\r... */\n    tag_2:\n      jumpi(tag_17, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_17:\n      tag_18\n      jump(tag_19)\n    tag_18:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"smart-contracts/contracts/Credit.sol\":17799:17989  function changeState(State _state) external onlyOwner returns (uint) {\r... */\n    tag_3:\n      jumpi(tag_20, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_20:\n      tag_21\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_22)\n    tag_21:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"smart-contracts/contracts/Credit.sol\":1845:1884  mapping(address => bool) public lenders */\n    tag_4:\n      jumpi(tag_23, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_23:\n      tag_24\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_25)\n    tag_24:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"smart-contracts/contracts/Credit.sol\":18178:18400  function toggleActive() external onlyOwner returns (bool) {\r... */\n    tag_5:\n      jumpi(tag_26, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_26:\n      tag_27\n      jump(tag_28)\n    tag_27:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"smart-contracts/contracts/Credit.sol\":11651:12143  function withdraw() public isActive onlyBorrower canWithdraw isNotFraud {\r... */\n    tag_6:\n      jumpi(tag_29, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_29:\n      tag_30\n      jump(tag_31)\n    tag_30:\n      stop\n        /* \"smart-contracts/contracts/Credit.sol\":8897:11308  function repay() public onlyBorrower canRepay payable {\r... */\n    tag_7:\n      tag_32\n      jump(tag_33)\n    tag_32:\n      stop\n        /* \"smart-contracts/contracts/Credit.sol\":14537:15150  function revokeVote() public isActive isRevokable onlyLender {\r... */\n    tag_8:\n      jumpi(tag_34, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_34:\n      tag_35\n      jump(tag_36)\n    tag_35:\n      stop\n        /* \"smart-contracts/contracts/Credit.sol\":15462:16416  function refund() public isActive onlyLender isRevoked {\r... */\n    tag_9:\n      jumpi(tag_37, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_37:\n      tag_38\n      jump(tag_39)\n    tag_38:\n      stop\n        /* \"smart-contracts/contracts/common/Destructible.sol\":151:225  function destroy() public onlyOwner {\r... */\n    tag_10:\n      jumpi(tag_40, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_40:\n      tag_41\n      jump(tag_42)\n    tag_41:\n      stop\n        /* \"smart-contracts/contracts/common/Ownable.sol\":54:74  address public owner */\n    tag_11:\n      jumpi(tag_43, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_43:\n      tag_44\n      jump(tag_45)\n    tag_44:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"smart-contracts/contracts/Credit.sol\":16494:17099  function fraudVote() public isActive onlyLender returns (bool) {\r... */\n    tag_12:\n      jumpi(tag_46, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_46:\n      tag_47\n      jump(tag_48)\n    tag_47:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"smart-contracts/contracts/Credit.sol\":7072:8788  function invest() public canInvest payable {\r... */\n    tag_13:\n      tag_49\n      jump(tag_50)\n    tag_49:\n      stop\n        /* \"smart-contracts/contracts/Credit.sol\":12478:13696  function requestInterest() public isActive onlyLender canAskForInterest {\r... */\n    tag_14:\n      jumpi(tag_51, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_51:\n      tag_52\n      jump(tag_53)\n    tag_52:\n      stop\n        /* \"smart-contracts/contracts/Credit.sol\":14059:14471  function getCreditInfo() public view returns (address, bytes32, uint, uint, uint, uint, uint, uint, State, bool, uint) {\r... */\n    tag_15:\n      jumpi(tag_54, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_54:\n      tag_55\n      jump(tag_56)\n    tag_55:\n      mload(0x40)\n      dup1\n      dup13\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup12\n      not(0x0)\n      and\n      not(0x0)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup11\n      dup2\n      mstore\n      0x20\n      add\n      dup10\n      dup2\n      mstore\n      0x20\n      add\n      dup9\n      dup2\n      mstore\n      0x20\n      add\n      dup8\n      dup2\n      mstore\n      0x20\n      add\n      dup7\n      dup2\n      mstore\n      0x20\n      add\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      0x5\n      dup2\n      gt\n      iszero\n      tag_57\n      jumpi\n      invalid\n    tag_57:\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap12\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"smart-contracts/contracts/common/Destructible.sol\":237:341  function destroyAndSend(address _recipient) public onlyOwner {\r... */\n    tag_16:\n      jumpi(tag_58, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_58:\n      tag_59\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_60)\n    tag_59:\n      stop\n        /* \"smart-contracts/contracts/Credit.sol\":6810:6900  function getBalance() public view returns (uint256) {\r... */\n    tag_19:\n        /* \"smart-contracts/contracts/Credit.sol\":6853:6860  uint256 */\n      0x0\n        /* \"smart-contracts/contracts/Credit.sol\":6880:6884  this */\n      address\n        /* \"smart-contracts/contracts/Credit.sol\":6880:6892  this.balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      balance\n        /* \"smart-contracts/contracts/Credit.sol\":6873:6892  return this.balance */\n      swap1\n      pop\n        /* \"smart-contracts/contracts/Credit.sol\":6810:6900  function getBalance() public view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"smart-contracts/contracts/Credit.sol\":17799:17989  function changeState(State _state) external onlyOwner returns (uint) {\r... */\n    tag_22:\n        /* \"smart-contracts/contracts/Credit.sol\":17862:17866  uint */\n      0x0\n        /* \"smart-contracts/contracts/common/Ownable.sol\":232:237  owner */\n      dup1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"smart-contracts/contracts/common/Ownable.sol\":218:237  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"smart-contracts/contracts/common/Ownable.sol\":218:228  msg.sender */\n      caller\n        /* \"smart-contracts/contracts/common/Ownable.sol\":218:237  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"smart-contracts/contracts/common/Ownable.sol\":210:238  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_63\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_63:\n        /* \"smart-contracts/contracts/Credit.sol\":17887:17893  _state */\n      dup2\n        /* \"smart-contracts/contracts/Credit.sol\":17879:17884  state */\n      0xc\n      0x1\n        /* \"smart-contracts/contracts/Credit.sol\":17879:17893  state = _state */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x5\n      dup2\n      gt\n      iszero\n      tag_65\n      jumpi\n      invalid\n    tag_65:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"smart-contracts/contracts/Credit.sol\":17965:17980  block.timestamp */\n      timestamp\n        /* \"smart-contracts/contracts/Credit.sol\":17958:17963  state */\n      0xc\n      0x1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"smart-contracts/contracts/Credit.sol\":17936:17981  LogCreditStateChanged(state, block.timestamp) */\n      0x5\n      dup2\n      gt\n      iszero\n      tag_66\n      jumpi\n      invalid\n    tag_66:\n      0xaaae373901e745122c2e0925ad006227969c6cd190b7d5ea2fb7fdbd1d955b35\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"smart-contracts/contracts/Credit.sol\":17799:17989  function changeState(State _state) external onlyOwner returns (uint) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"smart-contracts/contracts/Credit.sol\":1845:1884  mapping(address => bool) public lenders */\n    tag_25:\n      mstore(0x20, 0xd)\n      dup1\n      0x0\n      mstore\n      keccak256(0x0, 0x40)\n      0x0\n      swap2\n      pop\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"smart-contracts/contracts/Credit.sol\":18178:18400  function toggleActive() external onlyOwner returns (bool) {\r... */\n    tag_28:\n        /* \"smart-contracts/contracts/Credit.sol\":18230:18234  bool */\n      0x0\n        /* \"smart-contracts/contracts/common/Ownable.sol\":232:237  owner */\n      dup1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"smart-contracts/contracts/common/Ownable.sol\":218:237  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"smart-contracts/contracts/common/Ownable.sol\":218:228  msg.sender */\n      caller\n        /* \"smart-contracts/contracts/common/Ownable.sol\":218:237  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"smart-contracts/contracts/common/Ownable.sol\":210:238  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_68\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_68:\n        /* \"smart-contracts/contracts/Credit.sol\":18257:18263  active */\n      0xc\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"smart-contracts/contracts/Credit.sol\":18256:18263  !active */\n      iszero\n        /* \"smart-contracts/contracts/Credit.sol\":18247:18253  active */\n      0xc\n      0x0\n        /* \"smart-contracts/contracts/Credit.sol\":18247:18263  active = !active */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"smart-contracts/contracts/Credit.sol\":18350:18365  block.timestamp */\n      timestamp\n        /* \"smart-contracts/contracts/Credit.sol\":18342:18348  active */\n      0xc\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"smart-contracts/contracts/Credit.sol\":18314:18366  LogCreditStateActiveChanged(active, block.timestamp) */\n      iszero\n      iszero\n      0x160914ea27c60aa29a5f3a69d74e6069869de36e38939de1e0a66b921d8623d2\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"smart-contracts/contracts/Credit.sol\":18386:18392  active */\n      0xc\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"smart-contracts/contracts/Credit.sol\":18379:18392  return active */\n      swap1\n      pop\n        /* \"smart-contracts/contracts/Credit.sol\":18178:18400  function toggleActive() external onlyOwner returns (bool) {\r... */\n      swap1\n      jump\t// out\n        /* \"smart-contracts/contracts/Credit.sol\":11651:12143  function withdraw() public isActive onlyBorrower canWithdraw isNotFraud {\r... */\n    tag_31:\n        /* \"smart-contracts/contracts/Credit.sol\":3958:3962  true */\n      0x1\n        /* \"smart-contracts/contracts/Credit.sol\":3948:3962  active == true */\n      iszero\n      iszero\n        /* \"smart-contracts/contracts/Credit.sol\":3948:3954  active */\n      0xc\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"smart-contracts/contracts/Credit.sol\":3948:3962  active == true */\n      iszero\n      iszero\n      eq\n        /* \"smart-contracts/contracts/Credit.sol\":3940:3963  require(active == true) */\n      iszero\n      iszero\n      tag_71\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_71:\n        /* \"smart-contracts/contracts/Credit.sol\":4048:4056  borrower */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"smart-contracts/contracts/Credit.sol\":4034:4056  msg.sender == borrower */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"smart-contracts/contracts/Credit.sol\":4034:4044  msg.sender */\n      caller\n        /* \"smart-contracts/contracts/Credit.sol\":4034:4056  msg.sender == borrower */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"smart-contracts/contracts/Credit.sol\":4026:4057  require(msg.sender == borrower) */\n      iszero\n      iszero\n      tag_73\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_73:\n        /* \"smart-contracts/contracts/Credit.sol\":4590:4605  requestedAmount */\n      sload(0x2)\n        /* \"smart-contracts/contracts/Credit.sol\":4574:4578  this */\n      address\n        /* \"smart-contracts/contracts/Credit.sol\":4574:4586  this.balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      balance\n        /* \"smart-contracts/contracts/Credit.sol\":4574:4605  this.balance >= requestedAmount */\n      lt\n      iszero\n        /* \"smart-contracts/contracts/Credit.sol\":4566:4606  require(this.balance >= requestedAmount) */\n      iszero\n      iszero\n      tag_75\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_75:\n        /* \"smart-contracts/contracts/Credit.sol\":4684:4695  State.fraud */\n      0x5\n        /* \"smart-contracts/contracts/Credit.sol\":4675:4695  state != State.fraud */\n      dup1\n      dup2\n      gt\n      iszero\n      tag_77\n      jumpi\n      invalid\n    tag_77:\n        /* \"smart-contracts/contracts/Credit.sol\":4675:4680  state */\n      0xc\n      0x1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"smart-contracts/contracts/Credit.sol\":4675:4695  state != State.fraud */\n      0x5\n      dup2\n      gt\n      iszero\n      tag_78\n      jumpi\n      invalid\n    tag_78:\n      eq\n      iszero\n        /* \"smart-contracts/contracts/Credit.sol\":4667:4696  require(state != State.fraud) */\n      iszero\n      iszero\n      tag_79\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_79:\n        /* \"smart-contracts/contracts/Credit.sol\":11809:11824  State.repayment */\n      0x1\n        /* \"smart-contracts/contracts/Credit.sol\":11801:11806  state */\n      0xc\n      0x1\n        /* \"smart-contracts/contracts/Credit.sol\":11801:11824  state = State.repayment */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x5\n      dup2\n      gt\n      iszero\n      tag_81\n      jumpi\n      invalid\n    tag_81:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"smart-contracts/contracts/Credit.sol\":11896:11911  block.timestamp */\n      timestamp\n        /* \"smart-contracts/contracts/Credit.sol\":11889:11894  state */\n      0xc\n      0x1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"smart-contracts/contracts/Credit.sol\":11867:11912  LogCreditStateChanged(state, block.timestamp) */\n      0x5\n      dup2\n      gt\n      iszero\n      tag_82\n      jumpi\n      invalid\n    tag_82:\n      0xaaae373901e745122c2e0925ad006227969c6cd190b7d5ea2fb7fdbd1d955b35\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"smart-contracts/contracts/Credit.sol\":12010:12025  block.timestamp */\n      timestamp\n        /* \"smart-contracts/contracts/Credit.sol\":11996:12000  this */\n      address\n        /* \"smart-contracts/contracts/Credit.sol\":11996:12008  this.balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      balance\n        /* \"smart-contracts/contracts/Credit.sol\":11984:11994  msg.sender */\n      caller\n        /* \"smart-contracts/contracts/Credit.sol\":11962:12026  LogBorrowerWithdrawal(msg.sender, this.balance, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x20734f14d107b526674905e470e35d0a474f9fb996a7bdb034c839c8894524e6\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"smart-contracts/contracts/Credit.sol\":12104:12112  borrower */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"smart-contracts/contracts/Credit.sol\":12104:12121  borrower.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"smart-contracts/contracts/Credit.sol\":12104:12135  borrower.transfer(this.balance) */\n      0x8fc\n        /* \"smart-contracts/contracts/Credit.sol\":12122:12126  this */\n      address\n        /* \"smart-contracts/contracts/Credit.sol\":12122:12134  this.balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      balance\n        /* \"smart-contracts/contracts/Credit.sol\":12104:12135  borrower.transfer(this.balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      iszero\n      tag_83\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_83:\n        /* \"smart-contracts/contracts/Credit.sol\":11651:12143  function withdraw() public isActive onlyBorrower canWithdraw isNotFraud {\r... */\n      jump\t// out\n        /* \"smart-contracts/contracts/Credit.sol\":8897:11308  function repay() public onlyBorrower canRepay payable {\r... */\n    tag_33:\n        /* \"smart-contracts/contracts/Credit.sol\":9704:9719  uint extraMoney */\n      0x0\n        /* \"smart-contracts/contracts/Credit.sol\":4048:4056  borrower */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"smart-contracts/contracts/Credit.sol\":4034:4056  msg.sender == borrower */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"smart-contracts/contracts/Credit.sol\":4034:4044  msg.sender */\n      caller\n        /* \"smart-contracts/contracts/Credit.sol\":4034:4056  msg.sender == borrower */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"smart-contracts/contracts/Credit.sol\":4026:4057  require(msg.sender == borrower) */\n      iszero\n      iszero\n      tag_85\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_85:\n        /* \"smart-contracts/contracts/Credit.sol\":4488:4503  State.repayment */\n      0x1\n        /* \"smart-contracts/contracts/Credit.sol\":4479:4503  state == State.repayment */\n      0x5\n      dup2\n      gt\n      iszero\n      tag_87\n      jumpi\n      invalid\n    tag_87:\n        /* \"smart-contracts/contracts/Credit.sol\":4479:4484  state */\n      0xc\n      0x1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"smart-contracts/contracts/Credit.sol\":4479:4503  state == State.repayment */\n      0x5\n      dup2\n      gt\n      iszero\n      tag_88\n      jumpi\n      invalid\n    tag_88:\n      eq\n        /* \"smart-contracts/contracts/Credit.sol\":4471:4504  require(state == State.repayment) */\n      iszero\n      iszero\n      tag_89\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_89:\n        /* \"smart-contracts/contracts/Credit.sol\":9067:9068  0 */\n      0x0\n        /* \"smart-contracts/contracts/Credit.sol\":9045:9064  remainingRepayments */\n      sload(0x7)\n        /* \"smart-contracts/contracts/Credit.sol\":9045:9068  remainingRepayments > 0 */\n      gt\n        /* \"smart-contracts/contracts/Credit.sol\":9037:9069  require(remainingRepayments > 0) */\n      iszero\n      iszero\n      tag_91\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_91:\n        /* \"smart-contracts/contracts/Credit.sol\":9180:9200  repaymentInstallment */\n      sload(0x8)\n        /* \"smart-contracts/contracts/Credit.sol\":9167:9176  msg.value */\n      callvalue\n        /* \"smart-contracts/contracts/Credit.sol\":9167:9200  msg.value >= repaymentInstallment */\n      lt\n      iszero\n        /* \"smart-contracts/contracts/Credit.sol\":9159:9201  require(msg.value >= repaymentInstallment) */\n      iszero\n      iszero\n      tag_92\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_92:\n        /* \"smart-contracts/contracts/Credit.sol\":9421:9433  returnAmount */\n      sload(0x3)\n        /* \"smart-contracts/contracts/Credit.sol\":9406:9418  repaidAmount */\n      sload(0x4)\n        /* \"smart-contracts/contracts/Credit.sol\":9406:9433  repaidAmount < returnAmount */\n      lt\n        /* \"smart-contracts/contracts/Credit.sol\":9399:9434  assert(repaidAmount < returnAmount) */\n      iszero\n      iszero\n      tag_93\n      jumpi\n      invalid\n    tag_93:\n        /* \"smart-contracts/contracts/Credit.sol\":9495:9514  remainingRepayments */\n      0x7\n      0x0\n        /* \"smart-contracts/contracts/Credit.sol\":9495:9516  remainingRepayments-- */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      0x1\n      swap1\n      sub\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"smart-contracts/contracts/Credit.sol\":9589:9604  block.timestamp */\n      timestamp\n        /* \"smart-contracts/contracts/Credit.sol\":9569:9586  lastRepaymentDate */\n      0xa\n        /* \"smart-contracts/contracts/Credit.sol\":9569:9604  lastRepaymentDate = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"smart-contracts/contracts/Credit.sol\":9722:9723  0 */\n      0x0\n        /* \"smart-contracts/contracts/Credit.sol\":9704:9723  uint extraMoney = 0 */\n      swap1\n      pop\n        /* \"smart-contracts/contracts/Credit.sol\":9943:9963  repaymentInstallment */\n      sload(0x8)\n        /* \"smart-contracts/contracts/Credit.sol\":9931:9940  msg.value */\n      callvalue\n        /* \"smart-contracts/contracts/Credit.sol\":9931:9963  msg.value > repaymentInstallment */\n      gt\n        /* \"smart-contracts/contracts/Credit.sol\":9927:10563  if (msg.value > repaymentInstallment) {\r... */\n      iszero\n      tag_94\n      jumpi\n        /* \"smart-contracts/contracts/Credit.sol\":10068:10103  msg.value.sub(repaymentInstallment) */\n      tag_95\n        /* \"smart-contracts/contracts/Credit.sol\":10082:10102  repaymentInstallment */\n      sload(0x8)\n        /* \"smart-contracts/contracts/Credit.sol\":10068:10077  msg.value */\n      callvalue\n        /* \"smart-contracts/contracts/Credit.sol\":10068:10081  msg.value.sub */\n      tag_96\n      swap1\n        /* \"smart-contracts/contracts/Credit.sol\":10068:10103  msg.value.sub(repaymentInstallment) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_95:\n        /* \"smart-contracts/contracts/Credit.sol\":10055:10103  extraMoney = msg.value.sub(repaymentInstallment) */\n      swap1\n      pop\n        /* \"smart-contracts/contracts/Credit.sol\":10192:10217  msg.value.sub(extraMoney) */\n      tag_97\n        /* \"smart-contracts/contracts/Credit.sol\":10206:10216  extraMoney */\n      dup2\n        /* \"smart-contracts/contracts/Credit.sol\":10192:10201  msg.value */\n      callvalue\n        /* \"smart-contracts/contracts/Credit.sol\":10192:10205  msg.value.sub */\n      tag_96\n      swap1\n        /* \"smart-contracts/contracts/Credit.sol\":10192:10217  msg.value.sub(extraMoney) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_97:\n        /* \"smart-contracts/contracts/Credit.sol\":10168:10188  repaymentInstallment */\n      sload(0x8)\n        /* \"smart-contracts/contracts/Credit.sol\":10168:10217  repaymentInstallment == msg.value.sub(extraMoney) */\n      eq\n        /* \"smart-contracts/contracts/Credit.sol\":10161:10218  assert(repaymentInstallment == msg.value.sub(extraMoney)) */\n      iszero\n      iszero\n      tag_98\n      jumpi\n      invalid\n    tag_98:\n        /* \"smart-contracts/contracts/Credit.sol\":10294:10303  msg.value */\n      callvalue\n        /* \"smart-contracts/contracts/Credit.sol\":10280:10290  extraMoney */\n      dup2\n        /* \"smart-contracts/contracts/Credit.sol\":10280:10303  extraMoney <= msg.value */\n      gt\n      iszero\n        /* \"smart-contracts/contracts/Credit.sol\":10273:10304  assert(extraMoney <= msg.value) */\n      iszero\n      iszero\n      tag_99\n      jumpi\n      invalid\n    tag_99:\n        /* \"smart-contracts/contracts/Credit.sol\":10386:10396  msg.sender */\n      caller\n        /* \"smart-contracts/contracts/Credit.sol\":10386:10405  msg.sender.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"smart-contracts/contracts/Credit.sol\":10386:10417  msg.sender.transfer(extraMoney) */\n      0x8fc\n        /* \"smart-contracts/contracts/Credit.sol\":10406:10416  extraMoney */\n      dup3\n        /* \"smart-contracts/contracts/Credit.sol\":10386:10417  msg.sender.transfer(extraMoney) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      iszero\n      tag_100\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_100:\n        /* \"smart-contracts/contracts/Credit.sol\":10535:10550  block.timestamp */\n      timestamp\n        /* \"smart-contracts/contracts/Credit.sol\":10523:10533  extraMoney */\n      dup2\n        /* \"smart-contracts/contracts/Credit.sol\":10511:10521  msg.sender */\n      caller\n        /* \"smart-contracts/contracts/Credit.sol\":10485:10551  LogBorrowerChangeReturned(msg.sender, extraMoney, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x5c9874487a2258c6bd6dc39a2cfcf7ea944b50b79d9a7152668779687b2ebd8d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"smart-contracts/contracts/Credit.sol\":9927:10563  if (msg.value > repaymentInstallment) {\r... */\n    tag_94:\n        /* \"smart-contracts/contracts/Credit.sol\":10693:10708  block.timestamp */\n      timestamp\n        /* \"smart-contracts/contracts/Credit.sol\":10666:10691  msg.value.sub(extraMoney) */\n      tag_101\n        /* \"smart-contracts/contracts/Credit.sol\":10680:10690  extraMoney */\n      dup3\n        /* \"smart-contracts/contracts/Credit.sol\":10666:10675  msg.value */\n      callvalue\n        /* \"smart-contracts/contracts/Credit.sol\":10666:10679  msg.value.sub */\n      tag_96\n      swap1\n        /* \"smart-contracts/contracts/Credit.sol\":10666:10691  msg.value.sub(extraMoney) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_101:\n        /* \"smart-contracts/contracts/Credit.sol\":10654:10664  msg.sender */\n      caller\n        /* \"smart-contracts/contracts/Credit.sol\":10622:10709  LogBorrowerRepaymentInstallment(msg.sender, msg.value.sub(extraMoney), block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x350a09487d622378c6efbda255f996387696319f803a2e53eee64f7aa70be85a\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"smart-contracts/contracts/Credit.sol\":10814:10857  repaidAmount.add(msg.value.sub(extraMoney)) */\n      tag_102\n        /* \"smart-contracts/contracts/Credit.sol\":10831:10856  msg.value.sub(extraMoney) */\n      tag_103\n        /* \"smart-contracts/contracts/Credit.sol\":10845:10855  extraMoney */\n      dup3\n        /* \"smart-contracts/contracts/Credit.sol\":10831:10840  msg.value */\n      callvalue\n        /* \"smart-contracts/contracts/Credit.sol\":10831:10844  msg.value.sub */\n      tag_96\n      swap1\n        /* \"smart-contracts/contracts/Credit.sol\":10831:10856  msg.value.sub(extraMoney) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_103:\n        /* \"smart-contracts/contracts/Credit.sol\":10814:10826  repaidAmount */\n      sload(0x4)\n        /* \"smart-contracts/contracts/Credit.sol\":10814:10830  repaidAmount.add */\n      tag_104\n      swap1\n        /* \"smart-contracts/contracts/Credit.sol\":10814:10857  repaidAmount.add(msg.value.sub(extraMoney)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_102:\n        /* \"smart-contracts/contracts/Credit.sol\":10799:10811  repaidAmount */\n      0x4\n        /* \"smart-contracts/contracts/Credit.sol\":10799:10857  repaidAmount = repaidAmount.add(msg.value.sub(extraMoney)) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"smart-contracts/contracts/Credit.sol\":10961:10973  returnAmount */\n      sload(0x3)\n        /* \"smart-contracts/contracts/Credit.sol\":10945:10957  repaidAmount */\n      sload(0x4)\n        /* \"smart-contracts/contracts/Credit.sol\":10945:10973  repaidAmount == returnAmount */\n      eq\n        /* \"smart-contracts/contracts/Credit.sol\":10941:11301  if (repaidAmount == returnAmount) {\r... */\n      iszero\n      tag_105\n      jumpi\n        /* \"smart-contracts/contracts/Credit.sol\":11068:11083  block.timestamp */\n      timestamp\n        /* \"smart-contracts/contracts/Credit.sol\":11056:11066  msg.sender */\n      caller\n        /* \"smart-contracts/contracts/Credit.sol\":11027:11084  LogBorrowerRepaymentFinished(msg.sender, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x25630de45a38a90cbca3a2eb35a8197e51b56d6d912581711e5e3773fe77cabc\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"smart-contracts/contracts/Credit.sol\":11172:11193  State.interestReturns */\n      0x2\n        /* \"smart-contracts/contracts/Credit.sol\":11164:11169  state */\n      0xc\n      0x1\n        /* \"smart-contracts/contracts/Credit.sol\":11164:11193  state = State.interestReturns */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x5\n      dup2\n      gt\n      iszero\n      tag_106\n      jumpi\n      invalid\n    tag_106:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"smart-contracts/contracts/Credit.sol\":11273:11288  block.timestamp */\n      timestamp\n        /* \"smart-contracts/contracts/Credit.sol\":11266:11271  state */\n      0xc\n      0x1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"smart-contracts/contracts/Credit.sol\":11244:11289  LogCreditStateChanged(state, block.timestamp) */\n      0x5\n      dup2\n      gt\n      iszero\n      tag_107\n      jumpi\n      invalid\n    tag_107:\n      0xaaae373901e745122c2e0925ad006227969c6cd190b7d5ea2fb7fdbd1d955b35\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"smart-contracts/contracts/Credit.sol\":10941:11301  if (repaidAmount == returnAmount) {\r... */\n    tag_105:\n        /* \"smart-contracts/contracts/Credit.sol\":8897:11308  function repay() public onlyBorrower canRepay payable {\r... */\n      pop\n      jump\t// out\n        /* \"smart-contracts/contracts/Credit.sol\":14537:15150  function revokeVote() public isActive isRevokable onlyLender {\r... */\n    tag_36:\n        /* \"smart-contracts/contracts/Credit.sol\":3958:3962  true */\n      0x1\n        /* \"smart-contracts/contracts/Credit.sol\":3948:3962  active == true */\n      iszero\n      iszero\n        /* \"smart-contracts/contracts/Credit.sol\":3948:3954  active */\n      0xc\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"smart-contracts/contracts/Credit.sol\":3948:3962  active == true */\n      iszero\n      iszero\n      eq\n        /* \"smart-contracts/contracts/Credit.sol\":3940:3963  require(active == true) */\n      iszero\n      iszero\n      tag_109\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_109:\n        /* \"smart-contracts/contracts/Credit.sol\":4785:4801  revokeTimeNeeded */\n      sload(0x12)\n        /* \"smart-contracts/contracts/Credit.sol\":4766:4781  block.timestamp */\n      timestamp\n        /* \"smart-contracts/contracts/Credit.sol\":4766:4801  block.timestamp >= revokeTimeNeeded */\n      lt\n      iszero\n        /* \"smart-contracts/contracts/Credit.sol\":4758:4802  require(block.timestamp >= revokeTimeNeeded) */\n      iszero\n      iszero\n      tag_111\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_111:\n        /* \"smart-contracts/contracts/Credit.sol\":4830:4846  State.investment */\n      0x0\n        /* \"smart-contracts/contracts/Credit.sol\":4821:4846  state == State.investment */\n      0x5\n      dup2\n      gt\n      iszero\n      tag_112\n      jumpi\n      invalid\n    tag_112:\n        /* \"smart-contracts/contracts/Credit.sol\":4821:4826  state */\n      0xc\n      0x1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"smart-contracts/contracts/Credit.sol\":4821:4846  state == State.investment */\n      0x5\n      dup2\n      gt\n      iszero\n      tag_113\n      jumpi\n      invalid\n    tag_113:\n      eq\n        /* \"smart-contracts/contracts/Credit.sol\":4813:4847  require(state == State.investment) */\n      iszero\n      iszero\n      tag_114\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_114:\n        /* \"smart-contracts/contracts/Credit.sol\":4149:4153  true */\n      0x1\n        /* \"smart-contracts/contracts/Credit.sol\":4126:4153  lenders[msg.sender] == true */\n      iszero\n      iszero\n        /* \"smart-contracts/contracts/Credit.sol\":4126:4133  lenders */\n      0xd\n        /* \"smart-contracts/contracts/Credit.sol\":4126:4145  lenders[msg.sender] */\n      0x0\n        /* \"smart-contracts/contracts/Credit.sol\":4134:4144  msg.sender */\n      caller\n        /* \"smart-contracts/contracts/Credit.sol\":4126:4145  lenders[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"smart-contracts/contracts/Credit.sol\":4126:4153  lenders[msg.sender] == true */\n      iszero\n      iszero\n      eq\n        /* \"smart-contracts/contracts/Credit.sol\":4118:4154  require(lenders[msg.sender] == true) */\n      iszero\n      iszero\n      tag_116\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_116:\n        /* \"smart-contracts/contracts/Credit.sol\":14691:14696  false */\n      0x0\n        /* \"smart-contracts/contracts/Credit.sol\":14663:14696  revokeVoters[msg.sender] == false */\n      iszero\n      iszero\n        /* \"smart-contracts/contracts/Credit.sol\":14663:14675  revokeVoters */\n      0x11\n        /* \"smart-contracts/contracts/Credit.sol\":14663:14687  revokeVoters[msg.sender] */\n      0x0\n        /* \"smart-contracts/contracts/Credit.sol\":14676:14686  msg.sender */\n      caller\n        /* \"smart-contracts/contracts/Credit.sol\":14663:14687  revokeVoters[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"smart-contracts/contracts/Credit.sol\":14663:14696  revokeVoters[msg.sender] == false */\n      iszero\n      iszero\n      eq\n        /* \"smart-contracts/contracts/Credit.sol\":14655:14697  require(revokeVoters[msg.sender] == false) */\n      iszero\n      iszero\n      tag_118\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_118:\n        /* \"smart-contracts/contracts/Credit.sol\":14749:14760  revokeVotes */\n      0x10\n      0x0\n        /* \"smart-contracts/contracts/Credit.sol\":14749:14762  revokeVotes++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      0x1\n      add\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"smart-contracts/contracts/Credit.sol\":14842:14846  true */\n      0x1\n        /* \"smart-contracts/contracts/Credit.sol\":14814:14846  revokeVoters[msg.sender] == true */\n      iszero\n      iszero\n        /* \"smart-contracts/contracts/Credit.sol\":14814:14826  revokeVoters */\n      0x11\n        /* \"smart-contracts/contracts/Credit.sol\":14814:14838  revokeVoters[msg.sender] */\n      0x0\n        /* \"smart-contracts/contracts/Credit.sol\":14827:14837  msg.sender */\n      caller\n        /* \"smart-contracts/contracts/Credit.sol\":14814:14838  revokeVoters[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      pop\n      pop\n        /* \"smart-contracts/contracts/Credit.sol\":14814:14846  revokeVoters[msg.sender] == true */\n      pop\n        /* \"smart-contracts/contracts/Credit.sol\":14958:14973  block.timestamp */\n      timestamp\n        /* \"smart-contracts/contracts/Credit.sol\":14946:14956  msg.sender */\n      caller\n        /* \"smart-contracts/contracts/Credit.sol\":14921:14974  LogLenderVoteForRevoking(msg.sender, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd7173ce7e4ce6f6d075259ac1a467ab8290db175a2cee8587a663c006b97e129\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"smart-contracts/contracts/Credit.sol\":15048:15059  revokeVotes */\n      sload(0x10)\n        /* \"smart-contracts/contracts/Credit.sol\":15032:15044  lendersCount */\n      sload(0xf)\n        /* \"smart-contracts/contracts/Credit.sol\":15032:15059  lendersCount == revokeVotes */\n      eq\n        /* \"smart-contracts/contracts/Credit.sol\":15028:15143  if (lendersCount == revokeVotes) {\r... */\n      iszero\n      tag_119\n      jumpi\n        /* \"smart-contracts/contracts/Credit.sol\":15123:15131  revoke() */\n      tag_120\n        /* \"smart-contracts/contracts/Credit.sol\":15123:15129  revoke */\n      tag_121\n        /* \"smart-contracts/contracts/Credit.sol\":15123:15131  revoke() */\n      jump\t// in\n    tag_120:\n        /* \"smart-contracts/contracts/Credit.sol\":15028:15143  if (lendersCount == revokeVotes) {\r... */\n    tag_119:\n        /* \"smart-contracts/contracts/Credit.sol\":14537:15150  function revokeVote() public isActive isRevokable onlyLender {\r... */\n      jump\t// out\n        /* \"smart-contracts/contracts/Credit.sol\":15462:16416  function refund() public isActive onlyLender isRevoked {\r... */\n    tag_39:\n        /* \"smart-contracts/contracts/Credit.sol\":3958:3962  true */\n      0x1\n        /* \"smart-contracts/contracts/Credit.sol\":3948:3962  active == true */\n      iszero\n      iszero\n        /* \"smart-contracts/contracts/Credit.sol\":3948:3954  active */\n      0xc\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"smart-contracts/contracts/Credit.sol\":3948:3962  active == true */\n      iszero\n      iszero\n      eq\n        /* \"smart-contracts/contracts/Credit.sol\":3940:3963  require(active == true) */\n      iszero\n      iszero\n      tag_123\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_123:\n        /* \"smart-contracts/contracts/Credit.sol\":4149:4153  true */\n      0x1\n        /* \"smart-contracts/contracts/Credit.sol\":4126:4153  lenders[msg.sender] == true */\n      iszero\n      iszero\n        /* \"smart-contracts/contracts/Credit.sol\":4126:4133  lenders */\n      0xd\n        /* \"smart-contracts/contracts/Credit.sol\":4126:4145  lenders[msg.sender] */\n      0x0\n        /* \"smart-contracts/contracts/Credit.sol\":4134:4144  msg.sender */\n      caller\n        /* \"smart-contracts/contracts/Credit.sol\":4126:4145  lenders[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"smart-contracts/contracts/Credit.sol\":4126:4153  lenders[msg.sender] == true */\n      iszero\n      iszero\n      eq\n        /* \"smart-contracts/contracts/Credit.sol\":4118:4154  require(lenders[msg.sender] == true) */\n      iszero\n      iszero\n      tag_125\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_125:\n        /* \"smart-contracts/contracts/Credit.sol\":4924:4937  State.revoked */\n      0x4\n        /* \"smart-contracts/contracts/Credit.sol\":4915:4937  state == State.revoked */\n      0x5\n      dup2\n      gt\n      iszero\n      tag_127\n      jumpi\n      invalid\n    tag_127:\n        /* \"smart-contracts/contracts/Credit.sol\":4915:4920  state */\n      0xc\n      0x1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"smart-contracts/contracts/Credit.sol\":4915:4937  state == State.revoked */\n      0x5\n      dup2\n      gt\n      iszero\n      tag_128\n      jumpi\n      invalid\n    tag_128:\n      eq\n        /* \"smart-contracts/contracts/Credit.sol\":4907:4938  require(state == State.revoked) */\n      iszero\n      iszero\n      tag_129\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_129:\n        /* \"smart-contracts/contracts/Credit.sol\":15604:15625  lendersInvestedAmount */\n      0xe\n        /* \"smart-contracts/contracts/Credit.sol\":15604:15637  lendersInvestedAmount[msg.sender] */\n      0x0\n        /* \"smart-contracts/contracts/Credit.sol\":15626:15636  msg.sender */\n      caller\n        /* \"smart-contracts/contracts/Credit.sol\":15604:15637  lendersInvestedAmount[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"smart-contracts/contracts/Credit.sol\":15588:15592  this */\n      address\n        /* \"smart-contracts/contracts/Credit.sol\":15588:15600  this.balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      balance\n        /* \"smart-contracts/contracts/Credit.sol\":15588:15637  this.balance >= lendersInvestedAmount[msg.sender] */\n      lt\n      iszero\n        /* \"smart-contracts/contracts/Credit.sol\":15581:15638  assert(this.balance >= lendersInvestedAmount[msg.sender]) */\n      iszero\n      iszero\n      tag_131\n      jumpi\n      invalid\n    tag_131:\n        /* \"smart-contracts/contracts/Credit.sol\":15719:15729  msg.sender */\n      caller\n        /* \"smart-contracts/contracts/Credit.sol\":15719:15738  msg.sender.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"smart-contracts/contracts/Credit.sol\":15719:15773  msg.sender.transfer(lendersInvestedAmount[msg.sender]) */\n      0x8fc\n        /* \"smart-contracts/contracts/Credit.sol\":15739:15760  lendersInvestedAmount */\n      0xe\n        /* \"smart-contracts/contracts/Credit.sol\":15739:15772  lendersInvestedAmount[msg.sender] */\n      0x0\n        /* \"smart-contracts/contracts/Credit.sol\":15761:15771  msg.sender */\n      caller\n        /* \"smart-contracts/contracts/Credit.sol\":15739:15772  lendersInvestedAmount[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"smart-contracts/contracts/Credit.sol\":15719:15773  msg.sender.transfer(lendersInvestedAmount[msg.sender]) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      iszero\n      tag_132\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_132:\n        /* \"smart-contracts/contracts/Credit.sol\":15891:15906  block.timestamp */\n      timestamp\n        /* \"smart-contracts/contracts/Credit.sol\":15856:15877  lendersInvestedAmount */\n      0xe\n        /* \"smart-contracts/contracts/Credit.sol\":15856:15889  lendersInvestedAmount[msg.sender] */\n      0x0\n        /* \"smart-contracts/contracts/Credit.sol\":15878:15888  msg.sender */\n      caller\n        /* \"smart-contracts/contracts/Credit.sol\":15856:15889  lendersInvestedAmount[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"smart-contracts/contracts/Credit.sol\":15844:15854  msg.sender */\n      caller\n        /* \"smart-contracts/contracts/Credit.sol\":15826:15907  LogLenderRefunded(msg.sender, lendersInvestedAmount[msg.sender], block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x71e252e33f19f0223f47f27d00910548d26488b9b55cb5b410b75e273152f8d6\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"smart-contracts/contracts/Credit.sol\":15994:15995  0 */\n      0x0\n        /* \"smart-contracts/contracts/Credit.sol\":15978:15982  this */\n      address\n        /* \"smart-contracts/contracts/Credit.sol\":15978:15990  this.balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      balance\n        /* \"smart-contracts/contracts/Credit.sol\":15978:15995  this.balance == 0 */\n      eq\n        /* \"smart-contracts/contracts/Credit.sol\":15974:16409  if (this.balance == 0) {\r... */\n      iszero\n      tag_133\n      jumpi\n        /* \"smart-contracts/contracts/Credit.sol\":16070:16075  false */\n      0x0\n        /* \"smart-contracts/contracts/Credit.sol\":16061:16067  active */\n      0xc\n      0x0\n        /* \"smart-contracts/contracts/Credit.sol\":16061:16075  active = false */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"smart-contracts/contracts/Credit.sol\":16170:16185  block.timestamp */\n      timestamp\n        /* \"smart-contracts/contracts/Credit.sol\":16162:16168  active */\n      0xc\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"smart-contracts/contracts/Credit.sol\":16134:16186  LogCreditStateActiveChanged(active, block.timestamp) */\n      iszero\n      iszero\n      0x160914ea27c60aa29a5f3a69d74e6069869de36e38939de1e0a66b921d8623d2\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"smart-contracts/contracts/Credit.sol\":16288:16301  State.expired */\n      0x3\n        /* \"smart-contracts/contracts/Credit.sol\":16280:16285  state */\n      0xc\n      0x1\n        /* \"smart-contracts/contracts/Credit.sol\":16280:16301  state = State.expired */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x5\n      dup2\n      gt\n      iszero\n      tag_134\n      jumpi\n      invalid\n    tag_134:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"smart-contracts/contracts/Credit.sol\":16381:16396  block.timestamp */\n      timestamp\n        /* \"smart-contracts/contracts/Credit.sol\":16374:16379  state */\n      0xc\n      0x1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"smart-contracts/contracts/Credit.sol\":16352:16397  LogCreditStateChanged(state, block.timestamp) */\n      0x5\n      dup2\n      gt\n      iszero\n      tag_135\n      jumpi\n      invalid\n    tag_135:\n      0xaaae373901e745122c2e0925ad006227969c6cd190b7d5ea2fb7fdbd1d955b35\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"smart-contracts/contracts/Credit.sol\":15974:16409  if (this.balance == 0) {\r... */\n    tag_133:\n        /* \"smart-contracts/contracts/Credit.sol\":15462:16416  function refund() public isActive onlyLender isRevoked {\r... */\n      jump\t// out\n        /* \"smart-contracts/contracts/common/Destructible.sol\":151:225  function destroy() public onlyOwner {\r... */\n    tag_42:\n        /* \"smart-contracts/contracts/common/Ownable.sol\":232:237  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"smart-contracts/contracts/common/Ownable.sol\":218:237  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"smart-contracts/contracts/common/Ownable.sol\":218:228  msg.sender */\n      caller\n        /* \"smart-contracts/contracts/common/Ownable.sol\":218:237  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"smart-contracts/contracts/common/Ownable.sol\":210:238  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_137\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_137:\n        /* \"smart-contracts/contracts/common/Destructible.sol\":211:216  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"smart-contracts/contracts/common/Destructible.sol\":198:217  selfdestruct(owner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      selfdestruct\n        /* \"smart-contracts/contracts/common/Ownable.sol\":54:74  address public owner */\n    tag_45:\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"smart-contracts/contracts/Credit.sol\":16494:17099  function fraudVote() public isActive onlyLender returns (bool) {\r... */\n    tag_48:\n        /* \"smart-contracts/contracts/Credit.sol\":16551:16555  bool */\n      0x0\n        /* \"smart-contracts/contracts/Credit.sol\":3958:3962  true */\n      0x1\n        /* \"smart-contracts/contracts/Credit.sol\":3948:3962  active == true */\n      iszero\n      iszero\n        /* \"smart-contracts/contracts/Credit.sol\":3948:3954  active */\n      0xc\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"smart-contracts/contracts/Credit.sol\":3948:3962  active == true */\n      iszero\n      iszero\n      eq\n        /* \"smart-contracts/contracts/Credit.sol\":3940:3963  require(active == true) */\n      iszero\n      iszero\n      tag_140\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_140:\n        /* \"smart-contracts/contracts/Credit.sol\":4149:4153  true */\n      0x1\n        /* \"smart-contracts/contracts/Credit.sol\":4126:4153  lenders[msg.sender] == true */\n      iszero\n      iszero\n        /* \"smart-contracts/contracts/Credit.sol\":4126:4133  lenders */\n      0xd\n        /* \"smart-contracts/contracts/Credit.sol\":4126:4145  lenders[msg.sender] */\n      0x0\n        /* \"smart-contracts/contracts/Credit.sol\":4134:4144  msg.sender */\n      caller\n        /* \"smart-contracts/contracts/Credit.sol\":4126:4145  lenders[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"smart-contracts/contracts/Credit.sol\":4126:4153  lenders[msg.sender] == true */\n      iszero\n      iszero\n      eq\n        /* \"smart-contracts/contracts/Credit.sol\":4118:4154  require(lenders[msg.sender] == true) */\n      iszero\n      iszero\n      tag_142\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_142:\n        /* \"smart-contracts/contracts/Credit.sol\":16646:16651  false */\n      0x0\n        /* \"smart-contracts/contracts/Credit.sol\":16619:16651  fraudVoters[msg.sender] == false */\n      iszero\n      iszero\n        /* \"smart-contracts/contracts/Credit.sol\":16619:16630  fraudVoters */\n      0x14\n        /* \"smart-contracts/contracts/Credit.sol\":16619:16642  fraudVoters[msg.sender] */\n      0x0\n        /* \"smart-contracts/contracts/Credit.sol\":16631:16641  msg.sender */\n      caller\n        /* \"smart-contracts/contracts/Credit.sol\":16619:16642  fraudVoters[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"smart-contracts/contracts/Credit.sol\":16619:16651  fraudVoters[msg.sender] == false */\n      iszero\n      iszero\n      eq\n        /* \"smart-contracts/contracts/Credit.sol\":16611:16652  require(fraudVoters[msg.sender] == false) */\n      iszero\n      iszero\n      tag_144\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_144:\n        /* \"smart-contracts/contracts/Credit.sol\":16705:16715  fraudVotes */\n      0x13\n      0x0\n        /* \"smart-contracts/contracts/Credit.sol\":16705:16717  fraudVotes++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      0x1\n      add\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"smart-contracts/contracts/Credit.sol\":16796:16800  true */\n      0x1\n        /* \"smart-contracts/contracts/Credit.sol\":16769:16800  fraudVoters[msg.sender] == true */\n      iszero\n      iszero\n        /* \"smart-contracts/contracts/Credit.sol\":16769:16780  fraudVoters */\n      0x14\n        /* \"smart-contracts/contracts/Credit.sol\":16769:16792  fraudVoters[msg.sender] */\n      0x0\n        /* \"smart-contracts/contracts/Credit.sol\":16781:16791  msg.sender */\n      caller\n        /* \"smart-contracts/contracts/Credit.sol\":16769:16792  fraudVoters[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      pop\n      pop\n        /* \"smart-contracts/contracts/Credit.sol\":16769:16800  fraudVoters[msg.sender] == true */\n      pop\n        /* \"smart-contracts/contracts/Credit.sol\":16886:16901  block.timestamp */\n      timestamp\n        /* \"smart-contracts/contracts/Credit.sol\":16874:16884  msg.sender */\n      caller\n        /* \"smart-contracts/contracts/Credit.sol\":16852:16902  LogLenderVoteForFraud(msg.sender, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1db613004119dde2a638b639fba9960c0e6064ee7c2d06f300e41c78920ed6dc\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"smart-contracts/contracts/Credit.sol\":16978:16988  fraudVotes */\n      sload(0x13)\n        /* \"smart-contracts/contracts/Credit.sol\":16962:16974  lendersCount */\n      sload(0xf)\n        /* \"smart-contracts/contracts/Credit.sol\":16962:16988  lendersCount == fraudVotes */\n      eq\n        /* \"smart-contracts/contracts/Credit.sol\":16958:17070  if (lendersCount == fraudVotes) {\r... */\n      iszero\n      tag_145\n      jumpi\n        /* \"smart-contracts/contracts/Credit.sol\":17051:17058  fraud() */\n      tag_146\n        /* \"smart-contracts/contracts/Credit.sol\":17051:17056  fraud */\n      tag_147\n        /* \"smart-contracts/contracts/Credit.sol\":17051:17058  fraud() */\n      jump\t// in\n    tag_146:\n        /* \"smart-contracts/contracts/Credit.sol\":17044:17058  return fraud() */\n      swap1\n      pop\n      jump(tag_143)\n        /* \"smart-contracts/contracts/Credit.sol\":16958:17070  if (lendersCount == fraudVotes) {\r... */\n    tag_145:\n        /* \"smart-contracts/contracts/Credit.sol\":17087:17091  true */\n      0x1\n        /* \"smart-contracts/contracts/Credit.sol\":17080:17091  return true */\n      swap1\n      pop\n        /* \"smart-contracts/contracts/Credit.sol\":4165:4166  _ */\n    tag_143:\n        /* \"smart-contracts/contracts/Credit.sol\":16494:17099  function fraudVote() public isActive onlyLender returns (bool) {\r... */\n      swap1\n      jump\t// out\n        /* \"smart-contracts/contracts/Credit.sol\":7072:8788  function invest() public canInvest payable {\r... */\n    tag_50:\n        /* \"smart-contracts/contracts/Credit.sol\":7213:7228  uint extraMoney */\n      0x0\n        /* \"smart-contracts/contracts/Credit.sol\":4395:4411  State.investment */\n      dup1\n        /* \"smart-contracts/contracts/Credit.sol\":4386:4411  state == State.investment */\n      0x5\n      dup2\n      gt\n      iszero\n      tag_149\n      jumpi\n      invalid\n    tag_149:\n        /* \"smart-contracts/contracts/Credit.sol\":4386:4391  state */\n      0xc\n      0x1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"smart-contracts/contracts/Credit.sol\":4386:4411  state == State.investment */\n      0x5\n      dup2\n      gt\n      iszero\n      tag_150\n      jumpi\n      invalid\n    tag_150:\n      eq\n        /* \"smart-contracts/contracts/Credit.sol\":4378:4412  require(state == State.investment) */\n      iszero\n      iszero\n      tag_151\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_151:\n        /* \"smart-contracts/contracts/Credit.sol\":7231:7232  0 */\n      0x0\n        /* \"smart-contracts/contracts/Credit.sol\":7213:7232  uint extraMoney = 0 */\n      swap1\n      pop\n        /* \"smart-contracts/contracts/Credit.sol\":7336:7351  requestedAmount */\n      sload(0x2)\n        /* \"smart-contracts/contracts/Credit.sol\":7320:7324  this */\n      address\n        /* \"smart-contracts/contracts/Credit.sol\":7320:7332  this.balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      balance\n        /* \"smart-contracts/contracts/Credit.sol\":7320:7351  this.balance >= requestedAmount */\n      lt\n      iszero\n        /* \"smart-contracts/contracts/Credit.sol\":7316:8247  if (this.balance >= requestedAmount) {\r... */\n      iszero\n      tag_153\n      jumpi\n        /* \"smart-contracts/contracts/Credit.sol\":7450:7483  this.balance.sub(requestedAmount) */\n      tag_154\n        /* \"smart-contracts/contracts/Credit.sol\":7467:7482  requestedAmount */\n      sload(0x2)\n        /* \"smart-contracts/contracts/Credit.sol\":7450:7454  this */\n      address\n        /* \"smart-contracts/contracts/Credit.sol\":7450:7462  this.balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      balance\n        /* \"smart-contracts/contracts/Credit.sol\":7450:7466  this.balance.sub */\n      tag_96\n      swap1\n        /* \"smart-contracts/contracts/Credit.sol\":7450:7483  this.balance.sub(requestedAmount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_154:\n        /* \"smart-contracts/contracts/Credit.sol\":7437:7483  extraMoney = this.balance.sub(requestedAmount) */\n      swap1\n      pop\n        /* \"smart-contracts/contracts/Credit.sol\":7566:7594  this.balance.sub(extraMoney) */\n      tag_155\n        /* \"smart-contracts/contracts/Credit.sol\":7583:7593  extraMoney */\n      dup2\n        /* \"smart-contracts/contracts/Credit.sol\":7566:7570  this */\n      address\n        /* \"smart-contracts/contracts/Credit.sol\":7566:7578  this.balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      balance\n        /* \"smart-contracts/contracts/Credit.sol\":7566:7582  this.balance.sub */\n      tag_96\n      swap1\n        /* \"smart-contracts/contracts/Credit.sol\":7566:7594  this.balance.sub(extraMoney) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_155:\n        /* \"smart-contracts/contracts/Credit.sol\":7547:7562  requestedAmount */\n      sload(0x2)\n        /* \"smart-contracts/contracts/Credit.sol\":7547:7594  requestedAmount == this.balance.sub(extraMoney) */\n      eq\n        /* \"smart-contracts/contracts/Credit.sol\":7540:7595  assert(requestedAmount == this.balance.sub(extraMoney)) */\n      iszero\n      iszero\n      tag_156\n      jumpi\n      invalid\n    tag_156:\n        /* \"smart-contracts/contracts/Credit.sol\":7690:7699  msg.value */\n      callvalue\n        /* \"smart-contracts/contracts/Credit.sol\":7676:7686  extraMoney */\n      dup2\n        /* \"smart-contracts/contracts/Credit.sol\":7676:7699  extraMoney <= msg.value */\n      gt\n      iszero\n        /* \"smart-contracts/contracts/Credit.sol\":7669:7700  assert(extraMoney <= msg.value) */\n      iszero\n      iszero\n      tag_157\n      jumpi\n      invalid\n    tag_157:\n        /* \"smart-contracts/contracts/Credit.sol\":7794:7795  0 */\n      0x0\n        /* \"smart-contracts/contracts/Credit.sol\":7781:7791  extraMoney */\n      dup2\n        /* \"smart-contracts/contracts/Credit.sol\":7781:7795  extraMoney > 0 */\n      gt\n        /* \"smart-contracts/contracts/Credit.sol\":7777:8047  if (extraMoney > 0) {\r... */\n      iszero\n      tag_158\n      jumpi\n        /* \"smart-contracts/contracts/Credit.sol\":7874:7884  msg.sender */\n      caller\n        /* \"smart-contracts/contracts/Credit.sol\":7874:7893  msg.sender.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"smart-contracts/contracts/Credit.sol\":7874:7905  msg.sender.transfer(extraMoney) */\n      0x8fc\n        /* \"smart-contracts/contracts/Credit.sol\":7894:7904  extraMoney */\n      dup3\n        /* \"smart-contracts/contracts/Credit.sol\":7874:7905  msg.sender.transfer(extraMoney) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      iszero\n      tag_159\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_159:\n        /* \"smart-contracts/contracts/Credit.sol\":8015:8030  block.timestamp */\n      timestamp\n        /* \"smart-contracts/contracts/Credit.sol\":8003:8013  extraMoney */\n      dup2\n        /* \"smart-contracts/contracts/Credit.sol\":7991:8001  msg.sender */\n      caller\n        /* \"smart-contracts/contracts/Credit.sol\":7967:8031  LogLenderChangeReturned(msg.sender, extraMoney, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x566803f6e271b911c84f87631bcd310d6a6510bf8882577a96fc76975703e431\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"smart-contracts/contracts/Credit.sol\":7777:8047  if (extraMoney > 0) {\r... */\n    tag_158:\n        /* \"smart-contracts/contracts/Credit.sol\":8124:8139  State.repayment */\n      0x1\n        /* \"smart-contracts/contracts/Credit.sol\":8116:8121  state */\n      0xc\n      0x1\n        /* \"smart-contracts/contracts/Credit.sol\":8116:8139  state = State.repayment */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x5\n      dup2\n      gt\n      iszero\n      tag_160\n      jumpi\n      invalid\n    tag_160:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"smart-contracts/contracts/Credit.sol\":8219:8234  block.timestamp */\n      timestamp\n        /* \"smart-contracts/contracts/Credit.sol\":8212:8217  state */\n      0xc\n      0x1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"smart-contracts/contracts/Credit.sol\":8190:8235  LogCreditStateChanged(state, block.timestamp) */\n      0x5\n      dup2\n      gt\n      iszero\n      tag_161\n      jumpi\n      invalid\n    tag_161:\n      0xaaae373901e745122c2e0925ad006227969c6cd190b7d5ea2fb7fdbd1d955b35\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"smart-contracts/contracts/Credit.sol\":7316:8247  if (this.balance >= requestedAmount) {\r... */\n    tag_153:\n        /* \"smart-contracts/contracts/Credit.sol\":8408:8412  true */\n      0x1\n        /* \"smart-contracts/contracts/Credit.sol\":8386:8393  lenders */\n      0xd\n        /* \"smart-contracts/contracts/Credit.sol\":8386:8405  lenders[msg.sender] */\n      0x0\n        /* \"smart-contracts/contracts/Credit.sol\":8394:8404  msg.sender */\n      caller\n        /* \"smart-contracts/contracts/Credit.sol\":8386:8405  lenders[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n        /* \"smart-contracts/contracts/Credit.sol\":8386:8412  lenders[msg.sender] = true */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"smart-contracts/contracts/Credit.sol\":8466:8478  lendersCount */\n      0xf\n      0x0\n        /* \"smart-contracts/contracts/Credit.sol\":8466:8480  lendersCount++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      0x1\n      add\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"smart-contracts/contracts/Credit.sol\":8588:8652  lendersInvestedAmount[msg.sender].add(msg.value.sub(extraMoney)) */\n      tag_162\n        /* \"smart-contracts/contracts/Credit.sol\":8626:8651  msg.value.sub(extraMoney) */\n      tag_163\n        /* \"smart-contracts/contracts/Credit.sol\":8640:8650  extraMoney */\n      dup3\n        /* \"smart-contracts/contracts/Credit.sol\":8626:8635  msg.value */\n      callvalue\n        /* \"smart-contracts/contracts/Credit.sol\":8626:8639  msg.value.sub */\n      tag_96\n      swap1\n        /* \"smart-contracts/contracts/Credit.sol\":8626:8651  msg.value.sub(extraMoney) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_163:\n        /* \"smart-contracts/contracts/Credit.sol\":8588:8609  lendersInvestedAmount */\n      0xe\n        /* \"smart-contracts/contracts/Credit.sol\":8588:8621  lendersInvestedAmount[msg.sender] */\n      0x0\n        /* \"smart-contracts/contracts/Credit.sol\":8610:8620  msg.sender */\n      caller\n        /* \"smart-contracts/contracts/Credit.sol\":8588:8621  lendersInvestedAmount[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"smart-contracts/contracts/Credit.sol\":8588:8625  lendersInvestedAmount[msg.sender].add */\n      tag_104\n      swap1\n        /* \"smart-contracts/contracts/Credit.sol\":8588:8652  lendersInvestedAmount[msg.sender].add(msg.value.sub(extraMoney)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_162:\n        /* \"smart-contracts/contracts/Credit.sol\":8552:8573  lendersInvestedAmount */\n      0xe\n        /* \"smart-contracts/contracts/Credit.sol\":8552:8585  lendersInvestedAmount[msg.sender] */\n      0x0\n        /* \"smart-contracts/contracts/Credit.sol\":8574:8584  msg.sender */\n      caller\n        /* \"smart-contracts/contracts/Credit.sol\":8552:8585  lendersInvestedAmount[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"smart-contracts/contracts/Credit.sol\":8552:8652  lendersInvestedAmount[msg.sender] = lendersInvestedAmount[msg.sender].add(msg.value.sub(extraMoney)) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"smart-contracts/contracts/Credit.sol\":8764:8779  block.timestamp */\n      timestamp\n        /* \"smart-contracts/contracts/Credit.sol\":8737:8762  msg.value.sub(extraMoney) */\n      tag_164\n        /* \"smart-contracts/contracts/Credit.sol\":8751:8761  extraMoney */\n      dup3\n        /* \"smart-contracts/contracts/Credit.sol\":8737:8746  msg.value */\n      callvalue\n        /* \"smart-contracts/contracts/Credit.sol\":8737:8750  msg.value.sub */\n      tag_96\n      swap1\n        /* \"smart-contracts/contracts/Credit.sol\":8737:8762  msg.value.sub(extraMoney) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_164:\n        /* \"smart-contracts/contracts/Credit.sol\":8725:8735  msg.sender */\n      caller\n        /* \"smart-contracts/contracts/Credit.sol\":8705:8780  LogLenderInvestment(msg.sender, msg.value.sub(extraMoney), block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1b0969ce7f5b05c5e0969329a05cdbd7e2e2f6cee33ba26fd6e6bbcff82312cd\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"smart-contracts/contracts/Credit.sol\":7072:8788  function invest() public canInvest payable {\r... */\n      pop\n      jump\t// out\n        /* \"smart-contracts/contracts/Credit.sol\":12478:13696  function requestInterest() public isActive onlyLender canAskForInterest {\r... */\n    tag_53:\n        /* \"smart-contracts/contracts/Credit.sol\":12769:12792  uint lenderReturnAmount */\n      0x0\n        /* \"smart-contracts/contracts/Credit.sol\":3958:3962  true */\n      0x1\n        /* \"smart-contracts/contracts/Credit.sol\":3948:3962  active == true */\n      iszero\n      iszero\n        /* \"smart-contracts/contracts/Credit.sol\":3948:3954  active */\n      0xc\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"smart-contracts/contracts/Credit.sol\":3948:3962  active == true */\n      iszero\n      iszero\n      eq\n        /* \"smart-contracts/contracts/Credit.sol\":3940:3963  require(active == true) */\n      iszero\n      iszero\n      tag_166\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_166:\n        /* \"smart-contracts/contracts/Credit.sol\":4149:4153  true */\n      0x1\n        /* \"smart-contracts/contracts/Credit.sol\":4126:4153  lenders[msg.sender] == true */\n      iszero\n      iszero\n        /* \"smart-contracts/contracts/Credit.sol\":4126:4133  lenders */\n      0xd\n        /* \"smart-contracts/contracts/Credit.sol\":4126:4145  lenders[msg.sender] */\n      0x0\n        /* \"smart-contracts/contracts/Credit.sol\":4134:4144  msg.sender */\n      caller\n        /* \"smart-contracts/contracts/Credit.sol\":4126:4145  lenders[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"smart-contracts/contracts/Credit.sol\":4126:4153  lenders[msg.sender] == true */\n      iszero\n      iszero\n      eq\n        /* \"smart-contracts/contracts/Credit.sol\":4118:4154  require(lenders[msg.sender] == true) */\n      iszero\n      iszero\n      tag_168\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_168:\n        /* \"smart-contracts/contracts/Credit.sol\":4239:4260  State.interestReturns */\n      0x2\n        /* \"smart-contracts/contracts/Credit.sol\":4230:4260  state == State.interestReturns */\n      0x5\n      dup2\n      gt\n      iszero\n      tag_170\n      jumpi\n      invalid\n    tag_170:\n        /* \"smart-contracts/contracts/Credit.sol\":4230:4235  state */\n      0xc\n      0x1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"smart-contracts/contracts/Credit.sol\":4230:4260  state == State.interestReturns */\n      0x5\n      dup2\n      gt\n      iszero\n      tag_171\n      jumpi\n      invalid\n    tag_171:\n      eq\n        /* \"smart-contracts/contracts/Credit.sol\":4222:4261  require(state == State.interestReturns) */\n      iszero\n      iszero\n      tag_172\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_172:\n        /* \"smart-contracts/contracts/Credit.sol\":4316:4317  0 */\n      0x0\n        /* \"smart-contracts/contracts/Credit.sol\":4280:4301  lendersInvestedAmount */\n      0xe\n        /* \"smart-contracts/contracts/Credit.sol\":4280:4313  lendersInvestedAmount[msg.sender] */\n      0x0\n        /* \"smart-contracts/contracts/Credit.sol\":4302:4312  msg.sender */\n      caller\n        /* \"smart-contracts/contracts/Credit.sol\":4280:4313  lendersInvestedAmount[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"smart-contracts/contracts/Credit.sol\":4280:4317  lendersInvestedAmount[msg.sender] > 0 */\n      gt\n        /* \"smart-contracts/contracts/Credit.sol\":4272:4318  require(lendersInvestedAmount[msg.sender] > 0) */\n      iszero\n      iszero\n      tag_173\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_173:\n        /* \"smart-contracts/contracts/Credit.sol\":12810:12822  lendersCount */\n      sload(0xf)\n        /* \"smart-contracts/contracts/Credit.sol\":12795:12807  returnAmount */\n      sload(0x3)\n        /* \"smart-contracts/contracts/Credit.sol\":12795:12822  returnAmount / lendersCount */\n      dup2\n      iszero\n      iszero\n      tag_175\n      jumpi\n      invalid\n    tag_175:\n      div\n        /* \"smart-contracts/contracts/Credit.sol\":12769:12822  uint lenderReturnAmount = returnAmount / lendersCount */\n      swap1\n      pop\n        /* \"smart-contracts/contracts/Credit.sol\":12928:12946  lenderReturnAmount */\n      dup1\n        /* \"smart-contracts/contracts/Credit.sol\":12912:12916  this */\n      address\n        /* \"smart-contracts/contracts/Credit.sol\":12912:12924  this.balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      balance\n        /* \"smart-contracts/contracts/Credit.sol\":12912:12946  this.balance >= lenderReturnAmount */\n      lt\n      iszero\n        /* \"smart-contracts/contracts/Credit.sol\":12905:12947  assert(this.balance >= lenderReturnAmount) */\n      iszero\n      iszero\n      tag_176\n      jumpi\n      invalid\n    tag_176:\n        /* \"smart-contracts/contracts/Credit.sol\":13028:13038  msg.sender */\n      caller\n        /* \"smart-contracts/contracts/Credit.sol\":13028:13047  msg.sender.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"smart-contracts/contracts/Credit.sol\":13028:13067  msg.sender.transfer(lenderReturnAmount) */\n      0x8fc\n        /* \"smart-contracts/contracts/Credit.sol\":13048:13066  lenderReturnAmount */\n      dup3\n        /* \"smart-contracts/contracts/Credit.sol\":13028:13067  msg.sender.transfer(lenderReturnAmount) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      iszero\n      tag_177\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_177:\n        /* \"smart-contracts/contracts/Credit.sol\":13172:13187  block.timestamp */\n      timestamp\n        /* \"smart-contracts/contracts/Credit.sol\":13152:13170  lenderReturnAmount */\n      dup2\n        /* \"smart-contracts/contracts/Credit.sol\":13140:13150  msg.sender */\n      caller\n        /* \"smart-contracts/contracts/Credit.sol\":13120:13188  LogLenderWithdrawal(msg.sender, lenderReturnAmount, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x52f6685df2f773f854b17db1d82e2352e222010daaf8175761f02ef8782c403\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"smart-contracts/contracts/Credit.sol\":13275:13276  0 */\n      0x0\n        /* \"smart-contracts/contracts/Credit.sol\":13259:13263  this */\n      address\n        /* \"smart-contracts/contracts/Credit.sol\":13259:13271  this.balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      balance\n        /* \"smart-contracts/contracts/Credit.sol\":13259:13276  this.balance == 0 */\n      eq\n        /* \"smart-contracts/contracts/Credit.sol\":13255:13689  if (this.balance == 0) {\r... */\n      iszero\n      tag_178\n      jumpi\n        /* \"smart-contracts/contracts/Credit.sol\":13351:13356  false */\n      0x0\n        /* \"smart-contracts/contracts/Credit.sol\":13342:13348  active */\n      0xc\n      0x0\n        /* \"smart-contracts/contracts/Credit.sol\":13342:13356  active = false */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"smart-contracts/contracts/Credit.sol\":13450:13465  block.timestamp */\n      timestamp\n        /* \"smart-contracts/contracts/Credit.sol\":13442:13448  active */\n      0xc\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"smart-contracts/contracts/Credit.sol\":13414:13466  LogCreditStateActiveChanged(active, block.timestamp) */\n      iszero\n      iszero\n      0x160914ea27c60aa29a5f3a69d74e6069869de36e38939de1e0a66b921d8623d2\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"smart-contracts/contracts/Credit.sol\":13568:13581  State.expired */\n      0x3\n        /* \"smart-contracts/contracts/Credit.sol\":13560:13565  state */\n      0xc\n      0x1\n        /* \"smart-contracts/contracts/Credit.sol\":13560:13581  state = State.expired */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x5\n      dup2\n      gt\n      iszero\n      tag_179\n      jumpi\n      invalid\n    tag_179:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"smart-contracts/contracts/Credit.sol\":13661:13676  block.timestamp */\n      timestamp\n        /* \"smart-contracts/contracts/Credit.sol\":13654:13659  state */\n      0xc\n      0x1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"smart-contracts/contracts/Credit.sol\":13632:13677  LogCreditStateChanged(state, block.timestamp) */\n      0x5\n      dup2\n      gt\n      iszero\n      tag_180\n      jumpi\n      invalid\n    tag_180:\n      0xaaae373901e745122c2e0925ad006227969c6cd190b7d5ea2fb7fdbd1d955b35\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"smart-contracts/contracts/Credit.sol\":13255:13689  if (this.balance == 0) {\r... */\n    tag_178:\n        /* \"smart-contracts/contracts/Credit.sol\":12478:13696  function requestInterest() public isActive onlyLender canAskForInterest {\r... */\n      pop\n      jump\t// out\n        /* \"smart-contracts/contracts/Credit.sol\":14059:14471  function getCreditInfo() public view returns (address, bytes32, uint, uint, uint, uint, uint, uint, State, bool, uint) {\r... */\n    tag_56:\n        /* \"smart-contracts/contracts/Credit.sol\":14105:14112  address */\n      0x0\n        /* \"smart-contracts/contracts/Credit.sol\":14114:14121  bytes32 */\n      dup1\n        /* \"smart-contracts/contracts/Credit.sol\":14123:14127  uint */\n      0x0\n        /* \"smart-contracts/contracts/Credit.sol\":14129:14133  uint */\n      dup1\n        /* \"smart-contracts/contracts/Credit.sol\":14135:14139  uint */\n      0x0\n        /* \"smart-contracts/contracts/Credit.sol\":14141:14145  uint */\n      dup1\n        /* \"smart-contracts/contracts/Credit.sol\":14147:14151  uint */\n      0x0\n        /* \"smart-contracts/contracts/Credit.sol\":14153:14157  uint */\n      dup1\n        /* \"smart-contracts/contracts/Credit.sol\":14159:14164  State */\n      0x0\n        /* \"smart-contracts/contracts/Credit.sol\":14166:14170  bool */\n      dup1\n        /* \"smart-contracts/contracts/Credit.sol\":14172:14176  uint */\n      0x0\n        /* \"smart-contracts/contracts/Credit.sol\":14207:14215  borrower */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"smart-contracts/contracts/Credit.sol\":14226:14237  description */\n      sload(0xb)\n        /* \"smart-contracts/contracts/Credit.sol\":14248:14263  requestedAmount */\n      sload(0x2)\n        /* \"smart-contracts/contracts/Credit.sol\":14274:14293  requestedRepayments */\n      sload(0x6)\n        /* \"smart-contracts/contracts/Credit.sol\":14304:14324  repaymentInstallment */\n      sload(0x8)\n        /* \"smart-contracts/contracts/Credit.sol\":14335:14354  remainingRepayments */\n      sload(0x7)\n        /* \"smart-contracts/contracts/Credit.sol\":14365:14373  interest */\n      sload(0x5)\n        /* \"smart-contracts/contracts/Credit.sol\":14384:14396  returnAmount */\n      sload(0x3)\n        /* \"smart-contracts/contracts/Credit.sol\":14407:14412  state */\n      0xc\n      0x1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"smart-contracts/contracts/Credit.sol\":14423:14429  active */\n      0xc\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"smart-contracts/contracts/Credit.sol\":14440:14444  this */\n      address\n        /* \"smart-contracts/contracts/Credit.sol\":14440:14452  this.balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      balance\n        /* \"smart-contracts/contracts/Credit.sol\":14189:14463  return (\r... */\n      swap11\n      pop\n      swap11\n      pop\n      swap11\n      pop\n      swap11\n      pop\n      swap11\n      pop\n      swap11\n      pop\n      swap11\n      pop\n      swap11\n      pop\n      swap11\n      pop\n      swap11\n      pop\n      swap11\n      pop\n        /* \"smart-contracts/contracts/Credit.sol\":14059:14471  function getCreditInfo() public view returns (address, bytes32, uint, uint, uint, uint, uint, uint, State, bool, uint) {\r... */\n      swap1\n      swap2\n      swap3\n      swap4\n      swap5\n      swap6\n      swap7\n      swap8\n      swap9\n      swap10\n      swap11\n      jump\t// out\n        /* \"smart-contracts/contracts/common/Destructible.sol\":237:341  function destroyAndSend(address _recipient) public onlyOwner {\r... */\n    tag_60:\n        /* \"smart-contracts/contracts/common/Ownable.sol\":232:237  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"smart-contracts/contracts/common/Ownable.sol\":218:237  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"smart-contracts/contracts/common/Ownable.sol\":218:228  msg.sender */\n      caller\n        /* \"smart-contracts/contracts/common/Ownable.sol\":218:237  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"smart-contracts/contracts/common/Ownable.sol\":210:238  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_183\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_183:\n        /* \"smart-contracts/contracts/common/Destructible.sol\":322:332  _recipient */\n      dup1\n        /* \"smart-contracts/contracts/common/Destructible.sol\":309:333  selfdestruct(_recipient) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      selfdestruct\n        /* \"smart-contracts/contracts/common/SafeMath.sol\":481:604  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_96:\n        /* \"smart-contracts/contracts/common/SafeMath.sol\":539:546  uint256 */\n      0x0\n        /* \"smart-contracts/contracts/common/SafeMath.sol\":571:572  a */\n      dup3\n        /* \"smart-contracts/contracts/common/SafeMath.sol\":566:567  b */\n      dup3\n        /* \"smart-contracts/contracts/common/SafeMath.sol\":566:572  b <= a */\n      gt\n      iszero\n        /* \"smart-contracts/contracts/common/SafeMath.sol\":559:573  assert(b <= a) */\n      iszero\n      iszero\n      tag_186\n      jumpi\n      invalid\n    tag_186:\n        /* \"smart-contracts/contracts/common/SafeMath.sol\":595:596  b */\n      dup2\n        /* \"smart-contracts/contracts/common/SafeMath.sol\":591:592  a */\n      dup4\n        /* \"smart-contracts/contracts/common/SafeMath.sol\":591:596  a - b */\n      sub\n        /* \"smart-contracts/contracts/common/SafeMath.sol\":584:596  return a - b */\n      swap1\n      pop\n        /* \"smart-contracts/contracts/common/SafeMath.sol\":481:604  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"smart-contracts/contracts/common/SafeMath.sol\":622:769  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_104:\n        /* \"smart-contracts/contracts/common/SafeMath.sol\":680:687  uint256 */\n      0x0\n        /* \"smart-contracts/contracts/common/SafeMath.sol\":700:709  uint256 c */\n      dup1\n        /* \"smart-contracts/contracts/common/SafeMath.sol\":716:717  b */\n      dup3\n        /* \"smart-contracts/contracts/common/SafeMath.sol\":712:713  a */\n      dup5\n        /* \"smart-contracts/contracts/common/SafeMath.sol\":712:717  a + b */\n      add\n        /* \"smart-contracts/contracts/common/SafeMath.sol\":700:717  uint256 c = a + b */\n      swap1\n      pop\n        /* \"smart-contracts/contracts/common/SafeMath.sol\":740:741  a */\n      dup4\n        /* \"smart-contracts/contracts/common/SafeMath.sol\":735:736  c */\n      dup2\n        /* \"smart-contracts/contracts/common/SafeMath.sol\":735:741  c >= a */\n      lt\n      iszero\n        /* \"smart-contracts/contracts/common/SafeMath.sol\":728:742  assert(c >= a) */\n      iszero\n      iszero\n      tag_188\n      jumpi\n      invalid\n    tag_188:\n        /* \"smart-contracts/contracts/common/SafeMath.sol\":760:761  c */\n      dup1\n        /* \"smart-contracts/contracts/common/SafeMath.sol\":753:761  return c */\n      swap2\n      pop\n        /* \"smart-contracts/contracts/common/SafeMath.sol\":622:769  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"smart-contracts/contracts/Credit.sol\":15208:15406  function revoke() internal {\r... */\n    tag_121:\n        /* \"smart-contracts/contracts/Credit.sol\":15295:15308  State.revoked */\n      0x4\n        /* \"smart-contracts/contracts/Credit.sol\":15287:15292  state */\n      0xc\n      0x1\n        /* \"smart-contracts/contracts/Credit.sol\":15287:15308  state = State.revoked */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x5\n      dup2\n      gt\n      iszero\n      tag_190\n      jumpi\n      invalid\n    tag_190:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"smart-contracts/contracts/Credit.sol\":15382:15397  block.timestamp */\n      timestamp\n        /* \"smart-contracts/contracts/Credit.sol\":15375:15380  state */\n      0xc\n      0x1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"smart-contracts/contracts/Credit.sol\":15353:15398  LogCreditStateChanged(state, block.timestamp) */\n      0x5\n      dup2\n      gt\n      iszero\n      tag_191\n      jumpi\n      invalid\n    tag_191:\n      0xaaae373901e745122c2e0925ad006227969c6cd190b7d5ea2fb7fdbd1d955b35\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"smart-contracts/contracts/Credit.sol\":15208:15406  function revoke() internal {\r... */\n      jump\t// out\n        /* \"smart-contracts/contracts/Credit.sol\":17234:17611  function fraud() internal returns (bool) {\r... */\n    tag_147:\n        /* \"smart-contracts/contracts/Credit.sol\":17269:17273  bool */\n      0x0\n        /* \"smart-contracts/contracts/Credit.sol\":17360:17382  bool fraudStatusResult */\n      dup1\n        /* \"smart-contracts/contracts/Credit.sol\":17385:17390  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"smart-contracts/contracts/Credit.sol\":17385:17395  owner.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"smart-contracts/contracts/Credit.sol\":17403:17439  keccak256(\"setFraudStatus(address)\") */\n      mload(0x40)\n      dup1\n      dup1\n      0x7365744672617564537461747573286164647265737329000000000000000000\n      dup2\n      mstore\n      pop\n      0x17\n      add\n      swap1\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"smart-contracts/contracts/Credit.sol\":17385:17451  owner.call(bytes4(keccak256(\"setFraudStatus(address)\")), borrower) */\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n        /* \"smart-contracts/contracts/Credit.sol\":17442:17450  borrower */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"smart-contracts/contracts/Credit.sol\":17385:17451  owner.call(bytes4(keccak256(\"setFraudStatus(address)\")), borrower) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      sub(gas, 0x646e)\n      call\n      swap3\n      pop\n      pop\n      pop\n        /* \"smart-contracts/contracts/Credit.sol\":17360:17451  bool fraudStatusResult = owner.call(bytes4(keccak256(\"setFraudStatus(address)\")), borrower) */\n      swap1\n      pop\n        /* \"smart-contracts/contracts/Credit.sol\":17550:17565  block.timestamp */\n      timestamp\n        /* \"smart-contracts/contracts/Credit.sol\":17531:17548  fraudStatusResult */\n      dup2\n        /* \"smart-contracts/contracts/Credit.sol\":17502:17566  LogBorrowerIsFraud(borrower, fraudStatusResult, block.timestamp) */\n      iszero\n      iszero\n        /* \"smart-contracts/contracts/Credit.sol\":17521:17529  borrower */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"smart-contracts/contracts/Credit.sol\":17502:17566  LogBorrowerIsFraud(borrower, fraudStatusResult, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc1bb1d1e99d1e8d2705ba85717226a3fd9a86e4de2284b00dfe6f33538d5249f\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"smart-contracts/contracts/Credit.sol\":17586:17603  fraudStatusResult */\n      dup1\n        /* \"smart-contracts/contracts/Credit.sol\":17579:17603  return fraudStatusResult */\n      swap2\n      pop\n        /* \"smart-contracts/contracts/Credit.sol\":17234:17611  function fraud() internal returns (bool) {\r... */\n      pop\n      swap1\n      jump\t// out\n        /* \"smart-contracts/contracts/common/SafeMath.sol\":270:463  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_193:\n        /* \"smart-contracts/contracts/common/SafeMath.sol\":328:335  uint256 */\n      0x0\n        /* \"smart-contracts/contracts/common/SafeMath.sol\":419:428  uint256 c */\n      dup1\n        /* \"smart-contracts/contracts/common/SafeMath.sol\":435:436  b */\n      dup3\n        /* \"smart-contracts/contracts/common/SafeMath.sol\":431:432  a */\n      dup5\n        /* \"smart-contracts/contracts/common/SafeMath.sol\":431:436  a / b */\n      dup2\n      iszero\n      iszero\n      tag_195\n      jumpi\n      invalid\n    tag_195:\n      div\n        /* \"smart-contracts/contracts/common/SafeMath.sol\":419:436  uint256 c = a / b */\n      swap1\n      pop\n        /* \"smart-contracts/contracts/common/SafeMath.sol\":454:455  c */\n      dup1\n        /* \"smart-contracts/contracts/common/SafeMath.sol\":447:455  return c */\n      swap2\n      pop\n        /* \"smart-contracts/contracts/common/SafeMath.sol\":270:463  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa165627a7a72305820b0d9ae8c666bb367167f0bebe9f11aec50f1c233b2498d10b6aef98d7b532fa30029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "606060405234156200001057600080fd5b60405160808062001d3e8339810160405280805190602001909190805190602001909190805190602001909190805190602001909190505032600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600581905550836002819055508260068190555082600781905550620000cc6005546002546200018164010000000002620018ff179091906401000000009004565b600381905550620000f9600654600354620001a06401000000000262001b2b179091906401000000009004565b60088190555080600b81600019169055504260098190555042600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff9f75c99c0e3522cd19ffc66fd6c94989a3f0821d37d5c5bb176aab904c6335d60405160405180910390a350505050620001bc565b60008082840190508381101515156200019657fe5b8091505092915050565b6000808284811515620001af57fe5b0490508091505092915050565b611b7280620001cc6000396000f3006060604052600436106100db576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806312065fe0146100e0578063268f11531461010957806328fd10d71461014357806329c68dc1146101945780633ccfd60b146101c1578063402d8883146101d657806343c14b22146101e0578063590e1ae3146101f557806383197ef01461020a5780638da5cb5b1461021f578063d85da7b614610274578063e8b5e51f146102a1578063efd475ab146102ab578063f06817cf146102c0578063f5074f4114610375575b600080fd5b34156100eb57600080fd5b6100f36103ae565b6040518082815260200191505060405180910390f35b341561011457600080fd5b61012d600480803560ff169060200190919050506103cd565b6040518082815260200191505060405180910390f35b341561014e57600080fd5b61017a600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061049a565b604051808215151515815260200191505060405180910390f35b341561019f57600080fd5b6101a76104ba565b604051808215151515815260200191505060405180910390f35b34156101cc57600080fd5b6101d4610595565b005b6101de6107b2565b005b34156101eb57600080fd5b6101f3610aa9565b005b341561020057600080fd5b610208610c8b565b005b341561021557600080fd5b61021d610f8e565b005b341561022a57600080fd5b610232611023565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561027f57600080fd5b610287611048565b604051808215151515815260200191505060405180910390f35b6102a96111f3565b005b34156102b657600080fd5b6102be611525565b005b34156102cb57600080fd5b6102d36117ce565b604051808c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018b600019166000191681526020018a815260200189815260200188815260200187815260200186815260200185815260200184600581111561034757fe5b60ff168152602001831515151581526020018281526020019b50505050505050505050505060405180910390f35b341561038057600080fd5b6103ac600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611872565b005b60003073ffffffffffffffffffffffffffffffffffffffff1631905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561042a57600080fd5b81600c60016101000a81548160ff0219169083600581111561044857fe5b021790555042600c60019054906101000a900460ff16600581111561046957fe5b7faaae373901e745122c2e0925ad006227969c6cd190b7d5ea2fb7fdbd1d955b3560405160405180910390a3919050565b600d6020528060005260406000206000915054906101000a900460ff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561051757600080fd5b600c60009054906101000a900460ff1615600c60006101000a81548160ff02191690831515021790555042600c60009054906101000a900460ff1615157f160914ea27c60aa29a5f3a69d74e6069869de36e38939de1e0a66b921d8623d260405160405180910390a3600c60009054906101000a900460ff16905090565b60011515600c60009054906101000a900460ff1615151415156105b757600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561061357600080fd5b6002543073ffffffffffffffffffffffffffffffffffffffff16311015151561063b57600080fd5b60058081111561064757fe5b600c60019054906101000a900460ff16600581111561066257fe5b1415151561066f57600080fd5b6001600c60016101000a81548160ff0219169083600581111561068e57fe5b021790555042600c60019054906101000a900460ff1660058111156106af57fe5b7faaae373901e745122c2e0925ad006227969c6cd190b7d5ea2fb7fdbd1d955b3560405160405180910390a3423073ffffffffffffffffffffffffffffffffffffffff16313373ffffffffffffffffffffffffffffffffffffffff167f20734f14d107b526674905e470e35d0a474f9fb996a7bdb034c839c8894524e660405160405180910390a4600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f1935050505015156107b057600080fd5b565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561081057600080fd5b6001600581111561081d57fe5b600c60019054906101000a900460ff16600581111561083857fe5b14151561084457600080fd5b600060075411151561085557600080fd5b600854341015151561086657600080fd5b60035460045410151561087557fe5b6007600081548092919060019003919050555042600a8190555060009050600854341115610965576108b2600854346118e690919063ffffffff16565b90506108c781346118e690919063ffffffff16565b6008541415156108d357fe5b3481111515156108df57fe5b3373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050151561091f57600080fd5b42813373ffffffffffffffffffffffffffffffffffffffff167f5c9874487a2258c6bd6dc39a2cfcf7ea944b50b79d9a7152668779687b2ebd8d60405160405180910390a45b4261097982346118e690919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f350a09487d622378c6efbda255f996387696319f803a2e53eee64f7aa70be85a60405160405180910390a46109e36109d282346118e690919063ffffffff16565b6004546118ff90919063ffffffff16565b6004819055506003546004541415610aa657423373ffffffffffffffffffffffffffffffffffffffff167f25630de45a38a90cbca3a2eb35a8197e51b56d6d912581711e5e3773fe77cabc60405160405180910390a36002600c60016101000a81548160ff02191690836005811115610a5857fe5b021790555042600c60019054906101000a900460ff166005811115610a7957fe5b7faaae373901e745122c2e0925ad006227969c6cd190b7d5ea2fb7fdbd1d955b3560405160405180910390a35b50565b60011515600c60009054906101000a900460ff161515141515610acb57600080fd5b6012544210151515610adc57600080fd5b60006005811115610ae957fe5b600c60019054906101000a900460ff166005811115610b0457fe5b141515610b1057600080fd5b60011515600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515141515610b6f57600080fd5b60001515601160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515141515610bce57600080fd5b60106000815480929190600101919050555060011515601160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a90505050423373ffffffffffffffffffffffffffffffffffffffff167fd7173ce7e4ce6f6d075259ac1a467ab8290db175a2cee8587a663c006b97e12960405160405180910390a3601054600f541415610c8957610c8861191d565b5b565b60011515600c60009054906101000a900460ff161515141515610cad57600080fd5b60011515600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515141515610d0c57600080fd5b60046005811115610d1957fe5b600c60019054906101000a900460ff166005811115610d3457fe5b141515610d4057600080fd5b600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020543073ffffffffffffffffffffffffffffffffffffffff163110151515610da257fe5b3373ffffffffffffffffffffffffffffffffffffffff166108fc600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549081150290604051600060405180830381858888f193505050501515610e2157600080fd5b42600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020543373ffffffffffffffffffffffffffffffffffffffff167f71e252e33f19f0223f47f27d00910548d26488b9b55cb5b410b75e273152f8d660405160405180910390a460003073ffffffffffffffffffffffffffffffffffffffff16311415610f8c576000600c60006101000a81548160ff02191690831515021790555042600c60009054906101000a900460ff1615157f160914ea27c60aa29a5f3a69d74e6069869de36e38939de1e0a66b921d8623d260405160405180910390a36003600c60016101000a81548160ff02191690836005811115610f3e57fe5b021790555042600c60019054906101000a900460ff166005811115610f5f57fe5b7faaae373901e745122c2e0925ad006227969c6cd190b7d5ea2fb7fdbd1d955b3560405160405180910390a35b565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610fe957600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060011515600c60009054906101000a900460ff16151514151561106c57600080fd5b60011515600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151415156110cb57600080fd5b60001515601460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514151561112a57600080fd5b60136000815480929190600101919050555060011515601460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a90505050423373ffffffffffffffffffffffffffffffffffffffff167f1db613004119dde2a638b639fba9960c0e6064ee7c2d06f300e41c78920ed6dc60405160405180910390a3601354600f5414156111eb576111e461198b565b90506111f0565b600190505b90565b600080600581111561120157fe5b600c60019054906101000a900460ff16600581111561121c57fe5b14151561122857600080fd5b600090506002543073ffffffffffffffffffffffffffffffffffffffff16311015156113ba5761127a6002543073ffffffffffffffffffffffffffffffffffffffff16316118e690919063ffffffff16565b90506112a6813073ffffffffffffffffffffffffffffffffffffffff16316118e690919063ffffffff16565b6002541415156112b257fe5b3481111515156112be57fe5b600081111561134d573373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050151561130757600080fd5b42813373ffffffffffffffffffffffffffffffffffffffff167f566803f6e271b911c84f87631bcd310d6a6510bf8882577a96fc76975703e43160405160405180910390a45b6001600c60016101000a81548160ff0219169083600581111561136c57fe5b021790555042600c60019054906101000a900460ff16600581111561138d57fe5b7faaae373901e745122c2e0925ad006227969c6cd190b7d5ea2fb7fdbd1d955b3560405160405180910390a35b6001600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600f6000815480929190600101919050555061148861143a82346118e690919063ffffffff16565b600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546118ff90919063ffffffff16565b600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550426114df82346118e690919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f1b0969ce7f5b05c5e0969329a05cdbd7e2e2f6cee33ba26fd6e6bbcff82312cd60405160405180910390a450565b600060011515600c60009054906101000a900460ff16151514151561154957600080fd5b60011515600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151415156115a857600080fd5b600260058111156115b557fe5b600c60019054906101000a900460ff1660058111156115d057fe5b1415156115dc57600080fd5b6000600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411151561162a57600080fd5b600f5460035481151561163957fe5b049050803073ffffffffffffffffffffffffffffffffffffffff16311015151561165f57fe5b3373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050151561169f57600080fd5b42813373ffffffffffffffffffffffffffffffffffffffff167f052f6685df2f773f854b17db1d82e2352e222010daaf8175761f02ef8782c40360405160405180910390a460003073ffffffffffffffffffffffffffffffffffffffff163114156117cb576000600c60006101000a81548160ff02191690831515021790555042600c60009054906101000a900460ff1615157f160914ea27c60aa29a5f3a69d74e6069869de36e38939de1e0a66b921d8623d260405160405180910390a36003600c60016101000a81548160ff0219169083600581111561177d57fe5b021790555042600c60019054906101000a900460ff16600581111561179e57fe5b7faaae373901e745122c2e0925ad006227969c6cd190b7d5ea2fb7fdbd1d955b3560405160405180910390a35b50565b6000806000806000806000806000806000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600b54600254600654600854600754600554600354600c60019054906101000a900460ff16600c60009054906101000a900460ff163073ffffffffffffffffffffffffffffffffffffffff16319a509a509a509a509a509a509a509a509a509a509a50909192939495969798999a565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156118cd57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16ff5b60008282111515156118f457fe5b818303905092915050565b600080828401905083811015151561191357fe5b8091505092915050565b6004600c60016101000a81548160ff0219169083600581111561193c57fe5b021790555042600c60019054906101000a900460ff16600581111561195d57fe5b7faaae373901e745122c2e0925ad006227969c6cd190b7d5ea2fb7fdbd1d955b3560405160405180910390a3565b6000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660405180807f7365744672617564537461747573286164647265737329000000000000000000815250601701905060405180910390207c01000000000000000000000000000000000000000000000000000000009004600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060006040518083038160008761646e5a03f192505050905042811515600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fc1bb1d1e99d1e8d2705ba85717226a3fd9a86e4de2284b00dfe6f33538d5249f60405160405180910390a48091505090565b6000808284811515611b3957fe5b04905080915050929150505600a165627a7a72305820b0d9ae8c666bb367167f0bebe9f11aec50f1c233b2498d10b6aef98d7b532fa30029",
							"opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE CALLVALUE ISZERO PUSH3 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x80 DUP1 PUSH3 0x1D3E DUP4 CODECOPY DUP2 ADD PUSH1 0x40 MSTORE DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP ORIGIN PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x5 DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x2 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x6 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH3 0xCC PUSH1 0x5 SLOAD PUSH1 0x2 SLOAD PUSH3 0x181 PUSH5 0x100000000 MUL PUSH3 0x18FF OR SWAP1 SWAP2 SWAP1 PUSH5 0x100000000 SWAP1 DIV JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH3 0xF9 PUSH1 0x6 SLOAD PUSH1 0x3 SLOAD PUSH3 0x1A0 PUSH5 0x100000000 MUL PUSH3 0x1B2B OR SWAP1 SWAP2 SWAP1 PUSH5 0x100000000 SWAP1 DIV JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xB DUP2 PUSH1 0x0 NOT AND SWAP1 SSTORE POP TIMESTAMP PUSH1 0x9 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF9F75C99C0E3522CD19FFC66FD6C94989A3F0821D37D5C5BB176AAB904C6335D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP PUSH3 0x1BC JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO ISZERO ISZERO PUSH3 0x196 JUMPI INVALID JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 DUP2 ISZERO ISZERO PUSH3 0x1AF JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B72 DUP1 PUSH3 0x1CC PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xDB JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x12065FE0 EQ PUSH2 0xE0 JUMPI DUP1 PUSH4 0x268F1153 EQ PUSH2 0x109 JUMPI DUP1 PUSH4 0x28FD10D7 EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0x29C68DC1 EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x402D8883 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x43C14B22 EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0x590E1AE3 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x83197EF0 EQ PUSH2 0x20A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0xD85DA7B6 EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0xE8B5E51F EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0xEFD475AB EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0xF06817CF EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0xF5074F41 EQ PUSH2 0x375 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0xEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF3 PUSH2 0x3AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x114 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12D PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x3CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x14E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x17A PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x49A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x19F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A7 PUSH2 0x4BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x1CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D4 PUSH2 0x595 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DE PUSH2 0x7B2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x1EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F3 PUSH2 0xAA9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x200 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x208 PUSH2 0xC8B JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x215 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x21D PUSH2 0xF8E JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x22A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x232 PUSH2 0x1023 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x27F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x287 PUSH2 0x1048 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A9 PUSH2 0x11F3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x2B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2BE PUSH2 0x1525 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x2CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2D3 PUSH2 0x17CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP12 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD DUP11 DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x347 JUMPI INVALID JUMPDEST PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x380 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3AC PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1872 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x42A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0xC PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x448 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x469 JUMPI INVALID JUMPDEST PUSH32 0xAAAE373901E745122C2E0925AD006227969C6CD190B7D5EA2FB7FDBD1D955B35 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x517 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH1 0xC PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH32 0x160914EA27C60AA29A5F3A69D74E6069869DE36E38939DE1E0A66B921D8623D2 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO ISZERO PUSH2 0x5B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x613 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 SLOAD ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE LT ISZERO ISZERO ISZERO PUSH2 0x63B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 DUP1 DUP2 GT ISZERO PUSH2 0x647 JUMPI INVALID JUMPDEST PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x662 JUMPI INVALID JUMPDEST EQ ISZERO ISZERO ISZERO PUSH2 0x66F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xC PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x68E JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x6AF JUMPI INVALID JUMPDEST PUSH32 0xAAAE373901E745122C2E0925AD006227969C6CD190B7D5EA2FB7FDBD1D955B35 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 TIMESTAMP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x20734F14D107B526674905E470E35D0A474F9FB996A7BDB034C839C8894524E6 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO ISZERO PUSH2 0x7B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x810 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x81D JUMPI INVALID JUMPDEST PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x838 JUMPI INVALID JUMPDEST EQ ISZERO ISZERO PUSH2 0x844 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x7 SLOAD GT ISZERO ISZERO PUSH2 0x855 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x8 SLOAD CALLVALUE LT ISZERO ISZERO ISZERO PUSH2 0x866 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD LT ISZERO ISZERO PUSH2 0x875 JUMPI INVALID JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 SWAP1 SUB SWAP2 SWAP1 POP SSTORE POP TIMESTAMP PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH1 0x0 SWAP1 POP PUSH1 0x8 SLOAD CALLVALUE GT ISZERO PUSH2 0x965 JUMPI PUSH2 0x8B2 PUSH1 0x8 SLOAD CALLVALUE PUSH2 0x18E6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x8C7 DUP2 CALLVALUE PUSH2 0x18E6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 SLOAD EQ ISZERO ISZERO PUSH2 0x8D3 JUMPI INVALID JUMPDEST CALLVALUE DUP2 GT ISZERO ISZERO ISZERO PUSH2 0x8DF JUMPI INVALID JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO ISZERO PUSH2 0x91F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST TIMESTAMP DUP2 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5C9874487A2258C6BD6DC39A2CFCF7EA944B50B79D9A7152668779687B2EBD8D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST TIMESTAMP PUSH2 0x979 DUP3 CALLVALUE PUSH2 0x18E6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x350A09487D622378C6EFBDA255F996387696319F803A2E53EEE64F7AA70BE85A PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x9E3 PUSH2 0x9D2 DUP3 CALLVALUE PUSH2 0x18E6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x18FF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD EQ ISZERO PUSH2 0xAA6 JUMPI TIMESTAMP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x25630DE45A38A90CBCA3A2EB35A8197E51B56D6D912581711E5E3773FE77CABC PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x2 PUSH1 0xC PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0xA58 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0xA79 JUMPI INVALID JUMPDEST PUSH32 0xAAAE373901E745122C2E0925AD006227969C6CD190B7D5EA2FB7FDBD1D955B35 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO ISZERO PUSH2 0xACB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x12 SLOAD TIMESTAMP LT ISZERO ISZERO ISZERO PUSH2 0xADC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0xAE9 JUMPI INVALID JUMPDEST PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0xB04 JUMPI INVALID JUMPDEST EQ ISZERO ISZERO PUSH2 0xB10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0xD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO ISZERO PUSH2 0xB6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0x11 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO ISZERO PUSH2 0xBCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x10 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE POP PUSH1 0x1 ISZERO ISZERO PUSH1 0x11 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 POP POP POP TIMESTAMP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD7173CE7E4CE6F6D075259AC1A467AB8290DB175A2CEE8587A663C006B97E129 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x10 SLOAD PUSH1 0xF SLOAD EQ ISZERO PUSH2 0xC89 JUMPI PUSH2 0xC88 PUSH2 0x191D JUMP JUMPDEST JUMPDEST JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO ISZERO PUSH2 0xCAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0xD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO ISZERO PUSH2 0xD0C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0xD19 JUMPI INVALID JUMPDEST PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0xD34 JUMPI INVALID JUMPDEST EQ ISZERO ISZERO PUSH2 0xD40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xE PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE LT ISZERO ISZERO ISZERO PUSH2 0xDA2 JUMPI INVALID JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0xE PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO ISZERO PUSH2 0xE21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST TIMESTAMP PUSH1 0xE PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x71E252E33F19F0223F47F27D00910548D26488B9B55CB5B410B75E273152F8D6 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE EQ ISZERO PUSH2 0xF8C JUMPI PUSH1 0x0 PUSH1 0xC PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH32 0x160914EA27C60AA29A5F3A69D74E6069869DE36E38939DE1E0A66B921D8623D2 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x3 PUSH1 0xC PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0xF3E JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0xF5F JUMPI INVALID JUMPDEST PUSH32 0xAAAE373901E745122C2E0925AD006227969C6CD190B7D5EA2FB7FDBD1D955B35 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0xFE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 ISZERO ISZERO PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO ISZERO PUSH2 0x106C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0xD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO ISZERO PUSH2 0x10CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0x14 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO ISZERO PUSH2 0x112A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x13 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE POP PUSH1 0x1 ISZERO ISZERO PUSH1 0x14 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 POP POP POP TIMESTAMP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1DB613004119DDE2A638B639FBA9960C0E6064EE7C2D06F300E41C78920ED6DC PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x13 SLOAD PUSH1 0xF SLOAD EQ ISZERO PUSH2 0x11EB JUMPI PUSH2 0x11E4 PUSH2 0x198B JUMP JUMPDEST SWAP1 POP PUSH2 0x11F0 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x1201 JUMPI INVALID JUMPDEST PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x121C JUMPI INVALID JUMPDEST EQ ISZERO ISZERO PUSH2 0x1228 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 POP PUSH1 0x2 SLOAD ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE LT ISZERO ISZERO PUSH2 0x13BA JUMPI PUSH2 0x127A PUSH1 0x2 SLOAD ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE PUSH2 0x18E6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x12A6 DUP2 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE PUSH2 0x18E6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 SLOAD EQ ISZERO ISZERO PUSH2 0x12B2 JUMPI INVALID JUMPDEST CALLVALUE DUP2 GT ISZERO ISZERO ISZERO PUSH2 0x12BE JUMPI INVALID JUMPDEST PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x134D JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO ISZERO PUSH2 0x1307 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST TIMESTAMP DUP2 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x566803F6E271B911C84F87631BCD310D6A6510BF8882577A96FC76975703E431 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST PUSH1 0x1 PUSH1 0xC PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x136C JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x138D JUMPI INVALID JUMPDEST PUSH32 0xAAAE373901E745122C2E0925AD006227969C6CD190B7D5EA2FB7FDBD1D955B35 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST PUSH1 0x1 PUSH1 0xD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xF PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE POP PUSH2 0x1488 PUSH2 0x143A DUP3 CALLVALUE PUSH2 0x18E6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x18FF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH2 0x14DF DUP3 CALLVALUE PUSH2 0x18E6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1B0969CE7F5B05C5E0969329A05CDBD7E2E2F6CEE33BA26FD6E6BBCFF82312CD PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 ISZERO ISZERO PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO ISZERO PUSH2 0x1549 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0xD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO ISZERO PUSH2 0x15A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x15B5 JUMPI INVALID JUMPDEST PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x15D0 JUMPI INVALID JUMPDEST EQ ISZERO ISZERO PUSH2 0x15DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xE PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT ISZERO ISZERO PUSH2 0x162A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xF SLOAD PUSH1 0x3 SLOAD DUP2 ISZERO ISZERO PUSH2 0x1639 JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE LT ISZERO ISZERO ISZERO PUSH2 0x165F JUMPI INVALID JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO ISZERO PUSH2 0x169F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST TIMESTAMP DUP2 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x52F6685DF2F773F854B17DB1D82E2352E222010DAAF8175761F02EF8782C403 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE EQ ISZERO PUSH2 0x17CB JUMPI PUSH1 0x0 PUSH1 0xC PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH32 0x160914EA27C60AA29A5F3A69D74E6069869DE36E38939DE1E0A66B921D8623D2 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x3 PUSH1 0xC PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x177D JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x179E JUMPI INVALID JUMPDEST PUSH32 0xAAAE373901E745122C2E0925AD006227969C6CD190B7D5EA2FB7FDBD1D955B35 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xB SLOAD PUSH1 0x2 SLOAD PUSH1 0x6 SLOAD PUSH1 0x8 SLOAD PUSH1 0x7 SLOAD PUSH1 0x5 SLOAD PUSH1 0x3 SLOAD PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 SWAP8 SWAP9 SWAP10 SWAP11 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x18CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO ISZERO ISZERO PUSH2 0x18F4 JUMPI INVALID JUMPDEST DUP2 DUP4 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO ISZERO ISZERO PUSH2 0x1913 JUMPI INVALID JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0xC PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x193C JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x195D JUMPI INVALID JUMPDEST PUSH32 0xAAAE373901E745122C2E0925AD006227969C6CD190B7D5EA2FB7FDBD1D955B35 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP1 DUP1 PUSH32 0x7365744672617564537461747573286164647265737329000000000000000000 DUP2 MSTORE POP PUSH1 0x17 ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 PUSH2 0x646E GAS SUB CALL SWAP3 POP POP POP SWAP1 POP TIMESTAMP DUP2 ISZERO ISZERO PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC1BB1D1E99D1E8D2705BA85717226A3FD9A86E4DE2284B00DFE6F33538D5249F PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 DUP2 ISZERO ISZERO PUSH2 0x1B39 JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xb0 0xd9 0xae DUP13 PUSH7 0x6BB367167F0BEB 0xe9 CALL BYTE 0xec POP CALL 0xc2 CALLER 0xb2 0x49 DUP14 LT 0xb6 0xae 0xf9 DUP14 PUSH28 0x532FA300290000000000000000000000000000000000000000000000 ",
							"sourceMap": "189:18216:0:-;;;5188:1539;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5549:9;5538:8;;:20;;;;;;;;;;;;;;;;;;5627:9;5616:8;:20;;;;5705:16;5687:15;:34;;;;5798:20;5776:19;:42;;;;5976:20;5954:19;:42;;;;6194:29;6214:8;;6194:15;;:19;;;;;;:29;;;;;:::i;:::-;6179:12;:44;;;;6419:37;6436:19;;6419:12;;:16;;;;;;:37;;;;;:::i;:::-;6396:20;:60;;;;6523:12;6509:11;:26;;;;;;;6605:15;6589:13;:31;;;;6703:15;6693:8;;;;;;;;;;;6672:47;;;;;;;;;;;;5188:1539;;;;189:18216;;622:147:4;680:7;700:9;716:1;712;:5;700:17;;740:1;735;:6;;728:14;;;;;;760:1;753:8;;622:147;;;;;:::o;270:193::-;328:7;419:9;435:1;431;:5;;;;;;;;419:17;;454:1;447:8;;270:193;;;;;:::o;189:18216:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6060604052600436106100db576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806312065fe0146100e0578063268f11531461010957806328fd10d71461014357806329c68dc1146101945780633ccfd60b146101c1578063402d8883146101d657806343c14b22146101e0578063590e1ae3146101f557806383197ef01461020a5780638da5cb5b1461021f578063d85da7b614610274578063e8b5e51f146102a1578063efd475ab146102ab578063f06817cf146102c0578063f5074f4114610375575b600080fd5b34156100eb57600080fd5b6100f36103ae565b6040518082815260200191505060405180910390f35b341561011457600080fd5b61012d600480803560ff169060200190919050506103cd565b6040518082815260200191505060405180910390f35b341561014e57600080fd5b61017a600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061049a565b604051808215151515815260200191505060405180910390f35b341561019f57600080fd5b6101a76104ba565b604051808215151515815260200191505060405180910390f35b34156101cc57600080fd5b6101d4610595565b005b6101de6107b2565b005b34156101eb57600080fd5b6101f3610aa9565b005b341561020057600080fd5b610208610c8b565b005b341561021557600080fd5b61021d610f8e565b005b341561022a57600080fd5b610232611023565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561027f57600080fd5b610287611048565b604051808215151515815260200191505060405180910390f35b6102a96111f3565b005b34156102b657600080fd5b6102be611525565b005b34156102cb57600080fd5b6102d36117ce565b604051808c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018b600019166000191681526020018a815260200189815260200188815260200187815260200186815260200185815260200184600581111561034757fe5b60ff168152602001831515151581526020018281526020019b50505050505050505050505060405180910390f35b341561038057600080fd5b6103ac600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611872565b005b60003073ffffffffffffffffffffffffffffffffffffffff1631905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561042a57600080fd5b81600c60016101000a81548160ff0219169083600581111561044857fe5b021790555042600c60019054906101000a900460ff16600581111561046957fe5b7faaae373901e745122c2e0925ad006227969c6cd190b7d5ea2fb7fdbd1d955b3560405160405180910390a3919050565b600d6020528060005260406000206000915054906101000a900460ff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561051757600080fd5b600c60009054906101000a900460ff1615600c60006101000a81548160ff02191690831515021790555042600c60009054906101000a900460ff1615157f160914ea27c60aa29a5f3a69d74e6069869de36e38939de1e0a66b921d8623d260405160405180910390a3600c60009054906101000a900460ff16905090565b60011515600c60009054906101000a900460ff1615151415156105b757600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561061357600080fd5b6002543073ffffffffffffffffffffffffffffffffffffffff16311015151561063b57600080fd5b60058081111561064757fe5b600c60019054906101000a900460ff16600581111561066257fe5b1415151561066f57600080fd5b6001600c60016101000a81548160ff0219169083600581111561068e57fe5b021790555042600c60019054906101000a900460ff1660058111156106af57fe5b7faaae373901e745122c2e0925ad006227969c6cd190b7d5ea2fb7fdbd1d955b3560405160405180910390a3423073ffffffffffffffffffffffffffffffffffffffff16313373ffffffffffffffffffffffffffffffffffffffff167f20734f14d107b526674905e470e35d0a474f9fb996a7bdb034c839c8894524e660405160405180910390a4600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f1935050505015156107b057600080fd5b565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561081057600080fd5b6001600581111561081d57fe5b600c60019054906101000a900460ff16600581111561083857fe5b14151561084457600080fd5b600060075411151561085557600080fd5b600854341015151561086657600080fd5b60035460045410151561087557fe5b6007600081548092919060019003919050555042600a8190555060009050600854341115610965576108b2600854346118e690919063ffffffff16565b90506108c781346118e690919063ffffffff16565b6008541415156108d357fe5b3481111515156108df57fe5b3373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050151561091f57600080fd5b42813373ffffffffffffffffffffffffffffffffffffffff167f5c9874487a2258c6bd6dc39a2cfcf7ea944b50b79d9a7152668779687b2ebd8d60405160405180910390a45b4261097982346118e690919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f350a09487d622378c6efbda255f996387696319f803a2e53eee64f7aa70be85a60405160405180910390a46109e36109d282346118e690919063ffffffff16565b6004546118ff90919063ffffffff16565b6004819055506003546004541415610aa657423373ffffffffffffffffffffffffffffffffffffffff167f25630de45a38a90cbca3a2eb35a8197e51b56d6d912581711e5e3773fe77cabc60405160405180910390a36002600c60016101000a81548160ff02191690836005811115610a5857fe5b021790555042600c60019054906101000a900460ff166005811115610a7957fe5b7faaae373901e745122c2e0925ad006227969c6cd190b7d5ea2fb7fdbd1d955b3560405160405180910390a35b50565b60011515600c60009054906101000a900460ff161515141515610acb57600080fd5b6012544210151515610adc57600080fd5b60006005811115610ae957fe5b600c60019054906101000a900460ff166005811115610b0457fe5b141515610b1057600080fd5b60011515600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515141515610b6f57600080fd5b60001515601160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515141515610bce57600080fd5b60106000815480929190600101919050555060011515601160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a90505050423373ffffffffffffffffffffffffffffffffffffffff167fd7173ce7e4ce6f6d075259ac1a467ab8290db175a2cee8587a663c006b97e12960405160405180910390a3601054600f541415610c8957610c8861191d565b5b565b60011515600c60009054906101000a900460ff161515141515610cad57600080fd5b60011515600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515141515610d0c57600080fd5b60046005811115610d1957fe5b600c60019054906101000a900460ff166005811115610d3457fe5b141515610d4057600080fd5b600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020543073ffffffffffffffffffffffffffffffffffffffff163110151515610da257fe5b3373ffffffffffffffffffffffffffffffffffffffff166108fc600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549081150290604051600060405180830381858888f193505050501515610e2157600080fd5b42600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020543373ffffffffffffffffffffffffffffffffffffffff167f71e252e33f19f0223f47f27d00910548d26488b9b55cb5b410b75e273152f8d660405160405180910390a460003073ffffffffffffffffffffffffffffffffffffffff16311415610f8c576000600c60006101000a81548160ff02191690831515021790555042600c60009054906101000a900460ff1615157f160914ea27c60aa29a5f3a69d74e6069869de36e38939de1e0a66b921d8623d260405160405180910390a36003600c60016101000a81548160ff02191690836005811115610f3e57fe5b021790555042600c60019054906101000a900460ff166005811115610f5f57fe5b7faaae373901e745122c2e0925ad006227969c6cd190b7d5ea2fb7fdbd1d955b3560405160405180910390a35b565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610fe957600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060011515600c60009054906101000a900460ff16151514151561106c57600080fd5b60011515600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151415156110cb57600080fd5b60001515601460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514151561112a57600080fd5b60136000815480929190600101919050555060011515601460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a90505050423373ffffffffffffffffffffffffffffffffffffffff167f1db613004119dde2a638b639fba9960c0e6064ee7c2d06f300e41c78920ed6dc60405160405180910390a3601354600f5414156111eb576111e461198b565b90506111f0565b600190505b90565b600080600581111561120157fe5b600c60019054906101000a900460ff16600581111561121c57fe5b14151561122857600080fd5b600090506002543073ffffffffffffffffffffffffffffffffffffffff16311015156113ba5761127a6002543073ffffffffffffffffffffffffffffffffffffffff16316118e690919063ffffffff16565b90506112a6813073ffffffffffffffffffffffffffffffffffffffff16316118e690919063ffffffff16565b6002541415156112b257fe5b3481111515156112be57fe5b600081111561134d573373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050151561130757600080fd5b42813373ffffffffffffffffffffffffffffffffffffffff167f566803f6e271b911c84f87631bcd310d6a6510bf8882577a96fc76975703e43160405160405180910390a45b6001600c60016101000a81548160ff0219169083600581111561136c57fe5b021790555042600c60019054906101000a900460ff16600581111561138d57fe5b7faaae373901e745122c2e0925ad006227969c6cd190b7d5ea2fb7fdbd1d955b3560405160405180910390a35b6001600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600f6000815480929190600101919050555061148861143a82346118e690919063ffffffff16565b600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546118ff90919063ffffffff16565b600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550426114df82346118e690919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f1b0969ce7f5b05c5e0969329a05cdbd7e2e2f6cee33ba26fd6e6bbcff82312cd60405160405180910390a450565b600060011515600c60009054906101000a900460ff16151514151561154957600080fd5b60011515600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151415156115a857600080fd5b600260058111156115b557fe5b600c60019054906101000a900460ff1660058111156115d057fe5b1415156115dc57600080fd5b6000600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411151561162a57600080fd5b600f5460035481151561163957fe5b049050803073ffffffffffffffffffffffffffffffffffffffff16311015151561165f57fe5b3373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050151561169f57600080fd5b42813373ffffffffffffffffffffffffffffffffffffffff167f052f6685df2f773f854b17db1d82e2352e222010daaf8175761f02ef8782c40360405160405180910390a460003073ffffffffffffffffffffffffffffffffffffffff163114156117cb576000600c60006101000a81548160ff02191690831515021790555042600c60009054906101000a900460ff1615157f160914ea27c60aa29a5f3a69d74e6069869de36e38939de1e0a66b921d8623d260405160405180910390a36003600c60016101000a81548160ff0219169083600581111561177d57fe5b021790555042600c60019054906101000a900460ff16600581111561179e57fe5b7faaae373901e745122c2e0925ad006227969c6cd190b7d5ea2fb7fdbd1d955b3560405160405180910390a35b50565b6000806000806000806000806000806000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600b54600254600654600854600754600554600354600c60019054906101000a900460ff16600c60009054906101000a900460ff163073ffffffffffffffffffffffffffffffffffffffff16319a509a509a509a509a509a509a509a509a509a509a50909192939495969798999a565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156118cd57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16ff5b60008282111515156118f457fe5b818303905092915050565b600080828401905083811015151561191357fe5b8091505092915050565b6004600c60016101000a81548160ff0219169083600581111561193c57fe5b021790555042600c60019054906101000a900460ff16600581111561195d57fe5b7faaae373901e745122c2e0925ad006227969c6cd190b7d5ea2fb7fdbd1d955b3560405160405180910390a3565b6000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660405180807f7365744672617564537461747573286164647265737329000000000000000000815250601701905060405180910390207c01000000000000000000000000000000000000000000000000000000009004600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060006040518083038160008761646e5a03f192505050905042811515600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fc1bb1d1e99d1e8d2705ba85717226a3fd9a86e4de2284b00dfe6f33538d5249f60405160405180910390a48091505090565b6000808284811515611b3957fe5b04905080915050929150505600a165627a7a72305820b0d9ae8c666bb367167f0bebe9f11aec50f1c233b2498d10b6aef98d7b532fa30029",
							"opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xDB JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x12065FE0 EQ PUSH2 0xE0 JUMPI DUP1 PUSH4 0x268F1153 EQ PUSH2 0x109 JUMPI DUP1 PUSH4 0x28FD10D7 EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0x29C68DC1 EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x402D8883 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x43C14B22 EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0x590E1AE3 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x83197EF0 EQ PUSH2 0x20A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0xD85DA7B6 EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0xE8B5E51F EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0xEFD475AB EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0xF06817CF EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0xF5074F41 EQ PUSH2 0x375 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0xEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF3 PUSH2 0x3AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x114 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12D PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x3CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x14E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x17A PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x49A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x19F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A7 PUSH2 0x4BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x1CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D4 PUSH2 0x595 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DE PUSH2 0x7B2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x1EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F3 PUSH2 0xAA9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x200 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x208 PUSH2 0xC8B JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x215 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x21D PUSH2 0xF8E JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x22A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x232 PUSH2 0x1023 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x27F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x287 PUSH2 0x1048 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A9 PUSH2 0x11F3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x2B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2BE PUSH2 0x1525 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x2CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2D3 PUSH2 0x17CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP12 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD DUP11 DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x347 JUMPI INVALID JUMPDEST PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x380 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3AC PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1872 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x42A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0xC PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x448 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x469 JUMPI INVALID JUMPDEST PUSH32 0xAAAE373901E745122C2E0925AD006227969C6CD190B7D5EA2FB7FDBD1D955B35 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x517 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH1 0xC PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH32 0x160914EA27C60AA29A5F3A69D74E6069869DE36E38939DE1E0A66B921D8623D2 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO ISZERO PUSH2 0x5B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x613 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 SLOAD ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE LT ISZERO ISZERO ISZERO PUSH2 0x63B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 DUP1 DUP2 GT ISZERO PUSH2 0x647 JUMPI INVALID JUMPDEST PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x662 JUMPI INVALID JUMPDEST EQ ISZERO ISZERO ISZERO PUSH2 0x66F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xC PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x68E JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x6AF JUMPI INVALID JUMPDEST PUSH32 0xAAAE373901E745122C2E0925AD006227969C6CD190B7D5EA2FB7FDBD1D955B35 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 TIMESTAMP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x20734F14D107B526674905E470E35D0A474F9FB996A7BDB034C839C8894524E6 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO ISZERO PUSH2 0x7B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x810 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x81D JUMPI INVALID JUMPDEST PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x838 JUMPI INVALID JUMPDEST EQ ISZERO ISZERO PUSH2 0x844 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x7 SLOAD GT ISZERO ISZERO PUSH2 0x855 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x8 SLOAD CALLVALUE LT ISZERO ISZERO ISZERO PUSH2 0x866 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD LT ISZERO ISZERO PUSH2 0x875 JUMPI INVALID JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 SWAP1 SUB SWAP2 SWAP1 POP SSTORE POP TIMESTAMP PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH1 0x0 SWAP1 POP PUSH1 0x8 SLOAD CALLVALUE GT ISZERO PUSH2 0x965 JUMPI PUSH2 0x8B2 PUSH1 0x8 SLOAD CALLVALUE PUSH2 0x18E6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x8C7 DUP2 CALLVALUE PUSH2 0x18E6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 SLOAD EQ ISZERO ISZERO PUSH2 0x8D3 JUMPI INVALID JUMPDEST CALLVALUE DUP2 GT ISZERO ISZERO ISZERO PUSH2 0x8DF JUMPI INVALID JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO ISZERO PUSH2 0x91F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST TIMESTAMP DUP2 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5C9874487A2258C6BD6DC39A2CFCF7EA944B50B79D9A7152668779687B2EBD8D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST TIMESTAMP PUSH2 0x979 DUP3 CALLVALUE PUSH2 0x18E6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x350A09487D622378C6EFBDA255F996387696319F803A2E53EEE64F7AA70BE85A PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x9E3 PUSH2 0x9D2 DUP3 CALLVALUE PUSH2 0x18E6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x18FF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD EQ ISZERO PUSH2 0xAA6 JUMPI TIMESTAMP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x25630DE45A38A90CBCA3A2EB35A8197E51B56D6D912581711E5E3773FE77CABC PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x2 PUSH1 0xC PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0xA58 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0xA79 JUMPI INVALID JUMPDEST PUSH32 0xAAAE373901E745122C2E0925AD006227969C6CD190B7D5EA2FB7FDBD1D955B35 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO ISZERO PUSH2 0xACB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x12 SLOAD TIMESTAMP LT ISZERO ISZERO ISZERO PUSH2 0xADC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0xAE9 JUMPI INVALID JUMPDEST PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0xB04 JUMPI INVALID JUMPDEST EQ ISZERO ISZERO PUSH2 0xB10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0xD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO ISZERO PUSH2 0xB6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0x11 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO ISZERO PUSH2 0xBCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x10 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE POP PUSH1 0x1 ISZERO ISZERO PUSH1 0x11 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 POP POP POP TIMESTAMP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD7173CE7E4CE6F6D075259AC1A467AB8290DB175A2CEE8587A663C006B97E129 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x10 SLOAD PUSH1 0xF SLOAD EQ ISZERO PUSH2 0xC89 JUMPI PUSH2 0xC88 PUSH2 0x191D JUMP JUMPDEST JUMPDEST JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO ISZERO PUSH2 0xCAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0xD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO ISZERO PUSH2 0xD0C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0xD19 JUMPI INVALID JUMPDEST PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0xD34 JUMPI INVALID JUMPDEST EQ ISZERO ISZERO PUSH2 0xD40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xE PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE LT ISZERO ISZERO ISZERO PUSH2 0xDA2 JUMPI INVALID JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0xE PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO ISZERO PUSH2 0xE21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST TIMESTAMP PUSH1 0xE PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x71E252E33F19F0223F47F27D00910548D26488B9B55CB5B410B75E273152F8D6 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE EQ ISZERO PUSH2 0xF8C JUMPI PUSH1 0x0 PUSH1 0xC PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH32 0x160914EA27C60AA29A5F3A69D74E6069869DE36E38939DE1E0A66B921D8623D2 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x3 PUSH1 0xC PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0xF3E JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0xF5F JUMPI INVALID JUMPDEST PUSH32 0xAAAE373901E745122C2E0925AD006227969C6CD190B7D5EA2FB7FDBD1D955B35 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0xFE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 ISZERO ISZERO PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO ISZERO PUSH2 0x106C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0xD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO ISZERO PUSH2 0x10CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0x14 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO ISZERO PUSH2 0x112A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x13 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE POP PUSH1 0x1 ISZERO ISZERO PUSH1 0x14 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 POP POP POP TIMESTAMP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1DB613004119DDE2A638B639FBA9960C0E6064EE7C2D06F300E41C78920ED6DC PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x13 SLOAD PUSH1 0xF SLOAD EQ ISZERO PUSH2 0x11EB JUMPI PUSH2 0x11E4 PUSH2 0x198B JUMP JUMPDEST SWAP1 POP PUSH2 0x11F0 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x1201 JUMPI INVALID JUMPDEST PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x121C JUMPI INVALID JUMPDEST EQ ISZERO ISZERO PUSH2 0x1228 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 POP PUSH1 0x2 SLOAD ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE LT ISZERO ISZERO PUSH2 0x13BA JUMPI PUSH2 0x127A PUSH1 0x2 SLOAD ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE PUSH2 0x18E6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x12A6 DUP2 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE PUSH2 0x18E6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 SLOAD EQ ISZERO ISZERO PUSH2 0x12B2 JUMPI INVALID JUMPDEST CALLVALUE DUP2 GT ISZERO ISZERO ISZERO PUSH2 0x12BE JUMPI INVALID JUMPDEST PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x134D JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO ISZERO PUSH2 0x1307 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST TIMESTAMP DUP2 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x566803F6E271B911C84F87631BCD310D6A6510BF8882577A96FC76975703E431 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST PUSH1 0x1 PUSH1 0xC PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x136C JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x138D JUMPI INVALID JUMPDEST PUSH32 0xAAAE373901E745122C2E0925AD006227969C6CD190B7D5EA2FB7FDBD1D955B35 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST PUSH1 0x1 PUSH1 0xD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xF PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE POP PUSH2 0x1488 PUSH2 0x143A DUP3 CALLVALUE PUSH2 0x18E6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x18FF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH2 0x14DF DUP3 CALLVALUE PUSH2 0x18E6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1B0969CE7F5B05C5E0969329A05CDBD7E2E2F6CEE33BA26FD6E6BBCFF82312CD PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 ISZERO ISZERO PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO ISZERO PUSH2 0x1549 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0xD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO ISZERO PUSH2 0x15A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x15B5 JUMPI INVALID JUMPDEST PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x15D0 JUMPI INVALID JUMPDEST EQ ISZERO ISZERO PUSH2 0x15DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xE PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT ISZERO ISZERO PUSH2 0x162A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xF SLOAD PUSH1 0x3 SLOAD DUP2 ISZERO ISZERO PUSH2 0x1639 JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE LT ISZERO ISZERO ISZERO PUSH2 0x165F JUMPI INVALID JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO ISZERO PUSH2 0x169F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST TIMESTAMP DUP2 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x52F6685DF2F773F854B17DB1D82E2352E222010DAAF8175761F02EF8782C403 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE EQ ISZERO PUSH2 0x17CB JUMPI PUSH1 0x0 PUSH1 0xC PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH32 0x160914EA27C60AA29A5F3A69D74E6069869DE36E38939DE1E0A66B921D8623D2 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x3 PUSH1 0xC PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x177D JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x179E JUMPI INVALID JUMPDEST PUSH32 0xAAAE373901E745122C2E0925AD006227969C6CD190B7D5EA2FB7FDBD1D955B35 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xB SLOAD PUSH1 0x2 SLOAD PUSH1 0x6 SLOAD PUSH1 0x8 SLOAD PUSH1 0x7 SLOAD PUSH1 0x5 SLOAD PUSH1 0x3 SLOAD PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 SWAP8 SWAP9 SWAP10 SWAP11 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x18CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO ISZERO ISZERO PUSH2 0x18F4 JUMPI INVALID JUMPDEST DUP2 DUP4 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO ISZERO ISZERO PUSH2 0x1913 JUMPI INVALID JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0xC PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x193C JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x195D JUMPI INVALID JUMPDEST PUSH32 0xAAAE373901E745122C2E0925AD006227969C6CD190B7D5EA2FB7FDBD1D955B35 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP1 DUP1 PUSH32 0x7365744672617564537461747573286164647265737329000000000000000000 DUP2 MSTORE POP PUSH1 0x17 ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 PUSH2 0x646E GAS SUB CALL SWAP3 POP POP POP SWAP1 POP TIMESTAMP DUP2 ISZERO ISZERO PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC1BB1D1E99D1E8D2705BA85717226A3FD9A86E4DE2284B00DFE6F33538D5249F PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 DUP2 ISZERO ISZERO PUSH2 0x1B39 JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xb0 0xd9 0xae DUP13 PUSH7 0x6BB367167F0BEB 0xe9 CALL BYTE 0xec POP CALL 0xc2 CALLER 0xb2 0x49 DUP14 LT 0xb6 0xae 0xf9 DUP14 PUSH28 0x532FA300290000000000000000000000000000000000000000000000 ",
							"sourceMap": "189:18216:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6810:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17799:190;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1845:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18178:222;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11651:492;;;;;;;;;;;;;;8897:2411;;;;;;14537:613;;;;;;;;;;;;;;15462:954;;;;;;;;;;;;;;151:74:2;;;;;;;;;;;;;;54:20:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16494:605:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7072:1716;;;;;;12478:1218;;;;;;;;;;;;;;14059:412;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;237:104:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;6810:90:0;6853:7;6880:4;:12;;;6873:19;;6810:90;:::o;17799:190::-;17862:4;232:5:3;;;;;;;;;;;218:19;;:10;:19;;;210:28;;;;;;;;17887:6:0;17879:5;;:14;;;;;;;;;;;;;;;;;;;;;;;;17965:15;17958:5;;;;;;;;;;;17936:45;;;;;;;;;;;;;;;;;;17799:190;;;:::o;1845:39::-;;;;;;;;;;;;;;;;;;;;;;:::o;18178:222::-;18230:4;232:5:3;;;;;;;;;;;218:19;;:10;:19;;;210:28;;;;;;;;18257:6:0;;;;;;;;;;;18256:7;18247:6;;:16;;;;;;;;;;;;;;;;;;18350:15;18342:6;;;;;;;;;;;18314:52;;;;;;;;;;;;18386:6;;;;;;;;;;;18379:13;;18178:222;:::o;11651:492::-;3958:4;3948:14;;:6;;;;;;;;;;;:14;;;3940:23;;;;;;;;4048:8;;;;;;;;;;;4034:22;;:10;:22;;;4026:31;;;;;;;;4590:15;;4574:4;:12;;;:31;;4566:40;;;;;;;;4684:11;4675:20;;;;;;;;:5;;;;;;;;;;;:20;;;;;;;;;;4667:29;;;;;;;;11809:15;11801:5;;:23;;;;;;;;;;;;;;;;;;;;;;;;11896:15;11889:5;;;;;;;;;;;11867:45;;;;;;;;;;;;;;;;;;12010:15;11996:4;:12;;;11984:10;11962:64;;;;;;;;;;;;12104:8;;;;;;;;;;;:17;;:31;12122:4;:12;;;12104:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11651:492::o;8897:2411::-;9704:15;4048:8;;;;;;;;;;;4034:22;;:10;:22;;;4026:31;;;;;;;;4488:15;4479:24;;;;;;;;:5;;;;;;;;;;;:24;;;;;;;;;4471:33;;;;;;;;9067:1;9045:19;;:23;9037:32;;;;;;;;9180:20;;9167:9;:33;;9159:42;;;;;;;;9421:12;;9406;;:27;9399:35;;;;;;9495:19;;:21;;;;;;;;;;;;;;9589:15;9569:17;:35;;;;9722:1;9704:19;;9943:20;;9931:9;:32;9927:636;;;10068:35;10082:20;;10068:9;:13;;:35;;;;:::i;:::-;10055:48;;10192:25;10206:10;10192:9;:13;;:25;;;;:::i;:::-;10168:20;;:49;10161:57;;;;;;10294:9;10280:10;:23;;10273:31;;;;;;10386:10;:19;;:31;10406:10;10386:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10535:15;10523:10;10511;10485:66;;;;;;;;;;;;9927:636;10693:15;10666:25;10680:10;10666:9;:13;;:25;;;;:::i;:::-;10654:10;10622:87;;;;;;;;;;;;10814:43;10831:25;10845:10;10831:9;:13;;:25;;;;:::i;:::-;10814:12;;:16;;:43;;;;:::i;:::-;10799:12;:58;;;;10961:12;;10945;;:28;10941:360;;;11068:15;11056:10;11027:57;;;;;;;;;;;;11172:21;11164:5;;:29;;;;;;;;;;;;;;;;;;;;;;;;11273:15;11266:5;;;;;;;;;;;11244:45;;;;;;;;;;;;;;;;;;10941:360;8897:2411;:::o;14537:613::-;3958:4;3948:14;;:6;;;;;;;;;;;:14;;;3940:23;;;;;;;;4785:16;;4766:15;:35;;4758:44;;;;;;;;4830:16;4821:25;;;;;;;;:5;;;;;;;;;;;:25;;;;;;;;;4813:34;;;;;;;;4149:4;4126:27;;:7;:19;4134:10;4126:19;;;;;;;;;;;;;;;;;;;;;;;;;:27;;;4118:36;;;;;;;;14691:5;14663:33;;:12;:24;14676:10;14663:24;;;;;;;;;;;;;;;;;;;;;;;;;:33;;;14655:42;;;;;;;;14749:11;;:13;;;;;;;;;;;;;14842:4;14814:32;;:12;:24;14827:10;14814:24;;;;;;;;;;;;;;;;;;;;;;;;:32;14958:15;14946:10;14921:53;;;;;;;;;;;;15048:11;;15032:12;;:27;15028:115;;;15123:8;:6;:8::i;:::-;15028:115;14537:613::o;15462:954::-;3958:4;3948:14;;:6;;;;;;;;;;;:14;;;3940:23;;;;;;;;4149:4;4126:27;;:7;:19;4134:10;4126:19;;;;;;;;;;;;;;;;;;;;;;;;;:27;;;4118:36;;;;;;;;4924:13;4915:22;;;;;;;;:5;;;;;;;;;;;:22;;;;;;;;;4907:31;;;;;;;;15604:21;:33;15626:10;15604:33;;;;;;;;;;;;;;;;15588:4;:12;;;:49;;15581:57;;;;;;15719:10;:19;;:54;15739:21;:33;15761:10;15739:33;;;;;;;;;;;;;;;;15719:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15891:15;15856:21;:33;15878:10;15856:33;;;;;;;;;;;;;;;;15844:10;15826:81;;;;;;;;;;;;15994:1;15978:4;:12;;;:17;15974:435;;;16070:5;16061:6;;:14;;;;;;;;;;;;;;;;;;16170:15;16162:6;;;;;;;;;;;16134:52;;;;;;;;;;;;16288:13;16280:5;;:21;;;;;;;;;;;;;;;;;;;;;;;;16381:15;16374:5;;;;;;;;;;;16352:45;;;;;;;;;;;;;;;;;;15974:435;15462:954::o;151:74:2:-;232:5:3;;;;;;;;;;;218:19;;:10;:19;;;210:28;;;;;;;;211:5:2;;;;;;;;;;;198:19;;;54:20:3;;;;;;;;;;;;;:::o;16494:605:0:-;16551:4;3958;3948:14;;:6;;;;;;;;;;;:14;;;3940:23;;;;;;;;4149:4;4126:27;;:7;:19;4134:10;4126:19;;;;;;;;;;;;;;;;;;;;;;;;;:27;;;4118:36;;;;;;;;16646:5;16619:32;;:11;:23;16631:10;16619:23;;;;;;;;;;;;;;;;;;;;;;;;;:32;;;16611:41;;;;;;;;16705:10;;:12;;;;;;;;;;;;;16796:4;16769:31;;:11;:23;16781:10;16769:23;;;;;;;;;;;;;;;;;;;;;;;;:31;16886:15;16874:10;16852:50;;;;;;;;;;;;16978:10;;16962:12;;:26;16958:112;;;17051:7;:5;:7::i;:::-;17044:14;;;;16958:112;17087:4;17080:11;;4165:1;16494:605;:::o;7072:1716::-;7213:15;4395:16;4386:25;;;;;;;;:5;;;;;;;;;;;:25;;;;;;;;;4378:34;;;;;;;;7231:1;7213:19;;7336:15;;7320:4;:12;;;:31;;7316:931;;;7450:33;7467:15;;7450:4;:12;;;:16;;:33;;;;:::i;:::-;7437:46;;7566:28;7583:10;7566:4;:12;;;:16;;:28;;;;:::i;:::-;7547:15;;:47;7540:55;;;;;;7690:9;7676:10;:23;;7669:31;;;;;;7794:1;7781:10;:14;7777:270;;;7874:10;:19;;:31;7894:10;7874:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8015:15;8003:10;7991;7967:64;;;;;;;;;;;;7777:270;8124:15;8116:5;;:23;;;;;;;;;;;;;;;;;;;;;;;;8219:15;8212:5;;;;;;;;;;;8190:45;;;;;;;;;;;;;;;;;;7316:931;8408:4;8386:7;:19;8394:10;8386:19;;;;;;;;;;;;;;;;:26;;;;;;;;;;;;;;;;;;8466:12;;:14;;;;;;;;;;;;;8588:64;8626:25;8640:10;8626:9;:13;;:25;;;;:::i;:::-;8588:21;:33;8610:10;8588:33;;;;;;;;;;;;;;;;:37;;:64;;;;:::i;:::-;8552:21;:33;8574:10;8552:33;;;;;;;;;;;;;;;:100;;;;8764:15;8737:25;8751:10;8737:9;:13;;:25;;;;:::i;:::-;8725:10;8705:75;;;;;;;;;;;;7072:1716;:::o;12478:1218::-;12769:23;3958:4;3948:14;;:6;;;;;;;;;;;:14;;;3940:23;;;;;;;;4149:4;4126:27;;:7;:19;4134:10;4126:19;;;;;;;;;;;;;;;;;;;;;;;;;:27;;;4118:36;;;;;;;;4239:21;4230:30;;;;;;;;:5;;;;;;;;;;;:30;;;;;;;;;4222:39;;;;;;;;4316:1;4280:21;:33;4302:10;4280:33;;;;;;;;;;;;;;;;:37;4272:46;;;;;;;;12810:12;;12795;;:27;;;;;;;;12769:53;;12928:18;12912:4;:12;;;:34;;12905:42;;;;;;13028:10;:19;;:39;13048:18;13028:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13172:15;13152:18;13140:10;13120:68;;;;;;;;;;;;13275:1;13259:4;:12;;;:17;13255:434;;;13351:5;13342:6;;:14;;;;;;;;;;;;;;;;;;13450:15;13442:6;;;;;;;;;;;13414:52;;;;;;;;;;;;13568:13;13560:5;;:21;;;;;;;;;;;;;;;;;;;;;;;;13661:15;13654:5;;;;;;;;;;;13632:45;;;;;;;;;;;;;;;;;;13255:434;12478:1218;:::o;14059:412::-;14105:7;14114;14123:4;14129;14135;14141;14147;14153;14159:5;14166:4;14172;14207:8;;;;;;;;;;;14226:11;;14248:15;;14274:19;;14304:20;;14335:19;;14365:8;;14384:12;;14407:5;;;;;;;;;;;14423:6;;;;;;;;;;;14440:4;:12;;;14189:274;;;;;;;;;;;;;;;;;;;;;;14059:412;;;;;;;;;;;:::o;237:104:2:-;232:5:3;;;;;;;;;;;218:19;;:10;:19;;;210:28;;;;;;;;322:10:2;309:24;;;481:123:4;539:7;571:1;566;:6;;559:14;;;;;;595:1;591;:5;584:12;;481:123;;;;:::o;622:147::-;680:7;700:9;716:1;712;:5;700:17;;740:1;735;:6;;728:14;;;;;;760:1;753:8;;622:147;;;;;:::o;15208:198:0:-;15295:13;15287:5;;:21;;;;;;;;;;;;;;;;;;;;;;;;15382:15;15375:5;;;;;;;;;;;15353:45;;;;;;;;;;;;;;;;;;15208:198::o;17234:377::-;17269:4;17360:22;17385:5;;;;;;;;;;;:10;;17403:36;;;;;;;;;;;;;;;;;;;17385:66;;;17442:8;;;;;;;;;;;17385:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17360:91;;17550:15;17531:17;17502:64;;17521:8;;;;;;;;;;;17502:64;;;;;;;;;;;;17586:17;17579:24;;17234:377;;:::o;270:193:4:-;328:7;419:9;435:1;431;:5;;;;;;;;419:17;;454:1;447:8;;270:193;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1405200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"changeState(uint8)": "22710",
								"destroy()": "30816",
								"destroyAndSend(address)": "30752",
								"fraudVote()": "infinite",
								"getBalance()": "599",
								"getCreditInfo()": "3457",
								"invest()": "infinite",
								"lenders(address)": "583",
								"owner()": "632",
								"refund()": "infinite",
								"repay()": "infinite",
								"requestInterest()": "infinite",
								"revokeVote()": "46604",
								"toggleActive()": "23064",
								"withdraw()": "infinite"
							},
							"internal": {
								"fraud()": "infinite",
								"revoke()": "22199"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 189,
									"end": 18405,
									"name": "PUSH",
									"value": "60"
								},
								{
									"begin": 189,
									"end": 18405,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 189,
									"end": 18405,
									"name": "MSTORE"
								},
								{
									"begin": 5188,
									"end": 6727,
									"name": "CALLVALUE"
								},
								{
									"begin": 5188,
									"end": 6727,
									"name": "ISZERO"
								},
								{
									"begin": 5188,
									"end": 6727,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5188,
									"end": 6727,
									"name": "JUMPI"
								},
								{
									"begin": 5188,
									"end": 6727,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 5188,
									"end": 6727,
									"name": "DUP1"
								},
								{
									"begin": 5188,
									"end": 6727,
									"name": "REVERT"
								},
								{
									"begin": 5188,
									"end": 6727,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5188,
									"end": 6727,
									"name": "JUMPDEST"
								},
								{
									"begin": 5188,
									"end": 6727,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 5188,
									"end": 6727,
									"name": "MLOAD"
								},
								{
									"begin": 5188,
									"end": 6727,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 5188,
									"end": 6727,
									"name": "DUP1"
								},
								{
									"begin": 5188,
									"end": 6727,
									"name": "PUSHSIZE"
								},
								{
									"begin": 5188,
									"end": 6727,
									"name": "DUP4"
								},
								{
									"begin": 5188,
									"end": 6727,
									"name": "CODECOPY"
								},
								{
									"begin": 5188,
									"end": 6727,
									"name": "DUP2"
								},
								{
									"begin": 5188,
									"end": 6727,
									"name": "ADD"
								},
								{
									"begin": 5188,
									"end": 6727,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 5188,
									"end": 6727,
									"name": "MSTORE"
								},
								{
									"begin": 5188,
									"end": 6727,
									"name": "DUP1"
								},
								{
									"begin": 5188,
									"end": 6727,
									"name": "DUP1"
								},
								{
									"begin": 5188,
									"end": 6727,
									"name": "MLOAD"
								},
								{
									"begin": 5188,
									"end": 6727,
									"name": "SWAP1"
								},
								{
									"begin": 5188,
									"end": 6727,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 5188,
									"end": 6727,
									"name": "ADD"
								},
								{
									"begin": 5188,
									"end": 6727,
									"name": "SWAP1"
								},
								{
									"begin": 5188,
									"end": 6727,
									"name": "SWAP2"
								},
								{
									"begin": 5188,
									"end": 6727,
									"name": "SWAP1"
								},
								{
									"begin": 5188,
									"end": 6727,
									"name": "DUP1"
								},
								{
									"begin": 5188,
									"end": 6727,
									"name": "MLOAD"
								},
								{
									"begin": 5188,
									"end": 6727,
									"name": "SWAP1"
								},
								{
									"begin": 5188,
									"end": 6727,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 5188,
									"end": 6727,
									"name": "ADD"
								},
								{
									"begin": 5188,
									"end": 6727,
									"name": "SWAP1"
								},
								{
									"begin": 5188,
									"end": 6727,
									"name": "SWAP2"
								},
								{
									"begin": 5188,
									"end": 6727,
									"name": "SWAP1"
								},
								{
									"begin": 5188,
									"end": 6727,
									"name": "DUP1"
								},
								{
									"begin": 5188,
									"end": 6727,
									"name": "MLOAD"
								},
								{
									"begin": 5188,
									"end": 6727,
									"name": "SWAP1"
								},
								{
									"begin": 5188,
									"end": 6727,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 5188,
									"end": 6727,
									"name": "ADD"
								},
								{
									"begin": 5188,
									"end": 6727,
									"name": "SWAP1"
								},
								{
									"begin": 5188,
									"end": 6727,
									"name": "SWAP2"
								},
								{
									"begin": 5188,
									"end": 6727,
									"name": "SWAP1"
								},
								{
									"begin": 5188,
									"end": 6727,
									"name": "DUP1"
								},
								{
									"begin": 5188,
									"end": 6727,
									"name": "MLOAD"
								},
								{
									"begin": 5188,
									"end": 6727,
									"name": "SWAP1"
								},
								{
									"begin": 5188,
									"end": 6727,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 5188,
									"end": 6727,
									"name": "ADD"
								},
								{
									"begin": 5188,
									"end": 6727,
									"name": "SWAP1"
								},
								{
									"begin": 5188,
									"end": 6727,
									"name": "SWAP2"
								},
								{
									"begin": 5188,
									"end": 6727,
									"name": "SWAP1"
								},
								{
									"begin": 5188,
									"end": 6727,
									"name": "POP"
								},
								{
									"begin": 5188,
									"end": 6727,
									"name": "POP"
								},
								{
									"begin": 5549,
									"end": 5558,
									"name": "ORIGIN"
								},
								{
									"begin": 5538,
									"end": 5546,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 5538,
									"end": 5546,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 5538,
									"end": 5558,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 5538,
									"end": 5558,
									"name": "EXP"
								},
								{
									"begin": 5538,
									"end": 5558,
									"name": "DUP2"
								},
								{
									"begin": 5538,
									"end": 5558,
									"name": "SLOAD"
								},
								{
									"begin": 5538,
									"end": 5558,
									"name": "DUP2"
								},
								{
									"begin": 5538,
									"end": 5558,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5538,
									"end": 5558,
									"name": "MUL"
								},
								{
									"begin": 5538,
									"end": 5558,
									"name": "NOT"
								},
								{
									"begin": 5538,
									"end": 5558,
									"name": "AND"
								},
								{
									"begin": 5538,
									"end": 5558,
									"name": "SWAP1"
								},
								{
									"begin": 5538,
									"end": 5558,
									"name": "DUP4"
								},
								{
									"begin": 5538,
									"end": 5558,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5538,
									"end": 5558,
									"name": "AND"
								},
								{
									"begin": 5538,
									"end": 5558,
									"name": "MUL"
								},
								{
									"begin": 5538,
									"end": 5558,
									"name": "OR"
								},
								{
									"begin": 5538,
									"end": 5558,
									"name": "SWAP1"
								},
								{
									"begin": 5538,
									"end": 5558,
									"name": "SSTORE"
								},
								{
									"begin": 5538,
									"end": 5558,
									"name": "POP"
								},
								{
									"begin": 5627,
									"end": 5636,
									"name": "DUP2"
								},
								{
									"begin": 5616,
									"end": 5624,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 5616,
									"end": 5636,
									"name": "DUP2"
								},
								{
									"begin": 5616,
									"end": 5636,
									"name": "SWAP1"
								},
								{
									"begin": 5616,
									"end": 5636,
									"name": "SSTORE"
								},
								{
									"begin": 5616,
									"end": 5636,
									"name": "POP"
								},
								{
									"begin": 5705,
									"end": 5721,
									"name": "DUP4"
								},
								{
									"begin": 5687,
									"end": 5702,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 5687,
									"end": 5721,
									"name": "DUP2"
								},
								{
									"begin": 5687,
									"end": 5721,
									"name": "SWAP1"
								},
								{
									"begin": 5687,
									"end": 5721,
									"name": "SSTORE"
								},
								{
									"begin": 5687,
									"end": 5721,
									"name": "POP"
								},
								{
									"begin": 5798,
									"end": 5818,
									"name": "DUP3"
								},
								{
									"begin": 5776,
									"end": 5795,
									"name": "PUSH",
									"value": "6"
								},
								{
									"begin": 5776,
									"end": 5818,
									"name": "DUP2"
								},
								{
									"begin": 5776,
									"end": 5818,
									"name": "SWAP1"
								},
								{
									"begin": 5776,
									"end": 5818,
									"name": "SSTORE"
								},
								{
									"begin": 5776,
									"end": 5818,
									"name": "POP"
								},
								{
									"begin": 5976,
									"end": 5996,
									"name": "DUP3"
								},
								{
									"begin": 5954,
									"end": 5973,
									"name": "PUSH",
									"value": "7"
								},
								{
									"begin": 5954,
									"end": 5996,
									"name": "DUP2"
								},
								{
									"begin": 5954,
									"end": 5996,
									"name": "SWAP1"
								},
								{
									"begin": 5954,
									"end": 5996,
									"name": "SSTORE"
								},
								{
									"begin": 5954,
									"end": 5996,
									"name": "POP"
								},
								{
									"begin": 6194,
									"end": 6223,
									"name": "PUSH [tag]",
									"value": "6"
								},
								{
									"begin": 6214,
									"end": 6222,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 6214,
									"end": 6222,
									"name": "SLOAD"
								},
								{
									"begin": 6194,
									"end": 6209,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 6194,
									"end": 6209,
									"name": "SLOAD"
								},
								{
									"begin": 6194,
									"end": 6213,
									"name": "PUSH [tag]",
									"value": "7"
								},
								{
									"begin": 6194,
									"end": 6213,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 6194,
									"end": 6213,
									"name": "MUL"
								},
								{
									"begin": 6194,
									"end": 6213,
									"name": "PUSH [tag]",
									"value": "18446744073709551720"
								},
								{
									"begin": 6194,
									"end": 6213,
									"name": "OR"
								},
								{
									"begin": 6194,
									"end": 6213,
									"name": "SWAP1"
								},
								{
									"begin": 6194,
									"end": 6223,
									"name": "SWAP2"
								},
								{
									"begin": 6194,
									"end": 6223,
									"name": "SWAP1"
								},
								{
									"begin": 6194,
									"end": 6223,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 6194,
									"end": 6223,
									"name": "SWAP1"
								},
								{
									"begin": 6194,
									"end": 6223,
									"name": "DIV"
								},
								{
									"begin": 6194,
									"end": 6223,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 6194,
									"end": 6223,
									"name": "tag",
									"value": "6"
								},
								{
									"begin": 6194,
									"end": 6223,
									"name": "JUMPDEST"
								},
								{
									"begin": 6179,
									"end": 6191,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 6179,
									"end": 6223,
									"name": "DUP2"
								},
								{
									"begin": 6179,
									"end": 6223,
									"name": "SWAP1"
								},
								{
									"begin": 6179,
									"end": 6223,
									"name": "SSTORE"
								},
								{
									"begin": 6179,
									"end": 6223,
									"name": "POP"
								},
								{
									"begin": 6419,
									"end": 6456,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": 6436,
									"end": 6455,
									"name": "PUSH",
									"value": "6"
								},
								{
									"begin": 6436,
									"end": 6455,
									"name": "SLOAD"
								},
								{
									"begin": 6419,
									"end": 6431,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 6419,
									"end": 6431,
									"name": "SLOAD"
								},
								{
									"begin": 6419,
									"end": 6435,
									"name": "PUSH [tag]",
									"value": "9"
								},
								{
									"begin": 6419,
									"end": 6435,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 6419,
									"end": 6435,
									"name": "MUL"
								},
								{
									"begin": 6419,
									"end": 6435,
									"name": "PUSH [tag]",
									"value": "18446744073709551809"
								},
								{
									"begin": 6419,
									"end": 6435,
									"name": "OR"
								},
								{
									"begin": 6419,
									"end": 6435,
									"name": "SWAP1"
								},
								{
									"begin": 6419,
									"end": 6456,
									"name": "SWAP2"
								},
								{
									"begin": 6419,
									"end": 6456,
									"name": "SWAP1"
								},
								{
									"begin": 6419,
									"end": 6456,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 6419,
									"end": 6456,
									"name": "SWAP1"
								},
								{
									"begin": 6419,
									"end": 6456,
									"name": "DIV"
								},
								{
									"begin": 6419,
									"end": 6456,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 6419,
									"end": 6456,
									"name": "tag",
									"value": "8"
								},
								{
									"begin": 6419,
									"end": 6456,
									"name": "JUMPDEST"
								},
								{
									"begin": 6396,
									"end": 6416,
									"name": "PUSH",
									"value": "8"
								},
								{
									"begin": 6396,
									"end": 6456,
									"name": "DUP2"
								},
								{
									"begin": 6396,
									"end": 6456,
									"name": "SWAP1"
								},
								{
									"begin": 6396,
									"end": 6456,
									"name": "SSTORE"
								},
								{
									"begin": 6396,
									"end": 6456,
									"name": "POP"
								},
								{
									"begin": 6523,
									"end": 6535,
									"name": "DUP1"
								},
								{
									"begin": 6509,
									"end": 6520,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 6509,
									"end": 6535,
									"name": "DUP2"
								},
								{
									"begin": 6509,
									"end": 6535,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 6509,
									"end": 6535,
									"name": "NOT"
								},
								{
									"begin": 6509,
									"end": 6535,
									"name": "AND"
								},
								{
									"begin": 6509,
									"end": 6535,
									"name": "SWAP1"
								},
								{
									"begin": 6509,
									"end": 6535,
									"name": "SSTORE"
								},
								{
									"begin": 6509,
									"end": 6535,
									"name": "POP"
								},
								{
									"begin": 6605,
									"end": 6620,
									"name": "TIMESTAMP"
								},
								{
									"begin": 6589,
									"end": 6602,
									"name": "PUSH",
									"value": "9"
								},
								{
									"begin": 6589,
									"end": 6620,
									"name": "DUP2"
								},
								{
									"begin": 6589,
									"end": 6620,
									"name": "SWAP1"
								},
								{
									"begin": 6589,
									"end": 6620,
									"name": "SSTORE"
								},
								{
									"begin": 6589,
									"end": 6620,
									"name": "POP"
								},
								{
									"begin": 6703,
									"end": 6718,
									"name": "TIMESTAMP"
								},
								{
									"begin": 6693,
									"end": 6701,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 6693,
									"end": 6701,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 6693,
									"end": 6701,
									"name": "SWAP1"
								},
								{
									"begin": 6693,
									"end": 6701,
									"name": "SLOAD"
								},
								{
									"begin": 6693,
									"end": 6701,
									"name": "SWAP1"
								},
								{
									"begin": 6693,
									"end": 6701,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 6693,
									"end": 6701,
									"name": "EXP"
								},
								{
									"begin": 6693,
									"end": 6701,
									"name": "SWAP1"
								},
								{
									"begin": 6693,
									"end": 6701,
									"name": "DIV"
								},
								{
									"begin": 6693,
									"end": 6701,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6693,
									"end": 6701,
									"name": "AND"
								},
								{
									"begin": 6672,
									"end": 6719,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6672,
									"end": 6719,
									"name": "AND"
								},
								{
									"begin": 6672,
									"end": 6719,
									"name": "PUSH",
									"value": "F9F75C99C0E3522CD19FFC66FD6C94989A3F0821D37D5C5BB176AAB904C6335D"
								},
								{
									"begin": 6672,
									"end": 6719,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 6672,
									"end": 6719,
									"name": "MLOAD"
								},
								{
									"begin": 6672,
									"end": 6719,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 6672,
									"end": 6719,
									"name": "MLOAD"
								},
								{
									"begin": 6672,
									"end": 6719,
									"name": "DUP1"
								},
								{
									"begin": 6672,
									"end": 6719,
									"name": "SWAP2"
								},
								{
									"begin": 6672,
									"end": 6719,
									"name": "SUB"
								},
								{
									"begin": 6672,
									"end": 6719,
									"name": "SWAP1"
								},
								{
									"begin": 6672,
									"end": 6719,
									"name": "LOG3"
								},
								{
									"begin": 5188,
									"end": 6727,
									"name": "POP"
								},
								{
									"begin": 5188,
									"end": 6727,
									"name": "POP"
								},
								{
									"begin": 5188,
									"end": 6727,
									"name": "POP"
								},
								{
									"begin": 5188,
									"end": 6727,
									"name": "POP"
								},
								{
									"begin": 189,
									"end": 18405,
									"name": "PUSH [tag]",
									"value": "10"
								},
								{
									"begin": 189,
									"end": 18405,
									"name": "JUMP"
								},
								{
									"begin": 622,
									"end": 769,
									"name": "tag",
									"value": "7"
								},
								{
									"begin": 622,
									"end": 769,
									"name": "JUMPDEST"
								},
								{
									"begin": 680,
									"end": 687,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 700,
									"end": 709,
									"name": "DUP1"
								},
								{
									"begin": 716,
									"end": 717,
									"name": "DUP3"
								},
								{
									"begin": 712,
									"end": 713,
									"name": "DUP5"
								},
								{
									"begin": 712,
									"end": 717,
									"name": "ADD"
								},
								{
									"begin": 700,
									"end": 717,
									"name": "SWAP1"
								},
								{
									"begin": 700,
									"end": 717,
									"name": "POP"
								},
								{
									"begin": 740,
									"end": 741,
									"name": "DUP4"
								},
								{
									"begin": 735,
									"end": 736,
									"name": "DUP2"
								},
								{
									"begin": 735,
									"end": 741,
									"name": "LT"
								},
								{
									"begin": 735,
									"end": 741,
									"name": "ISZERO"
								},
								{
									"begin": 728,
									"end": 742,
									"name": "ISZERO"
								},
								{
									"begin": 728,
									"end": 742,
									"name": "ISZERO"
								},
								{
									"begin": 728,
									"end": 742,
									"name": "PUSH [tag]",
									"value": "12"
								},
								{
									"begin": 728,
									"end": 742,
									"name": "JUMPI"
								},
								{
									"begin": 728,
									"end": 742,
									"name": "INVALID"
								},
								{
									"begin": 728,
									"end": 742,
									"name": "tag",
									"value": "12"
								},
								{
									"begin": 728,
									"end": 742,
									"name": "JUMPDEST"
								},
								{
									"begin": 760,
									"end": 761,
									"name": "DUP1"
								},
								{
									"begin": 753,
									"end": 761,
									"name": "SWAP2"
								},
								{
									"begin": 753,
									"end": 761,
									"name": "POP"
								},
								{
									"begin": 622,
									"end": 769,
									"name": "POP"
								},
								{
									"begin": 622,
									"end": 769,
									"name": "SWAP3"
								},
								{
									"begin": 622,
									"end": 769,
									"name": "SWAP2"
								},
								{
									"begin": 622,
									"end": 769,
									"name": "POP"
								},
								{
									"begin": 622,
									"end": 769,
									"name": "POP"
								},
								{
									"begin": 622,
									"end": 769,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 270,
									"end": 463,
									"name": "tag",
									"value": "9"
								},
								{
									"begin": 270,
									"end": 463,
									"name": "JUMPDEST"
								},
								{
									"begin": 328,
									"end": 335,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 419,
									"end": 428,
									"name": "DUP1"
								},
								{
									"begin": 435,
									"end": 436,
									"name": "DUP3"
								},
								{
									"begin": 431,
									"end": 432,
									"name": "DUP5"
								},
								{
									"begin": 431,
									"end": 436,
									"name": "DUP2"
								},
								{
									"begin": 431,
									"end": 436,
									"name": "ISZERO"
								},
								{
									"begin": 431,
									"end": 436,
									"name": "ISZERO"
								},
								{
									"begin": 431,
									"end": 436,
									"name": "PUSH [tag]",
									"value": "14"
								},
								{
									"begin": 431,
									"end": 436,
									"name": "JUMPI"
								},
								{
									"begin": 431,
									"end": 436,
									"name": "INVALID"
								},
								{
									"begin": 431,
									"end": 436,
									"name": "tag",
									"value": "14"
								},
								{
									"begin": 431,
									"end": 436,
									"name": "JUMPDEST"
								},
								{
									"begin": 431,
									"end": 436,
									"name": "DIV"
								},
								{
									"begin": 419,
									"end": 436,
									"name": "SWAP1"
								},
								{
									"begin": 419,
									"end": 436,
									"name": "POP"
								},
								{
									"begin": 454,
									"end": 455,
									"name": "DUP1"
								},
								{
									"begin": 447,
									"end": 455,
									"name": "SWAP2"
								},
								{
									"begin": 447,
									"end": 455,
									"name": "POP"
								},
								{
									"begin": 270,
									"end": 463,
									"name": "POP"
								},
								{
									"begin": 270,
									"end": 463,
									"name": "SWAP3"
								},
								{
									"begin": 270,
									"end": 463,
									"name": "SWAP2"
								},
								{
									"begin": 270,
									"end": 463,
									"name": "POP"
								},
								{
									"begin": 270,
									"end": 463,
									"name": "POP"
								},
								{
									"begin": 270,
									"end": 463,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 189,
									"end": 18405,
									"name": "tag",
									"value": "10"
								},
								{
									"begin": 189,
									"end": 18405,
									"name": "JUMPDEST"
								},
								{
									"begin": 189,
									"end": 18405,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 189,
									"end": 18405,
									"name": "DUP1"
								},
								{
									"begin": 189,
									"end": 18405,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 189,
									"end": 18405,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 189,
									"end": 18405,
									"name": "CODECOPY"
								},
								{
									"begin": 189,
									"end": 18405,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 189,
									"end": 18405,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a72305820b0d9ae8c666bb367167f0bebe9f11aec50f1c233b2498d10b6aef98d7b532fa30029",
									".code": [
										{
											"begin": 189,
											"end": 18405,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 189,
											"end": 18405,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 189,
											"end": 18405,
											"name": "MSTORE"
										},
										{
											"begin": 189,
											"end": 18405,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 189,
											"end": 18405,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 189,
											"end": 18405,
											"name": "LT"
										},
										{
											"begin": 189,
											"end": 18405,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 189,
											"end": 18405,
											"name": "JUMPI"
										},
										{
											"begin": 189,
											"end": 18405,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 189,
											"end": 18405,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 189,
											"end": 18405,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 189,
											"end": 18405,
											"name": "SWAP1"
										},
										{
											"begin": 189,
											"end": 18405,
											"name": "DIV"
										},
										{
											"begin": 189,
											"end": 18405,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 189,
											"end": 18405,
											"name": "AND"
										},
										{
											"begin": 189,
											"end": 18405,
											"name": "DUP1"
										},
										{
											"begin": 189,
											"end": 18405,
											"name": "PUSH",
											"value": "12065FE0"
										},
										{
											"begin": 189,
											"end": 18405,
											"name": "EQ"
										},
										{
											"begin": 189,
											"end": 18405,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 189,
											"end": 18405,
											"name": "JUMPI"
										},
										{
											"begin": 189,
											"end": 18405,
											"name": "DUP1"
										},
										{
											"begin": 189,
											"end": 18405,
											"name": "PUSH",
											"value": "268F1153"
										},
										{
											"begin": 189,
											"end": 18405,
											"name": "EQ"
										},
										{
											"begin": 189,
											"end": 18405,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 189,
											"end": 18405,
											"name": "JUMPI"
										},
										{
											"begin": 189,
											"end": 18405,
											"name": "DUP1"
										},
										{
											"begin": 189,
											"end": 18405,
											"name": "PUSH",
											"value": "28FD10D7"
										},
										{
											"begin": 189,
											"end": 18405,
											"name": "EQ"
										},
										{
											"begin": 189,
											"end": 18405,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 189,
											"end": 18405,
											"name": "JUMPI"
										},
										{
											"begin": 189,
											"end": 18405,
											"name": "DUP1"
										},
										{
											"begin": 189,
											"end": 18405,
											"name": "PUSH",
											"value": "29C68DC1"
										},
										{
											"begin": 189,
											"end": 18405,
											"name": "EQ"
										},
										{
											"begin": 189,
											"end": 18405,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 189,
											"end": 18405,
											"name": "JUMPI"
										},
										{
											"begin": 189,
											"end": 18405,
											"name": "DUP1"
										},
										{
											"begin": 189,
											"end": 18405,
											"name": "PUSH",
											"value": "3CCFD60B"
										},
										{
											"begin": 189,
											"end": 18405,
											"name": "EQ"
										},
										{
											"begin": 189,
											"end": 18405,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 189,
											"end": 18405,
											"name": "JUMPI"
										},
										{
											"begin": 189,
											"end": 18405,
											"name": "DUP1"
										},
										{
											"begin": 189,
											"end": 18405,
											"name": "PUSH",
											"value": "402D8883"
										},
										{
											"begin": 189,
											"end": 18405,
											"name": "EQ"
										},
										{
											"begin": 189,
											"end": 18405,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 189,
											"end": 18405,
											"name": "JUMPI"
										},
										{
											"begin": 189,
											"end": 18405,
											"name": "DUP1"
										},
										{
											"begin": 189,
											"end": 18405,
											"name": "PUSH",
											"value": "43C14B22"
										},
										{
											"begin": 189,
											"end": 18405,
											"name": "EQ"
										},
										{
											"begin": 189,
											"end": 18405,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 189,
											"end": 18405,
											"name": "JUMPI"
										},
										{
											"begin": 189,
											"end": 18405,
											"name": "DUP1"
										},
										{
											"begin": 189,
											"end": 18405,
											"name": "PUSH",
											"value": "590E1AE3"
										},
										{
											"begin": 189,
											"end": 18405,
											"name": "EQ"
										},
										{
											"begin": 189,
											"end": 18405,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 189,
											"end": 18405,
											"name": "JUMPI"
										},
										{
											"begin": 189,
											"end": 18405,
											"name": "DUP1"
										},
										{
											"begin": 189,
											"end": 18405,
											"name": "PUSH",
											"value": "83197EF0"
										},
										{
											"begin": 189,
											"end": 18405,
											"name": "EQ"
										},
										{
											"begin": 189,
											"end": 18405,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 189,
											"end": 18405,
											"name": "JUMPI"
										},
										{
											"begin": 189,
											"end": 18405,
											"name": "DUP1"
										},
										{
											"begin": 189,
											"end": 18405,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 189,
											"end": 18405,
											"name": "EQ"
										},
										{
											"begin": 189,
											"end": 18405,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 189,
											"end": 18405,
											"name": "JUMPI"
										},
										{
											"begin": 189,
											"end": 18405,
											"name": "DUP1"
										},
										{
											"begin": 189,
											"end": 18405,
											"name": "PUSH",
											"value": "D85DA7B6"
										},
										{
											"begin": 189,
											"end": 18405,
											"name": "EQ"
										},
										{
											"begin": 189,
											"end": 18405,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 189,
											"end": 18405,
											"name": "JUMPI"
										},
										{
											"begin": 189,
											"end": 18405,
											"name": "DUP1"
										},
										{
											"begin": 189,
											"end": 18405,
											"name": "PUSH",
											"value": "E8B5E51F"
										},
										{
											"begin": 189,
											"end": 18405,
											"name": "EQ"
										},
										{
											"begin": 189,
											"end": 18405,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 189,
											"end": 18405,
											"name": "JUMPI"
										},
										{
											"begin": 189,
											"end": 18405,
											"name": "DUP1"
										},
										{
											"begin": 189,
											"end": 18405,
											"name": "PUSH",
											"value": "EFD475AB"
										},
										{
											"begin": 189,
											"end": 18405,
											"name": "EQ"
										},
										{
											"begin": 189,
											"end": 18405,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 189,
											"end": 18405,
											"name": "JUMPI"
										},
										{
											"begin": 189,
											"end": 18405,
											"name": "DUP1"
										},
										{
											"begin": 189,
											"end": 18405,
											"name": "PUSH",
											"value": "F06817CF"
										},
										{
											"begin": 189,
											"end": 18405,
											"name": "EQ"
										},
										{
											"begin": 189,
											"end": 18405,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 189,
											"end": 18405,
											"name": "JUMPI"
										},
										{
											"begin": 189,
											"end": 18405,
											"name": "DUP1"
										},
										{
											"begin": 189,
											"end": 18405,
											"name": "PUSH",
											"value": "F5074F41"
										},
										{
											"begin": 189,
											"end": 18405,
											"name": "EQ"
										},
										{
											"begin": 189,
											"end": 18405,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 189,
											"end": 18405,
											"name": "JUMPI"
										},
										{
											"begin": 189,
											"end": 18405,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 189,
											"end": 18405,
											"name": "JUMPDEST"
										},
										{
											"begin": 189,
											"end": 18405,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 189,
											"end": 18405,
											"name": "DUP1"
										},
										{
											"begin": 189,
											"end": 18405,
											"name": "REVERT"
										},
										{
											"begin": 6810,
											"end": 6900,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 6810,
											"end": 6900,
											"name": "JUMPDEST"
										},
										{
											"begin": 6810,
											"end": 6900,
											"name": "CALLVALUE"
										},
										{
											"begin": 6810,
											"end": 6900,
											"name": "ISZERO"
										},
										{
											"begin": 6810,
											"end": 6900,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 6810,
											"end": 6900,
											"name": "JUMPI"
										},
										{
											"begin": 6810,
											"end": 6900,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6810,
											"end": 6900,
											"name": "DUP1"
										},
										{
											"begin": 6810,
											"end": 6900,
											"name": "REVERT"
										},
										{
											"begin": 6810,
											"end": 6900,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 6810,
											"end": 6900,
											"name": "JUMPDEST"
										},
										{
											"begin": 6810,
											"end": 6900,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 6810,
											"end": 6900,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 6810,
											"end": 6900,
											"name": "JUMP"
										},
										{
											"begin": 6810,
											"end": 6900,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 6810,
											"end": 6900,
											"name": "JUMPDEST"
										},
										{
											"begin": 6810,
											"end": 6900,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6810,
											"end": 6900,
											"name": "MLOAD"
										},
										{
											"begin": 6810,
											"end": 6900,
											"name": "DUP1"
										},
										{
											"begin": 6810,
											"end": 6900,
											"name": "DUP3"
										},
										{
											"begin": 6810,
											"end": 6900,
											"name": "DUP2"
										},
										{
											"begin": 6810,
											"end": 6900,
											"name": "MSTORE"
										},
										{
											"begin": 6810,
											"end": 6900,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6810,
											"end": 6900,
											"name": "ADD"
										},
										{
											"begin": 6810,
											"end": 6900,
											"name": "SWAP2"
										},
										{
											"begin": 6810,
											"end": 6900,
											"name": "POP"
										},
										{
											"begin": 6810,
											"end": 6900,
											"name": "POP"
										},
										{
											"begin": 6810,
											"end": 6900,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6810,
											"end": 6900,
											"name": "MLOAD"
										},
										{
											"begin": 6810,
											"end": 6900,
											"name": "DUP1"
										},
										{
											"begin": 6810,
											"end": 6900,
											"name": "SWAP2"
										},
										{
											"begin": 6810,
											"end": 6900,
											"name": "SUB"
										},
										{
											"begin": 6810,
											"end": 6900,
											"name": "SWAP1"
										},
										{
											"begin": 6810,
											"end": 6900,
											"name": "RETURN"
										},
										{
											"begin": 17799,
											"end": 17989,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 17799,
											"end": 17989,
											"name": "JUMPDEST"
										},
										{
											"begin": 17799,
											"end": 17989,
											"name": "CALLVALUE"
										},
										{
											"begin": 17799,
											"end": 17989,
											"name": "ISZERO"
										},
										{
											"begin": 17799,
											"end": 17989,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 17799,
											"end": 17989,
											"name": "JUMPI"
										},
										{
											"begin": 17799,
											"end": 17989,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17799,
											"end": 17989,
											"name": "DUP1"
										},
										{
											"begin": 17799,
											"end": 17989,
											"name": "REVERT"
										},
										{
											"begin": 17799,
											"end": 17989,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 17799,
											"end": 17989,
											"name": "JUMPDEST"
										},
										{
											"begin": 17799,
											"end": 17989,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 17799,
											"end": 17989,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 17799,
											"end": 17989,
											"name": "DUP1"
										},
										{
											"begin": 17799,
											"end": 17989,
											"name": "DUP1"
										},
										{
											"begin": 17799,
											"end": 17989,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 17799,
											"end": 17989,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 17799,
											"end": 17989,
											"name": "AND"
										},
										{
											"begin": 17799,
											"end": 17989,
											"name": "SWAP1"
										},
										{
											"begin": 17799,
											"end": 17989,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17799,
											"end": 17989,
											"name": "ADD"
										},
										{
											"begin": 17799,
											"end": 17989,
											"name": "SWAP1"
										},
										{
											"begin": 17799,
											"end": 17989,
											"name": "SWAP2"
										},
										{
											"begin": 17799,
											"end": 17989,
											"name": "SWAP1"
										},
										{
											"begin": 17799,
											"end": 17989,
											"name": "POP"
										},
										{
											"begin": 17799,
											"end": 17989,
											"name": "POP"
										},
										{
											"begin": 17799,
											"end": 17989,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 17799,
											"end": 17989,
											"name": "JUMP"
										},
										{
											"begin": 17799,
											"end": 17989,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 17799,
											"end": 17989,
											"name": "JUMPDEST"
										},
										{
											"begin": 17799,
											"end": 17989,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17799,
											"end": 17989,
											"name": "MLOAD"
										},
										{
											"begin": 17799,
											"end": 17989,
											"name": "DUP1"
										},
										{
											"begin": 17799,
											"end": 17989,
											"name": "DUP3"
										},
										{
											"begin": 17799,
											"end": 17989,
											"name": "DUP2"
										},
										{
											"begin": 17799,
											"end": 17989,
											"name": "MSTORE"
										},
										{
											"begin": 17799,
											"end": 17989,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17799,
											"end": 17989,
											"name": "ADD"
										},
										{
											"begin": 17799,
											"end": 17989,
											"name": "SWAP2"
										},
										{
											"begin": 17799,
											"end": 17989,
											"name": "POP"
										},
										{
											"begin": 17799,
											"end": 17989,
											"name": "POP"
										},
										{
											"begin": 17799,
											"end": 17989,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17799,
											"end": 17989,
											"name": "MLOAD"
										},
										{
											"begin": 17799,
											"end": 17989,
											"name": "DUP1"
										},
										{
											"begin": 17799,
											"end": 17989,
											"name": "SWAP2"
										},
										{
											"begin": 17799,
											"end": 17989,
											"name": "SUB"
										},
										{
											"begin": 17799,
											"end": 17989,
											"name": "SWAP1"
										},
										{
											"begin": 17799,
											"end": 17989,
											"name": "RETURN"
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "JUMPDEST"
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "CALLVALUE"
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "ISZERO"
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "JUMPI"
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "DUP1"
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "REVERT"
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "JUMPDEST"
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "DUP1"
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "DUP1"
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "AND"
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "SWAP1"
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "ADD"
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "SWAP1"
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "SWAP2"
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "SWAP1"
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "POP"
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "POP"
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "JUMP"
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "JUMPDEST"
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "MLOAD"
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "DUP1"
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "DUP3"
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "ISZERO"
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "ISZERO"
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "ISZERO"
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "ISZERO"
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "DUP2"
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "MSTORE"
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "ADD"
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "SWAP2"
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "POP"
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "POP"
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "MLOAD"
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "DUP1"
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "SWAP2"
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "SUB"
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "SWAP1"
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "RETURN"
										},
										{
											"begin": 18178,
											"end": 18400,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 18178,
											"end": 18400,
											"name": "JUMPDEST"
										},
										{
											"begin": 18178,
											"end": 18400,
											"name": "CALLVALUE"
										},
										{
											"begin": 18178,
											"end": 18400,
											"name": "ISZERO"
										},
										{
											"begin": 18178,
											"end": 18400,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 18178,
											"end": 18400,
											"name": "JUMPI"
										},
										{
											"begin": 18178,
											"end": 18400,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18178,
											"end": 18400,
											"name": "DUP1"
										},
										{
											"begin": 18178,
											"end": 18400,
											"name": "REVERT"
										},
										{
											"begin": 18178,
											"end": 18400,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 18178,
											"end": 18400,
											"name": "JUMPDEST"
										},
										{
											"begin": 18178,
											"end": 18400,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 18178,
											"end": 18400,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 18178,
											"end": 18400,
											"name": "JUMP"
										},
										{
											"begin": 18178,
											"end": 18400,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 18178,
											"end": 18400,
											"name": "JUMPDEST"
										},
										{
											"begin": 18178,
											"end": 18400,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18178,
											"end": 18400,
											"name": "MLOAD"
										},
										{
											"begin": 18178,
											"end": 18400,
											"name": "DUP1"
										},
										{
											"begin": 18178,
											"end": 18400,
											"name": "DUP3"
										},
										{
											"begin": 18178,
											"end": 18400,
											"name": "ISZERO"
										},
										{
											"begin": 18178,
											"end": 18400,
											"name": "ISZERO"
										},
										{
											"begin": 18178,
											"end": 18400,
											"name": "ISZERO"
										},
										{
											"begin": 18178,
											"end": 18400,
											"name": "ISZERO"
										},
										{
											"begin": 18178,
											"end": 18400,
											"name": "DUP2"
										},
										{
											"begin": 18178,
											"end": 18400,
											"name": "MSTORE"
										},
										{
											"begin": 18178,
											"end": 18400,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18178,
											"end": 18400,
											"name": "ADD"
										},
										{
											"begin": 18178,
											"end": 18400,
											"name": "SWAP2"
										},
										{
											"begin": 18178,
											"end": 18400,
											"name": "POP"
										},
										{
											"begin": 18178,
											"end": 18400,
											"name": "POP"
										},
										{
											"begin": 18178,
											"end": 18400,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18178,
											"end": 18400,
											"name": "MLOAD"
										},
										{
											"begin": 18178,
											"end": 18400,
											"name": "DUP1"
										},
										{
											"begin": 18178,
											"end": 18400,
											"name": "SWAP2"
										},
										{
											"begin": 18178,
											"end": 18400,
											"name": "SUB"
										},
										{
											"begin": 18178,
											"end": 18400,
											"name": "SWAP1"
										},
										{
											"begin": 18178,
											"end": 18400,
											"name": "RETURN"
										},
										{
											"begin": 11651,
											"end": 12143,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 11651,
											"end": 12143,
											"name": "JUMPDEST"
										},
										{
											"begin": 11651,
											"end": 12143,
											"name": "CALLVALUE"
										},
										{
											"begin": 11651,
											"end": 12143,
											"name": "ISZERO"
										},
										{
											"begin": 11651,
											"end": 12143,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 11651,
											"end": 12143,
											"name": "JUMPI"
										},
										{
											"begin": 11651,
											"end": 12143,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11651,
											"end": 12143,
											"name": "DUP1"
										},
										{
											"begin": 11651,
											"end": 12143,
											"name": "REVERT"
										},
										{
											"begin": 11651,
											"end": 12143,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 11651,
											"end": 12143,
											"name": "JUMPDEST"
										},
										{
											"begin": 11651,
											"end": 12143,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 11651,
											"end": 12143,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 11651,
											"end": 12143,
											"name": "JUMP"
										},
										{
											"begin": 11651,
											"end": 12143,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 11651,
											"end": 12143,
											"name": "JUMPDEST"
										},
										{
											"begin": 11651,
											"end": 12143,
											"name": "STOP"
										},
										{
											"begin": 8897,
											"end": 11308,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 8897,
											"end": 11308,
											"name": "JUMPDEST"
										},
										{
											"begin": 8897,
											"end": 11308,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 8897,
											"end": 11308,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 8897,
											"end": 11308,
											"name": "JUMP"
										},
										{
											"begin": 8897,
											"end": 11308,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 8897,
											"end": 11308,
											"name": "JUMPDEST"
										},
										{
											"begin": 8897,
											"end": 11308,
											"name": "STOP"
										},
										{
											"begin": 14537,
											"end": 15150,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 14537,
											"end": 15150,
											"name": "JUMPDEST"
										},
										{
											"begin": 14537,
											"end": 15150,
											"name": "CALLVALUE"
										},
										{
											"begin": 14537,
											"end": 15150,
											"name": "ISZERO"
										},
										{
											"begin": 14537,
											"end": 15150,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 14537,
											"end": 15150,
											"name": "JUMPI"
										},
										{
											"begin": 14537,
											"end": 15150,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14537,
											"end": 15150,
											"name": "DUP1"
										},
										{
											"begin": 14537,
											"end": 15150,
											"name": "REVERT"
										},
										{
											"begin": 14537,
											"end": 15150,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 14537,
											"end": 15150,
											"name": "JUMPDEST"
										},
										{
											"begin": 14537,
											"end": 15150,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 14537,
											"end": 15150,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 14537,
											"end": 15150,
											"name": "JUMP"
										},
										{
											"begin": 14537,
											"end": 15150,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 14537,
											"end": 15150,
											"name": "JUMPDEST"
										},
										{
											"begin": 14537,
											"end": 15150,
											"name": "STOP"
										},
										{
											"begin": 15462,
											"end": 16416,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 15462,
											"end": 16416,
											"name": "JUMPDEST"
										},
										{
											"begin": 15462,
											"end": 16416,
											"name": "CALLVALUE"
										},
										{
											"begin": 15462,
											"end": 16416,
											"name": "ISZERO"
										},
										{
											"begin": 15462,
											"end": 16416,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 15462,
											"end": 16416,
											"name": "JUMPI"
										},
										{
											"begin": 15462,
											"end": 16416,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15462,
											"end": 16416,
											"name": "DUP1"
										},
										{
											"begin": 15462,
											"end": 16416,
											"name": "REVERT"
										},
										{
											"begin": 15462,
											"end": 16416,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 15462,
											"end": 16416,
											"name": "JUMPDEST"
										},
										{
											"begin": 15462,
											"end": 16416,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 15462,
											"end": 16416,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 15462,
											"end": 16416,
											"name": "JUMP"
										},
										{
											"begin": 15462,
											"end": 16416,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 15462,
											"end": 16416,
											"name": "JUMPDEST"
										},
										{
											"begin": 15462,
											"end": 16416,
											"name": "STOP"
										},
										{
											"begin": 151,
											"end": 225,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 151,
											"end": 225,
											"name": "JUMPDEST"
										},
										{
											"begin": 151,
											"end": 225,
											"name": "CALLVALUE"
										},
										{
											"begin": 151,
											"end": 225,
											"name": "ISZERO"
										},
										{
											"begin": 151,
											"end": 225,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 151,
											"end": 225,
											"name": "JUMPI"
										},
										{
											"begin": 151,
											"end": 225,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 151,
											"end": 225,
											"name": "DUP1"
										},
										{
											"begin": 151,
											"end": 225,
											"name": "REVERT"
										},
										{
											"begin": 151,
											"end": 225,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 151,
											"end": 225,
											"name": "JUMPDEST"
										},
										{
											"begin": 151,
											"end": 225,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 151,
											"end": 225,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 151,
											"end": 225,
											"name": "JUMP"
										},
										{
											"begin": 151,
											"end": 225,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 151,
											"end": 225,
											"name": "JUMPDEST"
										},
										{
											"begin": 151,
											"end": 225,
											"name": "STOP"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "JUMPDEST"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "CALLVALUE"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "ISZERO"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "JUMPI"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "DUP1"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "REVERT"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "JUMPDEST"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "JUMP"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "JUMPDEST"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "MLOAD"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "DUP1"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "DUP3"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "AND"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "AND"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "DUP2"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "MSTORE"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "ADD"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "SWAP2"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "POP"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "POP"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "MLOAD"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "DUP1"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "SWAP2"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "SUB"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "SWAP1"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "RETURN"
										},
										{
											"begin": 16494,
											"end": 17099,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 16494,
											"end": 17099,
											"name": "JUMPDEST"
										},
										{
											"begin": 16494,
											"end": 17099,
											"name": "CALLVALUE"
										},
										{
											"begin": 16494,
											"end": 17099,
											"name": "ISZERO"
										},
										{
											"begin": 16494,
											"end": 17099,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 16494,
											"end": 17099,
											"name": "JUMPI"
										},
										{
											"begin": 16494,
											"end": 17099,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16494,
											"end": 17099,
											"name": "DUP1"
										},
										{
											"begin": 16494,
											"end": 17099,
											"name": "REVERT"
										},
										{
											"begin": 16494,
											"end": 17099,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 16494,
											"end": 17099,
											"name": "JUMPDEST"
										},
										{
											"begin": 16494,
											"end": 17099,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 16494,
											"end": 17099,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 16494,
											"end": 17099,
											"name": "JUMP"
										},
										{
											"begin": 16494,
											"end": 17099,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 16494,
											"end": 17099,
											"name": "JUMPDEST"
										},
										{
											"begin": 16494,
											"end": 17099,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16494,
											"end": 17099,
											"name": "MLOAD"
										},
										{
											"begin": 16494,
											"end": 17099,
											"name": "DUP1"
										},
										{
											"begin": 16494,
											"end": 17099,
											"name": "DUP3"
										},
										{
											"begin": 16494,
											"end": 17099,
											"name": "ISZERO"
										},
										{
											"begin": 16494,
											"end": 17099,
											"name": "ISZERO"
										},
										{
											"begin": 16494,
											"end": 17099,
											"name": "ISZERO"
										},
										{
											"begin": 16494,
											"end": 17099,
											"name": "ISZERO"
										},
										{
											"begin": 16494,
											"end": 17099,
											"name": "DUP2"
										},
										{
											"begin": 16494,
											"end": 17099,
											"name": "MSTORE"
										},
										{
											"begin": 16494,
											"end": 17099,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16494,
											"end": 17099,
											"name": "ADD"
										},
										{
											"begin": 16494,
											"end": 17099,
											"name": "SWAP2"
										},
										{
											"begin": 16494,
											"end": 17099,
											"name": "POP"
										},
										{
											"begin": 16494,
											"end": 17099,
											"name": "POP"
										},
										{
											"begin": 16494,
											"end": 17099,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16494,
											"end": 17099,
											"name": "MLOAD"
										},
										{
											"begin": 16494,
											"end": 17099,
											"name": "DUP1"
										},
										{
											"begin": 16494,
											"end": 17099,
											"name": "SWAP2"
										},
										{
											"begin": 16494,
											"end": 17099,
											"name": "SUB"
										},
										{
											"begin": 16494,
											"end": 17099,
											"name": "SWAP1"
										},
										{
											"begin": 16494,
											"end": 17099,
											"name": "RETURN"
										},
										{
											"begin": 7072,
											"end": 8788,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 7072,
											"end": 8788,
											"name": "JUMPDEST"
										},
										{
											"begin": 7072,
											"end": 8788,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 7072,
											"end": 8788,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 7072,
											"end": 8788,
											"name": "JUMP"
										},
										{
											"begin": 7072,
											"end": 8788,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 7072,
											"end": 8788,
											"name": "JUMPDEST"
										},
										{
											"begin": 7072,
											"end": 8788,
											"name": "STOP"
										},
										{
											"begin": 12478,
											"end": 13696,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 12478,
											"end": 13696,
											"name": "JUMPDEST"
										},
										{
											"begin": 12478,
											"end": 13696,
											"name": "CALLVALUE"
										},
										{
											"begin": 12478,
											"end": 13696,
											"name": "ISZERO"
										},
										{
											"begin": 12478,
											"end": 13696,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 12478,
											"end": 13696,
											"name": "JUMPI"
										},
										{
											"begin": 12478,
											"end": 13696,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12478,
											"end": 13696,
											"name": "DUP1"
										},
										{
											"begin": 12478,
											"end": 13696,
											"name": "REVERT"
										},
										{
											"begin": 12478,
											"end": 13696,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 12478,
											"end": 13696,
											"name": "JUMPDEST"
										},
										{
											"begin": 12478,
											"end": 13696,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 12478,
											"end": 13696,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 12478,
											"end": 13696,
											"name": "JUMP"
										},
										{
											"begin": 12478,
											"end": 13696,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 12478,
											"end": 13696,
											"name": "JUMPDEST"
										},
										{
											"begin": 12478,
											"end": 13696,
											"name": "STOP"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "JUMPDEST"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "CALLVALUE"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "ISZERO"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "JUMPI"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "DUP1"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "REVERT"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "JUMPDEST"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "JUMP"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "JUMPDEST"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "MLOAD"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "DUP1"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "DUP13"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "AND"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "AND"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "DUP2"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "MSTORE"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "ADD"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "DUP12"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "NOT"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "AND"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "NOT"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "AND"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "DUP2"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "MSTORE"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "ADD"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "DUP11"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "DUP2"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "MSTORE"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "ADD"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "DUP10"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "DUP2"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "MSTORE"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "ADD"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "DUP9"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "DUP2"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "MSTORE"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "ADD"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "DUP8"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "DUP2"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "MSTORE"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "ADD"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "DUP7"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "DUP2"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "MSTORE"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "ADD"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "DUP6"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "DUP2"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "MSTORE"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "ADD"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "DUP5"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "DUP2"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "GT"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "ISZERO"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "JUMPI"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "INVALID"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "JUMPDEST"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "AND"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "DUP2"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "MSTORE"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "ADD"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "DUP4"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "ISZERO"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "ISZERO"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "ISZERO"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "ISZERO"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "DUP2"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "MSTORE"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "ADD"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "DUP3"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "DUP2"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "MSTORE"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "ADD"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "SWAP12"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "POP"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "POP"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "POP"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "POP"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "POP"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "POP"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "POP"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "POP"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "POP"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "POP"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "POP"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "POP"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "MLOAD"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "DUP1"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "SWAP2"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "SUB"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "SWAP1"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "RETURN"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "JUMPDEST"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "CALLVALUE"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "ISZERO"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "JUMPI"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "DUP1"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "REVERT"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "JUMPDEST"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "DUP1"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "DUP1"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "AND"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "SWAP1"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "ADD"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "SWAP1"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "SWAP2"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "SWAP1"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "POP"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "POP"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "JUMP"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "JUMPDEST"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "STOP"
										},
										{
											"begin": 6810,
											"end": 6900,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 6810,
											"end": 6900,
											"name": "JUMPDEST"
										},
										{
											"begin": 6853,
											"end": 6860,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6880,
											"end": 6884,
											"name": "ADDRESS"
										},
										{
											"begin": 6880,
											"end": 6892,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6880,
											"end": 6892,
											"name": "AND"
										},
										{
											"begin": 6880,
											"end": 6892,
											"name": "BALANCE"
										},
										{
											"begin": 6873,
											"end": 6892,
											"name": "SWAP1"
										},
										{
											"begin": 6873,
											"end": 6892,
											"name": "POP"
										},
										{
											"begin": 6810,
											"end": 6900,
											"name": "SWAP1"
										},
										{
											"begin": 6810,
											"end": 6900,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 17799,
											"end": 17989,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 17799,
											"end": 17989,
											"name": "JUMPDEST"
										},
										{
											"begin": 17862,
											"end": 17866,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "DUP1"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "SWAP1"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "SLOAD"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "SWAP1"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "EXP"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "SWAP1"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "DIV"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "AND"
										},
										{
											"begin": 218,
											"end": 237,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 218,
											"end": 237,
											"name": "AND"
										},
										{
											"begin": 218,
											"end": 228,
											"name": "CALLER"
										},
										{
											"begin": 218,
											"end": 237,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 218,
											"end": 237,
											"name": "AND"
										},
										{
											"begin": 218,
											"end": 237,
											"name": "EQ"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "ISZERO"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "ISZERO"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "JUMPI"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "DUP1"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "REVERT"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "JUMPDEST"
										},
										{
											"begin": 17887,
											"end": 17893,
											"name": "DUP2"
										},
										{
											"begin": 17879,
											"end": 17884,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 17879,
											"end": 17884,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 17879,
											"end": 17893,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 17879,
											"end": 17893,
											"name": "EXP"
										},
										{
											"begin": 17879,
											"end": 17893,
											"name": "DUP2"
										},
										{
											"begin": 17879,
											"end": 17893,
											"name": "SLOAD"
										},
										{
											"begin": 17879,
											"end": 17893,
											"name": "DUP2"
										},
										{
											"begin": 17879,
											"end": 17893,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 17879,
											"end": 17893,
											"name": "MUL"
										},
										{
											"begin": 17879,
											"end": 17893,
											"name": "NOT"
										},
										{
											"begin": 17879,
											"end": 17893,
											"name": "AND"
										},
										{
											"begin": 17879,
											"end": 17893,
											"name": "SWAP1"
										},
										{
											"begin": 17879,
											"end": 17893,
											"name": "DUP4"
										},
										{
											"begin": 17879,
											"end": 17893,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 17879,
											"end": 17893,
											"name": "DUP2"
										},
										{
											"begin": 17879,
											"end": 17893,
											"name": "GT"
										},
										{
											"begin": 17879,
											"end": 17893,
											"name": "ISZERO"
										},
										{
											"begin": 17879,
											"end": 17893,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 17879,
											"end": 17893,
											"name": "JUMPI"
										},
										{
											"begin": 17879,
											"end": 17893,
											"name": "INVALID"
										},
										{
											"begin": 17879,
											"end": 17893,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 17879,
											"end": 17893,
											"name": "JUMPDEST"
										},
										{
											"begin": 17879,
											"end": 17893,
											"name": "MUL"
										},
										{
											"begin": 17879,
											"end": 17893,
											"name": "OR"
										},
										{
											"begin": 17879,
											"end": 17893,
											"name": "SWAP1"
										},
										{
											"begin": 17879,
											"end": 17893,
											"name": "SSTORE"
										},
										{
											"begin": 17879,
											"end": 17893,
											"name": "POP"
										},
										{
											"begin": 17965,
											"end": 17980,
											"name": "TIMESTAMP"
										},
										{
											"begin": 17958,
											"end": 17963,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 17958,
											"end": 17963,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 17958,
											"end": 17963,
											"name": "SWAP1"
										},
										{
											"begin": 17958,
											"end": 17963,
											"name": "SLOAD"
										},
										{
											"begin": 17958,
											"end": 17963,
											"name": "SWAP1"
										},
										{
											"begin": 17958,
											"end": 17963,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 17958,
											"end": 17963,
											"name": "EXP"
										},
										{
											"begin": 17958,
											"end": 17963,
											"name": "SWAP1"
										},
										{
											"begin": 17958,
											"end": 17963,
											"name": "DIV"
										},
										{
											"begin": 17958,
											"end": 17963,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 17958,
											"end": 17963,
											"name": "AND"
										},
										{
											"begin": 17936,
											"end": 17981,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 17936,
											"end": 17981,
											"name": "DUP2"
										},
										{
											"begin": 17936,
											"end": 17981,
											"name": "GT"
										},
										{
											"begin": 17936,
											"end": 17981,
											"name": "ISZERO"
										},
										{
											"begin": 17936,
											"end": 17981,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 17936,
											"end": 17981,
											"name": "JUMPI"
										},
										{
											"begin": 17936,
											"end": 17981,
											"name": "INVALID"
										},
										{
											"begin": 17936,
											"end": 17981,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 17936,
											"end": 17981,
											"name": "JUMPDEST"
										},
										{
											"begin": 17936,
											"end": 17981,
											"name": "PUSH",
											"value": "AAAE373901E745122C2E0925AD006227969C6CD190B7D5EA2FB7FDBD1D955B35"
										},
										{
											"begin": 17936,
											"end": 17981,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17936,
											"end": 17981,
											"name": "MLOAD"
										},
										{
											"begin": 17936,
											"end": 17981,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17936,
											"end": 17981,
											"name": "MLOAD"
										},
										{
											"begin": 17936,
											"end": 17981,
											"name": "DUP1"
										},
										{
											"begin": 17936,
											"end": 17981,
											"name": "SWAP2"
										},
										{
											"begin": 17936,
											"end": 17981,
											"name": "SUB"
										},
										{
											"begin": 17936,
											"end": 17981,
											"name": "SWAP1"
										},
										{
											"begin": 17936,
											"end": 17981,
											"name": "LOG3"
										},
										{
											"begin": 17799,
											"end": 17989,
											"name": "SWAP2"
										},
										{
											"begin": 17799,
											"end": 17989,
											"name": "SWAP1"
										},
										{
											"begin": 17799,
											"end": 17989,
											"name": "POP"
										},
										{
											"begin": 17799,
											"end": 17989,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "JUMPDEST"
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "MSTORE"
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "DUP1"
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "MSTORE"
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "KECCAK256"
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "SWAP2"
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "POP"
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "SLOAD"
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "SWAP1"
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "EXP"
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "SWAP1"
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "DIV"
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "AND"
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "DUP2"
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 18178,
											"end": 18400,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 18178,
											"end": 18400,
											"name": "JUMPDEST"
										},
										{
											"begin": 18230,
											"end": 18234,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "DUP1"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "SWAP1"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "SLOAD"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "SWAP1"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "EXP"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "SWAP1"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "DIV"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "AND"
										},
										{
											"begin": 218,
											"end": 237,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 218,
											"end": 237,
											"name": "AND"
										},
										{
											"begin": 218,
											"end": 228,
											"name": "CALLER"
										},
										{
											"begin": 218,
											"end": 237,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 218,
											"end": 237,
											"name": "AND"
										},
										{
											"begin": 218,
											"end": 237,
											"name": "EQ"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "ISZERO"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "ISZERO"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "JUMPI"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "DUP1"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "REVERT"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "JUMPDEST"
										},
										{
											"begin": 18257,
											"end": 18263,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 18257,
											"end": 18263,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18257,
											"end": 18263,
											"name": "SWAP1"
										},
										{
											"begin": 18257,
											"end": 18263,
											"name": "SLOAD"
										},
										{
											"begin": 18257,
											"end": 18263,
											"name": "SWAP1"
										},
										{
											"begin": 18257,
											"end": 18263,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 18257,
											"end": 18263,
											"name": "EXP"
										},
										{
											"begin": 18257,
											"end": 18263,
											"name": "SWAP1"
										},
										{
											"begin": 18257,
											"end": 18263,
											"name": "DIV"
										},
										{
											"begin": 18257,
											"end": 18263,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 18257,
											"end": 18263,
											"name": "AND"
										},
										{
											"begin": 18256,
											"end": 18263,
											"name": "ISZERO"
										},
										{
											"begin": 18247,
											"end": 18253,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 18247,
											"end": 18253,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18247,
											"end": 18263,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 18247,
											"end": 18263,
											"name": "EXP"
										},
										{
											"begin": 18247,
											"end": 18263,
											"name": "DUP2"
										},
										{
											"begin": 18247,
											"end": 18263,
											"name": "SLOAD"
										},
										{
											"begin": 18247,
											"end": 18263,
											"name": "DUP2"
										},
										{
											"begin": 18247,
											"end": 18263,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 18247,
											"end": 18263,
											"name": "MUL"
										},
										{
											"begin": 18247,
											"end": 18263,
											"name": "NOT"
										},
										{
											"begin": 18247,
											"end": 18263,
											"name": "AND"
										},
										{
											"begin": 18247,
											"end": 18263,
											"name": "SWAP1"
										},
										{
											"begin": 18247,
											"end": 18263,
											"name": "DUP4"
										},
										{
											"begin": 18247,
											"end": 18263,
											"name": "ISZERO"
										},
										{
											"begin": 18247,
											"end": 18263,
											"name": "ISZERO"
										},
										{
											"begin": 18247,
											"end": 18263,
											"name": "MUL"
										},
										{
											"begin": 18247,
											"end": 18263,
											"name": "OR"
										},
										{
											"begin": 18247,
											"end": 18263,
											"name": "SWAP1"
										},
										{
											"begin": 18247,
											"end": 18263,
											"name": "SSTORE"
										},
										{
											"begin": 18247,
											"end": 18263,
											"name": "POP"
										},
										{
											"begin": 18350,
											"end": 18365,
											"name": "TIMESTAMP"
										},
										{
											"begin": 18342,
											"end": 18348,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 18342,
											"end": 18348,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18342,
											"end": 18348,
											"name": "SWAP1"
										},
										{
											"begin": 18342,
											"end": 18348,
											"name": "SLOAD"
										},
										{
											"begin": 18342,
											"end": 18348,
											"name": "SWAP1"
										},
										{
											"begin": 18342,
											"end": 18348,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 18342,
											"end": 18348,
											"name": "EXP"
										},
										{
											"begin": 18342,
											"end": 18348,
											"name": "SWAP1"
										},
										{
											"begin": 18342,
											"end": 18348,
											"name": "DIV"
										},
										{
											"begin": 18342,
											"end": 18348,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 18342,
											"end": 18348,
											"name": "AND"
										},
										{
											"begin": 18314,
											"end": 18366,
											"name": "ISZERO"
										},
										{
											"begin": 18314,
											"end": 18366,
											"name": "ISZERO"
										},
										{
											"begin": 18314,
											"end": 18366,
											"name": "PUSH",
											"value": "160914EA27C60AA29A5F3A69D74E6069869DE36E38939DE1E0A66B921D8623D2"
										},
										{
											"begin": 18314,
											"end": 18366,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18314,
											"end": 18366,
											"name": "MLOAD"
										},
										{
											"begin": 18314,
											"end": 18366,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18314,
											"end": 18366,
											"name": "MLOAD"
										},
										{
											"begin": 18314,
											"end": 18366,
											"name": "DUP1"
										},
										{
											"begin": 18314,
											"end": 18366,
											"name": "SWAP2"
										},
										{
											"begin": 18314,
											"end": 18366,
											"name": "SUB"
										},
										{
											"begin": 18314,
											"end": 18366,
											"name": "SWAP1"
										},
										{
											"begin": 18314,
											"end": 18366,
											"name": "LOG3"
										},
										{
											"begin": 18386,
											"end": 18392,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 18386,
											"end": 18392,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18386,
											"end": 18392,
											"name": "SWAP1"
										},
										{
											"begin": 18386,
											"end": 18392,
											"name": "SLOAD"
										},
										{
											"begin": 18386,
											"end": 18392,
											"name": "SWAP1"
										},
										{
											"begin": 18386,
											"end": 18392,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 18386,
											"end": 18392,
											"name": "EXP"
										},
										{
											"begin": 18386,
											"end": 18392,
											"name": "SWAP1"
										},
										{
											"begin": 18386,
											"end": 18392,
											"name": "DIV"
										},
										{
											"begin": 18386,
											"end": 18392,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 18386,
											"end": 18392,
											"name": "AND"
										},
										{
											"begin": 18379,
											"end": 18392,
											"name": "SWAP1"
										},
										{
											"begin": 18379,
											"end": 18392,
											"name": "POP"
										},
										{
											"begin": 18178,
											"end": 18400,
											"name": "SWAP1"
										},
										{
											"begin": 18178,
											"end": 18400,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11651,
											"end": 12143,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 11651,
											"end": 12143,
											"name": "JUMPDEST"
										},
										{
											"begin": 3958,
											"end": 3962,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3948,
											"end": 3962,
											"name": "ISZERO"
										},
										{
											"begin": 3948,
											"end": 3962,
											"name": "ISZERO"
										},
										{
											"begin": 3948,
											"end": 3954,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 3948,
											"end": 3954,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3948,
											"end": 3954,
											"name": "SWAP1"
										},
										{
											"begin": 3948,
											"end": 3954,
											"name": "SLOAD"
										},
										{
											"begin": 3948,
											"end": 3954,
											"name": "SWAP1"
										},
										{
											"begin": 3948,
											"end": 3954,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3948,
											"end": 3954,
											"name": "EXP"
										},
										{
											"begin": 3948,
											"end": 3954,
											"name": "SWAP1"
										},
										{
											"begin": 3948,
											"end": 3954,
											"name": "DIV"
										},
										{
											"begin": 3948,
											"end": 3954,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3948,
											"end": 3954,
											"name": "AND"
										},
										{
											"begin": 3948,
											"end": 3962,
											"name": "ISZERO"
										},
										{
											"begin": 3948,
											"end": 3962,
											"name": "ISZERO"
										},
										{
											"begin": 3948,
											"end": 3962,
											"name": "EQ"
										},
										{
											"begin": 3940,
											"end": 3963,
											"name": "ISZERO"
										},
										{
											"begin": 3940,
											"end": 3963,
											"name": "ISZERO"
										},
										{
											"begin": 3940,
											"end": 3963,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 3940,
											"end": 3963,
											"name": "JUMPI"
										},
										{
											"begin": 3940,
											"end": 3963,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3940,
											"end": 3963,
											"name": "DUP1"
										},
										{
											"begin": 3940,
											"end": 3963,
											"name": "REVERT"
										},
										{
											"begin": 3940,
											"end": 3963,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 3940,
											"end": 3963,
											"name": "JUMPDEST"
										},
										{
											"begin": 4048,
											"end": 4056,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4048,
											"end": 4056,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4048,
											"end": 4056,
											"name": "SWAP1"
										},
										{
											"begin": 4048,
											"end": 4056,
											"name": "SLOAD"
										},
										{
											"begin": 4048,
											"end": 4056,
											"name": "SWAP1"
										},
										{
											"begin": 4048,
											"end": 4056,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4048,
											"end": 4056,
											"name": "EXP"
										},
										{
											"begin": 4048,
											"end": 4056,
											"name": "SWAP1"
										},
										{
											"begin": 4048,
											"end": 4056,
											"name": "DIV"
										},
										{
											"begin": 4048,
											"end": 4056,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4048,
											"end": 4056,
											"name": "AND"
										},
										{
											"begin": 4034,
											"end": 4056,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4034,
											"end": 4056,
											"name": "AND"
										},
										{
											"begin": 4034,
											"end": 4044,
											"name": "CALLER"
										},
										{
											"begin": 4034,
											"end": 4056,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4034,
											"end": 4056,
											"name": "AND"
										},
										{
											"begin": 4034,
											"end": 4056,
											"name": "EQ"
										},
										{
											"begin": 4026,
											"end": 4057,
											"name": "ISZERO"
										},
										{
											"begin": 4026,
											"end": 4057,
											"name": "ISZERO"
										},
										{
											"begin": 4026,
											"end": 4057,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 4026,
											"end": 4057,
											"name": "JUMPI"
										},
										{
											"begin": 4026,
											"end": 4057,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4026,
											"end": 4057,
											"name": "DUP1"
										},
										{
											"begin": 4026,
											"end": 4057,
											"name": "REVERT"
										},
										{
											"begin": 4026,
											"end": 4057,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 4026,
											"end": 4057,
											"name": "JUMPDEST"
										},
										{
											"begin": 4590,
											"end": 4605,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 4590,
											"end": 4605,
											"name": "SLOAD"
										},
										{
											"begin": 4574,
											"end": 4578,
											"name": "ADDRESS"
										},
										{
											"begin": 4574,
											"end": 4586,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4574,
											"end": 4586,
											"name": "AND"
										},
										{
											"begin": 4574,
											"end": 4586,
											"name": "BALANCE"
										},
										{
											"begin": 4574,
											"end": 4605,
											"name": "LT"
										},
										{
											"begin": 4574,
											"end": 4605,
											"name": "ISZERO"
										},
										{
											"begin": 4566,
											"end": 4606,
											"name": "ISZERO"
										},
										{
											"begin": 4566,
											"end": 4606,
											"name": "ISZERO"
										},
										{
											"begin": 4566,
											"end": 4606,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 4566,
											"end": 4606,
											"name": "JUMPI"
										},
										{
											"begin": 4566,
											"end": 4606,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4566,
											"end": 4606,
											"name": "DUP1"
										},
										{
											"begin": 4566,
											"end": 4606,
											"name": "REVERT"
										},
										{
											"begin": 4566,
											"end": 4606,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 4566,
											"end": 4606,
											"name": "JUMPDEST"
										},
										{
											"begin": 4684,
											"end": 4695,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 4675,
											"end": 4695,
											"name": "DUP1"
										},
										{
											"begin": 4675,
											"end": 4695,
											"name": "DUP2"
										},
										{
											"begin": 4675,
											"end": 4695,
											"name": "GT"
										},
										{
											"begin": 4675,
											"end": 4695,
											"name": "ISZERO"
										},
										{
											"begin": 4675,
											"end": 4695,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 4675,
											"end": 4695,
											"name": "JUMPI"
										},
										{
											"begin": 4675,
											"end": 4695,
											"name": "INVALID"
										},
										{
											"begin": 4675,
											"end": 4695,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 4675,
											"end": 4695,
											"name": "JUMPDEST"
										},
										{
											"begin": 4675,
											"end": 4680,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 4675,
											"end": 4680,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4675,
											"end": 4680,
											"name": "SWAP1"
										},
										{
											"begin": 4675,
											"end": 4680,
											"name": "SLOAD"
										},
										{
											"begin": 4675,
											"end": 4680,
											"name": "SWAP1"
										},
										{
											"begin": 4675,
											"end": 4680,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4675,
											"end": 4680,
											"name": "EXP"
										},
										{
											"begin": 4675,
											"end": 4680,
											"name": "SWAP1"
										},
										{
											"begin": 4675,
											"end": 4680,
											"name": "DIV"
										},
										{
											"begin": 4675,
											"end": 4680,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 4675,
											"end": 4680,
											"name": "AND"
										},
										{
											"begin": 4675,
											"end": 4695,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 4675,
											"end": 4695,
											"name": "DUP2"
										},
										{
											"begin": 4675,
											"end": 4695,
											"name": "GT"
										},
										{
											"begin": 4675,
											"end": 4695,
											"name": "ISZERO"
										},
										{
											"begin": 4675,
											"end": 4695,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 4675,
											"end": 4695,
											"name": "JUMPI"
										},
										{
											"begin": 4675,
											"end": 4695,
											"name": "INVALID"
										},
										{
											"begin": 4675,
											"end": 4695,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 4675,
											"end": 4695,
											"name": "JUMPDEST"
										},
										{
											"begin": 4675,
											"end": 4695,
											"name": "EQ"
										},
										{
											"begin": 4675,
											"end": 4695,
											"name": "ISZERO"
										},
										{
											"begin": 4667,
											"end": 4696,
											"name": "ISZERO"
										},
										{
											"begin": 4667,
											"end": 4696,
											"name": "ISZERO"
										},
										{
											"begin": 4667,
											"end": 4696,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 4667,
											"end": 4696,
											"name": "JUMPI"
										},
										{
											"begin": 4667,
											"end": 4696,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4667,
											"end": 4696,
											"name": "DUP1"
										},
										{
											"begin": 4667,
											"end": 4696,
											"name": "REVERT"
										},
										{
											"begin": 4667,
											"end": 4696,
											"name": "tag",
											"value": "79"
										},
										{
											"begin": 4667,
											"end": 4696,
											"name": "JUMPDEST"
										},
										{
											"begin": 11809,
											"end": 11824,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11801,
											"end": 11806,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 11801,
											"end": 11806,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11801,
											"end": 11824,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11801,
											"end": 11824,
											"name": "EXP"
										},
										{
											"begin": 11801,
											"end": 11824,
											"name": "DUP2"
										},
										{
											"begin": 11801,
											"end": 11824,
											"name": "SLOAD"
										},
										{
											"begin": 11801,
											"end": 11824,
											"name": "DUP2"
										},
										{
											"begin": 11801,
											"end": 11824,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 11801,
											"end": 11824,
											"name": "MUL"
										},
										{
											"begin": 11801,
											"end": 11824,
											"name": "NOT"
										},
										{
											"begin": 11801,
											"end": 11824,
											"name": "AND"
										},
										{
											"begin": 11801,
											"end": 11824,
											"name": "SWAP1"
										},
										{
											"begin": 11801,
											"end": 11824,
											"name": "DUP4"
										},
										{
											"begin": 11801,
											"end": 11824,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 11801,
											"end": 11824,
											"name": "DUP2"
										},
										{
											"begin": 11801,
											"end": 11824,
											"name": "GT"
										},
										{
											"begin": 11801,
											"end": 11824,
											"name": "ISZERO"
										},
										{
											"begin": 11801,
											"end": 11824,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 11801,
											"end": 11824,
											"name": "JUMPI"
										},
										{
											"begin": 11801,
											"end": 11824,
											"name": "INVALID"
										},
										{
											"begin": 11801,
											"end": 11824,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 11801,
											"end": 11824,
											"name": "JUMPDEST"
										},
										{
											"begin": 11801,
											"end": 11824,
											"name": "MUL"
										},
										{
											"begin": 11801,
											"end": 11824,
											"name": "OR"
										},
										{
											"begin": 11801,
											"end": 11824,
											"name": "SWAP1"
										},
										{
											"begin": 11801,
											"end": 11824,
											"name": "SSTORE"
										},
										{
											"begin": 11801,
											"end": 11824,
											"name": "POP"
										},
										{
											"begin": 11896,
											"end": 11911,
											"name": "TIMESTAMP"
										},
										{
											"begin": 11889,
											"end": 11894,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 11889,
											"end": 11894,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11889,
											"end": 11894,
											"name": "SWAP1"
										},
										{
											"begin": 11889,
											"end": 11894,
											"name": "SLOAD"
										},
										{
											"begin": 11889,
											"end": 11894,
											"name": "SWAP1"
										},
										{
											"begin": 11889,
											"end": 11894,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11889,
											"end": 11894,
											"name": "EXP"
										},
										{
											"begin": 11889,
											"end": 11894,
											"name": "SWAP1"
										},
										{
											"begin": 11889,
											"end": 11894,
											"name": "DIV"
										},
										{
											"begin": 11889,
											"end": 11894,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 11889,
											"end": 11894,
											"name": "AND"
										},
										{
											"begin": 11867,
											"end": 11912,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 11867,
											"end": 11912,
											"name": "DUP2"
										},
										{
											"begin": 11867,
											"end": 11912,
											"name": "GT"
										},
										{
											"begin": 11867,
											"end": 11912,
											"name": "ISZERO"
										},
										{
											"begin": 11867,
											"end": 11912,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 11867,
											"end": 11912,
											"name": "JUMPI"
										},
										{
											"begin": 11867,
											"end": 11912,
											"name": "INVALID"
										},
										{
											"begin": 11867,
											"end": 11912,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 11867,
											"end": 11912,
											"name": "JUMPDEST"
										},
										{
											"begin": 11867,
											"end": 11912,
											"name": "PUSH",
											"value": "AAAE373901E745122C2E0925AD006227969C6CD190B7D5EA2FB7FDBD1D955B35"
										},
										{
											"begin": 11867,
											"end": 11912,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11867,
											"end": 11912,
											"name": "MLOAD"
										},
										{
											"begin": 11867,
											"end": 11912,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11867,
											"end": 11912,
											"name": "MLOAD"
										},
										{
											"begin": 11867,
											"end": 11912,
											"name": "DUP1"
										},
										{
											"begin": 11867,
											"end": 11912,
											"name": "SWAP2"
										},
										{
											"begin": 11867,
											"end": 11912,
											"name": "SUB"
										},
										{
											"begin": 11867,
											"end": 11912,
											"name": "SWAP1"
										},
										{
											"begin": 11867,
											"end": 11912,
											"name": "LOG3"
										},
										{
											"begin": 12010,
											"end": 12025,
											"name": "TIMESTAMP"
										},
										{
											"begin": 11996,
											"end": 12000,
											"name": "ADDRESS"
										},
										{
											"begin": 11996,
											"end": 12008,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11996,
											"end": 12008,
											"name": "AND"
										},
										{
											"begin": 11996,
											"end": 12008,
											"name": "BALANCE"
										},
										{
											"begin": 11984,
											"end": 11994,
											"name": "CALLER"
										},
										{
											"begin": 11962,
											"end": 12026,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11962,
											"end": 12026,
											"name": "AND"
										},
										{
											"begin": 11962,
											"end": 12026,
											"name": "PUSH",
											"value": "20734F14D107B526674905E470E35D0A474F9FB996A7BDB034C839C8894524E6"
										},
										{
											"begin": 11962,
											"end": 12026,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11962,
											"end": 12026,
											"name": "MLOAD"
										},
										{
											"begin": 11962,
											"end": 12026,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11962,
											"end": 12026,
											"name": "MLOAD"
										},
										{
											"begin": 11962,
											"end": 12026,
											"name": "DUP1"
										},
										{
											"begin": 11962,
											"end": 12026,
											"name": "SWAP2"
										},
										{
											"begin": 11962,
											"end": 12026,
											"name": "SUB"
										},
										{
											"begin": 11962,
											"end": 12026,
											"name": "SWAP1"
										},
										{
											"begin": 11962,
											"end": 12026,
											"name": "LOG4"
										},
										{
											"begin": 12104,
											"end": 12112,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12104,
											"end": 12112,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12104,
											"end": 12112,
											"name": "SWAP1"
										},
										{
											"begin": 12104,
											"end": 12112,
											"name": "SLOAD"
										},
										{
											"begin": 12104,
											"end": 12112,
											"name": "SWAP1"
										},
										{
											"begin": 12104,
											"end": 12112,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12104,
											"end": 12112,
											"name": "EXP"
										},
										{
											"begin": 12104,
											"end": 12112,
											"name": "SWAP1"
										},
										{
											"begin": 12104,
											"end": 12112,
											"name": "DIV"
										},
										{
											"begin": 12104,
											"end": 12112,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12104,
											"end": 12112,
											"name": "AND"
										},
										{
											"begin": 12104,
											"end": 12121,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12104,
											"end": 12121,
											"name": "AND"
										},
										{
											"begin": 12104,
											"end": 12135,
											"name": "PUSH",
											"value": "8FC"
										},
										{
											"begin": 12122,
											"end": 12126,
											"name": "ADDRESS"
										},
										{
											"begin": 12122,
											"end": 12134,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12122,
											"end": 12134,
											"name": "AND"
										},
										{
											"begin": 12122,
											"end": 12134,
											"name": "BALANCE"
										},
										{
											"begin": 12104,
											"end": 12135,
											"name": "SWAP1"
										},
										{
											"begin": 12104,
											"end": 12135,
											"name": "DUP2"
										},
										{
											"begin": 12104,
											"end": 12135,
											"name": "ISZERO"
										},
										{
											"begin": 12104,
											"end": 12135,
											"name": "MUL"
										},
										{
											"begin": 12104,
											"end": 12135,
											"name": "SWAP1"
										},
										{
											"begin": 12104,
											"end": 12135,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12104,
											"end": 12135,
											"name": "MLOAD"
										},
										{
											"begin": 12104,
											"end": 12135,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12104,
											"end": 12135,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12104,
											"end": 12135,
											"name": "MLOAD"
										},
										{
											"begin": 12104,
											"end": 12135,
											"name": "DUP1"
										},
										{
											"begin": 12104,
											"end": 12135,
											"name": "DUP4"
										},
										{
											"begin": 12104,
											"end": 12135,
											"name": "SUB"
										},
										{
											"begin": 12104,
											"end": 12135,
											"name": "DUP2"
										},
										{
											"begin": 12104,
											"end": 12135,
											"name": "DUP6"
										},
										{
											"begin": 12104,
											"end": 12135,
											"name": "DUP9"
										},
										{
											"begin": 12104,
											"end": 12135,
											"name": "DUP9"
										},
										{
											"begin": 12104,
											"end": 12135,
											"name": "CALL"
										},
										{
											"begin": 12104,
											"end": 12135,
											"name": "SWAP4"
										},
										{
											"begin": 12104,
											"end": 12135,
											"name": "POP"
										},
										{
											"begin": 12104,
											"end": 12135,
											"name": "POP"
										},
										{
											"begin": 12104,
											"end": 12135,
											"name": "POP"
										},
										{
											"begin": 12104,
											"end": 12135,
											"name": "POP"
										},
										{
											"begin": 12104,
											"end": 12135,
											"name": "ISZERO"
										},
										{
											"begin": 12104,
											"end": 12135,
											"name": "ISZERO"
										},
										{
											"begin": 12104,
											"end": 12135,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 12104,
											"end": 12135,
											"name": "JUMPI"
										},
										{
											"begin": 12104,
											"end": 12135,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12104,
											"end": 12135,
											"name": "DUP1"
										},
										{
											"begin": 12104,
											"end": 12135,
											"name": "REVERT"
										},
										{
											"begin": 12104,
											"end": 12135,
											"name": "tag",
											"value": "83"
										},
										{
											"begin": 12104,
											"end": 12135,
											"name": "JUMPDEST"
										},
										{
											"begin": 11651,
											"end": 12143,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 8897,
											"end": 11308,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 8897,
											"end": 11308,
											"name": "JUMPDEST"
										},
										{
											"begin": 9704,
											"end": 9719,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4048,
											"end": 4056,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4048,
											"end": 4056,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4048,
											"end": 4056,
											"name": "SWAP1"
										},
										{
											"begin": 4048,
											"end": 4056,
											"name": "SLOAD"
										},
										{
											"begin": 4048,
											"end": 4056,
											"name": "SWAP1"
										},
										{
											"begin": 4048,
											"end": 4056,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4048,
											"end": 4056,
											"name": "EXP"
										},
										{
											"begin": 4048,
											"end": 4056,
											"name": "SWAP1"
										},
										{
											"begin": 4048,
											"end": 4056,
											"name": "DIV"
										},
										{
											"begin": 4048,
											"end": 4056,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4048,
											"end": 4056,
											"name": "AND"
										},
										{
											"begin": 4034,
											"end": 4056,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4034,
											"end": 4056,
											"name": "AND"
										},
										{
											"begin": 4034,
											"end": 4044,
											"name": "CALLER"
										},
										{
											"begin": 4034,
											"end": 4056,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4034,
											"end": 4056,
											"name": "AND"
										},
										{
											"begin": 4034,
											"end": 4056,
											"name": "EQ"
										},
										{
											"begin": 4026,
											"end": 4057,
											"name": "ISZERO"
										},
										{
											"begin": 4026,
											"end": 4057,
											"name": "ISZERO"
										},
										{
											"begin": 4026,
											"end": 4057,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 4026,
											"end": 4057,
											"name": "JUMPI"
										},
										{
											"begin": 4026,
											"end": 4057,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4026,
											"end": 4057,
											"name": "DUP1"
										},
										{
											"begin": 4026,
											"end": 4057,
											"name": "REVERT"
										},
										{
											"begin": 4026,
											"end": 4057,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 4026,
											"end": 4057,
											"name": "JUMPDEST"
										},
										{
											"begin": 4488,
											"end": 4503,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4479,
											"end": 4503,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 4479,
											"end": 4503,
											"name": "DUP2"
										},
										{
											"begin": 4479,
											"end": 4503,
											"name": "GT"
										},
										{
											"begin": 4479,
											"end": 4503,
											"name": "ISZERO"
										},
										{
											"begin": 4479,
											"end": 4503,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 4479,
											"end": 4503,
											"name": "JUMPI"
										},
										{
											"begin": 4479,
											"end": 4503,
											"name": "INVALID"
										},
										{
											"begin": 4479,
											"end": 4503,
											"name": "tag",
											"value": "87"
										},
										{
											"begin": 4479,
											"end": 4503,
											"name": "JUMPDEST"
										},
										{
											"begin": 4479,
											"end": 4484,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 4479,
											"end": 4484,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4479,
											"end": 4484,
											"name": "SWAP1"
										},
										{
											"begin": 4479,
											"end": 4484,
											"name": "SLOAD"
										},
										{
											"begin": 4479,
											"end": 4484,
											"name": "SWAP1"
										},
										{
											"begin": 4479,
											"end": 4484,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4479,
											"end": 4484,
											"name": "EXP"
										},
										{
											"begin": 4479,
											"end": 4484,
											"name": "SWAP1"
										},
										{
											"begin": 4479,
											"end": 4484,
											"name": "DIV"
										},
										{
											"begin": 4479,
											"end": 4484,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 4479,
											"end": 4484,
											"name": "AND"
										},
										{
											"begin": 4479,
											"end": 4503,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 4479,
											"end": 4503,
											"name": "DUP2"
										},
										{
											"begin": 4479,
											"end": 4503,
											"name": "GT"
										},
										{
											"begin": 4479,
											"end": 4503,
											"name": "ISZERO"
										},
										{
											"begin": 4479,
											"end": 4503,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 4479,
											"end": 4503,
											"name": "JUMPI"
										},
										{
											"begin": 4479,
											"end": 4503,
											"name": "INVALID"
										},
										{
											"begin": 4479,
											"end": 4503,
											"name": "tag",
											"value": "88"
										},
										{
											"begin": 4479,
											"end": 4503,
											"name": "JUMPDEST"
										},
										{
											"begin": 4479,
											"end": 4503,
											"name": "EQ"
										},
										{
											"begin": 4471,
											"end": 4504,
											"name": "ISZERO"
										},
										{
											"begin": 4471,
											"end": 4504,
											"name": "ISZERO"
										},
										{
											"begin": 4471,
											"end": 4504,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 4471,
											"end": 4504,
											"name": "JUMPI"
										},
										{
											"begin": 4471,
											"end": 4504,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4471,
											"end": 4504,
											"name": "DUP1"
										},
										{
											"begin": 4471,
											"end": 4504,
											"name": "REVERT"
										},
										{
											"begin": 4471,
											"end": 4504,
											"name": "tag",
											"value": "89"
										},
										{
											"begin": 4471,
											"end": 4504,
											"name": "JUMPDEST"
										},
										{
											"begin": 9067,
											"end": 9068,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9045,
											"end": 9064,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 9045,
											"end": 9064,
											"name": "SLOAD"
										},
										{
											"begin": 9045,
											"end": 9068,
											"name": "GT"
										},
										{
											"begin": 9037,
											"end": 9069,
											"name": "ISZERO"
										},
										{
											"begin": 9037,
											"end": 9069,
											"name": "ISZERO"
										},
										{
											"begin": 9037,
											"end": 9069,
											"name": "PUSH [tag]",
											"value": "91"
										},
										{
											"begin": 9037,
											"end": 9069,
											"name": "JUMPI"
										},
										{
											"begin": 9037,
											"end": 9069,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9037,
											"end": 9069,
											"name": "DUP1"
										},
										{
											"begin": 9037,
											"end": 9069,
											"name": "REVERT"
										},
										{
											"begin": 9037,
											"end": 9069,
											"name": "tag",
											"value": "91"
										},
										{
											"begin": 9037,
											"end": 9069,
											"name": "JUMPDEST"
										},
										{
											"begin": 9180,
											"end": 9200,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 9180,
											"end": 9200,
											"name": "SLOAD"
										},
										{
											"begin": 9167,
											"end": 9176,
											"name": "CALLVALUE"
										},
										{
											"begin": 9167,
											"end": 9200,
											"name": "LT"
										},
										{
											"begin": 9167,
											"end": 9200,
											"name": "ISZERO"
										},
										{
											"begin": 9159,
											"end": 9201,
											"name": "ISZERO"
										},
										{
											"begin": 9159,
											"end": 9201,
											"name": "ISZERO"
										},
										{
											"begin": 9159,
											"end": 9201,
											"name": "PUSH [tag]",
											"value": "92"
										},
										{
											"begin": 9159,
											"end": 9201,
											"name": "JUMPI"
										},
										{
											"begin": 9159,
											"end": 9201,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9159,
											"end": 9201,
											"name": "DUP1"
										},
										{
											"begin": 9159,
											"end": 9201,
											"name": "REVERT"
										},
										{
											"begin": 9159,
											"end": 9201,
											"name": "tag",
											"value": "92"
										},
										{
											"begin": 9159,
											"end": 9201,
											"name": "JUMPDEST"
										},
										{
											"begin": 9421,
											"end": 9433,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 9421,
											"end": 9433,
											"name": "SLOAD"
										},
										{
											"begin": 9406,
											"end": 9418,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9406,
											"end": 9418,
											"name": "SLOAD"
										},
										{
											"begin": 9406,
											"end": 9433,
											"name": "LT"
										},
										{
											"begin": 9399,
											"end": 9434,
											"name": "ISZERO"
										},
										{
											"begin": 9399,
											"end": 9434,
											"name": "ISZERO"
										},
										{
											"begin": 9399,
											"end": 9434,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 9399,
											"end": 9434,
											"name": "JUMPI"
										},
										{
											"begin": 9399,
											"end": 9434,
											"name": "INVALID"
										},
										{
											"begin": 9399,
											"end": 9434,
											"name": "tag",
											"value": "93"
										},
										{
											"begin": 9399,
											"end": 9434,
											"name": "JUMPDEST"
										},
										{
											"begin": 9495,
											"end": 9514,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 9495,
											"end": 9514,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9495,
											"end": 9516,
											"name": "DUP2"
										},
										{
											"begin": 9495,
											"end": 9516,
											"name": "SLOAD"
										},
										{
											"begin": 9495,
											"end": 9516,
											"name": "DUP1"
										},
										{
											"begin": 9495,
											"end": 9516,
											"name": "SWAP3"
										},
										{
											"begin": 9495,
											"end": 9516,
											"name": "SWAP2"
										},
										{
											"begin": 9495,
											"end": 9516,
											"name": "SWAP1"
										},
										{
											"begin": 9495,
											"end": 9516,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 9495,
											"end": 9516,
											"name": "SWAP1"
										},
										{
											"begin": 9495,
											"end": 9516,
											"name": "SUB"
										},
										{
											"begin": 9495,
											"end": 9516,
											"name": "SWAP2"
										},
										{
											"begin": 9495,
											"end": 9516,
											"name": "SWAP1"
										},
										{
											"begin": 9495,
											"end": 9516,
											"name": "POP"
										},
										{
											"begin": 9495,
											"end": 9516,
											"name": "SSTORE"
										},
										{
											"begin": 9495,
											"end": 9516,
											"name": "POP"
										},
										{
											"begin": 9589,
											"end": 9604,
											"name": "TIMESTAMP"
										},
										{
											"begin": 9569,
											"end": 9586,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 9569,
											"end": 9604,
											"name": "DUP2"
										},
										{
											"begin": 9569,
											"end": 9604,
											"name": "SWAP1"
										},
										{
											"begin": 9569,
											"end": 9604,
											"name": "SSTORE"
										},
										{
											"begin": 9569,
											"end": 9604,
											"name": "POP"
										},
										{
											"begin": 9722,
											"end": 9723,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9704,
											"end": 9723,
											"name": "SWAP1"
										},
										{
											"begin": 9704,
											"end": 9723,
											"name": "POP"
										},
										{
											"begin": 9943,
											"end": 9963,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 9943,
											"end": 9963,
											"name": "SLOAD"
										},
										{
											"begin": 9931,
											"end": 9940,
											"name": "CALLVALUE"
										},
										{
											"begin": 9931,
											"end": 9963,
											"name": "GT"
										},
										{
											"begin": 9927,
											"end": 10563,
											"name": "ISZERO"
										},
										{
											"begin": 9927,
											"end": 10563,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 9927,
											"end": 10563,
											"name": "JUMPI"
										},
										{
											"begin": 10068,
											"end": 10103,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 10082,
											"end": 10102,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 10082,
											"end": 10102,
											"name": "SLOAD"
										},
										{
											"begin": 10068,
											"end": 10077,
											"name": "CALLVALUE"
										},
										{
											"begin": 10068,
											"end": 10081,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 10068,
											"end": 10081,
											"name": "SWAP1"
										},
										{
											"begin": 10068,
											"end": 10103,
											"name": "SWAP2"
										},
										{
											"begin": 10068,
											"end": 10103,
											"name": "SWAP1"
										},
										{
											"begin": 10068,
											"end": 10103,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 10068,
											"end": 10103,
											"name": "AND"
										},
										{
											"begin": 10068,
											"end": 10103,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10068,
											"end": 10103,
											"name": "tag",
											"value": "95"
										},
										{
											"begin": 10068,
											"end": 10103,
											"name": "JUMPDEST"
										},
										{
											"begin": 10055,
											"end": 10103,
											"name": "SWAP1"
										},
										{
											"begin": 10055,
											"end": 10103,
											"name": "POP"
										},
										{
											"begin": 10192,
											"end": 10217,
											"name": "PUSH [tag]",
											"value": "97"
										},
										{
											"begin": 10206,
											"end": 10216,
											"name": "DUP2"
										},
										{
											"begin": 10192,
											"end": 10201,
											"name": "CALLVALUE"
										},
										{
											"begin": 10192,
											"end": 10205,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 10192,
											"end": 10205,
											"name": "SWAP1"
										},
										{
											"begin": 10192,
											"end": 10217,
											"name": "SWAP2"
										},
										{
											"begin": 10192,
											"end": 10217,
											"name": "SWAP1"
										},
										{
											"begin": 10192,
											"end": 10217,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 10192,
											"end": 10217,
											"name": "AND"
										},
										{
											"begin": 10192,
											"end": 10217,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10192,
											"end": 10217,
											"name": "tag",
											"value": "97"
										},
										{
											"begin": 10192,
											"end": 10217,
											"name": "JUMPDEST"
										},
										{
											"begin": 10168,
											"end": 10188,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 10168,
											"end": 10188,
											"name": "SLOAD"
										},
										{
											"begin": 10168,
											"end": 10217,
											"name": "EQ"
										},
										{
											"begin": 10161,
											"end": 10218,
											"name": "ISZERO"
										},
										{
											"begin": 10161,
											"end": 10218,
											"name": "ISZERO"
										},
										{
											"begin": 10161,
											"end": 10218,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 10161,
											"end": 10218,
											"name": "JUMPI"
										},
										{
											"begin": 10161,
											"end": 10218,
											"name": "INVALID"
										},
										{
											"begin": 10161,
											"end": 10218,
											"name": "tag",
											"value": "98"
										},
										{
											"begin": 10161,
											"end": 10218,
											"name": "JUMPDEST"
										},
										{
											"begin": 10294,
											"end": 10303,
											"name": "CALLVALUE"
										},
										{
											"begin": 10280,
											"end": 10290,
											"name": "DUP2"
										},
										{
											"begin": 10280,
											"end": 10303,
											"name": "GT"
										},
										{
											"begin": 10280,
											"end": 10303,
											"name": "ISZERO"
										},
										{
											"begin": 10273,
											"end": 10304,
											"name": "ISZERO"
										},
										{
											"begin": 10273,
											"end": 10304,
											"name": "ISZERO"
										},
										{
											"begin": 10273,
											"end": 10304,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 10273,
											"end": 10304,
											"name": "JUMPI"
										},
										{
											"begin": 10273,
											"end": 10304,
											"name": "INVALID"
										},
										{
											"begin": 10273,
											"end": 10304,
											"name": "tag",
											"value": "99"
										},
										{
											"begin": 10273,
											"end": 10304,
											"name": "JUMPDEST"
										},
										{
											"begin": 10386,
											"end": 10396,
											"name": "CALLER"
										},
										{
											"begin": 10386,
											"end": 10405,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10386,
											"end": 10405,
											"name": "AND"
										},
										{
											"begin": 10386,
											"end": 10417,
											"name": "PUSH",
											"value": "8FC"
										},
										{
											"begin": 10406,
											"end": 10416,
											"name": "DUP3"
										},
										{
											"begin": 10386,
											"end": 10417,
											"name": "SWAP1"
										},
										{
											"begin": 10386,
											"end": 10417,
											"name": "DUP2"
										},
										{
											"begin": 10386,
											"end": 10417,
											"name": "ISZERO"
										},
										{
											"begin": 10386,
											"end": 10417,
											"name": "MUL"
										},
										{
											"begin": 10386,
											"end": 10417,
											"name": "SWAP1"
										},
										{
											"begin": 10386,
											"end": 10417,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10386,
											"end": 10417,
											"name": "MLOAD"
										},
										{
											"begin": 10386,
											"end": 10417,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10386,
											"end": 10417,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10386,
											"end": 10417,
											"name": "MLOAD"
										},
										{
											"begin": 10386,
											"end": 10417,
											"name": "DUP1"
										},
										{
											"begin": 10386,
											"end": 10417,
											"name": "DUP4"
										},
										{
											"begin": 10386,
											"end": 10417,
											"name": "SUB"
										},
										{
											"begin": 10386,
											"end": 10417,
											"name": "DUP2"
										},
										{
											"begin": 10386,
											"end": 10417,
											"name": "DUP6"
										},
										{
											"begin": 10386,
											"end": 10417,
											"name": "DUP9"
										},
										{
											"begin": 10386,
											"end": 10417,
											"name": "DUP9"
										},
										{
											"begin": 10386,
											"end": 10417,
											"name": "CALL"
										},
										{
											"begin": 10386,
											"end": 10417,
											"name": "SWAP4"
										},
										{
											"begin": 10386,
											"end": 10417,
											"name": "POP"
										},
										{
											"begin": 10386,
											"end": 10417,
											"name": "POP"
										},
										{
											"begin": 10386,
											"end": 10417,
											"name": "POP"
										},
										{
											"begin": 10386,
											"end": 10417,
											"name": "POP"
										},
										{
											"begin": 10386,
											"end": 10417,
											"name": "ISZERO"
										},
										{
											"begin": 10386,
											"end": 10417,
											"name": "ISZERO"
										},
										{
											"begin": 10386,
											"end": 10417,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 10386,
											"end": 10417,
											"name": "JUMPI"
										},
										{
											"begin": 10386,
											"end": 10417,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10386,
											"end": 10417,
											"name": "DUP1"
										},
										{
											"begin": 10386,
											"end": 10417,
											"name": "REVERT"
										},
										{
											"begin": 10386,
											"end": 10417,
											"name": "tag",
											"value": "100"
										},
										{
											"begin": 10386,
											"end": 10417,
											"name": "JUMPDEST"
										},
										{
											"begin": 10535,
											"end": 10550,
											"name": "TIMESTAMP"
										},
										{
											"begin": 10523,
											"end": 10533,
											"name": "DUP2"
										},
										{
											"begin": 10511,
											"end": 10521,
											"name": "CALLER"
										},
										{
											"begin": 10485,
											"end": 10551,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10485,
											"end": 10551,
											"name": "AND"
										},
										{
											"begin": 10485,
											"end": 10551,
											"name": "PUSH",
											"value": "5C9874487A2258C6BD6DC39A2CFCF7EA944B50B79D9A7152668779687B2EBD8D"
										},
										{
											"begin": 10485,
											"end": 10551,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10485,
											"end": 10551,
											"name": "MLOAD"
										},
										{
											"begin": 10485,
											"end": 10551,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10485,
											"end": 10551,
											"name": "MLOAD"
										},
										{
											"begin": 10485,
											"end": 10551,
											"name": "DUP1"
										},
										{
											"begin": 10485,
											"end": 10551,
											"name": "SWAP2"
										},
										{
											"begin": 10485,
											"end": 10551,
											"name": "SUB"
										},
										{
											"begin": 10485,
											"end": 10551,
											"name": "SWAP1"
										},
										{
											"begin": 10485,
											"end": 10551,
											"name": "LOG4"
										},
										{
											"begin": 9927,
											"end": 10563,
											"name": "tag",
											"value": "94"
										},
										{
											"begin": 9927,
											"end": 10563,
											"name": "JUMPDEST"
										},
										{
											"begin": 10693,
											"end": 10708,
											"name": "TIMESTAMP"
										},
										{
											"begin": 10666,
											"end": 10691,
											"name": "PUSH [tag]",
											"value": "101"
										},
										{
											"begin": 10680,
											"end": 10690,
											"name": "DUP3"
										},
										{
											"begin": 10666,
											"end": 10675,
											"name": "CALLVALUE"
										},
										{
											"begin": 10666,
											"end": 10679,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 10666,
											"end": 10679,
											"name": "SWAP1"
										},
										{
											"begin": 10666,
											"end": 10691,
											"name": "SWAP2"
										},
										{
											"begin": 10666,
											"end": 10691,
											"name": "SWAP1"
										},
										{
											"begin": 10666,
											"end": 10691,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 10666,
											"end": 10691,
											"name": "AND"
										},
										{
											"begin": 10666,
											"end": 10691,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10666,
											"end": 10691,
											"name": "tag",
											"value": "101"
										},
										{
											"begin": 10666,
											"end": 10691,
											"name": "JUMPDEST"
										},
										{
											"begin": 10654,
											"end": 10664,
											"name": "CALLER"
										},
										{
											"begin": 10622,
											"end": 10709,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10622,
											"end": 10709,
											"name": "AND"
										},
										{
											"begin": 10622,
											"end": 10709,
											"name": "PUSH",
											"value": "350A09487D622378C6EFBDA255F996387696319F803A2E53EEE64F7AA70BE85A"
										},
										{
											"begin": 10622,
											"end": 10709,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10622,
											"end": 10709,
											"name": "MLOAD"
										},
										{
											"begin": 10622,
											"end": 10709,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10622,
											"end": 10709,
											"name": "MLOAD"
										},
										{
											"begin": 10622,
											"end": 10709,
											"name": "DUP1"
										},
										{
											"begin": 10622,
											"end": 10709,
											"name": "SWAP2"
										},
										{
											"begin": 10622,
											"end": 10709,
											"name": "SUB"
										},
										{
											"begin": 10622,
											"end": 10709,
											"name": "SWAP1"
										},
										{
											"begin": 10622,
											"end": 10709,
											"name": "LOG4"
										},
										{
											"begin": 10814,
											"end": 10857,
											"name": "PUSH [tag]",
											"value": "102"
										},
										{
											"begin": 10831,
											"end": 10856,
											"name": "PUSH [tag]",
											"value": "103"
										},
										{
											"begin": 10845,
											"end": 10855,
											"name": "DUP3"
										},
										{
											"begin": 10831,
											"end": 10840,
											"name": "CALLVALUE"
										},
										{
											"begin": 10831,
											"end": 10844,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 10831,
											"end": 10844,
											"name": "SWAP1"
										},
										{
											"begin": 10831,
											"end": 10856,
											"name": "SWAP2"
										},
										{
											"begin": 10831,
											"end": 10856,
											"name": "SWAP1"
										},
										{
											"begin": 10831,
											"end": 10856,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 10831,
											"end": 10856,
											"name": "AND"
										},
										{
											"begin": 10831,
											"end": 10856,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10831,
											"end": 10856,
											"name": "tag",
											"value": "103"
										},
										{
											"begin": 10831,
											"end": 10856,
											"name": "JUMPDEST"
										},
										{
											"begin": 10814,
											"end": 10826,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10814,
											"end": 10826,
											"name": "SLOAD"
										},
										{
											"begin": 10814,
											"end": 10830,
											"name": "PUSH [tag]",
											"value": "104"
										},
										{
											"begin": 10814,
											"end": 10830,
											"name": "SWAP1"
										},
										{
											"begin": 10814,
											"end": 10857,
											"name": "SWAP2"
										},
										{
											"begin": 10814,
											"end": 10857,
											"name": "SWAP1"
										},
										{
											"begin": 10814,
											"end": 10857,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 10814,
											"end": 10857,
											"name": "AND"
										},
										{
											"begin": 10814,
											"end": 10857,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10814,
											"end": 10857,
											"name": "tag",
											"value": "102"
										},
										{
											"begin": 10814,
											"end": 10857,
											"name": "JUMPDEST"
										},
										{
											"begin": 10799,
											"end": 10811,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10799,
											"end": 10857,
											"name": "DUP2"
										},
										{
											"begin": 10799,
											"end": 10857,
											"name": "SWAP1"
										},
										{
											"begin": 10799,
											"end": 10857,
											"name": "SSTORE"
										},
										{
											"begin": 10799,
											"end": 10857,
											"name": "POP"
										},
										{
											"begin": 10961,
											"end": 10973,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 10961,
											"end": 10973,
											"name": "SLOAD"
										},
										{
											"begin": 10945,
											"end": 10957,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10945,
											"end": 10957,
											"name": "SLOAD"
										},
										{
											"begin": 10945,
											"end": 10973,
											"name": "EQ"
										},
										{
											"begin": 10941,
											"end": 11301,
											"name": "ISZERO"
										},
										{
											"begin": 10941,
											"end": 11301,
											"name": "PUSH [tag]",
											"value": "105"
										},
										{
											"begin": 10941,
											"end": 11301,
											"name": "JUMPI"
										},
										{
											"begin": 11068,
											"end": 11083,
											"name": "TIMESTAMP"
										},
										{
											"begin": 11056,
											"end": 11066,
											"name": "CALLER"
										},
										{
											"begin": 11027,
											"end": 11084,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11027,
											"end": 11084,
											"name": "AND"
										},
										{
											"begin": 11027,
											"end": 11084,
											"name": "PUSH",
											"value": "25630DE45A38A90CBCA3A2EB35A8197E51B56D6D912581711E5E3773FE77CABC"
										},
										{
											"begin": 11027,
											"end": 11084,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11027,
											"end": 11084,
											"name": "MLOAD"
										},
										{
											"begin": 11027,
											"end": 11084,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11027,
											"end": 11084,
											"name": "MLOAD"
										},
										{
											"begin": 11027,
											"end": 11084,
											"name": "DUP1"
										},
										{
											"begin": 11027,
											"end": 11084,
											"name": "SWAP2"
										},
										{
											"begin": 11027,
											"end": 11084,
											"name": "SUB"
										},
										{
											"begin": 11027,
											"end": 11084,
											"name": "SWAP1"
										},
										{
											"begin": 11027,
											"end": 11084,
											"name": "LOG3"
										},
										{
											"begin": 11172,
											"end": 11193,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 11164,
											"end": 11169,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 11164,
											"end": 11169,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11164,
											"end": 11193,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11164,
											"end": 11193,
											"name": "EXP"
										},
										{
											"begin": 11164,
											"end": 11193,
											"name": "DUP2"
										},
										{
											"begin": 11164,
											"end": 11193,
											"name": "SLOAD"
										},
										{
											"begin": 11164,
											"end": 11193,
											"name": "DUP2"
										},
										{
											"begin": 11164,
											"end": 11193,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 11164,
											"end": 11193,
											"name": "MUL"
										},
										{
											"begin": 11164,
											"end": 11193,
											"name": "NOT"
										},
										{
											"begin": 11164,
											"end": 11193,
											"name": "AND"
										},
										{
											"begin": 11164,
											"end": 11193,
											"name": "SWAP1"
										},
										{
											"begin": 11164,
											"end": 11193,
											"name": "DUP4"
										},
										{
											"begin": 11164,
											"end": 11193,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 11164,
											"end": 11193,
											"name": "DUP2"
										},
										{
											"begin": 11164,
											"end": 11193,
											"name": "GT"
										},
										{
											"begin": 11164,
											"end": 11193,
											"name": "ISZERO"
										},
										{
											"begin": 11164,
											"end": 11193,
											"name": "PUSH [tag]",
											"value": "106"
										},
										{
											"begin": 11164,
											"end": 11193,
											"name": "JUMPI"
										},
										{
											"begin": 11164,
											"end": 11193,
											"name": "INVALID"
										},
										{
											"begin": 11164,
											"end": 11193,
											"name": "tag",
											"value": "106"
										},
										{
											"begin": 11164,
											"end": 11193,
											"name": "JUMPDEST"
										},
										{
											"begin": 11164,
											"end": 11193,
											"name": "MUL"
										},
										{
											"begin": 11164,
											"end": 11193,
											"name": "OR"
										},
										{
											"begin": 11164,
											"end": 11193,
											"name": "SWAP1"
										},
										{
											"begin": 11164,
											"end": 11193,
											"name": "SSTORE"
										},
										{
											"begin": 11164,
											"end": 11193,
											"name": "POP"
										},
										{
											"begin": 11273,
											"end": 11288,
											"name": "TIMESTAMP"
										},
										{
											"begin": 11266,
											"end": 11271,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 11266,
											"end": 11271,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11266,
											"end": 11271,
											"name": "SWAP1"
										},
										{
											"begin": 11266,
											"end": 11271,
											"name": "SLOAD"
										},
										{
											"begin": 11266,
											"end": 11271,
											"name": "SWAP1"
										},
										{
											"begin": 11266,
											"end": 11271,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11266,
											"end": 11271,
											"name": "EXP"
										},
										{
											"begin": 11266,
											"end": 11271,
											"name": "SWAP1"
										},
										{
											"begin": 11266,
											"end": 11271,
											"name": "DIV"
										},
										{
											"begin": 11266,
											"end": 11271,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 11266,
											"end": 11271,
											"name": "AND"
										},
										{
											"begin": 11244,
											"end": 11289,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 11244,
											"end": 11289,
											"name": "DUP2"
										},
										{
											"begin": 11244,
											"end": 11289,
											"name": "GT"
										},
										{
											"begin": 11244,
											"end": 11289,
											"name": "ISZERO"
										},
										{
											"begin": 11244,
											"end": 11289,
											"name": "PUSH [tag]",
											"value": "107"
										},
										{
											"begin": 11244,
											"end": 11289,
											"name": "JUMPI"
										},
										{
											"begin": 11244,
											"end": 11289,
											"name": "INVALID"
										},
										{
											"begin": 11244,
											"end": 11289,
											"name": "tag",
											"value": "107"
										},
										{
											"begin": 11244,
											"end": 11289,
											"name": "JUMPDEST"
										},
										{
											"begin": 11244,
											"end": 11289,
											"name": "PUSH",
											"value": "AAAE373901E745122C2E0925AD006227969C6CD190B7D5EA2FB7FDBD1D955B35"
										},
										{
											"begin": 11244,
											"end": 11289,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11244,
											"end": 11289,
											"name": "MLOAD"
										},
										{
											"begin": 11244,
											"end": 11289,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11244,
											"end": 11289,
											"name": "MLOAD"
										},
										{
											"begin": 11244,
											"end": 11289,
											"name": "DUP1"
										},
										{
											"begin": 11244,
											"end": 11289,
											"name": "SWAP2"
										},
										{
											"begin": 11244,
											"end": 11289,
											"name": "SUB"
										},
										{
											"begin": 11244,
											"end": 11289,
											"name": "SWAP1"
										},
										{
											"begin": 11244,
											"end": 11289,
											"name": "LOG3"
										},
										{
											"begin": 10941,
											"end": 11301,
											"name": "tag",
											"value": "105"
										},
										{
											"begin": 10941,
											"end": 11301,
											"name": "JUMPDEST"
										},
										{
											"begin": 8897,
											"end": 11308,
											"name": "POP"
										},
										{
											"begin": 8897,
											"end": 11308,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 14537,
											"end": 15150,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 14537,
											"end": 15150,
											"name": "JUMPDEST"
										},
										{
											"begin": 3958,
											"end": 3962,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3948,
											"end": 3962,
											"name": "ISZERO"
										},
										{
											"begin": 3948,
											"end": 3962,
											"name": "ISZERO"
										},
										{
											"begin": 3948,
											"end": 3954,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 3948,
											"end": 3954,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3948,
											"end": 3954,
											"name": "SWAP1"
										},
										{
											"begin": 3948,
											"end": 3954,
											"name": "SLOAD"
										},
										{
											"begin": 3948,
											"end": 3954,
											"name": "SWAP1"
										},
										{
											"begin": 3948,
											"end": 3954,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3948,
											"end": 3954,
											"name": "EXP"
										},
										{
											"begin": 3948,
											"end": 3954,
											"name": "SWAP1"
										},
										{
											"begin": 3948,
											"end": 3954,
											"name": "DIV"
										},
										{
											"begin": 3948,
											"end": 3954,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3948,
											"end": 3954,
											"name": "AND"
										},
										{
											"begin": 3948,
											"end": 3962,
											"name": "ISZERO"
										},
										{
											"begin": 3948,
											"end": 3962,
											"name": "ISZERO"
										},
										{
											"begin": 3948,
											"end": 3962,
											"name": "EQ"
										},
										{
											"begin": 3940,
											"end": 3963,
											"name": "ISZERO"
										},
										{
											"begin": 3940,
											"end": 3963,
											"name": "ISZERO"
										},
										{
											"begin": 3940,
											"end": 3963,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 3940,
											"end": 3963,
											"name": "JUMPI"
										},
										{
											"begin": 3940,
											"end": 3963,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3940,
											"end": 3963,
											"name": "DUP1"
										},
										{
											"begin": 3940,
											"end": 3963,
											"name": "REVERT"
										},
										{
											"begin": 3940,
											"end": 3963,
											"name": "tag",
											"value": "109"
										},
										{
											"begin": 3940,
											"end": 3963,
											"name": "JUMPDEST"
										},
										{
											"begin": 4785,
											"end": 4801,
											"name": "PUSH",
											"value": "12"
										},
										{
											"begin": 4785,
											"end": 4801,
											"name": "SLOAD"
										},
										{
											"begin": 4766,
											"end": 4781,
											"name": "TIMESTAMP"
										},
										{
											"begin": 4766,
											"end": 4801,
											"name": "LT"
										},
										{
											"begin": 4766,
											"end": 4801,
											"name": "ISZERO"
										},
										{
											"begin": 4758,
											"end": 4802,
											"name": "ISZERO"
										},
										{
											"begin": 4758,
											"end": 4802,
											"name": "ISZERO"
										},
										{
											"begin": 4758,
											"end": 4802,
											"name": "PUSH [tag]",
											"value": "111"
										},
										{
											"begin": 4758,
											"end": 4802,
											"name": "JUMPI"
										},
										{
											"begin": 4758,
											"end": 4802,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4758,
											"end": 4802,
											"name": "DUP1"
										},
										{
											"begin": 4758,
											"end": 4802,
											"name": "REVERT"
										},
										{
											"begin": 4758,
											"end": 4802,
											"name": "tag",
											"value": "111"
										},
										{
											"begin": 4758,
											"end": 4802,
											"name": "JUMPDEST"
										},
										{
											"begin": 4830,
											"end": 4846,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4821,
											"end": 4846,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 4821,
											"end": 4846,
											"name": "DUP2"
										},
										{
											"begin": 4821,
											"end": 4846,
											"name": "GT"
										},
										{
											"begin": 4821,
											"end": 4846,
											"name": "ISZERO"
										},
										{
											"begin": 4821,
											"end": 4846,
											"name": "PUSH [tag]",
											"value": "112"
										},
										{
											"begin": 4821,
											"end": 4846,
											"name": "JUMPI"
										},
										{
											"begin": 4821,
											"end": 4846,
											"name": "INVALID"
										},
										{
											"begin": 4821,
											"end": 4846,
											"name": "tag",
											"value": "112"
										},
										{
											"begin": 4821,
											"end": 4846,
											"name": "JUMPDEST"
										},
										{
											"begin": 4821,
											"end": 4826,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 4821,
											"end": 4826,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4821,
											"end": 4826,
											"name": "SWAP1"
										},
										{
											"begin": 4821,
											"end": 4826,
											"name": "SLOAD"
										},
										{
											"begin": 4821,
											"end": 4826,
											"name": "SWAP1"
										},
										{
											"begin": 4821,
											"end": 4826,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4821,
											"end": 4826,
											"name": "EXP"
										},
										{
											"begin": 4821,
											"end": 4826,
											"name": "SWAP1"
										},
										{
											"begin": 4821,
											"end": 4826,
											"name": "DIV"
										},
										{
											"begin": 4821,
											"end": 4826,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 4821,
											"end": 4826,
											"name": "AND"
										},
										{
											"begin": 4821,
											"end": 4846,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 4821,
											"end": 4846,
											"name": "DUP2"
										},
										{
											"begin": 4821,
											"end": 4846,
											"name": "GT"
										},
										{
											"begin": 4821,
											"end": 4846,
											"name": "ISZERO"
										},
										{
											"begin": 4821,
											"end": 4846,
											"name": "PUSH [tag]",
											"value": "113"
										},
										{
											"begin": 4821,
											"end": 4846,
											"name": "JUMPI"
										},
										{
											"begin": 4821,
											"end": 4846,
											"name": "INVALID"
										},
										{
											"begin": 4821,
											"end": 4846,
											"name": "tag",
											"value": "113"
										},
										{
											"begin": 4821,
											"end": 4846,
											"name": "JUMPDEST"
										},
										{
											"begin": 4821,
											"end": 4846,
											"name": "EQ"
										},
										{
											"begin": 4813,
											"end": 4847,
											"name": "ISZERO"
										},
										{
											"begin": 4813,
											"end": 4847,
											"name": "ISZERO"
										},
										{
											"begin": 4813,
											"end": 4847,
											"name": "PUSH [tag]",
											"value": "114"
										},
										{
											"begin": 4813,
											"end": 4847,
											"name": "JUMPI"
										},
										{
											"begin": 4813,
											"end": 4847,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4813,
											"end": 4847,
											"name": "DUP1"
										},
										{
											"begin": 4813,
											"end": 4847,
											"name": "REVERT"
										},
										{
											"begin": 4813,
											"end": 4847,
											"name": "tag",
											"value": "114"
										},
										{
											"begin": 4813,
											"end": 4847,
											"name": "JUMPDEST"
										},
										{
											"begin": 4149,
											"end": 4153,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4126,
											"end": 4153,
											"name": "ISZERO"
										},
										{
											"begin": 4126,
											"end": 4153,
											"name": "ISZERO"
										},
										{
											"begin": 4126,
											"end": 4133,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4134,
											"end": 4144,
											"name": "CALLER"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "AND"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "AND"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "DUP2"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "MSTORE"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "ADD"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "SWAP1"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "DUP2"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "MSTORE"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "ADD"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "KECCAK256"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "SWAP1"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "SLOAD"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "SWAP1"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "EXP"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "SWAP1"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "DIV"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "AND"
										},
										{
											"begin": 4126,
											"end": 4153,
											"name": "ISZERO"
										},
										{
											"begin": 4126,
											"end": 4153,
											"name": "ISZERO"
										},
										{
											"begin": 4126,
											"end": 4153,
											"name": "EQ"
										},
										{
											"begin": 4118,
											"end": 4154,
											"name": "ISZERO"
										},
										{
											"begin": 4118,
											"end": 4154,
											"name": "ISZERO"
										},
										{
											"begin": 4118,
											"end": 4154,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 4118,
											"end": 4154,
											"name": "JUMPI"
										},
										{
											"begin": 4118,
											"end": 4154,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4118,
											"end": 4154,
											"name": "DUP1"
										},
										{
											"begin": 4118,
											"end": 4154,
											"name": "REVERT"
										},
										{
											"begin": 4118,
											"end": 4154,
											"name": "tag",
											"value": "116"
										},
										{
											"begin": 4118,
											"end": 4154,
											"name": "JUMPDEST"
										},
										{
											"begin": 14691,
											"end": 14696,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14663,
											"end": 14696,
											"name": "ISZERO"
										},
										{
											"begin": 14663,
											"end": 14696,
											"name": "ISZERO"
										},
										{
											"begin": 14663,
											"end": 14675,
											"name": "PUSH",
											"value": "11"
										},
										{
											"begin": 14663,
											"end": 14687,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14676,
											"end": 14686,
											"name": "CALLER"
										},
										{
											"begin": 14663,
											"end": 14687,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14663,
											"end": 14687,
											"name": "AND"
										},
										{
											"begin": 14663,
											"end": 14687,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14663,
											"end": 14687,
											"name": "AND"
										},
										{
											"begin": 14663,
											"end": 14687,
											"name": "DUP2"
										},
										{
											"begin": 14663,
											"end": 14687,
											"name": "MSTORE"
										},
										{
											"begin": 14663,
											"end": 14687,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14663,
											"end": 14687,
											"name": "ADD"
										},
										{
											"begin": 14663,
											"end": 14687,
											"name": "SWAP1"
										},
										{
											"begin": 14663,
											"end": 14687,
											"name": "DUP2"
										},
										{
											"begin": 14663,
											"end": 14687,
											"name": "MSTORE"
										},
										{
											"begin": 14663,
											"end": 14687,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14663,
											"end": 14687,
											"name": "ADD"
										},
										{
											"begin": 14663,
											"end": 14687,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14663,
											"end": 14687,
											"name": "KECCAK256"
										},
										{
											"begin": 14663,
											"end": 14687,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14663,
											"end": 14687,
											"name": "SWAP1"
										},
										{
											"begin": 14663,
											"end": 14687,
											"name": "SLOAD"
										},
										{
											"begin": 14663,
											"end": 14687,
											"name": "SWAP1"
										},
										{
											"begin": 14663,
											"end": 14687,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 14663,
											"end": 14687,
											"name": "EXP"
										},
										{
											"begin": 14663,
											"end": 14687,
											"name": "SWAP1"
										},
										{
											"begin": 14663,
											"end": 14687,
											"name": "DIV"
										},
										{
											"begin": 14663,
											"end": 14687,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 14663,
											"end": 14687,
											"name": "AND"
										},
										{
											"begin": 14663,
											"end": 14696,
											"name": "ISZERO"
										},
										{
											"begin": 14663,
											"end": 14696,
											"name": "ISZERO"
										},
										{
											"begin": 14663,
											"end": 14696,
											"name": "EQ"
										},
										{
											"begin": 14655,
											"end": 14697,
											"name": "ISZERO"
										},
										{
											"begin": 14655,
											"end": 14697,
											"name": "ISZERO"
										},
										{
											"begin": 14655,
											"end": 14697,
											"name": "PUSH [tag]",
											"value": "118"
										},
										{
											"begin": 14655,
											"end": 14697,
											"name": "JUMPI"
										},
										{
											"begin": 14655,
											"end": 14697,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14655,
											"end": 14697,
											"name": "DUP1"
										},
										{
											"begin": 14655,
											"end": 14697,
											"name": "REVERT"
										},
										{
											"begin": 14655,
											"end": 14697,
											"name": "tag",
											"value": "118"
										},
										{
											"begin": 14655,
											"end": 14697,
											"name": "JUMPDEST"
										},
										{
											"begin": 14749,
											"end": 14760,
											"name": "PUSH",
											"value": "10"
										},
										{
											"begin": 14749,
											"end": 14760,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14749,
											"end": 14762,
											"name": "DUP2"
										},
										{
											"begin": 14749,
											"end": 14762,
											"name": "SLOAD"
										},
										{
											"begin": 14749,
											"end": 14762,
											"name": "DUP1"
										},
										{
											"begin": 14749,
											"end": 14762,
											"name": "SWAP3"
										},
										{
											"begin": 14749,
											"end": 14762,
											"name": "SWAP2"
										},
										{
											"begin": 14749,
											"end": 14762,
											"name": "SWAP1"
										},
										{
											"begin": 14749,
											"end": 14762,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 14749,
											"end": 14762,
											"name": "ADD"
										},
										{
											"begin": 14749,
											"end": 14762,
											"name": "SWAP2"
										},
										{
											"begin": 14749,
											"end": 14762,
											"name": "SWAP1"
										},
										{
											"begin": 14749,
											"end": 14762,
											"name": "POP"
										},
										{
											"begin": 14749,
											"end": 14762,
											"name": "SSTORE"
										},
										{
											"begin": 14749,
											"end": 14762,
											"name": "POP"
										},
										{
											"begin": 14842,
											"end": 14846,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 14814,
											"end": 14846,
											"name": "ISZERO"
										},
										{
											"begin": 14814,
											"end": 14846,
											"name": "ISZERO"
										},
										{
											"begin": 14814,
											"end": 14826,
											"name": "PUSH",
											"value": "11"
										},
										{
											"begin": 14814,
											"end": 14838,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14827,
											"end": 14837,
											"name": "CALLER"
										},
										{
											"begin": 14814,
											"end": 14838,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14814,
											"end": 14838,
											"name": "AND"
										},
										{
											"begin": 14814,
											"end": 14838,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14814,
											"end": 14838,
											"name": "AND"
										},
										{
											"begin": 14814,
											"end": 14838,
											"name": "DUP2"
										},
										{
											"begin": 14814,
											"end": 14838,
											"name": "MSTORE"
										},
										{
											"begin": 14814,
											"end": 14838,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14814,
											"end": 14838,
											"name": "ADD"
										},
										{
											"begin": 14814,
											"end": 14838,
											"name": "SWAP1"
										},
										{
											"begin": 14814,
											"end": 14838,
											"name": "DUP2"
										},
										{
											"begin": 14814,
											"end": 14838,
											"name": "MSTORE"
										},
										{
											"begin": 14814,
											"end": 14838,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14814,
											"end": 14838,
											"name": "ADD"
										},
										{
											"begin": 14814,
											"end": 14838,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14814,
											"end": 14838,
											"name": "KECCAK256"
										},
										{
											"begin": 14814,
											"end": 14838,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14814,
											"end": 14838,
											"name": "SWAP1"
										},
										{
											"begin": 14814,
											"end": 14838,
											"name": "SLOAD"
										},
										{
											"begin": 14814,
											"end": 14838,
											"name": "SWAP1"
										},
										{
											"begin": 14814,
											"end": 14838,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 14814,
											"end": 14838,
											"name": "EXP"
										},
										{
											"begin": 14814,
											"end": 14838,
											"name": "SWAP1"
										},
										{
											"begin": 14814,
											"end": 14838,
											"name": "POP"
										},
										{
											"begin": 14814,
											"end": 14838,
											"name": "POP"
										},
										{
											"begin": 14814,
											"end": 14846,
											"name": "POP"
										},
										{
											"begin": 14958,
											"end": 14973,
											"name": "TIMESTAMP"
										},
										{
											"begin": 14946,
											"end": 14956,
											"name": "CALLER"
										},
										{
											"begin": 14921,
											"end": 14974,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14921,
											"end": 14974,
											"name": "AND"
										},
										{
											"begin": 14921,
											"end": 14974,
											"name": "PUSH",
											"value": "D7173CE7E4CE6F6D075259AC1A467AB8290DB175A2CEE8587A663C006B97E129"
										},
										{
											"begin": 14921,
											"end": 14974,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14921,
											"end": 14974,
											"name": "MLOAD"
										},
										{
											"begin": 14921,
											"end": 14974,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14921,
											"end": 14974,
											"name": "MLOAD"
										},
										{
											"begin": 14921,
											"end": 14974,
											"name": "DUP1"
										},
										{
											"begin": 14921,
											"end": 14974,
											"name": "SWAP2"
										},
										{
											"begin": 14921,
											"end": 14974,
											"name": "SUB"
										},
										{
											"begin": 14921,
											"end": 14974,
											"name": "SWAP1"
										},
										{
											"begin": 14921,
											"end": 14974,
											"name": "LOG3"
										},
										{
											"begin": 15048,
											"end": 15059,
											"name": "PUSH",
											"value": "10"
										},
										{
											"begin": 15048,
											"end": 15059,
											"name": "SLOAD"
										},
										{
											"begin": 15032,
											"end": 15044,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 15032,
											"end": 15044,
											"name": "SLOAD"
										},
										{
											"begin": 15032,
											"end": 15059,
											"name": "EQ"
										},
										{
											"begin": 15028,
											"end": 15143,
											"name": "ISZERO"
										},
										{
											"begin": 15028,
											"end": 15143,
											"name": "PUSH [tag]",
											"value": "119"
										},
										{
											"begin": 15028,
											"end": 15143,
											"name": "JUMPI"
										},
										{
											"begin": 15123,
											"end": 15131,
											"name": "PUSH [tag]",
											"value": "120"
										},
										{
											"begin": 15123,
											"end": 15129,
											"name": "PUSH [tag]",
											"value": "121"
										},
										{
											"begin": 15123,
											"end": 15131,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15123,
											"end": 15131,
											"name": "tag",
											"value": "120"
										},
										{
											"begin": 15123,
											"end": 15131,
											"name": "JUMPDEST"
										},
										{
											"begin": 15028,
											"end": 15143,
											"name": "tag",
											"value": "119"
										},
										{
											"begin": 15028,
											"end": 15143,
											"name": "JUMPDEST"
										},
										{
											"begin": 14537,
											"end": 15150,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 15462,
											"end": 16416,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 15462,
											"end": 16416,
											"name": "JUMPDEST"
										},
										{
											"begin": 3958,
											"end": 3962,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3948,
											"end": 3962,
											"name": "ISZERO"
										},
										{
											"begin": 3948,
											"end": 3962,
											"name": "ISZERO"
										},
										{
											"begin": 3948,
											"end": 3954,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 3948,
											"end": 3954,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3948,
											"end": 3954,
											"name": "SWAP1"
										},
										{
											"begin": 3948,
											"end": 3954,
											"name": "SLOAD"
										},
										{
											"begin": 3948,
											"end": 3954,
											"name": "SWAP1"
										},
										{
											"begin": 3948,
											"end": 3954,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3948,
											"end": 3954,
											"name": "EXP"
										},
										{
											"begin": 3948,
											"end": 3954,
											"name": "SWAP1"
										},
										{
											"begin": 3948,
											"end": 3954,
											"name": "DIV"
										},
										{
											"begin": 3948,
											"end": 3954,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3948,
											"end": 3954,
											"name": "AND"
										},
										{
											"begin": 3948,
											"end": 3962,
											"name": "ISZERO"
										},
										{
											"begin": 3948,
											"end": 3962,
											"name": "ISZERO"
										},
										{
											"begin": 3948,
											"end": 3962,
											"name": "EQ"
										},
										{
											"begin": 3940,
											"end": 3963,
											"name": "ISZERO"
										},
										{
											"begin": 3940,
											"end": 3963,
											"name": "ISZERO"
										},
										{
											"begin": 3940,
											"end": 3963,
											"name": "PUSH [tag]",
											"value": "123"
										},
										{
											"begin": 3940,
											"end": 3963,
											"name": "JUMPI"
										},
										{
											"begin": 3940,
											"end": 3963,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3940,
											"end": 3963,
											"name": "DUP1"
										},
										{
											"begin": 3940,
											"end": 3963,
											"name": "REVERT"
										},
										{
											"begin": 3940,
											"end": 3963,
											"name": "tag",
											"value": "123"
										},
										{
											"begin": 3940,
											"end": 3963,
											"name": "JUMPDEST"
										},
										{
											"begin": 4149,
											"end": 4153,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4126,
											"end": 4153,
											"name": "ISZERO"
										},
										{
											"begin": 4126,
											"end": 4153,
											"name": "ISZERO"
										},
										{
											"begin": 4126,
											"end": 4133,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4134,
											"end": 4144,
											"name": "CALLER"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "AND"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "AND"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "DUP2"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "MSTORE"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "ADD"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "SWAP1"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "DUP2"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "MSTORE"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "ADD"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "KECCAK256"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "SWAP1"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "SLOAD"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "SWAP1"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "EXP"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "SWAP1"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "DIV"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "AND"
										},
										{
											"begin": 4126,
											"end": 4153,
											"name": "ISZERO"
										},
										{
											"begin": 4126,
											"end": 4153,
											"name": "ISZERO"
										},
										{
											"begin": 4126,
											"end": 4153,
											"name": "EQ"
										},
										{
											"begin": 4118,
											"end": 4154,
											"name": "ISZERO"
										},
										{
											"begin": 4118,
											"end": 4154,
											"name": "ISZERO"
										},
										{
											"begin": 4118,
											"end": 4154,
											"name": "PUSH [tag]",
											"value": "125"
										},
										{
											"begin": 4118,
											"end": 4154,
											"name": "JUMPI"
										},
										{
											"begin": 4118,
											"end": 4154,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4118,
											"end": 4154,
											"name": "DUP1"
										},
										{
											"begin": 4118,
											"end": 4154,
											"name": "REVERT"
										},
										{
											"begin": 4118,
											"end": 4154,
											"name": "tag",
											"value": "125"
										},
										{
											"begin": 4118,
											"end": 4154,
											"name": "JUMPDEST"
										},
										{
											"begin": 4924,
											"end": 4937,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4915,
											"end": 4937,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 4915,
											"end": 4937,
											"name": "DUP2"
										},
										{
											"begin": 4915,
											"end": 4937,
											"name": "GT"
										},
										{
											"begin": 4915,
											"end": 4937,
											"name": "ISZERO"
										},
										{
											"begin": 4915,
											"end": 4937,
											"name": "PUSH [tag]",
											"value": "127"
										},
										{
											"begin": 4915,
											"end": 4937,
											"name": "JUMPI"
										},
										{
											"begin": 4915,
											"end": 4937,
											"name": "INVALID"
										},
										{
											"begin": 4915,
											"end": 4937,
											"name": "tag",
											"value": "127"
										},
										{
											"begin": 4915,
											"end": 4937,
											"name": "JUMPDEST"
										},
										{
											"begin": 4915,
											"end": 4920,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 4915,
											"end": 4920,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4915,
											"end": 4920,
											"name": "SWAP1"
										},
										{
											"begin": 4915,
											"end": 4920,
											"name": "SLOAD"
										},
										{
											"begin": 4915,
											"end": 4920,
											"name": "SWAP1"
										},
										{
											"begin": 4915,
											"end": 4920,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4915,
											"end": 4920,
											"name": "EXP"
										},
										{
											"begin": 4915,
											"end": 4920,
											"name": "SWAP1"
										},
										{
											"begin": 4915,
											"end": 4920,
											"name": "DIV"
										},
										{
											"begin": 4915,
											"end": 4920,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 4915,
											"end": 4920,
											"name": "AND"
										},
										{
											"begin": 4915,
											"end": 4937,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 4915,
											"end": 4937,
											"name": "DUP2"
										},
										{
											"begin": 4915,
											"end": 4937,
											"name": "GT"
										},
										{
											"begin": 4915,
											"end": 4937,
											"name": "ISZERO"
										},
										{
											"begin": 4915,
											"end": 4937,
											"name": "PUSH [tag]",
											"value": "128"
										},
										{
											"begin": 4915,
											"end": 4937,
											"name": "JUMPI"
										},
										{
											"begin": 4915,
											"end": 4937,
											"name": "INVALID"
										},
										{
											"begin": 4915,
											"end": 4937,
											"name": "tag",
											"value": "128"
										},
										{
											"begin": 4915,
											"end": 4937,
											"name": "JUMPDEST"
										},
										{
											"begin": 4915,
											"end": 4937,
											"name": "EQ"
										},
										{
											"begin": 4907,
											"end": 4938,
											"name": "ISZERO"
										},
										{
											"begin": 4907,
											"end": 4938,
											"name": "ISZERO"
										},
										{
											"begin": 4907,
											"end": 4938,
											"name": "PUSH [tag]",
											"value": "129"
										},
										{
											"begin": 4907,
											"end": 4938,
											"name": "JUMPI"
										},
										{
											"begin": 4907,
											"end": 4938,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4907,
											"end": 4938,
											"name": "DUP1"
										},
										{
											"begin": 4907,
											"end": 4938,
											"name": "REVERT"
										},
										{
											"begin": 4907,
											"end": 4938,
											"name": "tag",
											"value": "129"
										},
										{
											"begin": 4907,
											"end": 4938,
											"name": "JUMPDEST"
										},
										{
											"begin": 15604,
											"end": 15625,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 15604,
											"end": 15637,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15626,
											"end": 15636,
											"name": "CALLER"
										},
										{
											"begin": 15604,
											"end": 15637,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15604,
											"end": 15637,
											"name": "AND"
										},
										{
											"begin": 15604,
											"end": 15637,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15604,
											"end": 15637,
											"name": "AND"
										},
										{
											"begin": 15604,
											"end": 15637,
											"name": "DUP2"
										},
										{
											"begin": 15604,
											"end": 15637,
											"name": "MSTORE"
										},
										{
											"begin": 15604,
											"end": 15637,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15604,
											"end": 15637,
											"name": "ADD"
										},
										{
											"begin": 15604,
											"end": 15637,
											"name": "SWAP1"
										},
										{
											"begin": 15604,
											"end": 15637,
											"name": "DUP2"
										},
										{
											"begin": 15604,
											"end": 15637,
											"name": "MSTORE"
										},
										{
											"begin": 15604,
											"end": 15637,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15604,
											"end": 15637,
											"name": "ADD"
										},
										{
											"begin": 15604,
											"end": 15637,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15604,
											"end": 15637,
											"name": "KECCAK256"
										},
										{
											"begin": 15604,
											"end": 15637,
											"name": "SLOAD"
										},
										{
											"begin": 15588,
											"end": 15592,
											"name": "ADDRESS"
										},
										{
											"begin": 15588,
											"end": 15600,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15588,
											"end": 15600,
											"name": "AND"
										},
										{
											"begin": 15588,
											"end": 15600,
											"name": "BALANCE"
										},
										{
											"begin": 15588,
											"end": 15637,
											"name": "LT"
										},
										{
											"begin": 15588,
											"end": 15637,
											"name": "ISZERO"
										},
										{
											"begin": 15581,
											"end": 15638,
											"name": "ISZERO"
										},
										{
											"begin": 15581,
											"end": 15638,
											"name": "ISZERO"
										},
										{
											"begin": 15581,
											"end": 15638,
											"name": "PUSH [tag]",
											"value": "131"
										},
										{
											"begin": 15581,
											"end": 15638,
											"name": "JUMPI"
										},
										{
											"begin": 15581,
											"end": 15638,
											"name": "INVALID"
										},
										{
											"begin": 15581,
											"end": 15638,
											"name": "tag",
											"value": "131"
										},
										{
											"begin": 15581,
											"end": 15638,
											"name": "JUMPDEST"
										},
										{
											"begin": 15719,
											"end": 15729,
											"name": "CALLER"
										},
										{
											"begin": 15719,
											"end": 15738,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15719,
											"end": 15738,
											"name": "AND"
										},
										{
											"begin": 15719,
											"end": 15773,
											"name": "PUSH",
											"value": "8FC"
										},
										{
											"begin": 15739,
											"end": 15760,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 15739,
											"end": 15772,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15761,
											"end": 15771,
											"name": "CALLER"
										},
										{
											"begin": 15739,
											"end": 15772,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15739,
											"end": 15772,
											"name": "AND"
										},
										{
											"begin": 15739,
											"end": 15772,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15739,
											"end": 15772,
											"name": "AND"
										},
										{
											"begin": 15739,
											"end": 15772,
											"name": "DUP2"
										},
										{
											"begin": 15739,
											"end": 15772,
											"name": "MSTORE"
										},
										{
											"begin": 15739,
											"end": 15772,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15739,
											"end": 15772,
											"name": "ADD"
										},
										{
											"begin": 15739,
											"end": 15772,
											"name": "SWAP1"
										},
										{
											"begin": 15739,
											"end": 15772,
											"name": "DUP2"
										},
										{
											"begin": 15739,
											"end": 15772,
											"name": "MSTORE"
										},
										{
											"begin": 15739,
											"end": 15772,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15739,
											"end": 15772,
											"name": "ADD"
										},
										{
											"begin": 15739,
											"end": 15772,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15739,
											"end": 15772,
											"name": "KECCAK256"
										},
										{
											"begin": 15739,
											"end": 15772,
											"name": "SLOAD"
										},
										{
											"begin": 15719,
											"end": 15773,
											"name": "SWAP1"
										},
										{
											"begin": 15719,
											"end": 15773,
											"name": "DUP2"
										},
										{
											"begin": 15719,
											"end": 15773,
											"name": "ISZERO"
										},
										{
											"begin": 15719,
											"end": 15773,
											"name": "MUL"
										},
										{
											"begin": 15719,
											"end": 15773,
											"name": "SWAP1"
										},
										{
											"begin": 15719,
											"end": 15773,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15719,
											"end": 15773,
											"name": "MLOAD"
										},
										{
											"begin": 15719,
											"end": 15773,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15719,
											"end": 15773,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15719,
											"end": 15773,
											"name": "MLOAD"
										},
										{
											"begin": 15719,
											"end": 15773,
											"name": "DUP1"
										},
										{
											"begin": 15719,
											"end": 15773,
											"name": "DUP4"
										},
										{
											"begin": 15719,
											"end": 15773,
											"name": "SUB"
										},
										{
											"begin": 15719,
											"end": 15773,
											"name": "DUP2"
										},
										{
											"begin": 15719,
											"end": 15773,
											"name": "DUP6"
										},
										{
											"begin": 15719,
											"end": 15773,
											"name": "DUP9"
										},
										{
											"begin": 15719,
											"end": 15773,
											"name": "DUP9"
										},
										{
											"begin": 15719,
											"end": 15773,
											"name": "CALL"
										},
										{
											"begin": 15719,
											"end": 15773,
											"name": "SWAP4"
										},
										{
											"begin": 15719,
											"end": 15773,
											"name": "POP"
										},
										{
											"begin": 15719,
											"end": 15773,
											"name": "POP"
										},
										{
											"begin": 15719,
											"end": 15773,
											"name": "POP"
										},
										{
											"begin": 15719,
											"end": 15773,
											"name": "POP"
										},
										{
											"begin": 15719,
											"end": 15773,
											"name": "ISZERO"
										},
										{
											"begin": 15719,
											"end": 15773,
											"name": "ISZERO"
										},
										{
											"begin": 15719,
											"end": 15773,
											"name": "PUSH [tag]",
											"value": "132"
										},
										{
											"begin": 15719,
											"end": 15773,
											"name": "JUMPI"
										},
										{
											"begin": 15719,
											"end": 15773,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15719,
											"end": 15773,
											"name": "DUP1"
										},
										{
											"begin": 15719,
											"end": 15773,
											"name": "REVERT"
										},
										{
											"begin": 15719,
											"end": 15773,
											"name": "tag",
											"value": "132"
										},
										{
											"begin": 15719,
											"end": 15773,
											"name": "JUMPDEST"
										},
										{
											"begin": 15891,
											"end": 15906,
											"name": "TIMESTAMP"
										},
										{
											"begin": 15856,
											"end": 15877,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 15856,
											"end": 15889,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15878,
											"end": 15888,
											"name": "CALLER"
										},
										{
											"begin": 15856,
											"end": 15889,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15856,
											"end": 15889,
											"name": "AND"
										},
										{
											"begin": 15856,
											"end": 15889,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15856,
											"end": 15889,
											"name": "AND"
										},
										{
											"begin": 15856,
											"end": 15889,
											"name": "DUP2"
										},
										{
											"begin": 15856,
											"end": 15889,
											"name": "MSTORE"
										},
										{
											"begin": 15856,
											"end": 15889,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15856,
											"end": 15889,
											"name": "ADD"
										},
										{
											"begin": 15856,
											"end": 15889,
											"name": "SWAP1"
										},
										{
											"begin": 15856,
											"end": 15889,
											"name": "DUP2"
										},
										{
											"begin": 15856,
											"end": 15889,
											"name": "MSTORE"
										},
										{
											"begin": 15856,
											"end": 15889,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15856,
											"end": 15889,
											"name": "ADD"
										},
										{
											"begin": 15856,
											"end": 15889,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15856,
											"end": 15889,
											"name": "KECCAK256"
										},
										{
											"begin": 15856,
											"end": 15889,
											"name": "SLOAD"
										},
										{
											"begin": 15844,
											"end": 15854,
											"name": "CALLER"
										},
										{
											"begin": 15826,
											"end": 15907,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15826,
											"end": 15907,
											"name": "AND"
										},
										{
											"begin": 15826,
											"end": 15907,
											"name": "PUSH",
											"value": "71E252E33F19F0223F47F27D00910548D26488B9B55CB5B410B75E273152F8D6"
										},
										{
											"begin": 15826,
											"end": 15907,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15826,
											"end": 15907,
											"name": "MLOAD"
										},
										{
											"begin": 15826,
											"end": 15907,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15826,
											"end": 15907,
											"name": "MLOAD"
										},
										{
											"begin": 15826,
											"end": 15907,
											"name": "DUP1"
										},
										{
											"begin": 15826,
											"end": 15907,
											"name": "SWAP2"
										},
										{
											"begin": 15826,
											"end": 15907,
											"name": "SUB"
										},
										{
											"begin": 15826,
											"end": 15907,
											"name": "SWAP1"
										},
										{
											"begin": 15826,
											"end": 15907,
											"name": "LOG4"
										},
										{
											"begin": 15994,
											"end": 15995,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15978,
											"end": 15982,
											"name": "ADDRESS"
										},
										{
											"begin": 15978,
											"end": 15990,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15978,
											"end": 15990,
											"name": "AND"
										},
										{
											"begin": 15978,
											"end": 15990,
											"name": "BALANCE"
										},
										{
											"begin": 15978,
											"end": 15995,
											"name": "EQ"
										},
										{
											"begin": 15974,
											"end": 16409,
											"name": "ISZERO"
										},
										{
											"begin": 15974,
											"end": 16409,
											"name": "PUSH [tag]",
											"value": "133"
										},
										{
											"begin": 15974,
											"end": 16409,
											"name": "JUMPI"
										},
										{
											"begin": 16070,
											"end": 16075,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16061,
											"end": 16067,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 16061,
											"end": 16067,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16061,
											"end": 16075,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 16061,
											"end": 16075,
											"name": "EXP"
										},
										{
											"begin": 16061,
											"end": 16075,
											"name": "DUP2"
										},
										{
											"begin": 16061,
											"end": 16075,
											"name": "SLOAD"
										},
										{
											"begin": 16061,
											"end": 16075,
											"name": "DUP2"
										},
										{
											"begin": 16061,
											"end": 16075,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 16061,
											"end": 16075,
											"name": "MUL"
										},
										{
											"begin": 16061,
											"end": 16075,
											"name": "NOT"
										},
										{
											"begin": 16061,
											"end": 16075,
											"name": "AND"
										},
										{
											"begin": 16061,
											"end": 16075,
											"name": "SWAP1"
										},
										{
											"begin": 16061,
											"end": 16075,
											"name": "DUP4"
										},
										{
											"begin": 16061,
											"end": 16075,
											"name": "ISZERO"
										},
										{
											"begin": 16061,
											"end": 16075,
											"name": "ISZERO"
										},
										{
											"begin": 16061,
											"end": 16075,
											"name": "MUL"
										},
										{
											"begin": 16061,
											"end": 16075,
											"name": "OR"
										},
										{
											"begin": 16061,
											"end": 16075,
											"name": "SWAP1"
										},
										{
											"begin": 16061,
											"end": 16075,
											"name": "SSTORE"
										},
										{
											"begin": 16061,
											"end": 16075,
											"name": "POP"
										},
										{
											"begin": 16170,
											"end": 16185,
											"name": "TIMESTAMP"
										},
										{
											"begin": 16162,
											"end": 16168,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 16162,
											"end": 16168,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16162,
											"end": 16168,
											"name": "SWAP1"
										},
										{
											"begin": 16162,
											"end": 16168,
											"name": "SLOAD"
										},
										{
											"begin": 16162,
											"end": 16168,
											"name": "SWAP1"
										},
										{
											"begin": 16162,
											"end": 16168,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 16162,
											"end": 16168,
											"name": "EXP"
										},
										{
											"begin": 16162,
											"end": 16168,
											"name": "SWAP1"
										},
										{
											"begin": 16162,
											"end": 16168,
											"name": "DIV"
										},
										{
											"begin": 16162,
											"end": 16168,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 16162,
											"end": 16168,
											"name": "AND"
										},
										{
											"begin": 16134,
											"end": 16186,
											"name": "ISZERO"
										},
										{
											"begin": 16134,
											"end": 16186,
											"name": "ISZERO"
										},
										{
											"begin": 16134,
											"end": 16186,
											"name": "PUSH",
											"value": "160914EA27C60AA29A5F3A69D74E6069869DE36E38939DE1E0A66B921D8623D2"
										},
										{
											"begin": 16134,
											"end": 16186,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16134,
											"end": 16186,
											"name": "MLOAD"
										},
										{
											"begin": 16134,
											"end": 16186,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16134,
											"end": 16186,
											"name": "MLOAD"
										},
										{
											"begin": 16134,
											"end": 16186,
											"name": "DUP1"
										},
										{
											"begin": 16134,
											"end": 16186,
											"name": "SWAP2"
										},
										{
											"begin": 16134,
											"end": 16186,
											"name": "SUB"
										},
										{
											"begin": 16134,
											"end": 16186,
											"name": "SWAP1"
										},
										{
											"begin": 16134,
											"end": 16186,
											"name": "LOG3"
										},
										{
											"begin": 16288,
											"end": 16301,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 16280,
											"end": 16285,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 16280,
											"end": 16285,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16280,
											"end": 16301,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 16280,
											"end": 16301,
											"name": "EXP"
										},
										{
											"begin": 16280,
											"end": 16301,
											"name": "DUP2"
										},
										{
											"begin": 16280,
											"end": 16301,
											"name": "SLOAD"
										},
										{
											"begin": 16280,
											"end": 16301,
											"name": "DUP2"
										},
										{
											"begin": 16280,
											"end": 16301,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 16280,
											"end": 16301,
											"name": "MUL"
										},
										{
											"begin": 16280,
											"end": 16301,
											"name": "NOT"
										},
										{
											"begin": 16280,
											"end": 16301,
											"name": "AND"
										},
										{
											"begin": 16280,
											"end": 16301,
											"name": "SWAP1"
										},
										{
											"begin": 16280,
											"end": 16301,
											"name": "DUP4"
										},
										{
											"begin": 16280,
											"end": 16301,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 16280,
											"end": 16301,
											"name": "DUP2"
										},
										{
											"begin": 16280,
											"end": 16301,
											"name": "GT"
										},
										{
											"begin": 16280,
											"end": 16301,
											"name": "ISZERO"
										},
										{
											"begin": 16280,
											"end": 16301,
											"name": "PUSH [tag]",
											"value": "134"
										},
										{
											"begin": 16280,
											"end": 16301,
											"name": "JUMPI"
										},
										{
											"begin": 16280,
											"end": 16301,
											"name": "INVALID"
										},
										{
											"begin": 16280,
											"end": 16301,
											"name": "tag",
											"value": "134"
										},
										{
											"begin": 16280,
											"end": 16301,
											"name": "JUMPDEST"
										},
										{
											"begin": 16280,
											"end": 16301,
											"name": "MUL"
										},
										{
											"begin": 16280,
											"end": 16301,
											"name": "OR"
										},
										{
											"begin": 16280,
											"end": 16301,
											"name": "SWAP1"
										},
										{
											"begin": 16280,
											"end": 16301,
											"name": "SSTORE"
										},
										{
											"begin": 16280,
											"end": 16301,
											"name": "POP"
										},
										{
											"begin": 16381,
											"end": 16396,
											"name": "TIMESTAMP"
										},
										{
											"begin": 16374,
											"end": 16379,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 16374,
											"end": 16379,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16374,
											"end": 16379,
											"name": "SWAP1"
										},
										{
											"begin": 16374,
											"end": 16379,
											"name": "SLOAD"
										},
										{
											"begin": 16374,
											"end": 16379,
											"name": "SWAP1"
										},
										{
											"begin": 16374,
											"end": 16379,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 16374,
											"end": 16379,
											"name": "EXP"
										},
										{
											"begin": 16374,
											"end": 16379,
											"name": "SWAP1"
										},
										{
											"begin": 16374,
											"end": 16379,
											"name": "DIV"
										},
										{
											"begin": 16374,
											"end": 16379,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 16374,
											"end": 16379,
											"name": "AND"
										},
										{
											"begin": 16352,
											"end": 16397,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 16352,
											"end": 16397,
											"name": "DUP2"
										},
										{
											"begin": 16352,
											"end": 16397,
											"name": "GT"
										},
										{
											"begin": 16352,
											"end": 16397,
											"name": "ISZERO"
										},
										{
											"begin": 16352,
											"end": 16397,
											"name": "PUSH [tag]",
											"value": "135"
										},
										{
											"begin": 16352,
											"end": 16397,
											"name": "JUMPI"
										},
										{
											"begin": 16352,
											"end": 16397,
											"name": "INVALID"
										},
										{
											"begin": 16352,
											"end": 16397,
											"name": "tag",
											"value": "135"
										},
										{
											"begin": 16352,
											"end": 16397,
											"name": "JUMPDEST"
										},
										{
											"begin": 16352,
											"end": 16397,
											"name": "PUSH",
											"value": "AAAE373901E745122C2E0925AD006227969C6CD190B7D5EA2FB7FDBD1D955B35"
										},
										{
											"begin": 16352,
											"end": 16397,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16352,
											"end": 16397,
											"name": "MLOAD"
										},
										{
											"begin": 16352,
											"end": 16397,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16352,
											"end": 16397,
											"name": "MLOAD"
										},
										{
											"begin": 16352,
											"end": 16397,
											"name": "DUP1"
										},
										{
											"begin": 16352,
											"end": 16397,
											"name": "SWAP2"
										},
										{
											"begin": 16352,
											"end": 16397,
											"name": "SUB"
										},
										{
											"begin": 16352,
											"end": 16397,
											"name": "SWAP1"
										},
										{
											"begin": 16352,
											"end": 16397,
											"name": "LOG3"
										},
										{
											"begin": 15974,
											"end": 16409,
											"name": "tag",
											"value": "133"
										},
										{
											"begin": 15974,
											"end": 16409,
											"name": "JUMPDEST"
										},
										{
											"begin": 15462,
											"end": 16416,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 151,
											"end": 225,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 151,
											"end": 225,
											"name": "JUMPDEST"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "DUP1"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "SWAP1"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "SLOAD"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "SWAP1"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "EXP"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "SWAP1"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "DIV"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "AND"
										},
										{
											"begin": 218,
											"end": 237,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 218,
											"end": 237,
											"name": "AND"
										},
										{
											"begin": 218,
											"end": 228,
											"name": "CALLER"
										},
										{
											"begin": 218,
											"end": 237,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 218,
											"end": 237,
											"name": "AND"
										},
										{
											"begin": 218,
											"end": 237,
											"name": "EQ"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "ISZERO"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "ISZERO"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "PUSH [tag]",
											"value": "137"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "JUMPI"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "DUP1"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "REVERT"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "tag",
											"value": "137"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "JUMPDEST"
										},
										{
											"begin": 211,
											"end": 216,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 211,
											"end": 216,
											"name": "DUP1"
										},
										{
											"begin": 211,
											"end": 216,
											"name": "SWAP1"
										},
										{
											"begin": 211,
											"end": 216,
											"name": "SLOAD"
										},
										{
											"begin": 211,
											"end": 216,
											"name": "SWAP1"
										},
										{
											"begin": 211,
											"end": 216,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 211,
											"end": 216,
											"name": "EXP"
										},
										{
											"begin": 211,
											"end": 216,
											"name": "SWAP1"
										},
										{
											"begin": 211,
											"end": 216,
											"name": "DIV"
										},
										{
											"begin": 211,
											"end": 216,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 211,
											"end": 216,
											"name": "AND"
										},
										{
											"begin": 198,
											"end": 217,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 198,
											"end": 217,
											"name": "AND"
										},
										{
											"begin": 198,
											"end": 217,
											"name": "SELFDESTRUCT"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "JUMPDEST"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "DUP1"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "SWAP1"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "SLOAD"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "SWAP1"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "EXP"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "SWAP1"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "DIV"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "AND"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "DUP2"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 16494,
											"end": 17099,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 16494,
											"end": 17099,
											"name": "JUMPDEST"
										},
										{
											"begin": 16551,
											"end": 16555,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3958,
											"end": 3962,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3948,
											"end": 3962,
											"name": "ISZERO"
										},
										{
											"begin": 3948,
											"end": 3962,
											"name": "ISZERO"
										},
										{
											"begin": 3948,
											"end": 3954,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 3948,
											"end": 3954,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3948,
											"end": 3954,
											"name": "SWAP1"
										},
										{
											"begin": 3948,
											"end": 3954,
											"name": "SLOAD"
										},
										{
											"begin": 3948,
											"end": 3954,
											"name": "SWAP1"
										},
										{
											"begin": 3948,
											"end": 3954,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3948,
											"end": 3954,
											"name": "EXP"
										},
										{
											"begin": 3948,
											"end": 3954,
											"name": "SWAP1"
										},
										{
											"begin": 3948,
											"end": 3954,
											"name": "DIV"
										},
										{
											"begin": 3948,
											"end": 3954,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3948,
											"end": 3954,
											"name": "AND"
										},
										{
											"begin": 3948,
											"end": 3962,
											"name": "ISZERO"
										},
										{
											"begin": 3948,
											"end": 3962,
											"name": "ISZERO"
										},
										{
											"begin": 3948,
											"end": 3962,
											"name": "EQ"
										},
										{
											"begin": 3940,
											"end": 3963,
											"name": "ISZERO"
										},
										{
											"begin": 3940,
											"end": 3963,
											"name": "ISZERO"
										},
										{
											"begin": 3940,
											"end": 3963,
											"name": "PUSH [tag]",
											"value": "140"
										},
										{
											"begin": 3940,
											"end": 3963,
											"name": "JUMPI"
										},
										{
											"begin": 3940,
											"end": 3963,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3940,
											"end": 3963,
											"name": "DUP1"
										},
										{
											"begin": 3940,
											"end": 3963,
											"name": "REVERT"
										},
										{
											"begin": 3940,
											"end": 3963,
											"name": "tag",
											"value": "140"
										},
										{
											"begin": 3940,
											"end": 3963,
											"name": "JUMPDEST"
										},
										{
											"begin": 4149,
											"end": 4153,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4126,
											"end": 4153,
											"name": "ISZERO"
										},
										{
											"begin": 4126,
											"end": 4153,
											"name": "ISZERO"
										},
										{
											"begin": 4126,
											"end": 4133,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4134,
											"end": 4144,
											"name": "CALLER"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "AND"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "AND"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "DUP2"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "MSTORE"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "ADD"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "SWAP1"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "DUP2"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "MSTORE"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "ADD"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "KECCAK256"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "SWAP1"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "SLOAD"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "SWAP1"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "EXP"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "SWAP1"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "DIV"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "AND"
										},
										{
											"begin": 4126,
											"end": 4153,
											"name": "ISZERO"
										},
										{
											"begin": 4126,
											"end": 4153,
											"name": "ISZERO"
										},
										{
											"begin": 4126,
											"end": 4153,
											"name": "EQ"
										},
										{
											"begin": 4118,
											"end": 4154,
											"name": "ISZERO"
										},
										{
											"begin": 4118,
											"end": 4154,
											"name": "ISZERO"
										},
										{
											"begin": 4118,
											"end": 4154,
											"name": "PUSH [tag]",
											"value": "142"
										},
										{
											"begin": 4118,
											"end": 4154,
											"name": "JUMPI"
										},
										{
											"begin": 4118,
											"end": 4154,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4118,
											"end": 4154,
											"name": "DUP1"
										},
										{
											"begin": 4118,
											"end": 4154,
											"name": "REVERT"
										},
										{
											"begin": 4118,
											"end": 4154,
											"name": "tag",
											"value": "142"
										},
										{
											"begin": 4118,
											"end": 4154,
											"name": "JUMPDEST"
										},
										{
											"begin": 16646,
											"end": 16651,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16619,
											"end": 16651,
											"name": "ISZERO"
										},
										{
											"begin": 16619,
											"end": 16651,
											"name": "ISZERO"
										},
										{
											"begin": 16619,
											"end": 16630,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 16619,
											"end": 16642,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16631,
											"end": 16641,
											"name": "CALLER"
										},
										{
											"begin": 16619,
											"end": 16642,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16619,
											"end": 16642,
											"name": "AND"
										},
										{
											"begin": 16619,
											"end": 16642,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16619,
											"end": 16642,
											"name": "AND"
										},
										{
											"begin": 16619,
											"end": 16642,
											"name": "DUP2"
										},
										{
											"begin": 16619,
											"end": 16642,
											"name": "MSTORE"
										},
										{
											"begin": 16619,
											"end": 16642,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16619,
											"end": 16642,
											"name": "ADD"
										},
										{
											"begin": 16619,
											"end": 16642,
											"name": "SWAP1"
										},
										{
											"begin": 16619,
											"end": 16642,
											"name": "DUP2"
										},
										{
											"begin": 16619,
											"end": 16642,
											"name": "MSTORE"
										},
										{
											"begin": 16619,
											"end": 16642,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16619,
											"end": 16642,
											"name": "ADD"
										},
										{
											"begin": 16619,
											"end": 16642,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16619,
											"end": 16642,
											"name": "KECCAK256"
										},
										{
											"begin": 16619,
											"end": 16642,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16619,
											"end": 16642,
											"name": "SWAP1"
										},
										{
											"begin": 16619,
											"end": 16642,
											"name": "SLOAD"
										},
										{
											"begin": 16619,
											"end": 16642,
											"name": "SWAP1"
										},
										{
											"begin": 16619,
											"end": 16642,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 16619,
											"end": 16642,
											"name": "EXP"
										},
										{
											"begin": 16619,
											"end": 16642,
											"name": "SWAP1"
										},
										{
											"begin": 16619,
											"end": 16642,
											"name": "DIV"
										},
										{
											"begin": 16619,
											"end": 16642,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 16619,
											"end": 16642,
											"name": "AND"
										},
										{
											"begin": 16619,
											"end": 16651,
											"name": "ISZERO"
										},
										{
											"begin": 16619,
											"end": 16651,
											"name": "ISZERO"
										},
										{
											"begin": 16619,
											"end": 16651,
											"name": "EQ"
										},
										{
											"begin": 16611,
											"end": 16652,
											"name": "ISZERO"
										},
										{
											"begin": 16611,
											"end": 16652,
											"name": "ISZERO"
										},
										{
											"begin": 16611,
											"end": 16652,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 16611,
											"end": 16652,
											"name": "JUMPI"
										},
										{
											"begin": 16611,
											"end": 16652,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16611,
											"end": 16652,
											"name": "DUP1"
										},
										{
											"begin": 16611,
											"end": 16652,
											"name": "REVERT"
										},
										{
											"begin": 16611,
											"end": 16652,
											"name": "tag",
											"value": "144"
										},
										{
											"begin": 16611,
											"end": 16652,
											"name": "JUMPDEST"
										},
										{
											"begin": 16705,
											"end": 16715,
											"name": "PUSH",
											"value": "13"
										},
										{
											"begin": 16705,
											"end": 16715,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16705,
											"end": 16717,
											"name": "DUP2"
										},
										{
											"begin": 16705,
											"end": 16717,
											"name": "SLOAD"
										},
										{
											"begin": 16705,
											"end": 16717,
											"name": "DUP1"
										},
										{
											"begin": 16705,
											"end": 16717,
											"name": "SWAP3"
										},
										{
											"begin": 16705,
											"end": 16717,
											"name": "SWAP2"
										},
										{
											"begin": 16705,
											"end": 16717,
											"name": "SWAP1"
										},
										{
											"begin": 16705,
											"end": 16717,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16705,
											"end": 16717,
											"name": "ADD"
										},
										{
											"begin": 16705,
											"end": 16717,
											"name": "SWAP2"
										},
										{
											"begin": 16705,
											"end": 16717,
											"name": "SWAP1"
										},
										{
											"begin": 16705,
											"end": 16717,
											"name": "POP"
										},
										{
											"begin": 16705,
											"end": 16717,
											"name": "SSTORE"
										},
										{
											"begin": 16705,
											"end": 16717,
											"name": "POP"
										},
										{
											"begin": 16796,
											"end": 16800,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16769,
											"end": 16800,
											"name": "ISZERO"
										},
										{
											"begin": 16769,
											"end": 16800,
											"name": "ISZERO"
										},
										{
											"begin": 16769,
											"end": 16780,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 16769,
											"end": 16792,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16781,
											"end": 16791,
											"name": "CALLER"
										},
										{
											"begin": 16769,
											"end": 16792,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16769,
											"end": 16792,
											"name": "AND"
										},
										{
											"begin": 16769,
											"end": 16792,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16769,
											"end": 16792,
											"name": "AND"
										},
										{
											"begin": 16769,
											"end": 16792,
											"name": "DUP2"
										},
										{
											"begin": 16769,
											"end": 16792,
											"name": "MSTORE"
										},
										{
											"begin": 16769,
											"end": 16792,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16769,
											"end": 16792,
											"name": "ADD"
										},
										{
											"begin": 16769,
											"end": 16792,
											"name": "SWAP1"
										},
										{
											"begin": 16769,
											"end": 16792,
											"name": "DUP2"
										},
										{
											"begin": 16769,
											"end": 16792,
											"name": "MSTORE"
										},
										{
											"begin": 16769,
											"end": 16792,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16769,
											"end": 16792,
											"name": "ADD"
										},
										{
											"begin": 16769,
											"end": 16792,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16769,
											"end": 16792,
											"name": "KECCAK256"
										},
										{
											"begin": 16769,
											"end": 16792,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16769,
											"end": 16792,
											"name": "SWAP1"
										},
										{
											"begin": 16769,
											"end": 16792,
											"name": "SLOAD"
										},
										{
											"begin": 16769,
											"end": 16792,
											"name": "SWAP1"
										},
										{
											"begin": 16769,
											"end": 16792,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 16769,
											"end": 16792,
											"name": "EXP"
										},
										{
											"begin": 16769,
											"end": 16792,
											"name": "SWAP1"
										},
										{
											"begin": 16769,
											"end": 16792,
											"name": "POP"
										},
										{
											"begin": 16769,
											"end": 16792,
											"name": "POP"
										},
										{
											"begin": 16769,
											"end": 16800,
											"name": "POP"
										},
										{
											"begin": 16886,
											"end": 16901,
											"name": "TIMESTAMP"
										},
										{
											"begin": 16874,
											"end": 16884,
											"name": "CALLER"
										},
										{
											"begin": 16852,
											"end": 16902,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16852,
											"end": 16902,
											"name": "AND"
										},
										{
											"begin": 16852,
											"end": 16902,
											"name": "PUSH",
											"value": "1DB613004119DDE2A638B639FBA9960C0E6064EE7C2D06F300E41C78920ED6DC"
										},
										{
											"begin": 16852,
											"end": 16902,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16852,
											"end": 16902,
											"name": "MLOAD"
										},
										{
											"begin": 16852,
											"end": 16902,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16852,
											"end": 16902,
											"name": "MLOAD"
										},
										{
											"begin": 16852,
											"end": 16902,
											"name": "DUP1"
										},
										{
											"begin": 16852,
											"end": 16902,
											"name": "SWAP2"
										},
										{
											"begin": 16852,
											"end": 16902,
											"name": "SUB"
										},
										{
											"begin": 16852,
											"end": 16902,
											"name": "SWAP1"
										},
										{
											"begin": 16852,
											"end": 16902,
											"name": "LOG3"
										},
										{
											"begin": 16978,
											"end": 16988,
											"name": "PUSH",
											"value": "13"
										},
										{
											"begin": 16978,
											"end": 16988,
											"name": "SLOAD"
										},
										{
											"begin": 16962,
											"end": 16974,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 16962,
											"end": 16974,
											"name": "SLOAD"
										},
										{
											"begin": 16962,
											"end": 16988,
											"name": "EQ"
										},
										{
											"begin": 16958,
											"end": 17070,
											"name": "ISZERO"
										},
										{
											"begin": 16958,
											"end": 17070,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 16958,
											"end": 17070,
											"name": "JUMPI"
										},
										{
											"begin": 17051,
											"end": 17058,
											"name": "PUSH [tag]",
											"value": "146"
										},
										{
											"begin": 17051,
											"end": 17056,
											"name": "PUSH [tag]",
											"value": "147"
										},
										{
											"begin": 17051,
											"end": 17058,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 17051,
											"end": 17058,
											"name": "tag",
											"value": "146"
										},
										{
											"begin": 17051,
											"end": 17058,
											"name": "JUMPDEST"
										},
										{
											"begin": 17044,
											"end": 17058,
											"name": "SWAP1"
										},
										{
											"begin": 17044,
											"end": 17058,
											"name": "POP"
										},
										{
											"begin": 17044,
											"end": 17058,
											"name": "PUSH [tag]",
											"value": "143"
										},
										{
											"begin": 17044,
											"end": 17058,
											"name": "JUMP"
										},
										{
											"begin": 16958,
											"end": 17070,
											"name": "tag",
											"value": "145"
										},
										{
											"begin": 16958,
											"end": 17070,
											"name": "JUMPDEST"
										},
										{
											"begin": 17087,
											"end": 17091,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 17080,
											"end": 17091,
											"name": "SWAP1"
										},
										{
											"begin": 17080,
											"end": 17091,
											"name": "POP"
										},
										{
											"begin": 4165,
											"end": 4166,
											"name": "tag",
											"value": "143"
										},
										{
											"begin": 4165,
											"end": 4166,
											"name": "JUMPDEST"
										},
										{
											"begin": 16494,
											"end": 17099,
											"name": "SWAP1"
										},
										{
											"begin": 16494,
											"end": 17099,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7072,
											"end": 8788,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 7072,
											"end": 8788,
											"name": "JUMPDEST"
										},
										{
											"begin": 7213,
											"end": 7228,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4395,
											"end": 4411,
											"name": "DUP1"
										},
										{
											"begin": 4386,
											"end": 4411,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 4386,
											"end": 4411,
											"name": "DUP2"
										},
										{
											"begin": 4386,
											"end": 4411,
											"name": "GT"
										},
										{
											"begin": 4386,
											"end": 4411,
											"name": "ISZERO"
										},
										{
											"begin": 4386,
											"end": 4411,
											"name": "PUSH [tag]",
											"value": "149"
										},
										{
											"begin": 4386,
											"end": 4411,
											"name": "JUMPI"
										},
										{
											"begin": 4386,
											"end": 4411,
											"name": "INVALID"
										},
										{
											"begin": 4386,
											"end": 4411,
											"name": "tag",
											"value": "149"
										},
										{
											"begin": 4386,
											"end": 4411,
											"name": "JUMPDEST"
										},
										{
											"begin": 4386,
											"end": 4391,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 4386,
											"end": 4391,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4386,
											"end": 4391,
											"name": "SWAP1"
										},
										{
											"begin": 4386,
											"end": 4391,
											"name": "SLOAD"
										},
										{
											"begin": 4386,
											"end": 4391,
											"name": "SWAP1"
										},
										{
											"begin": 4386,
											"end": 4391,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4386,
											"end": 4391,
											"name": "EXP"
										},
										{
											"begin": 4386,
											"end": 4391,
											"name": "SWAP1"
										},
										{
											"begin": 4386,
											"end": 4391,
											"name": "DIV"
										},
										{
											"begin": 4386,
											"end": 4391,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 4386,
											"end": 4391,
											"name": "AND"
										},
										{
											"begin": 4386,
											"end": 4411,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 4386,
											"end": 4411,
											"name": "DUP2"
										},
										{
											"begin": 4386,
											"end": 4411,
											"name": "GT"
										},
										{
											"begin": 4386,
											"end": 4411,
											"name": "ISZERO"
										},
										{
											"begin": 4386,
											"end": 4411,
											"name": "PUSH [tag]",
											"value": "150"
										},
										{
											"begin": 4386,
											"end": 4411,
											"name": "JUMPI"
										},
										{
											"begin": 4386,
											"end": 4411,
											"name": "INVALID"
										},
										{
											"begin": 4386,
											"end": 4411,
											"name": "tag",
											"value": "150"
										},
										{
											"begin": 4386,
											"end": 4411,
											"name": "JUMPDEST"
										},
										{
											"begin": 4386,
											"end": 4411,
											"name": "EQ"
										},
										{
											"begin": 4378,
											"end": 4412,
											"name": "ISZERO"
										},
										{
											"begin": 4378,
											"end": 4412,
											"name": "ISZERO"
										},
										{
											"begin": 4378,
											"end": 4412,
											"name": "PUSH [tag]",
											"value": "151"
										},
										{
											"begin": 4378,
											"end": 4412,
											"name": "JUMPI"
										},
										{
											"begin": 4378,
											"end": 4412,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4378,
											"end": 4412,
											"name": "DUP1"
										},
										{
											"begin": 4378,
											"end": 4412,
											"name": "REVERT"
										},
										{
											"begin": 4378,
											"end": 4412,
											"name": "tag",
											"value": "151"
										},
										{
											"begin": 4378,
											"end": 4412,
											"name": "JUMPDEST"
										},
										{
											"begin": 7231,
											"end": 7232,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7213,
											"end": 7232,
											"name": "SWAP1"
										},
										{
											"begin": 7213,
											"end": 7232,
											"name": "POP"
										},
										{
											"begin": 7336,
											"end": 7351,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 7336,
											"end": 7351,
											"name": "SLOAD"
										},
										{
											"begin": 7320,
											"end": 7324,
											"name": "ADDRESS"
										},
										{
											"begin": 7320,
											"end": 7332,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7320,
											"end": 7332,
											"name": "AND"
										},
										{
											"begin": 7320,
											"end": 7332,
											"name": "BALANCE"
										},
										{
											"begin": 7320,
											"end": 7351,
											"name": "LT"
										},
										{
											"begin": 7320,
											"end": 7351,
											"name": "ISZERO"
										},
										{
											"begin": 7316,
											"end": 8247,
											"name": "ISZERO"
										},
										{
											"begin": 7316,
											"end": 8247,
											"name": "PUSH [tag]",
											"value": "153"
										},
										{
											"begin": 7316,
											"end": 8247,
											"name": "JUMPI"
										},
										{
											"begin": 7450,
											"end": 7483,
											"name": "PUSH [tag]",
											"value": "154"
										},
										{
											"begin": 7467,
											"end": 7482,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 7467,
											"end": 7482,
											"name": "SLOAD"
										},
										{
											"begin": 7450,
											"end": 7454,
											"name": "ADDRESS"
										},
										{
											"begin": 7450,
											"end": 7462,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7450,
											"end": 7462,
											"name": "AND"
										},
										{
											"begin": 7450,
											"end": 7462,
											"name": "BALANCE"
										},
										{
											"begin": 7450,
											"end": 7466,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 7450,
											"end": 7466,
											"name": "SWAP1"
										},
										{
											"begin": 7450,
											"end": 7483,
											"name": "SWAP2"
										},
										{
											"begin": 7450,
											"end": 7483,
											"name": "SWAP1"
										},
										{
											"begin": 7450,
											"end": 7483,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 7450,
											"end": 7483,
											"name": "AND"
										},
										{
											"begin": 7450,
											"end": 7483,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7450,
											"end": 7483,
											"name": "tag",
											"value": "154"
										},
										{
											"begin": 7450,
											"end": 7483,
											"name": "JUMPDEST"
										},
										{
											"begin": 7437,
											"end": 7483,
											"name": "SWAP1"
										},
										{
											"begin": 7437,
											"end": 7483,
											"name": "POP"
										},
										{
											"begin": 7566,
											"end": 7594,
											"name": "PUSH [tag]",
											"value": "155"
										},
										{
											"begin": 7583,
											"end": 7593,
											"name": "DUP2"
										},
										{
											"begin": 7566,
											"end": 7570,
											"name": "ADDRESS"
										},
										{
											"begin": 7566,
											"end": 7578,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7566,
											"end": 7578,
											"name": "AND"
										},
										{
											"begin": 7566,
											"end": 7578,
											"name": "BALANCE"
										},
										{
											"begin": 7566,
											"end": 7582,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 7566,
											"end": 7582,
											"name": "SWAP1"
										},
										{
											"begin": 7566,
											"end": 7594,
											"name": "SWAP2"
										},
										{
											"begin": 7566,
											"end": 7594,
											"name": "SWAP1"
										},
										{
											"begin": 7566,
											"end": 7594,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 7566,
											"end": 7594,
											"name": "AND"
										},
										{
											"begin": 7566,
											"end": 7594,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7566,
											"end": 7594,
											"name": "tag",
											"value": "155"
										},
										{
											"begin": 7566,
											"end": 7594,
											"name": "JUMPDEST"
										},
										{
											"begin": 7547,
											"end": 7562,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 7547,
											"end": 7562,
											"name": "SLOAD"
										},
										{
											"begin": 7547,
											"end": 7594,
											"name": "EQ"
										},
										{
											"begin": 7540,
											"end": 7595,
											"name": "ISZERO"
										},
										{
											"begin": 7540,
											"end": 7595,
											"name": "ISZERO"
										},
										{
											"begin": 7540,
											"end": 7595,
											"name": "PUSH [tag]",
											"value": "156"
										},
										{
											"begin": 7540,
											"end": 7595,
											"name": "JUMPI"
										},
										{
											"begin": 7540,
											"end": 7595,
											"name": "INVALID"
										},
										{
											"begin": 7540,
											"end": 7595,
											"name": "tag",
											"value": "156"
										},
										{
											"begin": 7540,
											"end": 7595,
											"name": "JUMPDEST"
										},
										{
											"begin": 7690,
											"end": 7699,
											"name": "CALLVALUE"
										},
										{
											"begin": 7676,
											"end": 7686,
											"name": "DUP2"
										},
										{
											"begin": 7676,
											"end": 7699,
											"name": "GT"
										},
										{
											"begin": 7676,
											"end": 7699,
											"name": "ISZERO"
										},
										{
											"begin": 7669,
											"end": 7700,
											"name": "ISZERO"
										},
										{
											"begin": 7669,
											"end": 7700,
											"name": "ISZERO"
										},
										{
											"begin": 7669,
											"end": 7700,
											"name": "PUSH [tag]",
											"value": "157"
										},
										{
											"begin": 7669,
											"end": 7700,
											"name": "JUMPI"
										},
										{
											"begin": 7669,
											"end": 7700,
											"name": "INVALID"
										},
										{
											"begin": 7669,
											"end": 7700,
											"name": "tag",
											"value": "157"
										},
										{
											"begin": 7669,
											"end": 7700,
											"name": "JUMPDEST"
										},
										{
											"begin": 7794,
											"end": 7795,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7781,
											"end": 7791,
											"name": "DUP2"
										},
										{
											"begin": 7781,
											"end": 7795,
											"name": "GT"
										},
										{
											"begin": 7777,
											"end": 8047,
											"name": "ISZERO"
										},
										{
											"begin": 7777,
											"end": 8047,
											"name": "PUSH [tag]",
											"value": "158"
										},
										{
											"begin": 7777,
											"end": 8047,
											"name": "JUMPI"
										},
										{
											"begin": 7874,
											"end": 7884,
											"name": "CALLER"
										},
										{
											"begin": 7874,
											"end": 7893,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7874,
											"end": 7893,
											"name": "AND"
										},
										{
											"begin": 7874,
											"end": 7905,
											"name": "PUSH",
											"value": "8FC"
										},
										{
											"begin": 7894,
											"end": 7904,
											"name": "DUP3"
										},
										{
											"begin": 7874,
											"end": 7905,
											"name": "SWAP1"
										},
										{
											"begin": 7874,
											"end": 7905,
											"name": "DUP2"
										},
										{
											"begin": 7874,
											"end": 7905,
											"name": "ISZERO"
										},
										{
											"begin": 7874,
											"end": 7905,
											"name": "MUL"
										},
										{
											"begin": 7874,
											"end": 7905,
											"name": "SWAP1"
										},
										{
											"begin": 7874,
											"end": 7905,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7874,
											"end": 7905,
											"name": "MLOAD"
										},
										{
											"begin": 7874,
											"end": 7905,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7874,
											"end": 7905,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7874,
											"end": 7905,
											"name": "MLOAD"
										},
										{
											"begin": 7874,
											"end": 7905,
											"name": "DUP1"
										},
										{
											"begin": 7874,
											"end": 7905,
											"name": "DUP4"
										},
										{
											"begin": 7874,
											"end": 7905,
											"name": "SUB"
										},
										{
											"begin": 7874,
											"end": 7905,
											"name": "DUP2"
										},
										{
											"begin": 7874,
											"end": 7905,
											"name": "DUP6"
										},
										{
											"begin": 7874,
											"end": 7905,
											"name": "DUP9"
										},
										{
											"begin": 7874,
											"end": 7905,
											"name": "DUP9"
										},
										{
											"begin": 7874,
											"end": 7905,
											"name": "CALL"
										},
										{
											"begin": 7874,
											"end": 7905,
											"name": "SWAP4"
										},
										{
											"begin": 7874,
											"end": 7905,
											"name": "POP"
										},
										{
											"begin": 7874,
											"end": 7905,
											"name": "POP"
										},
										{
											"begin": 7874,
											"end": 7905,
											"name": "POP"
										},
										{
											"begin": 7874,
											"end": 7905,
											"name": "POP"
										},
										{
											"begin": 7874,
											"end": 7905,
											"name": "ISZERO"
										},
										{
											"begin": 7874,
											"end": 7905,
											"name": "ISZERO"
										},
										{
											"begin": 7874,
											"end": 7905,
											"name": "PUSH [tag]",
											"value": "159"
										},
										{
											"begin": 7874,
											"end": 7905,
											"name": "JUMPI"
										},
										{
											"begin": 7874,
											"end": 7905,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7874,
											"end": 7905,
											"name": "DUP1"
										},
										{
											"begin": 7874,
											"end": 7905,
											"name": "REVERT"
										},
										{
											"begin": 7874,
											"end": 7905,
											"name": "tag",
											"value": "159"
										},
										{
											"begin": 7874,
											"end": 7905,
											"name": "JUMPDEST"
										},
										{
											"begin": 8015,
											"end": 8030,
											"name": "TIMESTAMP"
										},
										{
											"begin": 8003,
											"end": 8013,
											"name": "DUP2"
										},
										{
											"begin": 7991,
											"end": 8001,
											"name": "CALLER"
										},
										{
											"begin": 7967,
											"end": 8031,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7967,
											"end": 8031,
											"name": "AND"
										},
										{
											"begin": 7967,
											"end": 8031,
											"name": "PUSH",
											"value": "566803F6E271B911C84F87631BCD310D6A6510BF8882577A96FC76975703E431"
										},
										{
											"begin": 7967,
											"end": 8031,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7967,
											"end": 8031,
											"name": "MLOAD"
										},
										{
											"begin": 7967,
											"end": 8031,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7967,
											"end": 8031,
											"name": "MLOAD"
										},
										{
											"begin": 7967,
											"end": 8031,
											"name": "DUP1"
										},
										{
											"begin": 7967,
											"end": 8031,
											"name": "SWAP2"
										},
										{
											"begin": 7967,
											"end": 8031,
											"name": "SUB"
										},
										{
											"begin": 7967,
											"end": 8031,
											"name": "SWAP1"
										},
										{
											"begin": 7967,
											"end": 8031,
											"name": "LOG4"
										},
										{
											"begin": 7777,
											"end": 8047,
											"name": "tag",
											"value": "158"
										},
										{
											"begin": 7777,
											"end": 8047,
											"name": "JUMPDEST"
										},
										{
											"begin": 8124,
											"end": 8139,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 8116,
											"end": 8121,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 8116,
											"end": 8121,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 8116,
											"end": 8139,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 8116,
											"end": 8139,
											"name": "EXP"
										},
										{
											"begin": 8116,
											"end": 8139,
											"name": "DUP2"
										},
										{
											"begin": 8116,
											"end": 8139,
											"name": "SLOAD"
										},
										{
											"begin": 8116,
											"end": 8139,
											"name": "DUP2"
										},
										{
											"begin": 8116,
											"end": 8139,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 8116,
											"end": 8139,
											"name": "MUL"
										},
										{
											"begin": 8116,
											"end": 8139,
											"name": "NOT"
										},
										{
											"begin": 8116,
											"end": 8139,
											"name": "AND"
										},
										{
											"begin": 8116,
											"end": 8139,
											"name": "SWAP1"
										},
										{
											"begin": 8116,
											"end": 8139,
											"name": "DUP4"
										},
										{
											"begin": 8116,
											"end": 8139,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 8116,
											"end": 8139,
											"name": "DUP2"
										},
										{
											"begin": 8116,
											"end": 8139,
											"name": "GT"
										},
										{
											"begin": 8116,
											"end": 8139,
											"name": "ISZERO"
										},
										{
											"begin": 8116,
											"end": 8139,
											"name": "PUSH [tag]",
											"value": "160"
										},
										{
											"begin": 8116,
											"end": 8139,
											"name": "JUMPI"
										},
										{
											"begin": 8116,
											"end": 8139,
											"name": "INVALID"
										},
										{
											"begin": 8116,
											"end": 8139,
											"name": "tag",
											"value": "160"
										},
										{
											"begin": 8116,
											"end": 8139,
											"name": "JUMPDEST"
										},
										{
											"begin": 8116,
											"end": 8139,
											"name": "MUL"
										},
										{
											"begin": 8116,
											"end": 8139,
											"name": "OR"
										},
										{
											"begin": 8116,
											"end": 8139,
											"name": "SWAP1"
										},
										{
											"begin": 8116,
											"end": 8139,
											"name": "SSTORE"
										},
										{
											"begin": 8116,
											"end": 8139,
											"name": "POP"
										},
										{
											"begin": 8219,
											"end": 8234,
											"name": "TIMESTAMP"
										},
										{
											"begin": 8212,
											"end": 8217,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 8212,
											"end": 8217,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 8212,
											"end": 8217,
											"name": "SWAP1"
										},
										{
											"begin": 8212,
											"end": 8217,
											"name": "SLOAD"
										},
										{
											"begin": 8212,
											"end": 8217,
											"name": "SWAP1"
										},
										{
											"begin": 8212,
											"end": 8217,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 8212,
											"end": 8217,
											"name": "EXP"
										},
										{
											"begin": 8212,
											"end": 8217,
											"name": "SWAP1"
										},
										{
											"begin": 8212,
											"end": 8217,
											"name": "DIV"
										},
										{
											"begin": 8212,
											"end": 8217,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 8212,
											"end": 8217,
											"name": "AND"
										},
										{
											"begin": 8190,
											"end": 8235,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 8190,
											"end": 8235,
											"name": "DUP2"
										},
										{
											"begin": 8190,
											"end": 8235,
											"name": "GT"
										},
										{
											"begin": 8190,
											"end": 8235,
											"name": "ISZERO"
										},
										{
											"begin": 8190,
											"end": 8235,
											"name": "PUSH [tag]",
											"value": "161"
										},
										{
											"begin": 8190,
											"end": 8235,
											"name": "JUMPI"
										},
										{
											"begin": 8190,
											"end": 8235,
											"name": "INVALID"
										},
										{
											"begin": 8190,
											"end": 8235,
											"name": "tag",
											"value": "161"
										},
										{
											"begin": 8190,
											"end": 8235,
											"name": "JUMPDEST"
										},
										{
											"begin": 8190,
											"end": 8235,
											"name": "PUSH",
											"value": "AAAE373901E745122C2E0925AD006227969C6CD190B7D5EA2FB7FDBD1D955B35"
										},
										{
											"begin": 8190,
											"end": 8235,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8190,
											"end": 8235,
											"name": "MLOAD"
										},
										{
											"begin": 8190,
											"end": 8235,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8190,
											"end": 8235,
											"name": "MLOAD"
										},
										{
											"begin": 8190,
											"end": 8235,
											"name": "DUP1"
										},
										{
											"begin": 8190,
											"end": 8235,
											"name": "SWAP2"
										},
										{
											"begin": 8190,
											"end": 8235,
											"name": "SUB"
										},
										{
											"begin": 8190,
											"end": 8235,
											"name": "SWAP1"
										},
										{
											"begin": 8190,
											"end": 8235,
											"name": "LOG3"
										},
										{
											"begin": 7316,
											"end": 8247,
											"name": "tag",
											"value": "153"
										},
										{
											"begin": 7316,
											"end": 8247,
											"name": "JUMPDEST"
										},
										{
											"begin": 8408,
											"end": 8412,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 8386,
											"end": 8393,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 8386,
											"end": 8405,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8394,
											"end": 8404,
											"name": "CALLER"
										},
										{
											"begin": 8386,
											"end": 8405,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8386,
											"end": 8405,
											"name": "AND"
										},
										{
											"begin": 8386,
											"end": 8405,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8386,
											"end": 8405,
											"name": "AND"
										},
										{
											"begin": 8386,
											"end": 8405,
											"name": "DUP2"
										},
										{
											"begin": 8386,
											"end": 8405,
											"name": "MSTORE"
										},
										{
											"begin": 8386,
											"end": 8405,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8386,
											"end": 8405,
											"name": "ADD"
										},
										{
											"begin": 8386,
											"end": 8405,
											"name": "SWAP1"
										},
										{
											"begin": 8386,
											"end": 8405,
											"name": "DUP2"
										},
										{
											"begin": 8386,
											"end": 8405,
											"name": "MSTORE"
										},
										{
											"begin": 8386,
											"end": 8405,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8386,
											"end": 8405,
											"name": "ADD"
										},
										{
											"begin": 8386,
											"end": 8405,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8386,
											"end": 8405,
											"name": "KECCAK256"
										},
										{
											"begin": 8386,
											"end": 8405,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8386,
											"end": 8412,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 8386,
											"end": 8412,
											"name": "EXP"
										},
										{
											"begin": 8386,
											"end": 8412,
											"name": "DUP2"
										},
										{
											"begin": 8386,
											"end": 8412,
											"name": "SLOAD"
										},
										{
											"begin": 8386,
											"end": 8412,
											"name": "DUP2"
										},
										{
											"begin": 8386,
											"end": 8412,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 8386,
											"end": 8412,
											"name": "MUL"
										},
										{
											"begin": 8386,
											"end": 8412,
											"name": "NOT"
										},
										{
											"begin": 8386,
											"end": 8412,
											"name": "AND"
										},
										{
											"begin": 8386,
											"end": 8412,
											"name": "SWAP1"
										},
										{
											"begin": 8386,
											"end": 8412,
											"name": "DUP4"
										},
										{
											"begin": 8386,
											"end": 8412,
											"name": "ISZERO"
										},
										{
											"begin": 8386,
											"end": 8412,
											"name": "ISZERO"
										},
										{
											"begin": 8386,
											"end": 8412,
											"name": "MUL"
										},
										{
											"begin": 8386,
											"end": 8412,
											"name": "OR"
										},
										{
											"begin": 8386,
											"end": 8412,
											"name": "SWAP1"
										},
										{
											"begin": 8386,
											"end": 8412,
											"name": "SSTORE"
										},
										{
											"begin": 8386,
											"end": 8412,
											"name": "POP"
										},
										{
											"begin": 8466,
											"end": 8478,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 8466,
											"end": 8478,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8466,
											"end": 8480,
											"name": "DUP2"
										},
										{
											"begin": 8466,
											"end": 8480,
											"name": "SLOAD"
										},
										{
											"begin": 8466,
											"end": 8480,
											"name": "DUP1"
										},
										{
											"begin": 8466,
											"end": 8480,
											"name": "SWAP3"
										},
										{
											"begin": 8466,
											"end": 8480,
											"name": "SWAP2"
										},
										{
											"begin": 8466,
											"end": 8480,
											"name": "SWAP1"
										},
										{
											"begin": 8466,
											"end": 8480,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 8466,
											"end": 8480,
											"name": "ADD"
										},
										{
											"begin": 8466,
											"end": 8480,
											"name": "SWAP2"
										},
										{
											"begin": 8466,
											"end": 8480,
											"name": "SWAP1"
										},
										{
											"begin": 8466,
											"end": 8480,
											"name": "POP"
										},
										{
											"begin": 8466,
											"end": 8480,
											"name": "SSTORE"
										},
										{
											"begin": 8466,
											"end": 8480,
											"name": "POP"
										},
										{
											"begin": 8588,
											"end": 8652,
											"name": "PUSH [tag]",
											"value": "162"
										},
										{
											"begin": 8626,
											"end": 8651,
											"name": "PUSH [tag]",
											"value": "163"
										},
										{
											"begin": 8640,
											"end": 8650,
											"name": "DUP3"
										},
										{
											"begin": 8626,
											"end": 8635,
											"name": "CALLVALUE"
										},
										{
											"begin": 8626,
											"end": 8639,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 8626,
											"end": 8639,
											"name": "SWAP1"
										},
										{
											"begin": 8626,
											"end": 8651,
											"name": "SWAP2"
										},
										{
											"begin": 8626,
											"end": 8651,
											"name": "SWAP1"
										},
										{
											"begin": 8626,
											"end": 8651,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8626,
											"end": 8651,
											"name": "AND"
										},
										{
											"begin": 8626,
											"end": 8651,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8626,
											"end": 8651,
											"name": "tag",
											"value": "163"
										},
										{
											"begin": 8626,
											"end": 8651,
											"name": "JUMPDEST"
										},
										{
											"begin": 8588,
											"end": 8609,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 8588,
											"end": 8621,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8610,
											"end": 8620,
											"name": "CALLER"
										},
										{
											"begin": 8588,
											"end": 8621,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8588,
											"end": 8621,
											"name": "AND"
										},
										{
											"begin": 8588,
											"end": 8621,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8588,
											"end": 8621,
											"name": "AND"
										},
										{
											"begin": 8588,
											"end": 8621,
											"name": "DUP2"
										},
										{
											"begin": 8588,
											"end": 8621,
											"name": "MSTORE"
										},
										{
											"begin": 8588,
											"end": 8621,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8588,
											"end": 8621,
											"name": "ADD"
										},
										{
											"begin": 8588,
											"end": 8621,
											"name": "SWAP1"
										},
										{
											"begin": 8588,
											"end": 8621,
											"name": "DUP2"
										},
										{
											"begin": 8588,
											"end": 8621,
											"name": "MSTORE"
										},
										{
											"begin": 8588,
											"end": 8621,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8588,
											"end": 8621,
											"name": "ADD"
										},
										{
											"begin": 8588,
											"end": 8621,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8588,
											"end": 8621,
											"name": "KECCAK256"
										},
										{
											"begin": 8588,
											"end": 8621,
											"name": "SLOAD"
										},
										{
											"begin": 8588,
											"end": 8625,
											"name": "PUSH [tag]",
											"value": "104"
										},
										{
											"begin": 8588,
											"end": 8625,
											"name": "SWAP1"
										},
										{
											"begin": 8588,
											"end": 8652,
											"name": "SWAP2"
										},
										{
											"begin": 8588,
											"end": 8652,
											"name": "SWAP1"
										},
										{
											"begin": 8588,
											"end": 8652,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8588,
											"end": 8652,
											"name": "AND"
										},
										{
											"begin": 8588,
											"end": 8652,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8588,
											"end": 8652,
											"name": "tag",
											"value": "162"
										},
										{
											"begin": 8588,
											"end": 8652,
											"name": "JUMPDEST"
										},
										{
											"begin": 8552,
											"end": 8573,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 8552,
											"end": 8585,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8574,
											"end": 8584,
											"name": "CALLER"
										},
										{
											"begin": 8552,
											"end": 8585,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8552,
											"end": 8585,
											"name": "AND"
										},
										{
											"begin": 8552,
											"end": 8585,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8552,
											"end": 8585,
											"name": "AND"
										},
										{
											"begin": 8552,
											"end": 8585,
											"name": "DUP2"
										},
										{
											"begin": 8552,
											"end": 8585,
											"name": "MSTORE"
										},
										{
											"begin": 8552,
											"end": 8585,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8552,
											"end": 8585,
											"name": "ADD"
										},
										{
											"begin": 8552,
											"end": 8585,
											"name": "SWAP1"
										},
										{
											"begin": 8552,
											"end": 8585,
											"name": "DUP2"
										},
										{
											"begin": 8552,
											"end": 8585,
											"name": "MSTORE"
										},
										{
											"begin": 8552,
											"end": 8585,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8552,
											"end": 8585,
											"name": "ADD"
										},
										{
											"begin": 8552,
											"end": 8585,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8552,
											"end": 8585,
											"name": "KECCAK256"
										},
										{
											"begin": 8552,
											"end": 8652,
											"name": "DUP2"
										},
										{
											"begin": 8552,
											"end": 8652,
											"name": "SWAP1"
										},
										{
											"begin": 8552,
											"end": 8652,
											"name": "SSTORE"
										},
										{
											"begin": 8552,
											"end": 8652,
											"name": "POP"
										},
										{
											"begin": 8764,
											"end": 8779,
											"name": "TIMESTAMP"
										},
										{
											"begin": 8737,
											"end": 8762,
											"name": "PUSH [tag]",
											"value": "164"
										},
										{
											"begin": 8751,
											"end": 8761,
											"name": "DUP3"
										},
										{
											"begin": 8737,
											"end": 8746,
											"name": "CALLVALUE"
										},
										{
											"begin": 8737,
											"end": 8750,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 8737,
											"end": 8750,
											"name": "SWAP1"
										},
										{
											"begin": 8737,
											"end": 8762,
											"name": "SWAP2"
										},
										{
											"begin": 8737,
											"end": 8762,
											"name": "SWAP1"
										},
										{
											"begin": 8737,
											"end": 8762,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8737,
											"end": 8762,
											"name": "AND"
										},
										{
											"begin": 8737,
											"end": 8762,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8737,
											"end": 8762,
											"name": "tag",
											"value": "164"
										},
										{
											"begin": 8737,
											"end": 8762,
											"name": "JUMPDEST"
										},
										{
											"begin": 8725,
											"end": 8735,
											"name": "CALLER"
										},
										{
											"begin": 8705,
											"end": 8780,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8705,
											"end": 8780,
											"name": "AND"
										},
										{
											"begin": 8705,
											"end": 8780,
											"name": "PUSH",
											"value": "1B0969CE7F5B05C5E0969329A05CDBD7E2E2F6CEE33BA26FD6E6BBCFF82312CD"
										},
										{
											"begin": 8705,
											"end": 8780,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8705,
											"end": 8780,
											"name": "MLOAD"
										},
										{
											"begin": 8705,
											"end": 8780,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8705,
											"end": 8780,
											"name": "MLOAD"
										},
										{
											"begin": 8705,
											"end": 8780,
											"name": "DUP1"
										},
										{
											"begin": 8705,
											"end": 8780,
											"name": "SWAP2"
										},
										{
											"begin": 8705,
											"end": 8780,
											"name": "SUB"
										},
										{
											"begin": 8705,
											"end": 8780,
											"name": "SWAP1"
										},
										{
											"begin": 8705,
											"end": 8780,
											"name": "LOG4"
										},
										{
											"begin": 7072,
											"end": 8788,
											"name": "POP"
										},
										{
											"begin": 7072,
											"end": 8788,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12478,
											"end": 13696,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 12478,
											"end": 13696,
											"name": "JUMPDEST"
										},
										{
											"begin": 12769,
											"end": 12792,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3958,
											"end": 3962,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3948,
											"end": 3962,
											"name": "ISZERO"
										},
										{
											"begin": 3948,
											"end": 3962,
											"name": "ISZERO"
										},
										{
											"begin": 3948,
											"end": 3954,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 3948,
											"end": 3954,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3948,
											"end": 3954,
											"name": "SWAP1"
										},
										{
											"begin": 3948,
											"end": 3954,
											"name": "SLOAD"
										},
										{
											"begin": 3948,
											"end": 3954,
											"name": "SWAP1"
										},
										{
											"begin": 3948,
											"end": 3954,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3948,
											"end": 3954,
											"name": "EXP"
										},
										{
											"begin": 3948,
											"end": 3954,
											"name": "SWAP1"
										},
										{
											"begin": 3948,
											"end": 3954,
											"name": "DIV"
										},
										{
											"begin": 3948,
											"end": 3954,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3948,
											"end": 3954,
											"name": "AND"
										},
										{
											"begin": 3948,
											"end": 3962,
											"name": "ISZERO"
										},
										{
											"begin": 3948,
											"end": 3962,
											"name": "ISZERO"
										},
										{
											"begin": 3948,
											"end": 3962,
											"name": "EQ"
										},
										{
											"begin": 3940,
											"end": 3963,
											"name": "ISZERO"
										},
										{
											"begin": 3940,
											"end": 3963,
											"name": "ISZERO"
										},
										{
											"begin": 3940,
											"end": 3963,
											"name": "PUSH [tag]",
											"value": "166"
										},
										{
											"begin": 3940,
											"end": 3963,
											"name": "JUMPI"
										},
										{
											"begin": 3940,
											"end": 3963,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3940,
											"end": 3963,
											"name": "DUP1"
										},
										{
											"begin": 3940,
											"end": 3963,
											"name": "REVERT"
										},
										{
											"begin": 3940,
											"end": 3963,
											"name": "tag",
											"value": "166"
										},
										{
											"begin": 3940,
											"end": 3963,
											"name": "JUMPDEST"
										},
										{
											"begin": 4149,
											"end": 4153,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4126,
											"end": 4153,
											"name": "ISZERO"
										},
										{
											"begin": 4126,
											"end": 4153,
											"name": "ISZERO"
										},
										{
											"begin": 4126,
											"end": 4133,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4134,
											"end": 4144,
											"name": "CALLER"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "AND"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "AND"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "DUP2"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "MSTORE"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "ADD"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "SWAP1"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "DUP2"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "MSTORE"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "ADD"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "KECCAK256"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "SWAP1"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "SLOAD"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "SWAP1"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "EXP"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "SWAP1"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "DIV"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "AND"
										},
										{
											"begin": 4126,
											"end": 4153,
											"name": "ISZERO"
										},
										{
											"begin": 4126,
											"end": 4153,
											"name": "ISZERO"
										},
										{
											"begin": 4126,
											"end": 4153,
											"name": "EQ"
										},
										{
											"begin": 4118,
											"end": 4154,
											"name": "ISZERO"
										},
										{
											"begin": 4118,
											"end": 4154,
											"name": "ISZERO"
										},
										{
											"begin": 4118,
											"end": 4154,
											"name": "PUSH [tag]",
											"value": "168"
										},
										{
											"begin": 4118,
											"end": 4154,
											"name": "JUMPI"
										},
										{
											"begin": 4118,
											"end": 4154,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4118,
											"end": 4154,
											"name": "DUP1"
										},
										{
											"begin": 4118,
											"end": 4154,
											"name": "REVERT"
										},
										{
											"begin": 4118,
											"end": 4154,
											"name": "tag",
											"value": "168"
										},
										{
											"begin": 4118,
											"end": 4154,
											"name": "JUMPDEST"
										},
										{
											"begin": 4239,
											"end": 4260,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 4230,
											"end": 4260,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 4230,
											"end": 4260,
											"name": "DUP2"
										},
										{
											"begin": 4230,
											"end": 4260,
											"name": "GT"
										},
										{
											"begin": 4230,
											"end": 4260,
											"name": "ISZERO"
										},
										{
											"begin": 4230,
											"end": 4260,
											"name": "PUSH [tag]",
											"value": "170"
										},
										{
											"begin": 4230,
											"end": 4260,
											"name": "JUMPI"
										},
										{
											"begin": 4230,
											"end": 4260,
											"name": "INVALID"
										},
										{
											"begin": 4230,
											"end": 4260,
											"name": "tag",
											"value": "170"
										},
										{
											"begin": 4230,
											"end": 4260,
											"name": "JUMPDEST"
										},
										{
											"begin": 4230,
											"end": 4235,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 4230,
											"end": 4235,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4230,
											"end": 4235,
											"name": "SWAP1"
										},
										{
											"begin": 4230,
											"end": 4235,
											"name": "SLOAD"
										},
										{
											"begin": 4230,
											"end": 4235,
											"name": "SWAP1"
										},
										{
											"begin": 4230,
											"end": 4235,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4230,
											"end": 4235,
											"name": "EXP"
										},
										{
											"begin": 4230,
											"end": 4235,
											"name": "SWAP1"
										},
										{
											"begin": 4230,
											"end": 4235,
											"name": "DIV"
										},
										{
											"begin": 4230,
											"end": 4235,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 4230,
											"end": 4235,
											"name": "AND"
										},
										{
											"begin": 4230,
											"end": 4260,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 4230,
											"end": 4260,
											"name": "DUP2"
										},
										{
											"begin": 4230,
											"end": 4260,
											"name": "GT"
										},
										{
											"begin": 4230,
											"end": 4260,
											"name": "ISZERO"
										},
										{
											"begin": 4230,
											"end": 4260,
											"name": "PUSH [tag]",
											"value": "171"
										},
										{
											"begin": 4230,
											"end": 4260,
											"name": "JUMPI"
										},
										{
											"begin": 4230,
											"end": 4260,
											"name": "INVALID"
										},
										{
											"begin": 4230,
											"end": 4260,
											"name": "tag",
											"value": "171"
										},
										{
											"begin": 4230,
											"end": 4260,
											"name": "JUMPDEST"
										},
										{
											"begin": 4230,
											"end": 4260,
											"name": "EQ"
										},
										{
											"begin": 4222,
											"end": 4261,
											"name": "ISZERO"
										},
										{
											"begin": 4222,
											"end": 4261,
											"name": "ISZERO"
										},
										{
											"begin": 4222,
											"end": 4261,
											"name": "PUSH [tag]",
											"value": "172"
										},
										{
											"begin": 4222,
											"end": 4261,
											"name": "JUMPI"
										},
										{
											"begin": 4222,
											"end": 4261,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4222,
											"end": 4261,
											"name": "DUP1"
										},
										{
											"begin": 4222,
											"end": 4261,
											"name": "REVERT"
										},
										{
											"begin": 4222,
											"end": 4261,
											"name": "tag",
											"value": "172"
										},
										{
											"begin": 4222,
											"end": 4261,
											"name": "JUMPDEST"
										},
										{
											"begin": 4316,
											"end": 4317,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4280,
											"end": 4301,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 4280,
											"end": 4313,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4312,
											"name": "CALLER"
										},
										{
											"begin": 4280,
											"end": 4313,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4280,
											"end": 4313,
											"name": "AND"
										},
										{
											"begin": 4280,
											"end": 4313,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4280,
											"end": 4313,
											"name": "AND"
										},
										{
											"begin": 4280,
											"end": 4313,
											"name": "DUP2"
										},
										{
											"begin": 4280,
											"end": 4313,
											"name": "MSTORE"
										},
										{
											"begin": 4280,
											"end": 4313,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4280,
											"end": 4313,
											"name": "ADD"
										},
										{
											"begin": 4280,
											"end": 4313,
											"name": "SWAP1"
										},
										{
											"begin": 4280,
											"end": 4313,
											"name": "DUP2"
										},
										{
											"begin": 4280,
											"end": 4313,
											"name": "MSTORE"
										},
										{
											"begin": 4280,
											"end": 4313,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4280,
											"end": 4313,
											"name": "ADD"
										},
										{
											"begin": 4280,
											"end": 4313,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4280,
											"end": 4313,
											"name": "KECCAK256"
										},
										{
											"begin": 4280,
											"end": 4313,
											"name": "SLOAD"
										},
										{
											"begin": 4280,
											"end": 4317,
											"name": "GT"
										},
										{
											"begin": 4272,
											"end": 4318,
											"name": "ISZERO"
										},
										{
											"begin": 4272,
											"end": 4318,
											"name": "ISZERO"
										},
										{
											"begin": 4272,
											"end": 4318,
											"name": "PUSH [tag]",
											"value": "173"
										},
										{
											"begin": 4272,
											"end": 4318,
											"name": "JUMPI"
										},
										{
											"begin": 4272,
											"end": 4318,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4272,
											"end": 4318,
											"name": "DUP1"
										},
										{
											"begin": 4272,
											"end": 4318,
											"name": "REVERT"
										},
										{
											"begin": 4272,
											"end": 4318,
											"name": "tag",
											"value": "173"
										},
										{
											"begin": 4272,
											"end": 4318,
											"name": "JUMPDEST"
										},
										{
											"begin": 12810,
											"end": 12822,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 12810,
											"end": 12822,
											"name": "SLOAD"
										},
										{
											"begin": 12795,
											"end": 12807,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 12795,
											"end": 12807,
											"name": "SLOAD"
										},
										{
											"begin": 12795,
											"end": 12822,
											"name": "DUP2"
										},
										{
											"begin": 12795,
											"end": 12822,
											"name": "ISZERO"
										},
										{
											"begin": 12795,
											"end": 12822,
											"name": "ISZERO"
										},
										{
											"begin": 12795,
											"end": 12822,
											"name": "PUSH [tag]",
											"value": "175"
										},
										{
											"begin": 12795,
											"end": 12822,
											"name": "JUMPI"
										},
										{
											"begin": 12795,
											"end": 12822,
											"name": "INVALID"
										},
										{
											"begin": 12795,
											"end": 12822,
											"name": "tag",
											"value": "175"
										},
										{
											"begin": 12795,
											"end": 12822,
											"name": "JUMPDEST"
										},
										{
											"begin": 12795,
											"end": 12822,
											"name": "DIV"
										},
										{
											"begin": 12769,
											"end": 12822,
											"name": "SWAP1"
										},
										{
											"begin": 12769,
											"end": 12822,
											"name": "POP"
										},
										{
											"begin": 12928,
											"end": 12946,
											"name": "DUP1"
										},
										{
											"begin": 12912,
											"end": 12916,
											"name": "ADDRESS"
										},
										{
											"begin": 12912,
											"end": 12924,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12912,
											"end": 12924,
											"name": "AND"
										},
										{
											"begin": 12912,
											"end": 12924,
											"name": "BALANCE"
										},
										{
											"begin": 12912,
											"end": 12946,
											"name": "LT"
										},
										{
											"begin": 12912,
											"end": 12946,
											"name": "ISZERO"
										},
										{
											"begin": 12905,
											"end": 12947,
											"name": "ISZERO"
										},
										{
											"begin": 12905,
											"end": 12947,
											"name": "ISZERO"
										},
										{
											"begin": 12905,
											"end": 12947,
											"name": "PUSH [tag]",
											"value": "176"
										},
										{
											"begin": 12905,
											"end": 12947,
											"name": "JUMPI"
										},
										{
											"begin": 12905,
											"end": 12947,
											"name": "INVALID"
										},
										{
											"begin": 12905,
											"end": 12947,
											"name": "tag",
											"value": "176"
										},
										{
											"begin": 12905,
											"end": 12947,
											"name": "JUMPDEST"
										},
										{
											"begin": 13028,
											"end": 13038,
											"name": "CALLER"
										},
										{
											"begin": 13028,
											"end": 13047,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13028,
											"end": 13047,
											"name": "AND"
										},
										{
											"begin": 13028,
											"end": 13067,
											"name": "PUSH",
											"value": "8FC"
										},
										{
											"begin": 13048,
											"end": 13066,
											"name": "DUP3"
										},
										{
											"begin": 13028,
											"end": 13067,
											"name": "SWAP1"
										},
										{
											"begin": 13028,
											"end": 13067,
											"name": "DUP2"
										},
										{
											"begin": 13028,
											"end": 13067,
											"name": "ISZERO"
										},
										{
											"begin": 13028,
											"end": 13067,
											"name": "MUL"
										},
										{
											"begin": 13028,
											"end": 13067,
											"name": "SWAP1"
										},
										{
											"begin": 13028,
											"end": 13067,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13028,
											"end": 13067,
											"name": "MLOAD"
										},
										{
											"begin": 13028,
											"end": 13067,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13028,
											"end": 13067,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13028,
											"end": 13067,
											"name": "MLOAD"
										},
										{
											"begin": 13028,
											"end": 13067,
											"name": "DUP1"
										},
										{
											"begin": 13028,
											"end": 13067,
											"name": "DUP4"
										},
										{
											"begin": 13028,
											"end": 13067,
											"name": "SUB"
										},
										{
											"begin": 13028,
											"end": 13067,
											"name": "DUP2"
										},
										{
											"begin": 13028,
											"end": 13067,
											"name": "DUP6"
										},
										{
											"begin": 13028,
											"end": 13067,
											"name": "DUP9"
										},
										{
											"begin": 13028,
											"end": 13067,
											"name": "DUP9"
										},
										{
											"begin": 13028,
											"end": 13067,
											"name": "CALL"
										},
										{
											"begin": 13028,
											"end": 13067,
											"name": "SWAP4"
										},
										{
											"begin": 13028,
											"end": 13067,
											"name": "POP"
										},
										{
											"begin": 13028,
											"end": 13067,
											"name": "POP"
										},
										{
											"begin": 13028,
											"end": 13067,
											"name": "POP"
										},
										{
											"begin": 13028,
											"end": 13067,
											"name": "POP"
										},
										{
											"begin": 13028,
											"end": 13067,
											"name": "ISZERO"
										},
										{
											"begin": 13028,
											"end": 13067,
											"name": "ISZERO"
										},
										{
											"begin": 13028,
											"end": 13067,
											"name": "PUSH [tag]",
											"value": "177"
										},
										{
											"begin": 13028,
											"end": 13067,
											"name": "JUMPI"
										},
										{
											"begin": 13028,
											"end": 13067,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13028,
											"end": 13067,
											"name": "DUP1"
										},
										{
											"begin": 13028,
											"end": 13067,
											"name": "REVERT"
										},
										{
											"begin": 13028,
											"end": 13067,
											"name": "tag",
											"value": "177"
										},
										{
											"begin": 13028,
											"end": 13067,
											"name": "JUMPDEST"
										},
										{
											"begin": 13172,
											"end": 13187,
											"name": "TIMESTAMP"
										},
										{
											"begin": 13152,
											"end": 13170,
											"name": "DUP2"
										},
										{
											"begin": 13140,
											"end": 13150,
											"name": "CALLER"
										},
										{
											"begin": 13120,
											"end": 13188,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13120,
											"end": 13188,
											"name": "AND"
										},
										{
											"begin": 13120,
											"end": 13188,
											"name": "PUSH",
											"value": "52F6685DF2F773F854B17DB1D82E2352E222010DAAF8175761F02EF8782C403"
										},
										{
											"begin": 13120,
											"end": 13188,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13120,
											"end": 13188,
											"name": "MLOAD"
										},
										{
											"begin": 13120,
											"end": 13188,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13120,
											"end": 13188,
											"name": "MLOAD"
										},
										{
											"begin": 13120,
											"end": 13188,
											"name": "DUP1"
										},
										{
											"begin": 13120,
											"end": 13188,
											"name": "SWAP2"
										},
										{
											"begin": 13120,
											"end": 13188,
											"name": "SUB"
										},
										{
											"begin": 13120,
											"end": 13188,
											"name": "SWAP1"
										},
										{
											"begin": 13120,
											"end": 13188,
											"name": "LOG4"
										},
										{
											"begin": 13275,
											"end": 13276,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13259,
											"end": 13263,
											"name": "ADDRESS"
										},
										{
											"begin": 13259,
											"end": 13271,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13259,
											"end": 13271,
											"name": "AND"
										},
										{
											"begin": 13259,
											"end": 13271,
											"name": "BALANCE"
										},
										{
											"begin": 13259,
											"end": 13276,
											"name": "EQ"
										},
										{
											"begin": 13255,
											"end": 13689,
											"name": "ISZERO"
										},
										{
											"begin": 13255,
											"end": 13689,
											"name": "PUSH [tag]",
											"value": "178"
										},
										{
											"begin": 13255,
											"end": 13689,
											"name": "JUMPI"
										},
										{
											"begin": 13351,
											"end": 13356,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13342,
											"end": 13348,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 13342,
											"end": 13348,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13342,
											"end": 13356,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 13342,
											"end": 13356,
											"name": "EXP"
										},
										{
											"begin": 13342,
											"end": 13356,
											"name": "DUP2"
										},
										{
											"begin": 13342,
											"end": 13356,
											"name": "SLOAD"
										},
										{
											"begin": 13342,
											"end": 13356,
											"name": "DUP2"
										},
										{
											"begin": 13342,
											"end": 13356,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 13342,
											"end": 13356,
											"name": "MUL"
										},
										{
											"begin": 13342,
											"end": 13356,
											"name": "NOT"
										},
										{
											"begin": 13342,
											"end": 13356,
											"name": "AND"
										},
										{
											"begin": 13342,
											"end": 13356,
											"name": "SWAP1"
										},
										{
											"begin": 13342,
											"end": 13356,
											"name": "DUP4"
										},
										{
											"begin": 13342,
											"end": 13356,
											"name": "ISZERO"
										},
										{
											"begin": 13342,
											"end": 13356,
											"name": "ISZERO"
										},
										{
											"begin": 13342,
											"end": 13356,
											"name": "MUL"
										},
										{
											"begin": 13342,
											"end": 13356,
											"name": "OR"
										},
										{
											"begin": 13342,
											"end": 13356,
											"name": "SWAP1"
										},
										{
											"begin": 13342,
											"end": 13356,
											"name": "SSTORE"
										},
										{
											"begin": 13342,
											"end": 13356,
											"name": "POP"
										},
										{
											"begin": 13450,
											"end": 13465,
											"name": "TIMESTAMP"
										},
										{
											"begin": 13442,
											"end": 13448,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 13442,
											"end": 13448,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13442,
											"end": 13448,
											"name": "SWAP1"
										},
										{
											"begin": 13442,
											"end": 13448,
											"name": "SLOAD"
										},
										{
											"begin": 13442,
											"end": 13448,
											"name": "SWAP1"
										},
										{
											"begin": 13442,
											"end": 13448,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 13442,
											"end": 13448,
											"name": "EXP"
										},
										{
											"begin": 13442,
											"end": 13448,
											"name": "SWAP1"
										},
										{
											"begin": 13442,
											"end": 13448,
											"name": "DIV"
										},
										{
											"begin": 13442,
											"end": 13448,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 13442,
											"end": 13448,
											"name": "AND"
										},
										{
											"begin": 13414,
											"end": 13466,
											"name": "ISZERO"
										},
										{
											"begin": 13414,
											"end": 13466,
											"name": "ISZERO"
										},
										{
											"begin": 13414,
											"end": 13466,
											"name": "PUSH",
											"value": "160914EA27C60AA29A5F3A69D74E6069869DE36E38939DE1E0A66B921D8623D2"
										},
										{
											"begin": 13414,
											"end": 13466,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13414,
											"end": 13466,
											"name": "MLOAD"
										},
										{
											"begin": 13414,
											"end": 13466,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13414,
											"end": 13466,
											"name": "MLOAD"
										},
										{
											"begin": 13414,
											"end": 13466,
											"name": "DUP1"
										},
										{
											"begin": 13414,
											"end": 13466,
											"name": "SWAP2"
										},
										{
											"begin": 13414,
											"end": 13466,
											"name": "SUB"
										},
										{
											"begin": 13414,
											"end": 13466,
											"name": "SWAP1"
										},
										{
											"begin": 13414,
											"end": 13466,
											"name": "LOG3"
										},
										{
											"begin": 13568,
											"end": 13581,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 13560,
											"end": 13565,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 13560,
											"end": 13565,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13560,
											"end": 13581,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 13560,
											"end": 13581,
											"name": "EXP"
										},
										{
											"begin": 13560,
											"end": 13581,
											"name": "DUP2"
										},
										{
											"begin": 13560,
											"end": 13581,
											"name": "SLOAD"
										},
										{
											"begin": 13560,
											"end": 13581,
											"name": "DUP2"
										},
										{
											"begin": 13560,
											"end": 13581,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 13560,
											"end": 13581,
											"name": "MUL"
										},
										{
											"begin": 13560,
											"end": 13581,
											"name": "NOT"
										},
										{
											"begin": 13560,
											"end": 13581,
											"name": "AND"
										},
										{
											"begin": 13560,
											"end": 13581,
											"name": "SWAP1"
										},
										{
											"begin": 13560,
											"end": 13581,
											"name": "DUP4"
										},
										{
											"begin": 13560,
											"end": 13581,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 13560,
											"end": 13581,
											"name": "DUP2"
										},
										{
											"begin": 13560,
											"end": 13581,
											"name": "GT"
										},
										{
											"begin": 13560,
											"end": 13581,
											"name": "ISZERO"
										},
										{
											"begin": 13560,
											"end": 13581,
											"name": "PUSH [tag]",
											"value": "179"
										},
										{
											"begin": 13560,
											"end": 13581,
											"name": "JUMPI"
										},
										{
											"begin": 13560,
											"end": 13581,
											"name": "INVALID"
										},
										{
											"begin": 13560,
											"end": 13581,
											"name": "tag",
											"value": "179"
										},
										{
											"begin": 13560,
											"end": 13581,
											"name": "JUMPDEST"
										},
										{
											"begin": 13560,
											"end": 13581,
											"name": "MUL"
										},
										{
											"begin": 13560,
											"end": 13581,
											"name": "OR"
										},
										{
											"begin": 13560,
											"end": 13581,
											"name": "SWAP1"
										},
										{
											"begin": 13560,
											"end": 13581,
											"name": "SSTORE"
										},
										{
											"begin": 13560,
											"end": 13581,
											"name": "POP"
										},
										{
											"begin": 13661,
											"end": 13676,
											"name": "TIMESTAMP"
										},
										{
											"begin": 13654,
											"end": 13659,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 13654,
											"end": 13659,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13654,
											"end": 13659,
											"name": "SWAP1"
										},
										{
											"begin": 13654,
											"end": 13659,
											"name": "SLOAD"
										},
										{
											"begin": 13654,
											"end": 13659,
											"name": "SWAP1"
										},
										{
											"begin": 13654,
											"end": 13659,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 13654,
											"end": 13659,
											"name": "EXP"
										},
										{
											"begin": 13654,
											"end": 13659,
											"name": "SWAP1"
										},
										{
											"begin": 13654,
											"end": 13659,
											"name": "DIV"
										},
										{
											"begin": 13654,
											"end": 13659,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 13654,
											"end": 13659,
											"name": "AND"
										},
										{
											"begin": 13632,
											"end": 13677,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 13632,
											"end": 13677,
											"name": "DUP2"
										},
										{
											"begin": 13632,
											"end": 13677,
											"name": "GT"
										},
										{
											"begin": 13632,
											"end": 13677,
											"name": "ISZERO"
										},
										{
											"begin": 13632,
											"end": 13677,
											"name": "PUSH [tag]",
											"value": "180"
										},
										{
											"begin": 13632,
											"end": 13677,
											"name": "JUMPI"
										},
										{
											"begin": 13632,
											"end": 13677,
											"name": "INVALID"
										},
										{
											"begin": 13632,
											"end": 13677,
											"name": "tag",
											"value": "180"
										},
										{
											"begin": 13632,
											"end": 13677,
											"name": "JUMPDEST"
										},
										{
											"begin": 13632,
											"end": 13677,
											"name": "PUSH",
											"value": "AAAE373901E745122C2E0925AD006227969C6CD190B7D5EA2FB7FDBD1D955B35"
										},
										{
											"begin": 13632,
											"end": 13677,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13632,
											"end": 13677,
											"name": "MLOAD"
										},
										{
											"begin": 13632,
											"end": 13677,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13632,
											"end": 13677,
											"name": "MLOAD"
										},
										{
											"begin": 13632,
											"end": 13677,
											"name": "DUP1"
										},
										{
											"begin": 13632,
											"end": 13677,
											"name": "SWAP2"
										},
										{
											"begin": 13632,
											"end": 13677,
											"name": "SUB"
										},
										{
											"begin": 13632,
											"end": 13677,
											"name": "SWAP1"
										},
										{
											"begin": 13632,
											"end": 13677,
											"name": "LOG3"
										},
										{
											"begin": 13255,
											"end": 13689,
											"name": "tag",
											"value": "178"
										},
										{
											"begin": 13255,
											"end": 13689,
											"name": "JUMPDEST"
										},
										{
											"begin": 12478,
											"end": 13696,
											"name": "POP"
										},
										{
											"begin": 12478,
											"end": 13696,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "JUMPDEST"
										},
										{
											"begin": 14105,
											"end": 14112,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14114,
											"end": 14121,
											"name": "DUP1"
										},
										{
											"begin": 14123,
											"end": 14127,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14129,
											"end": 14133,
											"name": "DUP1"
										},
										{
											"begin": 14135,
											"end": 14139,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14141,
											"end": 14145,
											"name": "DUP1"
										},
										{
											"begin": 14147,
											"end": 14151,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14153,
											"end": 14157,
											"name": "DUP1"
										},
										{
											"begin": 14159,
											"end": 14164,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14166,
											"end": 14170,
											"name": "DUP1"
										},
										{
											"begin": 14172,
											"end": 14176,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14207,
											"end": 14215,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 14207,
											"end": 14215,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14207,
											"end": 14215,
											"name": "SWAP1"
										},
										{
											"begin": 14207,
											"end": 14215,
											"name": "SLOAD"
										},
										{
											"begin": 14207,
											"end": 14215,
											"name": "SWAP1"
										},
										{
											"begin": 14207,
											"end": 14215,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 14207,
											"end": 14215,
											"name": "EXP"
										},
										{
											"begin": 14207,
											"end": 14215,
											"name": "SWAP1"
										},
										{
											"begin": 14207,
											"end": 14215,
											"name": "DIV"
										},
										{
											"begin": 14207,
											"end": 14215,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14207,
											"end": 14215,
											"name": "AND"
										},
										{
											"begin": 14226,
											"end": 14237,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 14226,
											"end": 14237,
											"name": "SLOAD"
										},
										{
											"begin": 14248,
											"end": 14263,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 14248,
											"end": 14263,
											"name": "SLOAD"
										},
										{
											"begin": 14274,
											"end": 14293,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 14274,
											"end": 14293,
											"name": "SLOAD"
										},
										{
											"begin": 14304,
											"end": 14324,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 14304,
											"end": 14324,
											"name": "SLOAD"
										},
										{
											"begin": 14335,
											"end": 14354,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 14335,
											"end": 14354,
											"name": "SLOAD"
										},
										{
											"begin": 14365,
											"end": 14373,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 14365,
											"end": 14373,
											"name": "SLOAD"
										},
										{
											"begin": 14384,
											"end": 14396,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 14384,
											"end": 14396,
											"name": "SLOAD"
										},
										{
											"begin": 14407,
											"end": 14412,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 14407,
											"end": 14412,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 14407,
											"end": 14412,
											"name": "SWAP1"
										},
										{
											"begin": 14407,
											"end": 14412,
											"name": "SLOAD"
										},
										{
											"begin": 14407,
											"end": 14412,
											"name": "SWAP1"
										},
										{
											"begin": 14407,
											"end": 14412,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 14407,
											"end": 14412,
											"name": "EXP"
										},
										{
											"begin": 14407,
											"end": 14412,
											"name": "SWAP1"
										},
										{
											"begin": 14407,
											"end": 14412,
											"name": "DIV"
										},
										{
											"begin": 14407,
											"end": 14412,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 14407,
											"end": 14412,
											"name": "AND"
										},
										{
											"begin": 14423,
											"end": 14429,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 14423,
											"end": 14429,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14423,
											"end": 14429,
											"name": "SWAP1"
										},
										{
											"begin": 14423,
											"end": 14429,
											"name": "SLOAD"
										},
										{
											"begin": 14423,
											"end": 14429,
											"name": "SWAP1"
										},
										{
											"begin": 14423,
											"end": 14429,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 14423,
											"end": 14429,
											"name": "EXP"
										},
										{
											"begin": 14423,
											"end": 14429,
											"name": "SWAP1"
										},
										{
											"begin": 14423,
											"end": 14429,
											"name": "DIV"
										},
										{
											"begin": 14423,
											"end": 14429,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 14423,
											"end": 14429,
											"name": "AND"
										},
										{
											"begin": 14440,
											"end": 14444,
											"name": "ADDRESS"
										},
										{
											"begin": 14440,
											"end": 14452,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14440,
											"end": 14452,
											"name": "AND"
										},
										{
											"begin": 14440,
											"end": 14452,
											"name": "BALANCE"
										},
										{
											"begin": 14189,
											"end": 14463,
											"name": "SWAP11"
										},
										{
											"begin": 14189,
											"end": 14463,
											"name": "POP"
										},
										{
											"begin": 14189,
											"end": 14463,
											"name": "SWAP11"
										},
										{
											"begin": 14189,
											"end": 14463,
											"name": "POP"
										},
										{
											"begin": 14189,
											"end": 14463,
											"name": "SWAP11"
										},
										{
											"begin": 14189,
											"end": 14463,
											"name": "POP"
										},
										{
											"begin": 14189,
											"end": 14463,
											"name": "SWAP11"
										},
										{
											"begin": 14189,
											"end": 14463,
											"name": "POP"
										},
										{
											"begin": 14189,
											"end": 14463,
											"name": "SWAP11"
										},
										{
											"begin": 14189,
											"end": 14463,
											"name": "POP"
										},
										{
											"begin": 14189,
											"end": 14463,
											"name": "SWAP11"
										},
										{
											"begin": 14189,
											"end": 14463,
											"name": "POP"
										},
										{
											"begin": 14189,
											"end": 14463,
											"name": "SWAP11"
										},
										{
											"begin": 14189,
											"end": 14463,
											"name": "POP"
										},
										{
											"begin": 14189,
											"end": 14463,
											"name": "SWAP11"
										},
										{
											"begin": 14189,
											"end": 14463,
											"name": "POP"
										},
										{
											"begin": 14189,
											"end": 14463,
											"name": "SWAP11"
										},
										{
											"begin": 14189,
											"end": 14463,
											"name": "POP"
										},
										{
											"begin": 14189,
											"end": 14463,
											"name": "SWAP11"
										},
										{
											"begin": 14189,
											"end": 14463,
											"name": "POP"
										},
										{
											"begin": 14189,
											"end": 14463,
											"name": "SWAP11"
										},
										{
											"begin": 14189,
											"end": 14463,
											"name": "POP"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "SWAP1"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "SWAP2"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "SWAP3"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "SWAP4"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "SWAP5"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "SWAP6"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "SWAP7"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "SWAP8"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "SWAP9"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "SWAP10"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "SWAP11"
										},
										{
											"begin": 14059,
											"end": 14471,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "JUMPDEST"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "DUP1"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "SWAP1"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "SLOAD"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "SWAP1"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "EXP"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "SWAP1"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "DIV"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "AND"
										},
										{
											"begin": 218,
											"end": 237,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 218,
											"end": 237,
											"name": "AND"
										},
										{
											"begin": 218,
											"end": 228,
											"name": "CALLER"
										},
										{
											"begin": 218,
											"end": 237,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 218,
											"end": 237,
											"name": "AND"
										},
										{
											"begin": 218,
											"end": 237,
											"name": "EQ"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "ISZERO"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "ISZERO"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "PUSH [tag]",
											"value": "183"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "JUMPI"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "DUP1"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "REVERT"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "tag",
											"value": "183"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "JUMPDEST"
										},
										{
											"begin": 322,
											"end": 332,
											"name": "DUP1"
										},
										{
											"begin": 309,
											"end": 333,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 309,
											"end": 333,
											"name": "AND"
										},
										{
											"begin": 309,
											"end": 333,
											"name": "SELFDESTRUCT"
										},
										{
											"begin": 481,
											"end": 604,
											"name": "tag",
											"value": "96"
										},
										{
											"begin": 481,
											"end": 604,
											"name": "JUMPDEST"
										},
										{
											"begin": 539,
											"end": 546,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 571,
											"end": 572,
											"name": "DUP3"
										},
										{
											"begin": 566,
											"end": 567,
											"name": "DUP3"
										},
										{
											"begin": 566,
											"end": 572,
											"name": "GT"
										},
										{
											"begin": 566,
											"end": 572,
											"name": "ISZERO"
										},
										{
											"begin": 559,
											"end": 573,
											"name": "ISZERO"
										},
										{
											"begin": 559,
											"end": 573,
											"name": "ISZERO"
										},
										{
											"begin": 559,
											"end": 573,
											"name": "PUSH [tag]",
											"value": "186"
										},
										{
											"begin": 559,
											"end": 573,
											"name": "JUMPI"
										},
										{
											"begin": 559,
											"end": 573,
											"name": "INVALID"
										},
										{
											"begin": 559,
											"end": 573,
											"name": "tag",
											"value": "186"
										},
										{
											"begin": 559,
											"end": 573,
											"name": "JUMPDEST"
										},
										{
											"begin": 595,
											"end": 596,
											"name": "DUP2"
										},
										{
											"begin": 591,
											"end": 592,
											"name": "DUP4"
										},
										{
											"begin": 591,
											"end": 596,
											"name": "SUB"
										},
										{
											"begin": 584,
											"end": 596,
											"name": "SWAP1"
										},
										{
											"begin": 584,
											"end": 596,
											"name": "POP"
										},
										{
											"begin": 481,
											"end": 604,
											"name": "SWAP3"
										},
										{
											"begin": 481,
											"end": 604,
											"name": "SWAP2"
										},
										{
											"begin": 481,
											"end": 604,
											"name": "POP"
										},
										{
											"begin": 481,
											"end": 604,
											"name": "POP"
										},
										{
											"begin": 481,
											"end": 604,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 622,
											"end": 769,
											"name": "tag",
											"value": "104"
										},
										{
											"begin": 622,
											"end": 769,
											"name": "JUMPDEST"
										},
										{
											"begin": 680,
											"end": 687,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 700,
											"end": 709,
											"name": "DUP1"
										},
										{
											"begin": 716,
											"end": 717,
											"name": "DUP3"
										},
										{
											"begin": 712,
											"end": 713,
											"name": "DUP5"
										},
										{
											"begin": 712,
											"end": 717,
											"name": "ADD"
										},
										{
											"begin": 700,
											"end": 717,
											"name": "SWAP1"
										},
										{
											"begin": 700,
											"end": 717,
											"name": "POP"
										},
										{
											"begin": 740,
											"end": 741,
											"name": "DUP4"
										},
										{
											"begin": 735,
											"end": 736,
											"name": "DUP2"
										},
										{
											"begin": 735,
											"end": 741,
											"name": "LT"
										},
										{
											"begin": 735,
											"end": 741,
											"name": "ISZERO"
										},
										{
											"begin": 728,
											"end": 742,
											"name": "ISZERO"
										},
										{
											"begin": 728,
											"end": 742,
											"name": "ISZERO"
										},
										{
											"begin": 728,
											"end": 742,
											"name": "PUSH [tag]",
											"value": "188"
										},
										{
											"begin": 728,
											"end": 742,
											"name": "JUMPI"
										},
										{
											"begin": 728,
											"end": 742,
											"name": "INVALID"
										},
										{
											"begin": 728,
											"end": 742,
											"name": "tag",
											"value": "188"
										},
										{
											"begin": 728,
											"end": 742,
											"name": "JUMPDEST"
										},
										{
											"begin": 760,
											"end": 761,
											"name": "DUP1"
										},
										{
											"begin": 753,
											"end": 761,
											"name": "SWAP2"
										},
										{
											"begin": 753,
											"end": 761,
											"name": "POP"
										},
										{
											"begin": 622,
											"end": 769,
											"name": "POP"
										},
										{
											"begin": 622,
											"end": 769,
											"name": "SWAP3"
										},
										{
											"begin": 622,
											"end": 769,
											"name": "SWAP2"
										},
										{
											"begin": 622,
											"end": 769,
											"name": "POP"
										},
										{
											"begin": 622,
											"end": 769,
											"name": "POP"
										},
										{
											"begin": 622,
											"end": 769,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 15208,
											"end": 15406,
											"name": "tag",
											"value": "121"
										},
										{
											"begin": 15208,
											"end": 15406,
											"name": "JUMPDEST"
										},
										{
											"begin": 15295,
											"end": 15308,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 15287,
											"end": 15292,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 15287,
											"end": 15292,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 15287,
											"end": 15308,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 15287,
											"end": 15308,
											"name": "EXP"
										},
										{
											"begin": 15287,
											"end": 15308,
											"name": "DUP2"
										},
										{
											"begin": 15287,
											"end": 15308,
											"name": "SLOAD"
										},
										{
											"begin": 15287,
											"end": 15308,
											"name": "DUP2"
										},
										{
											"begin": 15287,
											"end": 15308,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 15287,
											"end": 15308,
											"name": "MUL"
										},
										{
											"begin": 15287,
											"end": 15308,
											"name": "NOT"
										},
										{
											"begin": 15287,
											"end": 15308,
											"name": "AND"
										},
										{
											"begin": 15287,
											"end": 15308,
											"name": "SWAP1"
										},
										{
											"begin": 15287,
											"end": 15308,
											"name": "DUP4"
										},
										{
											"begin": 15287,
											"end": 15308,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 15287,
											"end": 15308,
											"name": "DUP2"
										},
										{
											"begin": 15287,
											"end": 15308,
											"name": "GT"
										},
										{
											"begin": 15287,
											"end": 15308,
											"name": "ISZERO"
										},
										{
											"begin": 15287,
											"end": 15308,
											"name": "PUSH [tag]",
											"value": "190"
										},
										{
											"begin": 15287,
											"end": 15308,
											"name": "JUMPI"
										},
										{
											"begin": 15287,
											"end": 15308,
											"name": "INVALID"
										},
										{
											"begin": 15287,
											"end": 15308,
											"name": "tag",
											"value": "190"
										},
										{
											"begin": 15287,
											"end": 15308,
											"name": "JUMPDEST"
										},
										{
											"begin": 15287,
											"end": 15308,
											"name": "MUL"
										},
										{
											"begin": 15287,
											"end": 15308,
											"name": "OR"
										},
										{
											"begin": 15287,
											"end": 15308,
											"name": "SWAP1"
										},
										{
											"begin": 15287,
											"end": 15308,
											"name": "SSTORE"
										},
										{
											"begin": 15287,
											"end": 15308,
											"name": "POP"
										},
										{
											"begin": 15382,
											"end": 15397,
											"name": "TIMESTAMP"
										},
										{
											"begin": 15375,
											"end": 15380,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 15375,
											"end": 15380,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 15375,
											"end": 15380,
											"name": "SWAP1"
										},
										{
											"begin": 15375,
											"end": 15380,
											"name": "SLOAD"
										},
										{
											"begin": 15375,
											"end": 15380,
											"name": "SWAP1"
										},
										{
											"begin": 15375,
											"end": 15380,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 15375,
											"end": 15380,
											"name": "EXP"
										},
										{
											"begin": 15375,
											"end": 15380,
											"name": "SWAP1"
										},
										{
											"begin": 15375,
											"end": 15380,
											"name": "DIV"
										},
										{
											"begin": 15375,
											"end": 15380,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 15375,
											"end": 15380,
											"name": "AND"
										},
										{
											"begin": 15353,
											"end": 15398,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 15353,
											"end": 15398,
											"name": "DUP2"
										},
										{
											"begin": 15353,
											"end": 15398,
											"name": "GT"
										},
										{
											"begin": 15353,
											"end": 15398,
											"name": "ISZERO"
										},
										{
											"begin": 15353,
											"end": 15398,
											"name": "PUSH [tag]",
											"value": "191"
										},
										{
											"begin": 15353,
											"end": 15398,
											"name": "JUMPI"
										},
										{
											"begin": 15353,
											"end": 15398,
											"name": "INVALID"
										},
										{
											"begin": 15353,
											"end": 15398,
											"name": "tag",
											"value": "191"
										},
										{
											"begin": 15353,
											"end": 15398,
											"name": "JUMPDEST"
										},
										{
											"begin": 15353,
											"end": 15398,
											"name": "PUSH",
											"value": "AAAE373901E745122C2E0925AD006227969C6CD190B7D5EA2FB7FDBD1D955B35"
										},
										{
											"begin": 15353,
											"end": 15398,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15353,
											"end": 15398,
											"name": "MLOAD"
										},
										{
											"begin": 15353,
											"end": 15398,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15353,
											"end": 15398,
											"name": "MLOAD"
										},
										{
											"begin": 15353,
											"end": 15398,
											"name": "DUP1"
										},
										{
											"begin": 15353,
											"end": 15398,
											"name": "SWAP2"
										},
										{
											"begin": 15353,
											"end": 15398,
											"name": "SUB"
										},
										{
											"begin": 15353,
											"end": 15398,
											"name": "SWAP1"
										},
										{
											"begin": 15353,
											"end": 15398,
											"name": "LOG3"
										},
										{
											"begin": 15208,
											"end": 15406,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 17234,
											"end": 17611,
											"name": "tag",
											"value": "147"
										},
										{
											"begin": 17234,
											"end": 17611,
											"name": "JUMPDEST"
										},
										{
											"begin": 17269,
											"end": 17273,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17360,
											"end": 17382,
											"name": "DUP1"
										},
										{
											"begin": 17385,
											"end": 17390,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17385,
											"end": 17390,
											"name": "DUP1"
										},
										{
											"begin": 17385,
											"end": 17390,
											"name": "SWAP1"
										},
										{
											"begin": 17385,
											"end": 17390,
											"name": "SLOAD"
										},
										{
											"begin": 17385,
											"end": 17390,
											"name": "SWAP1"
										},
										{
											"begin": 17385,
											"end": 17390,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 17385,
											"end": 17390,
											"name": "EXP"
										},
										{
											"begin": 17385,
											"end": 17390,
											"name": "SWAP1"
										},
										{
											"begin": 17385,
											"end": 17390,
											"name": "DIV"
										},
										{
											"begin": 17385,
											"end": 17390,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17385,
											"end": 17390,
											"name": "AND"
										},
										{
											"begin": 17385,
											"end": 17395,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17385,
											"end": 17395,
											"name": "AND"
										},
										{
											"begin": 17403,
											"end": 17439,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17403,
											"end": 17439,
											"name": "MLOAD"
										},
										{
											"begin": 17403,
											"end": 17439,
											"name": "DUP1"
										},
										{
											"begin": 17403,
											"end": 17439,
											"name": "DUP1"
										},
										{
											"begin": 17403,
											"end": 17439,
											"name": "PUSH",
											"value": "7365744672617564537461747573286164647265737329000000000000000000"
										},
										{
											"begin": 17403,
											"end": 17439,
											"name": "DUP2"
										},
										{
											"begin": 17403,
											"end": 17439,
											"name": "MSTORE"
										},
										{
											"begin": 17403,
											"end": 17439,
											"name": "POP"
										},
										{
											"begin": 17403,
											"end": 17439,
											"name": "PUSH",
											"value": "17"
										},
										{
											"begin": 17403,
											"end": 17439,
											"name": "ADD"
										},
										{
											"begin": 17403,
											"end": 17439,
											"name": "SWAP1"
										},
										{
											"begin": 17403,
											"end": 17439,
											"name": "POP"
										},
										{
											"begin": 17403,
											"end": 17439,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17403,
											"end": 17439,
											"name": "MLOAD"
										},
										{
											"begin": 17403,
											"end": 17439,
											"name": "DUP1"
										},
										{
											"begin": 17403,
											"end": 17439,
											"name": "SWAP2"
										},
										{
											"begin": 17403,
											"end": 17439,
											"name": "SUB"
										},
										{
											"begin": 17403,
											"end": 17439,
											"name": "SWAP1"
										},
										{
											"begin": 17403,
											"end": 17439,
											"name": "KECCAK256"
										},
										{
											"begin": 17385,
											"end": 17451,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17385,
											"end": 17451,
											"name": "SWAP1"
										},
										{
											"begin": 17385,
											"end": 17451,
											"name": "DIV"
										},
										{
											"begin": 17442,
											"end": 17450,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 17442,
											"end": 17450,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17442,
											"end": 17450,
											"name": "SWAP1"
										},
										{
											"begin": 17442,
											"end": 17450,
											"name": "SLOAD"
										},
										{
											"begin": 17442,
											"end": 17450,
											"name": "SWAP1"
										},
										{
											"begin": 17442,
											"end": 17450,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 17442,
											"end": 17450,
											"name": "EXP"
										},
										{
											"begin": 17442,
											"end": 17450,
											"name": "SWAP1"
										},
										{
											"begin": 17442,
											"end": 17450,
											"name": "DIV"
										},
										{
											"begin": 17442,
											"end": 17450,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17442,
											"end": 17450,
											"name": "AND"
										},
										{
											"begin": 17385,
											"end": 17451,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17385,
											"end": 17451,
											"name": "MLOAD"
										},
										{
											"begin": 17385,
											"end": 17451,
											"name": "DUP3"
										},
										{
											"begin": 17385,
											"end": 17451,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 17385,
											"end": 17451,
											"name": "AND"
										},
										{
											"begin": 17385,
											"end": 17451,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17385,
											"end": 17451,
											"name": "MUL"
										},
										{
											"begin": 17385,
											"end": 17451,
											"name": "DUP2"
										},
										{
											"begin": 17385,
											"end": 17451,
											"name": "MSTORE"
										},
										{
											"begin": 17385,
											"end": 17451,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 17385,
											"end": 17451,
											"name": "ADD"
										},
										{
											"begin": 17385,
											"end": 17451,
											"name": "DUP1"
										},
										{
											"begin": 17385,
											"end": 17451,
											"name": "DUP3"
										},
										{
											"begin": 17385,
											"end": 17451,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17385,
											"end": 17451,
											"name": "AND"
										},
										{
											"begin": 17385,
											"end": 17451,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17385,
											"end": 17451,
											"name": "AND"
										},
										{
											"begin": 17385,
											"end": 17451,
											"name": "DUP2"
										},
										{
											"begin": 17385,
											"end": 17451,
											"name": "MSTORE"
										},
										{
											"begin": 17385,
											"end": 17451,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17385,
											"end": 17451,
											"name": "ADD"
										},
										{
											"begin": 17385,
											"end": 17451,
											"name": "SWAP2"
										},
										{
											"begin": 17385,
											"end": 17451,
											"name": "POP"
										},
										{
											"begin": 17385,
											"end": 17451,
											"name": "POP"
										},
										{
											"begin": 17385,
											"end": 17451,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17385,
											"end": 17451,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17385,
											"end": 17451,
											"name": "MLOAD"
										},
										{
											"begin": 17385,
											"end": 17451,
											"name": "DUP1"
										},
										{
											"begin": 17385,
											"end": 17451,
											"name": "DUP4"
										},
										{
											"begin": 17385,
											"end": 17451,
											"name": "SUB"
										},
										{
											"begin": 17385,
											"end": 17451,
											"name": "DUP2"
										},
										{
											"begin": 17385,
											"end": 17451,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17385,
											"end": 17451,
											"name": "DUP8"
										},
										{
											"begin": 17385,
											"end": 17451,
											"name": "PUSH",
											"value": "646E"
										},
										{
											"begin": 17385,
											"end": 17451,
											"name": "GAS"
										},
										{
											"begin": 17385,
											"end": 17451,
											"name": "SUB"
										},
										{
											"begin": 17385,
											"end": 17451,
											"name": "CALL"
										},
										{
											"begin": 17385,
											"end": 17451,
											"name": "SWAP3"
										},
										{
											"begin": 17385,
											"end": 17451,
											"name": "POP"
										},
										{
											"begin": 17385,
											"end": 17451,
											"name": "POP"
										},
										{
											"begin": 17385,
											"end": 17451,
											"name": "POP"
										},
										{
											"begin": 17360,
											"end": 17451,
											"name": "SWAP1"
										},
										{
											"begin": 17360,
											"end": 17451,
											"name": "POP"
										},
										{
											"begin": 17550,
											"end": 17565,
											"name": "TIMESTAMP"
										},
										{
											"begin": 17531,
											"end": 17548,
											"name": "DUP2"
										},
										{
											"begin": 17502,
											"end": 17566,
											"name": "ISZERO"
										},
										{
											"begin": 17502,
											"end": 17566,
											"name": "ISZERO"
										},
										{
											"begin": 17521,
											"end": 17529,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 17521,
											"end": 17529,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17521,
											"end": 17529,
											"name": "SWAP1"
										},
										{
											"begin": 17521,
											"end": 17529,
											"name": "SLOAD"
										},
										{
											"begin": 17521,
											"end": 17529,
											"name": "SWAP1"
										},
										{
											"begin": 17521,
											"end": 17529,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 17521,
											"end": 17529,
											"name": "EXP"
										},
										{
											"begin": 17521,
											"end": 17529,
											"name": "SWAP1"
										},
										{
											"begin": 17521,
											"end": 17529,
											"name": "DIV"
										},
										{
											"begin": 17521,
											"end": 17529,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17521,
											"end": 17529,
											"name": "AND"
										},
										{
											"begin": 17502,
											"end": 17566,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17502,
											"end": 17566,
											"name": "AND"
										},
										{
											"begin": 17502,
											"end": 17566,
											"name": "PUSH",
											"value": "C1BB1D1E99D1E8D2705BA85717226A3FD9A86E4DE2284B00DFE6F33538D5249F"
										},
										{
											"begin": 17502,
											"end": 17566,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17502,
											"end": 17566,
											"name": "MLOAD"
										},
										{
											"begin": 17502,
											"end": 17566,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17502,
											"end": 17566,
											"name": "MLOAD"
										},
										{
											"begin": 17502,
											"end": 17566,
											"name": "DUP1"
										},
										{
											"begin": 17502,
											"end": 17566,
											"name": "SWAP2"
										},
										{
											"begin": 17502,
											"end": 17566,
											"name": "SUB"
										},
										{
											"begin": 17502,
											"end": 17566,
											"name": "SWAP1"
										},
										{
											"begin": 17502,
											"end": 17566,
											"name": "LOG4"
										},
										{
											"begin": 17586,
											"end": 17603,
											"name": "DUP1"
										},
										{
											"begin": 17579,
											"end": 17603,
											"name": "SWAP2"
										},
										{
											"begin": 17579,
											"end": 17603,
											"name": "POP"
										},
										{
											"begin": 17234,
											"end": 17611,
											"name": "POP"
										},
										{
											"begin": 17234,
											"end": 17611,
											"name": "SWAP1"
										},
										{
											"begin": 17234,
											"end": 17611,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 270,
											"end": 463,
											"name": "tag",
											"value": "193"
										},
										{
											"begin": 270,
											"end": 463,
											"name": "JUMPDEST"
										},
										{
											"begin": 328,
											"end": 335,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 419,
											"end": 428,
											"name": "DUP1"
										},
										{
											"begin": 435,
											"end": 436,
											"name": "DUP3"
										},
										{
											"begin": 431,
											"end": 432,
											"name": "DUP5"
										},
										{
											"begin": 431,
											"end": 436,
											"name": "DUP2"
										},
										{
											"begin": 431,
											"end": 436,
											"name": "ISZERO"
										},
										{
											"begin": 431,
											"end": 436,
											"name": "ISZERO"
										},
										{
											"begin": 431,
											"end": 436,
											"name": "PUSH [tag]",
											"value": "195"
										},
										{
											"begin": 431,
											"end": 436,
											"name": "JUMPI"
										},
										{
											"begin": 431,
											"end": 436,
											"name": "INVALID"
										},
										{
											"begin": 431,
											"end": 436,
											"name": "tag",
											"value": "195"
										},
										{
											"begin": 431,
											"end": 436,
											"name": "JUMPDEST"
										},
										{
											"begin": 431,
											"end": 436,
											"name": "DIV"
										},
										{
											"begin": 419,
											"end": 436,
											"name": "SWAP1"
										},
										{
											"begin": 419,
											"end": 436,
											"name": "POP"
										},
										{
											"begin": 454,
											"end": 455,
											"name": "DUP1"
										},
										{
											"begin": 447,
											"end": 455,
											"name": "SWAP2"
										},
										{
											"begin": 447,
											"end": 455,
											"name": "POP"
										},
										{
											"begin": 270,
											"end": 463,
											"name": "POP"
										},
										{
											"begin": 270,
											"end": 463,
											"name": "SWAP3"
										},
										{
											"begin": 270,
											"end": 463,
											"name": "SWAP2"
										},
										{
											"begin": 270,
											"end": 463,
											"name": "POP"
										},
										{
											"begin": 270,
											"end": 463,
											"name": "POP"
										},
										{
											"begin": 270,
											"end": 463,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"changeState(uint8)": "268f1153",
							"destroy()": "83197ef0",
							"destroyAndSend(address)": "f5074f41",
							"fraudVote()": "d85da7b6",
							"getBalance()": "12065fe0",
							"getCreditInfo()": "f06817cf",
							"invest()": "e8b5e51f",
							"lenders(address)": "28fd10d7",
							"owner()": "8da5cb5b",
							"refund()": "590e1ae3",
							"repay()": "402d8883",
							"requestInterest()": "efd475ab",
							"revokeVote()": "43c14b22",
							"toggleActive()": "29c68dc1",
							"withdraw()": "3ccfd60b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.18+commit.9cf6e910\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_state\",\"type\":\"uint8\"}],\"name\":\"changeState\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"lenders\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"toggleActive\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"repay\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"revokeVote\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"refund\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"destroy\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"fraudVote\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"invest\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"requestInterest\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCreditInfo\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"bytes32\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint8\"},{\"name\":\"\",\"type\":\"bool\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_recipient\",\"type\":\"address\"}],\"name\":\"destroyAndSend\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_requestedAmount\",\"type\":\"uint256\"},{\"name\":\"_requestedRepayments\",\"type\":\"uint256\"},{\"name\":\"_interest\",\"type\":\"uint256\"},{\"name\":\"_description\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"LogCreditInitialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"state\",\"type\":\"uint8\"},{\"indexed\":true,\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"LogCreditStateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"active\",\"type\":\"bool\"},{\"indexed\":true,\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"LogCreditStateActiveChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"LogBorrowerWithdrawal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"LogBorrowerRepaymentInstallment\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"LogBorrowerRepaymentFinished\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"LogBorrowerChangeReturned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"fraudStatus\",\"type\":\"bool\"},{\"indexed\":true,\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"LogBorrowerIsFraud\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"LogLenderInvestment\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"LogLenderWithdrawal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"LogLenderChangeReturned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"LogLenderVoteForRevoking\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"LogLenderVoteForFraud\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"LogLenderRefunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_currentOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"LogOwnershipTransfered\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"changeState(uint8)\":{\"details\":\"Change state function.\\r\",\"params\":{\"_state\":\"New state.\\r Only accessible to the owner of the contract.\\r Changes the state of the contract.\\r\"}},\"fraudVote()\":{\"details\":\"Function for voting the borrower as fraudster.\\r\"},\"getBalance()\":{\"details\":\"Get current balance.\\r return this.balance.\\r\"},\"getCreditInfo()\":{\"details\":\"Function to get the whole credit information.\\r return borrower\\r return description\\r return requestedAmount\\r return requestedRepayments\\r return remainingRepayments\\r return interest\\r return returnAmount\\r return state\\r return active\\r return this.balance\\r\"},\"invest()\":{\"details\":\"Invest function.\\r Provides functionality for person to invest in someone's credit,\\r incentivised by the return of interest.\\r\"},\"refund()\":{\"details\":\"Function for refunding people. \"},\"repay()\":{\"details\":\"Repayment function.\\r Allows borrower to make repayment installments.\\r\"},\"requestInterest()\":{\"details\":\"Request interest function.\\r It can only be executed while contract is in active state.\\r It is only accessible to lenders.\\r It is only accessible if lender funded 1 or more wei.\\r It can only be executed once.\\r Transfers the lended amount + interest to the lender.\\r\"},\"revokeVote()\":{\"details\":\"Function for revoking the credit.\\r\"},\"toggleActive()\":{\"details\":\"Toggle active state function.\\r Only accessible to the owner of the contract.\\r Toggles the active state of the contract.\\r return bool\\r\"},\"withdraw()\":{\"details\":\"Withdraw function.\\r It can only be executed while contract is in active state.\\r It is only accessible to the borrower.\\r It is only accessible if the needed amount is gathered in the contract.\\r It can only be executed once.\\r Transfers the gathered amount to the borrower.\\r\"}},\"title\":\"Credit contract.\\r Inherits the Ownable and Destructible contracts.\\r\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"smart-contracts/contracts/Credit.sol\":\"Credit\"},\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"smart-contracts/contracts/Credit.sol\":{\"keccak256\":\"0xc55e74cf7d1e2bedba7aa9b31e4ceaf373e02a87ba927117ed717270463fa49b\",\"urls\":[\"bzzr://40590874c4b8a0c87b6d75548cc5f2e6f7a38798d4f994f03f93da39cac19d31\"]},\"smart-contracts/contracts/common/Destructible.sol\":{\"keccak256\":\"0x6bca3c39c4d48228e82a513b1647f6f0a64b18c9b3c6e16fe3413711656eda7d\",\"urls\":[\"bzzr://42ca9998600eeb5d9e5266df144db191509b03b58dd43fafbf03ec60f1a522a8\"]},\"smart-contracts/contracts/common/Ownable.sol\":{\"keccak256\":\"0xfffa53788eb7e34abd06c6b9b0b6346eb7069a7bd88a69e0ad1ebc9cca2e2919\",\"urls\":[\"bzzr://dea0861e0acf65dd49668bb6c94911b884f475e785b2ee9fa15d5de12627bc3a\"]},\"smart-contracts/contracts/common/SafeMath.sol\":{\"keccak256\":\"0x583337e75e9e16e04f784c01d4509cc8f7b36025b34e20cddc644dba8f39a7c2\",\"urls\":[\"bzzr://9ac10c82bfac80571ebaf5679b607b105ea7529035f07757e8595ba38191c548\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"smart-contracts/contracts/PeerToPeerLending.sol": {
				"PeerToPeerLending": {
					"abi": [
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"name": "credits",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getUserCredits",
							"outputs": [
								{
									"name": "",
									"type": "address[]"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_credit",
									"type": "address"
								}
							],
							"name": "changeCreditState",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getCredits",
							"outputs": [
								{
									"name": "",
									"type": "address[]"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "destroy",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"name": "users",
							"outputs": [
								{
									"name": "credited",
									"type": "bool"
								},
								{
									"name": "activeCredit",
									"type": "address"
								},
								{
									"name": "fraudStatus",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_borrower",
									"type": "address"
								}
							],
							"name": "setFraudStatus",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "requestedAmount",
									"type": "uint256"
								},
								{
									"name": "repaymentsCount",
									"type": "uint256"
								},
								{
									"name": "interest",
									"type": "uint256"
								},
								{
									"name": "creditDescription",
									"type": "bytes32"
								}
							],
							"name": "applyForCredit",
							"outputs": [
								{
									"name": "_credit",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_recipient",
									"type": "address"
								}
							],
							"name": "destroyAndSend",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_credit",
									"type": "address"
								},
								{
									"name": "state",
									"type": "uint8"
								}
							],
							"name": "changeCreditState",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "_address",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "_borrower",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "LogCreditCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "_address",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "state",
									"type": "uint8"
								},
								{
									"indexed": true,
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "LogCreditStateChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "_address",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "active",
									"type": "bool"
								},
								{
									"indexed": true,
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "LogCreditActiveChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "_address",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "fraudStatus",
									"type": "bool"
								},
								{
									"indexed": false,
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "LogUserSetFraud",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "_currentOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "_newOwner",
									"type": "address"
								}
							],
							"name": "LogOwnershipTransfered",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"smart-contracts/contracts/PeerToPeerLending.sol\":124:3613  contract PeerToPeerLending is Destructible {\r... */\n  mstore(0x40, 0x60)\n    /* \"smart-contracts/contracts/PeerToPeerLending.sol\":1169:1215  function PeerToPeerLending() public {\r... */\n  jumpi(tag_1, iszero(callvalue))\n  0x0\n  dup1\n  revert\ntag_1:\n    /* \"smart-contracts/contracts/PeerToPeerLending.sol\":124:3613  contract PeerToPeerLending is Destructible {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":124:3613  contract PeerToPeerLending is Destructible {\r... */\n      mstore(0x40, 0x60)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x36a1c22\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x2092cb33\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x59658c48\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x823a71af\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x83197ef0\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xa87430ba\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xbb9e4247\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xebb5d8ed\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xf5074f41\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xfa838e54\n      eq\n      tag_12\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":722:746  address[] public credits */\n    tag_2:\n      jumpi(tag_13, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_13:\n      tag_14\n      0x4\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_15)\n    tag_14:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":2533:2645  function getUserCredits() public view returns (address[]) {\r... */\n    tag_3:\n      jumpi(tag_16, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_16:\n      tag_17\n      jump(tag_18)\n    tag_17:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x0\n        /* \"--CODEGEN--\":8:108   */\n    tag_19:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:29   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_20\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:93   */\n      add\n        /* \"--CODEGEN--\":84:89   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:74   */\n      add\n        /* \"--CODEGEN--\":64:70   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:48   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_19)\n    tag_20:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"--CODEGEN--\":3:112   */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":3301:3610  function changeCreditState (Credit _credit) public onlyOwner {\r... */\n    tag_4:\n      jumpi(tag_22, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_22:\n      tag_23\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_24)\n    tag_23:\n      stop\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":2438:2525  function getCredits() public view returns (address[]) {\r... */\n    tag_5:\n      jumpi(tag_25, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_25:\n      tag_26\n      jump(tag_27)\n    tag_26:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x0\n        /* \"--CODEGEN--\":8:108   */\n    tag_28:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:29   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_29\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:93   */\n      add\n        /* \"--CODEGEN--\":84:89   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:74   */\n      add\n        /* \"--CODEGEN--\":64:70   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:48   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_28)\n    tag_29:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"--CODEGEN--\":3:112   */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"smart-contracts/contracts/common/Destructible.sol\":151:225  function destroy() public onlyOwner {\r... */\n    tag_6:\n      jumpi(tag_31, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_31:\n      tag_32\n      jump(tag_33)\n    tag_32:\n      stop\n        /* \"smart-contracts/contracts/common/Ownable.sol\":54:74  address public owner */\n    tag_7:\n      jumpi(tag_34, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_34:\n      tag_35\n      jump(tag_36)\n    tag_35:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":637:674  mapping(address => User) public users */\n    tag_8:\n      jumpi(tag_37, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_37:\n      tag_38\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_39)\n    tag_38:\n      mload(0x40)\n      dup1\n      dup5\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":2653:2976  function setFraudStatus(address _borrower) external returns (bool) {\r... */\n    tag_9:\n      jumpi(tag_40, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_40:\n      tag_41\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_42)\n    tag_41:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":1223:2430  function applyForCredit(uint requestedAmount, uint repaymentsCount, uint interest, bytes32 creditDescription) public returns(address _credit) {\r... */\n    tag_10:\n      jumpi(tag_43, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_43:\n      tag_44\n      0x4\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      dup1\n      calldataload\n      not(0x0)\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_45)\n    tag_44:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"smart-contracts/contracts/common/Destructible.sol\":237:341  function destroyAndSend(address _recipient) public onlyOwner {\r... */\n    tag_11:\n      jumpi(tag_46, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_46:\n      tag_47\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_48)\n    tag_47:\n      stop\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":2984:3293  function changeCreditState (Credit _credit, Credit.State state) public onlyOwner {\r... */\n    tag_12:\n      jumpi(tag_49, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_49:\n      tag_50\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_51)\n    tag_50:\n      stop\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":722:746  address[] public credits */\n    tag_15:\n      0x2\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_52\n      jumpi\n      invalid\n    tag_52:\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      swap1\n      add\n      0x0\n      swap2\n      pop\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":2533:2645  function getUserCredits() public view returns (address[]) {\r... */\n    tag_18:\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":2580:2589  address[] */\n      tag_54\n      jump\t// in(tag_55)\n    tag_54:\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":2609:2614  users */\n      0x1\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":2609:2626  users[msg.sender] */\n      0x0\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":2615:2625  msg.sender */\n      caller\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":2609:2626  users[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":2609:2637  users[msg.sender].allCredits */\n      0x1\n      add\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":2602:2637  return users[msg.sender].allCredits */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_57\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      swap1\n    tag_58:\n      dup2\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x1\n      add\n      swap1\n      dup1\n      dup4\n      gt\n      tag_58\n      jumpi\n    tag_57:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":2533:2645  function getUserCredits() public view returns (address[]) {\r... */\n      swap1\n      jump\t// out\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":3301:3610  function changeCreditState (Credit _credit) public onlyOwner {\r... */\n    tag_24:\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":3427:3440  Credit credit */\n      0x0\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":3469:3480  bool active */\n      dup1\n        /* \"smart-contracts/contracts/common/Ownable.sol\":232:237  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"smart-contracts/contracts/common/Ownable.sol\":218:237  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"smart-contracts/contracts/common/Ownable.sol\":218:228  msg.sender */\n      caller\n        /* \"smart-contracts/contracts/common/Ownable.sol\":218:237  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"smart-contracts/contracts/common/Ownable.sol\":210:238  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_60\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_60:\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":3450:3457  _credit */\n      dup3\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":3427:3458  Credit credit = Credit(_credit) */\n      swap2\n      pop\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":3483:3489  credit */\n      dup2\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":3483:3502  credit.toggleActive */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x29c68dc1\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":3483:3504  credit.toggleActive() */\n      mstore(add(0x20, mload(0x40)), 0x0)\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n      iszero\n      tag_62\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_62:\n      sub(gas, 0x2c6)\n      call\n      iszero\n      iszero\n      tag_63\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_63:\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      mload\n      swap1\n      pop\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":3469:3504  bool active = credit.toggleActive() */\n      swap1\n      pop\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":3586:3601  block.timestamp */\n      timestamp\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":3578:3584  active */\n      dup2\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":3547:3602  LogCreditActiveChanged(credit, active, block.timestamp) */\n      iszero\n      iszero\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":3570:3576  credit */\n      dup4\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":3547:3602  LogCreditActiveChanged(credit, active, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x25270acf0eab637903a9cd906e32d2ac17ce44db6c743ba5812f2924e84ff8d6\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":3301:3610  function changeCreditState (Credit _credit) public onlyOwner {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":2438:2525  function getCredits() public view returns (address[]) {\r... */\n    tag_27:\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":2481:2490  address[] */\n      tag_64\n      jump\t// in(tag_55)\n    tag_64:\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":2510:2517  credits */\n      0x2\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":2503:2517  return credits */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_66\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      swap1\n    tag_67:\n      dup2\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x1\n      add\n      swap1\n      dup1\n      dup4\n      gt\n      tag_67\n      jumpi\n    tag_66:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":2438:2525  function getCredits() public view returns (address[]) {\r... */\n      swap1\n      jump\t// out\n        /* \"smart-contracts/contracts/common/Destructible.sol\":151:225  function destroy() public onlyOwner {\r... */\n    tag_33:\n        /* \"smart-contracts/contracts/common/Ownable.sol\":232:237  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"smart-contracts/contracts/common/Ownable.sol\":218:237  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"smart-contracts/contracts/common/Ownable.sol\":218:228  msg.sender */\n      caller\n        /* \"smart-contracts/contracts/common/Ownable.sol\":218:237  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"smart-contracts/contracts/common/Ownable.sol\":210:238  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_69\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_69:\n        /* \"smart-contracts/contracts/common/Destructible.sol\":211:216  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"smart-contracts/contracts/common/Destructible.sol\":198:217  selfdestruct(owner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      selfdestruct\n        /* \"smart-contracts/contracts/common/Ownable.sol\":54:74  address public owner */\n    tag_36:\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":637:674  mapping(address => User) public users */\n    tag_39:\n      mstore(0x20, 0x1)\n      dup1\n      0x0\n      mstore\n      keccak256(0x0, 0x40)\n      0x0\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x0\n      add\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      dup1\n      0x0\n      add\n      0x1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x0\n      add\n      0x15\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      pop\n      dup4\n      jump\t// out\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":2653:2976  function setFraudStatus(address _borrower) external returns (bool) {\r... */\n    tag_42:\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":2714:2718  bool */\n      0x0\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":2800:2804  true */\n      0x1\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":2769:2774  users */\n      dup1\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":2769:2785  users[_borrower] */\n      0x0\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":2775:2784  _borrower */\n      dup5\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":2769:2785  users[_borrower] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":2769:2797  users[_borrower].fraudStatus */\n      0x0\n      add\n      0x15\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":2769:2804  users[_borrower].fraudStatus = true */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":2863:2872  _borrower */\n      dup2\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":2847:2920  LogUserSetFraud(_borrower, users[_borrower].fraudStatus, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbafb199a9909a7be73ceeaf6193dc9ea119ef469120d998d5f550140c0b13b54\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":2874:2879  users */\n      0x1\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":2874:2890  users[_borrower] */\n      0x0\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":2880:2889  _borrower */\n      dup6\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":2874:2890  users[_borrower] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":2874:2902  users[_borrower].fraudStatus */\n      0x0\n      add\n      0x15\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":2904:2919  block.timestamp */\n      timestamp\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":2847:2920  LogUserSetFraud(_borrower, users[_borrower].fraudStatus, block.timestamp) */\n      mload(0x40)\n      dup1\n      dup4\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":2940:2945  users */\n      0x1\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":2940:2956  users[_borrower] */\n      0x0\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":2946:2955  _borrower */\n      dup4\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":2940:2956  users[_borrower] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":2940:2968  users[_borrower].fraudStatus */\n      0x0\n      add\n      0x15\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":2933:2968  return users[_borrower].fraudStatus */\n      swap1\n      pop\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":2653:2976  function setFraudStatus(address _borrower) external returns (bool) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":1223:2430  function applyForCredit(uint requestedAmount, uint repaymentsCount, uint interest, bytes32 creditDescription) public returns(address _credit) {\r... */\n    tag_45:\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":1348:1363  address _credit */\n      0x0\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":1894:1907  Credit credit */\n      dup1\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":1466:1471  false */\n      0x0\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":1436:1471  users[msg.sender].credited == false */\n      iszero\n      iszero\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":1436:1441  users */\n      0x1\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":1436:1453  users[msg.sender] */\n      0x0\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":1442:1452  msg.sender */\n      caller\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":1436:1453  users[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":1436:1462  users[msg.sender].credited */\n      0x0\n      add\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":1436:1471  users[msg.sender].credited == false */\n      iszero\n      iszero\n      eq\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":1428:1472  require(users[msg.sender].credited == false) */\n      iszero\n      iszero\n      tag_73\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_73:\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":1582:1587  false */\n      0x0\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":1549:1587  users[msg.sender].fraudStatus == false */\n      iszero\n      iszero\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":1549:1554  users */\n      0x1\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":1549:1566  users[msg.sender] */\n      0x0\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":1555:1565  msg.sender */\n      caller\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":1549:1566  users[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":1549:1578  users[msg.sender].fraudStatus */\n      0x0\n      add\n      0x15\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":1549:1587  users[msg.sender].fraudStatus == false */\n      iszero\n      iszero\n      eq\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":1541:1588  require(users[msg.sender].fraudStatus == false) */\n      iszero\n      iszero\n      tag_74\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_74:\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":1701:1702  0 */\n      0x0\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":1667:1672  users */\n      0x1\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":1667:1684  users[msg.sender] */\n      0x0\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":1673:1683  msg.sender */\n      caller\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":1667:1684  users[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":1667:1697  users[msg.sender].activeCredit */\n      0x0\n      add\n      0x1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":1667:1702  users[msg.sender].activeCredit == 0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":1660:1703  assert(users[msg.sender].activeCredit == 0) */\n      iszero\n      iszero\n      tag_75\n      jumpi\n      invalid\n    tag_75:\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":1809:1813  true */\n      0x1\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":1780:1785  users */\n      dup1\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":1780:1797  users[msg.sender] */\n      0x0\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":1786:1796  msg.sender */\n      caller\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":1780:1797  users[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":1780:1806  users[msg.sender].credited */\n      0x0\n      add\n      0x0\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":1780:1813  users[msg.sender].credited = true */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":1921:1936  requestedAmount */\n      dup6\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":1938:1953  repaymentsCount */\n      dup6\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":1955:1963  interest */\n      dup6\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":1965:1982  creditDescription */\n      dup6\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":1910:1983  new Credit(requestedAmount, repaymentsCount, interest, creditDescription) */\n      tag_76\n      jump\t// in(tag_77)\n    tag_76:\n      dup1\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      not(0x0)\n      and\n      not(0x0)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      0x0\n      create\n      dup1\n      iszero\n      iszero\n      tag_78\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_78:\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":1894:1983  Credit credit = new Credit(requestedAmount, repaymentsCount, interest, creditDescription) */\n      swap1\n      pop\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":2080:2086  credit */\n      dup1\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":2047:2052  users */\n      0x1\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":2047:2064  users[msg.sender] */\n      0x0\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":2053:2063  msg.sender */\n      caller\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":2047:2064  users[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":2047:2077  users[msg.sender].activeCredit */\n      0x0\n      add\n      0x1\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":2047:2086  users[msg.sender].activeCredit = credit */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":2163:2170  credits */\n      0x2\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":2163:2183  credits.push(credit) */\n      dup1\n      sload\n      dup1\n      0x1\n      add\n      dup3\n      dup2\n      tag_79\n      swap2\n      swap1\n      jump\t// in(tag_80)\n    tag_79:\n      swap2\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      swap1\n      add\n      0x0\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":2176:2182  credit */\n      dup4\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":2163:2183  credits.push(credit) */\n      swap1\n      swap2\n      swap1\n      swap2\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      pop\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":2246:2251  users */\n      0x1\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":2246:2263  users[msg.sender] */\n      0x0\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":2252:2262  msg.sender */\n      caller\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":2246:2263  users[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":2246:2274  users[msg.sender].allCredits */\n      0x1\n      add\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":2246:2287  users[msg.sender].allCredits.push(credit) */\n      dup1\n      sload\n      dup1\n      0x1\n      add\n      dup3\n      dup2\n      tag_82\n      swap2\n      swap1\n      jump\t// in(tag_80)\n    tag_82:\n      swap2\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      swap1\n      add\n      0x0\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":2280:2286  credit */\n      dup4\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":2246:2287  users[msg.sender].allCredits.push(credit) */\n      swap1\n      swap2\n      swap1\n      swap2\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      pop\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":2380:2395  block.timestamp */\n      timestamp\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":2368:2378  msg.sender */\n      caller\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":2343:2396  LogCreditCreated(credit, msg.sender, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":2360:2366  credit */\n      dup3\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":2343:2396  LogCreditCreated(credit, msg.sender, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa0c75b76492543c8eafdc7e35272287bd6f229dcf0f6c22429343044718c5108\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":2416:2422  credit */\n      dup1\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":2409:2422  return credit */\n      swap2\n      pop\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":1223:2430  function applyForCredit(uint requestedAmount, uint repaymentsCount, uint interest, bytes32 creditDescription) public returns(address _credit) {\r... */\n      pop\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"smart-contracts/contracts/common/Destructible.sol\":237:341  function destroyAndSend(address _recipient) public onlyOwner {\r... */\n    tag_48:\n        /* \"smart-contracts/contracts/common/Ownable.sol\":232:237  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"smart-contracts/contracts/common/Ownable.sol\":218:237  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"smart-contracts/contracts/common/Ownable.sol\":218:228  msg.sender */\n      caller\n        /* \"smart-contracts/contracts/common/Ownable.sol\":218:237  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"smart-contracts/contracts/common/Ownable.sol\":210:238  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_85\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_85:\n        /* \"smart-contracts/contracts/common/Destructible.sol\":322:332  _recipient */\n      dup1\n        /* \"smart-contracts/contracts/common/Destructible.sol\":309:333  selfdestruct(_recipient) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      selfdestruct\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":2984:3293  function changeCreditState (Credit _credit, Credit.State state) public onlyOwner {\r... */\n    tag_51:\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":3122:3135  Credit credit */\n      0x0\n        /* \"smart-contracts/contracts/common/Ownable.sol\":232:237  owner */\n      dup1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"smart-contracts/contracts/common/Ownable.sol\":218:237  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"smart-contracts/contracts/common/Ownable.sol\":218:228  msg.sender */\n      caller\n        /* \"smart-contracts/contracts/common/Ownable.sol\":218:237  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"smart-contracts/contracts/common/Ownable.sol\":210:238  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_88\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_88:\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":3145:3152  _credit */\n      dup3\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":3122:3153  Credit credit = Credit(_credit) */\n      swap1\n      pop\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":3164:3170  credit */\n      dup1\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":3164:3182  credit.changeState */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x268f1153\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":3183:3188  state */\n      dup4\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":3164:3189  credit.changeState(state) */\n      mstore(add(0x20, mload(0x40)), 0x0)\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup3\n      0x5\n      dup2\n      gt\n      iszero\n      tag_90\n      jumpi\n      invalid\n    tag_90:\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n      iszero\n      tag_91\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_91:\n      sub(gas, 0x2c6)\n      call\n      iszero\n      iszero\n      tag_92\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_92:\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      mload\n      swap1\n      pop\n      pop\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":3269:3284  block.timestamp */\n      timestamp\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":3262:3267  state */\n      dup3\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":3232:3285  LogCreditStateChanged(credit, state, block.timestamp) */\n      0x5\n      dup2\n      gt\n      iszero\n      tag_93\n      jumpi\n      invalid\n    tag_93:\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":3254:3260  credit */\n      dup3\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":3232:3285  LogCreditStateChanged(credit, state, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9ae5127f6d87e374b5901ce23a9467e504811c54c03dda8741ad44a35a361466\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":2984:3293  function changeCreditState (Credit _credit, Credit.State state) public onlyOwner {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"smart-contracts/contracts/PeerToPeerLending.sol\":124:3613  contract PeerToPeerLending is Destructible {\r... */\n    tag_55:\n      0x20\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      0x0\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n    tag_77:\n      mload(0x40)\n      dataSize(sub_0)\n      dup1\n      dataOffset(sub_0)\n      dup4\n      codecopy\n      add\n      swap1\n      jump\t// out\n    tag_80:\n      dup2\n      sload\n      dup2\n      dup4\n      sstore\n      dup2\n      dup2\n      iszero\n      gt\n      tag_94\n      jumpi\n      dup2\n      dup4\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      swap2\n      dup3\n      add\n      swap2\n      add\n      tag_95\n      swap2\n      swap1\n      jump\t// in(tag_96)\n    tag_95:\n    tag_94:\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_96:\n      tag_97\n      swap2\n      swap1\n    tag_98:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_99\n      jumpi\n      0x0\n      dup2\n      0x0\n      swap1\n      sstore\n      pop\n      0x1\n      add\n      jump(tag_98)\n    tag_99:\n      pop\n      swap1\n      jump\n    tag_97:\n      swap1\n      jump\t// out\n    stop\n\n    sub_0: assembly {\n            /* \"smart-contracts/contracts/Credit.sol\":189:18405  contract Credit is Destructible {\r... */\n          mstore(0x40, 0x60)\n            /* \"smart-contracts/contracts/Credit.sol\":5188:6727  function Credit(uint _requestedAmount, uint _requestedRepayments, uint _interest, bytes32 _description) public {\r... */\n          jumpi(tag_1, iszero(callvalue))\n          0x0\n          dup1\n          revert\n        tag_1:\n          mload(0x40)\n          0x80\n          dup1\n          bytecodeSize\n          dup4\n          codecopy\n          dup2\n          add\n          0x40\n          mstore\n          dup1\n          dup1\n          mload\n          swap1\n          0x20\n          add\n          swap1\n          swap2\n          swap1\n          dup1\n          mload\n          swap1\n          0x20\n          add\n          swap1\n          swap2\n          swap1\n          dup1\n          mload\n          swap1\n          0x20\n          add\n          swap1\n          swap2\n          swap1\n          dup1\n          mload\n          swap1\n          0x20\n          add\n          swap1\n          swap2\n          swap1\n          pop\n          pop\n            /* \"smart-contracts/contracts/Credit.sol\":5549:5558  tx.origin */\n          origin\n            /* \"smart-contracts/contracts/Credit.sol\":5538:5546  borrower */\n          0x1\n          0x0\n            /* \"smart-contracts/contracts/Credit.sol\":5538:5558  borrower = tx.origin */\n          0x100\n          exp\n          dup2\n          sload\n          dup2\n          0xffffffffffffffffffffffffffffffffffffffff\n          mul\n          not\n          and\n          swap1\n          dup4\n          0xffffffffffffffffffffffffffffffffffffffff\n          and\n          mul\n          or\n          swap1\n          sstore\n          pop\n            /* \"smart-contracts/contracts/Credit.sol\":5627:5636  _interest */\n          dup2\n            /* \"smart-contracts/contracts/Credit.sol\":5616:5624  interest */\n          0x5\n            /* \"smart-contracts/contracts/Credit.sol\":5616:5636  interest = _interest */\n          dup2\n          swap1\n          sstore\n          pop\n            /* \"smart-contracts/contracts/Credit.sol\":5705:5721  _requestedAmount */\n          dup4\n            /* \"smart-contracts/contracts/Credit.sol\":5687:5702  requestedAmount */\n          0x2\n            /* \"smart-contracts/contracts/Credit.sol\":5687:5721  requestedAmount = _requestedAmount */\n          dup2\n          swap1\n          sstore\n          pop\n            /* \"smart-contracts/contracts/Credit.sol\":5798:5818  _requestedRepayments */\n          dup3\n            /* \"smart-contracts/contracts/Credit.sol\":5776:5795  requestedRepayments */\n          0x6\n            /* \"smart-contracts/contracts/Credit.sol\":5776:5818  requestedRepayments = _requestedRepayments */\n          dup2\n          swap1\n          sstore\n          pop\n            /* \"smart-contracts/contracts/Credit.sol\":5976:5996  _requestedRepayments */\n          dup3\n            /* \"smart-contracts/contracts/Credit.sol\":5954:5973  remainingRepayments */\n          0x7\n            /* \"smart-contracts/contracts/Credit.sol\":5954:5996  remainingRepayments = _requestedRepayments */\n          dup2\n          swap1\n          sstore\n          pop\n            /* \"smart-contracts/contracts/Credit.sol\":6194:6223  requestedAmount.add(interest) */\n          tag_6\n            /* \"smart-contracts/contracts/Credit.sol\":6214:6222  interest */\n          sload(0x5)\n            /* \"smart-contracts/contracts/Credit.sol\":6194:6209  requestedAmount */\n          sload(0x2)\n            /* \"smart-contracts/contracts/Credit.sol\":6194:6213  requestedAmount.add */\n          or(tag_0_104, mul(0x100000000, tag_7))\n          swap1\n            /* \"smart-contracts/contracts/Credit.sol\":6194:6223  requestedAmount.add(interest) */\n          swap2\n          swap1\n          0x100000000\n          swap1\n          div\n          jump\t// in\n        tag_6:\n            /* \"smart-contracts/contracts/Credit.sol\":6179:6191  returnAmount */\n          0x3\n            /* \"smart-contracts/contracts/Credit.sol\":6179:6223  returnAmount = requestedAmount.add(interest) */\n          dup2\n          swap1\n          sstore\n          pop\n            /* \"smart-contracts/contracts/Credit.sol\":6419:6456  returnAmount.div(requestedRepayments) */\n          tag_8\n            /* \"smart-contracts/contracts/Credit.sol\":6436:6455  requestedRepayments */\n          sload(0x6)\n            /* \"smart-contracts/contracts/Credit.sol\":6419:6431  returnAmount */\n          sload(0x3)\n            /* \"smart-contracts/contracts/Credit.sol\":6419:6435  returnAmount.div */\n          or(tag_0_193, mul(0x100000000, tag_9))\n          swap1\n            /* \"smart-contracts/contracts/Credit.sol\":6419:6456  returnAmount.div(requestedRepayments) */\n          swap2\n          swap1\n          0x100000000\n          swap1\n          div\n          jump\t// in\n        tag_8:\n            /* \"smart-contracts/contracts/Credit.sol\":6396:6416  repaymentInstallment */\n          0x8\n            /* \"smart-contracts/contracts/Credit.sol\":6396:6456  repaymentInstallment = returnAmount.div(requestedRepayments) */\n          dup2\n          swap1\n          sstore\n          pop\n            /* \"smart-contracts/contracts/Credit.sol\":6523:6535  _description */\n          dup1\n            /* \"smart-contracts/contracts/Credit.sol\":6509:6520  description */\n          0xb\n            /* \"smart-contracts/contracts/Credit.sol\":6509:6535  description = _description */\n          dup2\n          not(0x0)\n          and\n          swap1\n          sstore\n          pop\n            /* \"smart-contracts/contracts/Credit.sol\":6605:6620  block.timestamp */\n          timestamp\n            /* \"smart-contracts/contracts/Credit.sol\":6589:6602  requestedDate */\n          0x9\n            /* \"smart-contracts/contracts/Credit.sol\":6589:6620  requestedDate = block.timestamp */\n          dup2\n          swap1\n          sstore\n          pop\n            /* \"smart-contracts/contracts/Credit.sol\":6703:6718  block.timestamp */\n          timestamp\n            /* \"smart-contracts/contracts/Credit.sol\":6693:6701  borrower */\n          0x1\n          0x0\n          swap1\n          sload\n          swap1\n          0x100\n          exp\n          swap1\n          div\n          0xffffffffffffffffffffffffffffffffffffffff\n          and\n            /* \"smart-contracts/contracts/Credit.sol\":6672:6719  LogCreditInitialized(borrower, block.timestamp) */\n          0xffffffffffffffffffffffffffffffffffffffff\n          and\n          0xf9f75c99c0e3522cd19ffc66fd6c94989a3f0821d37d5c5bb176aab904c6335d\n          mload(0x40)\n          mload(0x40)\n          dup1\n          swap2\n          sub\n          swap1\n          log3\n            /* \"smart-contracts/contracts/Credit.sol\":5188:6727  function Credit(uint _requestedAmount, uint _requestedRepayments, uint _interest, bytes32 _description) public {\r... */\n          pop\n          pop\n          pop\n          pop\n            /* \"smart-contracts/contracts/Credit.sol\":189:18405  contract Credit is Destructible {\r... */\n          jump(tag_10)\n            /* \"smart-contracts/contracts/common/SafeMath.sol\":622:769  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n        tag_7:\n            /* \"smart-contracts/contracts/common/SafeMath.sol\":680:687  uint256 */\n          0x0\n            /* \"smart-contracts/contracts/common/SafeMath.sol\":700:709  uint256 c */\n          dup1\n            /* \"smart-contracts/contracts/common/SafeMath.sol\":716:717  b */\n          dup3\n            /* \"smart-contracts/contracts/common/SafeMath.sol\":712:713  a */\n          dup5\n            /* \"smart-contracts/contracts/common/SafeMath.sol\":712:717  a + b */\n          add\n            /* \"smart-contracts/contracts/common/SafeMath.sol\":700:717  uint256 c = a + b */\n          swap1\n          pop\n            /* \"smart-contracts/contracts/common/SafeMath.sol\":740:741  a */\n          dup4\n            /* \"smart-contracts/contracts/common/SafeMath.sol\":735:736  c */\n          dup2\n            /* \"smart-contracts/contracts/common/SafeMath.sol\":735:741  c >= a */\n          lt\n          iszero\n            /* \"smart-contracts/contracts/common/SafeMath.sol\":728:742  assert(c >= a) */\n          iszero\n          iszero\n          tag_12\n          jumpi\n          invalid\n        tag_12:\n            /* \"smart-contracts/contracts/common/SafeMath.sol\":760:761  c */\n          dup1\n            /* \"smart-contracts/contracts/common/SafeMath.sol\":753:761  return c */\n          swap2\n          pop\n            /* \"smart-contracts/contracts/common/SafeMath.sol\":622:769  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n          pop\n          swap3\n          swap2\n          pop\n          pop\n          jump\t// out\n            /* \"smart-contracts/contracts/common/SafeMath.sol\":270:463  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n        tag_9:\n            /* \"smart-contracts/contracts/common/SafeMath.sol\":328:335  uint256 */\n          0x0\n            /* \"smart-contracts/contracts/common/SafeMath.sol\":419:428  uint256 c */\n          dup1\n            /* \"smart-contracts/contracts/common/SafeMath.sol\":435:436  b */\n          dup3\n            /* \"smart-contracts/contracts/common/SafeMath.sol\":431:432  a */\n          dup5\n            /* \"smart-contracts/contracts/common/SafeMath.sol\":431:436  a / b */\n          dup2\n          iszero\n          iszero\n          tag_14\n          jumpi\n          invalid\n        tag_14:\n          div\n            /* \"smart-contracts/contracts/common/SafeMath.sol\":419:436  uint256 c = a / b */\n          swap1\n          pop\n            /* \"smart-contracts/contracts/common/SafeMath.sol\":454:455  c */\n          dup1\n            /* \"smart-contracts/contracts/common/SafeMath.sol\":447:455  return c */\n          swap2\n          pop\n            /* \"smart-contracts/contracts/common/SafeMath.sol\":270:463  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n          pop\n          swap3\n          swap2\n          pop\n          pop\n          jump\t// out\n            /* \"smart-contracts/contracts/Credit.sol\":189:18405  contract Credit is Destructible {\r... */\n        tag_10:\n          dataSize(sub_0)\n          dup1\n          dataOffset(sub_0)\n          0x0\n          codecopy\n          0x0\n          return\n        stop\n\n        sub_0: assembly {\n                /* \"smart-contracts/contracts/Credit.sol\":189:18405  contract Credit is Destructible {\r... */\n              mstore(0x40, 0x60)\n              jumpi(tag_1, lt(calldatasize, 0x4))\n              calldataload(0x0)\n              0x100000000000000000000000000000000000000000000000000000000\n              swap1\n              div\n              0xffffffff\n              and\n              dup1\n              0x12065fe0\n              eq\n              tag_2\n              jumpi\n              dup1\n              0x268f1153\n              eq\n              tag_3\n              jumpi\n              dup1\n              0x28fd10d7\n              eq\n              tag_4\n              jumpi\n              dup1\n              0x29c68dc1\n              eq\n              tag_5\n              jumpi\n              dup1\n              0x3ccfd60b\n              eq\n              tag_6\n              jumpi\n              dup1\n              0x402d8883\n              eq\n              tag_7\n              jumpi\n              dup1\n              0x43c14b22\n              eq\n              tag_8\n              jumpi\n              dup1\n              0x590e1ae3\n              eq\n              tag_9\n              jumpi\n              dup1\n              0x83197ef0\n              eq\n              tag_10\n              jumpi\n              dup1\n              0x8da5cb5b\n              eq\n              tag_11\n              jumpi\n              dup1\n              0xd85da7b6\n              eq\n              tag_12\n              jumpi\n              dup1\n              0xe8b5e51f\n              eq\n              tag_13\n              jumpi\n              dup1\n              0xefd475ab\n              eq\n              tag_14\n              jumpi\n              dup1\n              0xf06817cf\n              eq\n              tag_15\n              jumpi\n              dup1\n              0xf5074f41\n              eq\n              tag_16\n              jumpi\n            tag_1:\n              0x0\n              dup1\n              revert\n                /* \"smart-contracts/contracts/Credit.sol\":6810:6900  function getBalance() public view returns (uint256) {\r... */\n            tag_2:\n              jumpi(tag_17, iszero(callvalue))\n              0x0\n              dup1\n              revert\n            tag_17:\n              tag_18\n              jump(tag_19)\n            tag_18:\n              mload(0x40)\n              dup1\n              dup3\n              dup2\n              mstore\n              0x20\n              add\n              swap2\n              pop\n              pop\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              return\n                /* \"smart-contracts/contracts/Credit.sol\":17799:17989  function changeState(State _state) external onlyOwner returns (uint) {\r... */\n            tag_3:\n              jumpi(tag_20, iszero(callvalue))\n              0x0\n              dup1\n              revert\n            tag_20:\n              tag_21\n              0x4\n              dup1\n              dup1\n              calldataload\n              0xff\n              and\n              swap1\n              0x20\n              add\n              swap1\n              swap2\n              swap1\n              pop\n              pop\n              jump(tag_22)\n            tag_21:\n              mload(0x40)\n              dup1\n              dup3\n              dup2\n              mstore\n              0x20\n              add\n              swap2\n              pop\n              pop\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              return\n                /* \"smart-contracts/contracts/Credit.sol\":1845:1884  mapping(address => bool) public lenders */\n            tag_4:\n              jumpi(tag_23, iszero(callvalue))\n              0x0\n              dup1\n              revert\n            tag_23:\n              tag_24\n              0x4\n              dup1\n              dup1\n              calldataload\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              swap1\n              0x20\n              add\n              swap1\n              swap2\n              swap1\n              pop\n              pop\n              jump(tag_25)\n            tag_24:\n              mload(0x40)\n              dup1\n              dup3\n              iszero\n              iszero\n              iszero\n              iszero\n              dup2\n              mstore\n              0x20\n              add\n              swap2\n              pop\n              pop\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              return\n                /* \"smart-contracts/contracts/Credit.sol\":18178:18400  function toggleActive() external onlyOwner returns (bool) {\r... */\n            tag_5:\n              jumpi(tag_26, iszero(callvalue))\n              0x0\n              dup1\n              revert\n            tag_26:\n              tag_27\n              jump(tag_28)\n            tag_27:\n              mload(0x40)\n              dup1\n              dup3\n              iszero\n              iszero\n              iszero\n              iszero\n              dup2\n              mstore\n              0x20\n              add\n              swap2\n              pop\n              pop\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              return\n                /* \"smart-contracts/contracts/Credit.sol\":11651:12143  function withdraw() public isActive onlyBorrower canWithdraw isNotFraud {\r... */\n            tag_6:\n              jumpi(tag_29, iszero(callvalue))\n              0x0\n              dup1\n              revert\n            tag_29:\n              tag_30\n              jump(tag_31)\n            tag_30:\n              stop\n                /* \"smart-contracts/contracts/Credit.sol\":8897:11308  function repay() public onlyBorrower canRepay payable {\r... */\n            tag_7:\n              tag_32\n              jump(tag_33)\n            tag_32:\n              stop\n                /* \"smart-contracts/contracts/Credit.sol\":14537:15150  function revokeVote() public isActive isRevokable onlyLender {\r... */\n            tag_8:\n              jumpi(tag_34, iszero(callvalue))\n              0x0\n              dup1\n              revert\n            tag_34:\n              tag_35\n              jump(tag_36)\n            tag_35:\n              stop\n                /* \"smart-contracts/contracts/Credit.sol\":15462:16416  function refund() public isActive onlyLender isRevoked {\r... */\n            tag_9:\n              jumpi(tag_37, iszero(callvalue))\n              0x0\n              dup1\n              revert\n            tag_37:\n              tag_38\n              jump(tag_39)\n            tag_38:\n              stop\n                /* \"smart-contracts/contracts/common/Destructible.sol\":151:225  function destroy() public onlyOwner {\r... */\n            tag_10:\n              jumpi(tag_40, iszero(callvalue))\n              0x0\n              dup1\n              revert\n            tag_40:\n              tag_41\n              jump(tag_42)\n            tag_41:\n              stop\n                /* \"smart-contracts/contracts/common/Ownable.sol\":54:74  address public owner */\n            tag_11:\n              jumpi(tag_43, iszero(callvalue))\n              0x0\n              dup1\n              revert\n            tag_43:\n              tag_44\n              jump(tag_45)\n            tag_44:\n              mload(0x40)\n              dup1\n              dup3\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              dup2\n              mstore\n              0x20\n              add\n              swap2\n              pop\n              pop\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              return\n                /* \"smart-contracts/contracts/Credit.sol\":16494:17099  function fraudVote() public isActive onlyLender returns (bool) {\r... */\n            tag_12:\n              jumpi(tag_46, iszero(callvalue))\n              0x0\n              dup1\n              revert\n            tag_46:\n              tag_47\n              jump(tag_48)\n            tag_47:\n              mload(0x40)\n              dup1\n              dup3\n              iszero\n              iszero\n              iszero\n              iszero\n              dup2\n              mstore\n              0x20\n              add\n              swap2\n              pop\n              pop\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              return\n                /* \"smart-contracts/contracts/Credit.sol\":7072:8788  function invest() public canInvest payable {\r... */\n            tag_13:\n              tag_49\n              jump(tag_50)\n            tag_49:\n              stop\n                /* \"smart-contracts/contracts/Credit.sol\":12478:13696  function requestInterest() public isActive onlyLender canAskForInterest {\r... */\n            tag_14:\n              jumpi(tag_51, iszero(callvalue))\n              0x0\n              dup1\n              revert\n            tag_51:\n              tag_52\n              jump(tag_53)\n            tag_52:\n              stop\n                /* \"smart-contracts/contracts/Credit.sol\":14059:14471  function getCreditInfo() public view returns (address, bytes32, uint, uint, uint, uint, uint, uint, State, bool, uint) {\r... */\n            tag_15:\n              jumpi(tag_54, iszero(callvalue))\n              0x0\n              dup1\n              revert\n            tag_54:\n              tag_55\n              jump(tag_56)\n            tag_55:\n              mload(0x40)\n              dup1\n              dup13\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              dup2\n              mstore\n              0x20\n              add\n              dup12\n              not(0x0)\n              and\n              not(0x0)\n              and\n              dup2\n              mstore\n              0x20\n              add\n              dup11\n              dup2\n              mstore\n              0x20\n              add\n              dup10\n              dup2\n              mstore\n              0x20\n              add\n              dup9\n              dup2\n              mstore\n              0x20\n              add\n              dup8\n              dup2\n              mstore\n              0x20\n              add\n              dup7\n              dup2\n              mstore\n              0x20\n              add\n              dup6\n              dup2\n              mstore\n              0x20\n              add\n              dup5\n              0x5\n              dup2\n              gt\n              iszero\n              tag_57\n              jumpi\n              invalid\n            tag_57:\n              0xff\n              and\n              dup2\n              mstore\n              0x20\n              add\n              dup4\n              iszero\n              iszero\n              iszero\n              iszero\n              dup2\n              mstore\n              0x20\n              add\n              dup3\n              dup2\n              mstore\n              0x20\n              add\n              swap12\n              pop\n              pop\n              pop\n              pop\n              pop\n              pop\n              pop\n              pop\n              pop\n              pop\n              pop\n              pop\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              return\n                /* \"smart-contracts/contracts/common/Destructible.sol\":237:341  function destroyAndSend(address _recipient) public onlyOwner {\r... */\n            tag_16:\n              jumpi(tag_58, iszero(callvalue))\n              0x0\n              dup1\n              revert\n            tag_58:\n              tag_59\n              0x4\n              dup1\n              dup1\n              calldataload\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              swap1\n              0x20\n              add\n              swap1\n              swap2\n              swap1\n              pop\n              pop\n              jump(tag_60)\n            tag_59:\n              stop\n                /* \"smart-contracts/contracts/Credit.sol\":6810:6900  function getBalance() public view returns (uint256) {\r... */\n            tag_19:\n                /* \"smart-contracts/contracts/Credit.sol\":6853:6860  uint256 */\n              0x0\n                /* \"smart-contracts/contracts/Credit.sol\":6880:6884  this */\n              address\n                /* \"smart-contracts/contracts/Credit.sol\":6880:6892  this.balance */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              balance\n                /* \"smart-contracts/contracts/Credit.sol\":6873:6892  return this.balance */\n              swap1\n              pop\n                /* \"smart-contracts/contracts/Credit.sol\":6810:6900  function getBalance() public view returns (uint256) {\r... */\n              swap1\n              jump\t// out\n                /* \"smart-contracts/contracts/Credit.sol\":17799:17989  function changeState(State _state) external onlyOwner returns (uint) {\r... */\n            tag_22:\n                /* \"smart-contracts/contracts/Credit.sol\":17862:17866  uint */\n              0x0\n                /* \"smart-contracts/contracts/common/Ownable.sol\":232:237  owner */\n              dup1\n              0x0\n              swap1\n              sload\n              swap1\n              0x100\n              exp\n              swap1\n              div\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n                /* \"smart-contracts/contracts/common/Ownable.sol\":218:237  msg.sender == owner */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n                /* \"smart-contracts/contracts/common/Ownable.sol\":218:228  msg.sender */\n              caller\n                /* \"smart-contracts/contracts/common/Ownable.sol\":218:237  msg.sender == owner */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              eq\n                /* \"smart-contracts/contracts/common/Ownable.sol\":210:238  require(msg.sender == owner) */\n              iszero\n              iszero\n              tag_63\n              jumpi\n              0x0\n              dup1\n              revert\n            tag_63:\n                /* \"smart-contracts/contracts/Credit.sol\":17887:17893  _state */\n              dup2\n                /* \"smart-contracts/contracts/Credit.sol\":17879:17884  state */\n              0xc\n              0x1\n                /* \"smart-contracts/contracts/Credit.sol\":17879:17893  state = _state */\n              0x100\n              exp\n              dup2\n              sload\n              dup2\n              0xff\n              mul\n              not\n              and\n              swap1\n              dup4\n              0x5\n              dup2\n              gt\n              iszero\n              tag_65\n              jumpi\n              invalid\n            tag_65:\n              mul\n              or\n              swap1\n              sstore\n              pop\n                /* \"smart-contracts/contracts/Credit.sol\":17965:17980  block.timestamp */\n              timestamp\n                /* \"smart-contracts/contracts/Credit.sol\":17958:17963  state */\n              0xc\n              0x1\n              swap1\n              sload\n              swap1\n              0x100\n              exp\n              swap1\n              div\n              0xff\n              and\n                /* \"smart-contracts/contracts/Credit.sol\":17936:17981  LogCreditStateChanged(state, block.timestamp) */\n              0x5\n              dup2\n              gt\n              iszero\n              tag_66\n              jumpi\n              invalid\n            tag_66:\n              0xaaae373901e745122c2e0925ad006227969c6cd190b7d5ea2fb7fdbd1d955b35\n              mload(0x40)\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              log3\n                /* \"smart-contracts/contracts/Credit.sol\":17799:17989  function changeState(State _state) external onlyOwner returns (uint) {\r... */\n              swap2\n              swap1\n              pop\n              jump\t// out\n                /* \"smart-contracts/contracts/Credit.sol\":1845:1884  mapping(address => bool) public lenders */\n            tag_25:\n              mstore(0x20, 0xd)\n              dup1\n              0x0\n              mstore\n              keccak256(0x0, 0x40)\n              0x0\n              swap2\n              pop\n              sload\n              swap1\n              0x100\n              exp\n              swap1\n              div\n              0xff\n              and\n              dup2\n              jump\t// out\n                /* \"smart-contracts/contracts/Credit.sol\":18178:18400  function toggleActive() external onlyOwner returns (bool) {\r... */\n            tag_28:\n                /* \"smart-contracts/contracts/Credit.sol\":18230:18234  bool */\n              0x0\n                /* \"smart-contracts/contracts/common/Ownable.sol\":232:237  owner */\n              dup1\n              0x0\n              swap1\n              sload\n              swap1\n              0x100\n              exp\n              swap1\n              div\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n                /* \"smart-contracts/contracts/common/Ownable.sol\":218:237  msg.sender == owner */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n                /* \"smart-contracts/contracts/common/Ownable.sol\":218:228  msg.sender */\n              caller\n                /* \"smart-contracts/contracts/common/Ownable.sol\":218:237  msg.sender == owner */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              eq\n                /* \"smart-contracts/contracts/common/Ownable.sol\":210:238  require(msg.sender == owner) */\n              iszero\n              iszero\n              tag_68\n              jumpi\n              0x0\n              dup1\n              revert\n            tag_68:\n                /* \"smart-contracts/contracts/Credit.sol\":18257:18263  active */\n              0xc\n              0x0\n              swap1\n              sload\n              swap1\n              0x100\n              exp\n              swap1\n              div\n              0xff\n              and\n                /* \"smart-contracts/contracts/Credit.sol\":18256:18263  !active */\n              iszero\n                /* \"smart-contracts/contracts/Credit.sol\":18247:18253  active */\n              0xc\n              0x0\n                /* \"smart-contracts/contracts/Credit.sol\":18247:18263  active = !active */\n              0x100\n              exp\n              dup2\n              sload\n              dup2\n              0xff\n              mul\n              not\n              and\n              swap1\n              dup4\n              iszero\n              iszero\n              mul\n              or\n              swap1\n              sstore\n              pop\n                /* \"smart-contracts/contracts/Credit.sol\":18350:18365  block.timestamp */\n              timestamp\n                /* \"smart-contracts/contracts/Credit.sol\":18342:18348  active */\n              0xc\n              0x0\n              swap1\n              sload\n              swap1\n              0x100\n              exp\n              swap1\n              div\n              0xff\n              and\n                /* \"smart-contracts/contracts/Credit.sol\":18314:18366  LogCreditStateActiveChanged(active, block.timestamp) */\n              iszero\n              iszero\n              0x160914ea27c60aa29a5f3a69d74e6069869de36e38939de1e0a66b921d8623d2\n              mload(0x40)\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              log3\n                /* \"smart-contracts/contracts/Credit.sol\":18386:18392  active */\n              0xc\n              0x0\n              swap1\n              sload\n              swap1\n              0x100\n              exp\n              swap1\n              div\n              0xff\n              and\n                /* \"smart-contracts/contracts/Credit.sol\":18379:18392  return active */\n              swap1\n              pop\n                /* \"smart-contracts/contracts/Credit.sol\":18178:18400  function toggleActive() external onlyOwner returns (bool) {\r... */\n              swap1\n              jump\t// out\n                /* \"smart-contracts/contracts/Credit.sol\":11651:12143  function withdraw() public isActive onlyBorrower canWithdraw isNotFraud {\r... */\n            tag_31:\n                /* \"smart-contracts/contracts/Credit.sol\":3958:3962  true */\n              0x1\n                /* \"smart-contracts/contracts/Credit.sol\":3948:3962  active == true */\n              iszero\n              iszero\n                /* \"smart-contracts/contracts/Credit.sol\":3948:3954  active */\n              0xc\n              0x0\n              swap1\n              sload\n              swap1\n              0x100\n              exp\n              swap1\n              div\n              0xff\n              and\n                /* \"smart-contracts/contracts/Credit.sol\":3948:3962  active == true */\n              iszero\n              iszero\n              eq\n                /* \"smart-contracts/contracts/Credit.sol\":3940:3963  require(active == true) */\n              iszero\n              iszero\n              tag_71\n              jumpi\n              0x0\n              dup1\n              revert\n            tag_71:\n                /* \"smart-contracts/contracts/Credit.sol\":4048:4056  borrower */\n              0x1\n              0x0\n              swap1\n              sload\n              swap1\n              0x100\n              exp\n              swap1\n              div\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n                /* \"smart-contracts/contracts/Credit.sol\":4034:4056  msg.sender == borrower */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n                /* \"smart-contracts/contracts/Credit.sol\":4034:4044  msg.sender */\n              caller\n                /* \"smart-contracts/contracts/Credit.sol\":4034:4056  msg.sender == borrower */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              eq\n                /* \"smart-contracts/contracts/Credit.sol\":4026:4057  require(msg.sender == borrower) */\n              iszero\n              iszero\n              tag_73\n              jumpi\n              0x0\n              dup1\n              revert\n            tag_73:\n                /* \"smart-contracts/contracts/Credit.sol\":4590:4605  requestedAmount */\n              sload(0x2)\n                /* \"smart-contracts/contracts/Credit.sol\":4574:4578  this */\n              address\n                /* \"smart-contracts/contracts/Credit.sol\":4574:4586  this.balance */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              balance\n                /* \"smart-contracts/contracts/Credit.sol\":4574:4605  this.balance >= requestedAmount */\n              lt\n              iszero\n                /* \"smart-contracts/contracts/Credit.sol\":4566:4606  require(this.balance >= requestedAmount) */\n              iszero\n              iszero\n              tag_75\n              jumpi\n              0x0\n              dup1\n              revert\n            tag_75:\n                /* \"smart-contracts/contracts/Credit.sol\":4684:4695  State.fraud */\n              0x5\n                /* \"smart-contracts/contracts/Credit.sol\":4675:4695  state != State.fraud */\n              dup1\n              dup2\n              gt\n              iszero\n              tag_77\n              jumpi\n              invalid\n            tag_77:\n                /* \"smart-contracts/contracts/Credit.sol\":4675:4680  state */\n              0xc\n              0x1\n              swap1\n              sload\n              swap1\n              0x100\n              exp\n              swap1\n              div\n              0xff\n              and\n                /* \"smart-contracts/contracts/Credit.sol\":4675:4695  state != State.fraud */\n              0x5\n              dup2\n              gt\n              iszero\n              tag_78\n              jumpi\n              invalid\n            tag_78:\n              eq\n              iszero\n                /* \"smart-contracts/contracts/Credit.sol\":4667:4696  require(state != State.fraud) */\n              iszero\n              iszero\n              tag_79\n              jumpi\n              0x0\n              dup1\n              revert\n            tag_79:\n                /* \"smart-contracts/contracts/Credit.sol\":11809:11824  State.repayment */\n              0x1\n                /* \"smart-contracts/contracts/Credit.sol\":11801:11806  state */\n              0xc\n              0x1\n                /* \"smart-contracts/contracts/Credit.sol\":11801:11824  state = State.repayment */\n              0x100\n              exp\n              dup2\n              sload\n              dup2\n              0xff\n              mul\n              not\n              and\n              swap1\n              dup4\n              0x5\n              dup2\n              gt\n              iszero\n              tag_81\n              jumpi\n              invalid\n            tag_81:\n              mul\n              or\n              swap1\n              sstore\n              pop\n                /* \"smart-contracts/contracts/Credit.sol\":11896:11911  block.timestamp */\n              timestamp\n                /* \"smart-contracts/contracts/Credit.sol\":11889:11894  state */\n              0xc\n              0x1\n              swap1\n              sload\n              swap1\n              0x100\n              exp\n              swap1\n              div\n              0xff\n              and\n                /* \"smart-contracts/contracts/Credit.sol\":11867:11912  LogCreditStateChanged(state, block.timestamp) */\n              0x5\n              dup2\n              gt\n              iszero\n              tag_82\n              jumpi\n              invalid\n            tag_82:\n              0xaaae373901e745122c2e0925ad006227969c6cd190b7d5ea2fb7fdbd1d955b35\n              mload(0x40)\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              log3\n                /* \"smart-contracts/contracts/Credit.sol\":12010:12025  block.timestamp */\n              timestamp\n                /* \"smart-contracts/contracts/Credit.sol\":11996:12000  this */\n              address\n                /* \"smart-contracts/contracts/Credit.sol\":11996:12008  this.balance */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              balance\n                /* \"smart-contracts/contracts/Credit.sol\":11984:11994  msg.sender */\n              caller\n                /* \"smart-contracts/contracts/Credit.sol\":11962:12026  LogBorrowerWithdrawal(msg.sender, this.balance, block.timestamp) */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              0x20734f14d107b526674905e470e35d0a474f9fb996a7bdb034c839c8894524e6\n              mload(0x40)\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              log4\n                /* \"smart-contracts/contracts/Credit.sol\":12104:12112  borrower */\n              0x1\n              0x0\n              swap1\n              sload\n              swap1\n              0x100\n              exp\n              swap1\n              div\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n                /* \"smart-contracts/contracts/Credit.sol\":12104:12121  borrower.transfer */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n                /* \"smart-contracts/contracts/Credit.sol\":12104:12135  borrower.transfer(this.balance) */\n              0x8fc\n                /* \"smart-contracts/contracts/Credit.sol\":12122:12126  this */\n              address\n                /* \"smart-contracts/contracts/Credit.sol\":12122:12134  this.balance */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              balance\n                /* \"smart-contracts/contracts/Credit.sol\":12104:12135  borrower.transfer(this.balance) */\n              swap1\n              dup2\n              iszero\n              mul\n              swap1\n              mload(0x40)\n              0x0\n              mload(0x40)\n              dup1\n              dup4\n              sub\n              dup2\n              dup6\n              dup9\n              dup9\n              call\n              swap4\n              pop\n              pop\n              pop\n              pop\n              iszero\n              iszero\n              tag_83\n              jumpi\n              0x0\n              dup1\n              revert\n            tag_83:\n                /* \"smart-contracts/contracts/Credit.sol\":11651:12143  function withdraw() public isActive onlyBorrower canWithdraw isNotFraud {\r... */\n              jump\t// out\n                /* \"smart-contracts/contracts/Credit.sol\":8897:11308  function repay() public onlyBorrower canRepay payable {\r... */\n            tag_33:\n                /* \"smart-contracts/contracts/Credit.sol\":9704:9719  uint extraMoney */\n              0x0\n                /* \"smart-contracts/contracts/Credit.sol\":4048:4056  borrower */\n              0x1\n              0x0\n              swap1\n              sload\n              swap1\n              0x100\n              exp\n              swap1\n              div\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n                /* \"smart-contracts/contracts/Credit.sol\":4034:4056  msg.sender == borrower */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n                /* \"smart-contracts/contracts/Credit.sol\":4034:4044  msg.sender */\n              caller\n                /* \"smart-contracts/contracts/Credit.sol\":4034:4056  msg.sender == borrower */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              eq\n                /* \"smart-contracts/contracts/Credit.sol\":4026:4057  require(msg.sender == borrower) */\n              iszero\n              iszero\n              tag_85\n              jumpi\n              0x0\n              dup1\n              revert\n            tag_85:\n                /* \"smart-contracts/contracts/Credit.sol\":4488:4503  State.repayment */\n              0x1\n                /* \"smart-contracts/contracts/Credit.sol\":4479:4503  state == State.repayment */\n              0x5\n              dup2\n              gt\n              iszero\n              tag_87\n              jumpi\n              invalid\n            tag_87:\n                /* \"smart-contracts/contracts/Credit.sol\":4479:4484  state */\n              0xc\n              0x1\n              swap1\n              sload\n              swap1\n              0x100\n              exp\n              swap1\n              div\n              0xff\n              and\n                /* \"smart-contracts/contracts/Credit.sol\":4479:4503  state == State.repayment */\n              0x5\n              dup2\n              gt\n              iszero\n              tag_88\n              jumpi\n              invalid\n            tag_88:\n              eq\n                /* \"smart-contracts/contracts/Credit.sol\":4471:4504  require(state == State.repayment) */\n              iszero\n              iszero\n              tag_89\n              jumpi\n              0x0\n              dup1\n              revert\n            tag_89:\n                /* \"smart-contracts/contracts/Credit.sol\":9067:9068  0 */\n              0x0\n                /* \"smart-contracts/contracts/Credit.sol\":9045:9064  remainingRepayments */\n              sload(0x7)\n                /* \"smart-contracts/contracts/Credit.sol\":9045:9068  remainingRepayments > 0 */\n              gt\n                /* \"smart-contracts/contracts/Credit.sol\":9037:9069  require(remainingRepayments > 0) */\n              iszero\n              iszero\n              tag_91\n              jumpi\n              0x0\n              dup1\n              revert\n            tag_91:\n                /* \"smart-contracts/contracts/Credit.sol\":9180:9200  repaymentInstallment */\n              sload(0x8)\n                /* \"smart-contracts/contracts/Credit.sol\":9167:9176  msg.value */\n              callvalue\n                /* \"smart-contracts/contracts/Credit.sol\":9167:9200  msg.value >= repaymentInstallment */\n              lt\n              iszero\n                /* \"smart-contracts/contracts/Credit.sol\":9159:9201  require(msg.value >= repaymentInstallment) */\n              iszero\n              iszero\n              tag_92\n              jumpi\n              0x0\n              dup1\n              revert\n            tag_92:\n                /* \"smart-contracts/contracts/Credit.sol\":9421:9433  returnAmount */\n              sload(0x3)\n                /* \"smart-contracts/contracts/Credit.sol\":9406:9418  repaidAmount */\n              sload(0x4)\n                /* \"smart-contracts/contracts/Credit.sol\":9406:9433  repaidAmount < returnAmount */\n              lt\n                /* \"smart-contracts/contracts/Credit.sol\":9399:9434  assert(repaidAmount < returnAmount) */\n              iszero\n              iszero\n              tag_93\n              jumpi\n              invalid\n            tag_93:\n                /* \"smart-contracts/contracts/Credit.sol\":9495:9514  remainingRepayments */\n              0x7\n              0x0\n                /* \"smart-contracts/contracts/Credit.sol\":9495:9516  remainingRepayments-- */\n              dup2\n              sload\n              dup1\n              swap3\n              swap2\n              swap1\n              0x1\n              swap1\n              sub\n              swap2\n              swap1\n              pop\n              sstore\n              pop\n                /* \"smart-contracts/contracts/Credit.sol\":9589:9604  block.timestamp */\n              timestamp\n                /* \"smart-contracts/contracts/Credit.sol\":9569:9586  lastRepaymentDate */\n              0xa\n                /* \"smart-contracts/contracts/Credit.sol\":9569:9604  lastRepaymentDate = block.timestamp */\n              dup2\n              swap1\n              sstore\n              pop\n                /* \"smart-contracts/contracts/Credit.sol\":9722:9723  0 */\n              0x0\n                /* \"smart-contracts/contracts/Credit.sol\":9704:9723  uint extraMoney = 0 */\n              swap1\n              pop\n                /* \"smart-contracts/contracts/Credit.sol\":9943:9963  repaymentInstallment */\n              sload(0x8)\n                /* \"smart-contracts/contracts/Credit.sol\":9931:9940  msg.value */\n              callvalue\n                /* \"smart-contracts/contracts/Credit.sol\":9931:9963  msg.value > repaymentInstallment */\n              gt\n                /* \"smart-contracts/contracts/Credit.sol\":9927:10563  if (msg.value > repaymentInstallment) {\r... */\n              iszero\n              tag_94\n              jumpi\n                /* \"smart-contracts/contracts/Credit.sol\":10068:10103  msg.value.sub(repaymentInstallment) */\n              tag_95\n                /* \"smart-contracts/contracts/Credit.sol\":10082:10102  repaymentInstallment */\n              sload(0x8)\n                /* \"smart-contracts/contracts/Credit.sol\":10068:10077  msg.value */\n              callvalue\n                /* \"smart-contracts/contracts/Credit.sol\":10068:10081  msg.value.sub */\n              tag_96\n              swap1\n                /* \"smart-contracts/contracts/Credit.sol\":10068:10103  msg.value.sub(repaymentInstallment) */\n              swap2\n              swap1\n              0xffffffff\n              and\n              jump\t// in\n            tag_95:\n                /* \"smart-contracts/contracts/Credit.sol\":10055:10103  extraMoney = msg.value.sub(repaymentInstallment) */\n              swap1\n              pop\n                /* \"smart-contracts/contracts/Credit.sol\":10192:10217  msg.value.sub(extraMoney) */\n              tag_97\n                /* \"smart-contracts/contracts/Credit.sol\":10206:10216  extraMoney */\n              dup2\n                /* \"smart-contracts/contracts/Credit.sol\":10192:10201  msg.value */\n              callvalue\n                /* \"smart-contracts/contracts/Credit.sol\":10192:10205  msg.value.sub */\n              tag_96\n              swap1\n                /* \"smart-contracts/contracts/Credit.sol\":10192:10217  msg.value.sub(extraMoney) */\n              swap2\n              swap1\n              0xffffffff\n              and\n              jump\t// in\n            tag_97:\n                /* \"smart-contracts/contracts/Credit.sol\":10168:10188  repaymentInstallment */\n              sload(0x8)\n                /* \"smart-contracts/contracts/Credit.sol\":10168:10217  repaymentInstallment == msg.value.sub(extraMoney) */\n              eq\n                /* \"smart-contracts/contracts/Credit.sol\":10161:10218  assert(repaymentInstallment == msg.value.sub(extraMoney)) */\n              iszero\n              iszero\n              tag_98\n              jumpi\n              invalid\n            tag_98:\n                /* \"smart-contracts/contracts/Credit.sol\":10294:10303  msg.value */\n              callvalue\n                /* \"smart-contracts/contracts/Credit.sol\":10280:10290  extraMoney */\n              dup2\n                /* \"smart-contracts/contracts/Credit.sol\":10280:10303  extraMoney <= msg.value */\n              gt\n              iszero\n                /* \"smart-contracts/contracts/Credit.sol\":10273:10304  assert(extraMoney <= msg.value) */\n              iszero\n              iszero\n              tag_99\n              jumpi\n              invalid\n            tag_99:\n                /* \"smart-contracts/contracts/Credit.sol\":10386:10396  msg.sender */\n              caller\n                /* \"smart-contracts/contracts/Credit.sol\":10386:10405  msg.sender.transfer */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n                /* \"smart-contracts/contracts/Credit.sol\":10386:10417  msg.sender.transfer(extraMoney) */\n              0x8fc\n                /* \"smart-contracts/contracts/Credit.sol\":10406:10416  extraMoney */\n              dup3\n                /* \"smart-contracts/contracts/Credit.sol\":10386:10417  msg.sender.transfer(extraMoney) */\n              swap1\n              dup2\n              iszero\n              mul\n              swap1\n              mload(0x40)\n              0x0\n              mload(0x40)\n              dup1\n              dup4\n              sub\n              dup2\n              dup6\n              dup9\n              dup9\n              call\n              swap4\n              pop\n              pop\n              pop\n              pop\n              iszero\n              iszero\n              tag_100\n              jumpi\n              0x0\n              dup1\n              revert\n            tag_100:\n                /* \"smart-contracts/contracts/Credit.sol\":10535:10550  block.timestamp */\n              timestamp\n                /* \"smart-contracts/contracts/Credit.sol\":10523:10533  extraMoney */\n              dup2\n                /* \"smart-contracts/contracts/Credit.sol\":10511:10521  msg.sender */\n              caller\n                /* \"smart-contracts/contracts/Credit.sol\":10485:10551  LogBorrowerChangeReturned(msg.sender, extraMoney, block.timestamp) */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              0x5c9874487a2258c6bd6dc39a2cfcf7ea944b50b79d9a7152668779687b2ebd8d\n              mload(0x40)\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              log4\n                /* \"smart-contracts/contracts/Credit.sol\":9927:10563  if (msg.value > repaymentInstallment) {\r... */\n            tag_94:\n                /* \"smart-contracts/contracts/Credit.sol\":10693:10708  block.timestamp */\n              timestamp\n                /* \"smart-contracts/contracts/Credit.sol\":10666:10691  msg.value.sub(extraMoney) */\n              tag_101\n                /* \"smart-contracts/contracts/Credit.sol\":10680:10690  extraMoney */\n              dup3\n                /* \"smart-contracts/contracts/Credit.sol\":10666:10675  msg.value */\n              callvalue\n                /* \"smart-contracts/contracts/Credit.sol\":10666:10679  msg.value.sub */\n              tag_96\n              swap1\n                /* \"smart-contracts/contracts/Credit.sol\":10666:10691  msg.value.sub(extraMoney) */\n              swap2\n              swap1\n              0xffffffff\n              and\n              jump\t// in\n            tag_101:\n                /* \"smart-contracts/contracts/Credit.sol\":10654:10664  msg.sender */\n              caller\n                /* \"smart-contracts/contracts/Credit.sol\":10622:10709  LogBorrowerRepaymentInstallment(msg.sender, msg.value.sub(extraMoney), block.timestamp) */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              0x350a09487d622378c6efbda255f996387696319f803a2e53eee64f7aa70be85a\n              mload(0x40)\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              log4\n                /* \"smart-contracts/contracts/Credit.sol\":10814:10857  repaidAmount.add(msg.value.sub(extraMoney)) */\n              tag_102\n                /* \"smart-contracts/contracts/Credit.sol\":10831:10856  msg.value.sub(extraMoney) */\n              tag_103\n                /* \"smart-contracts/contracts/Credit.sol\":10845:10855  extraMoney */\n              dup3\n                /* \"smart-contracts/contracts/Credit.sol\":10831:10840  msg.value */\n              callvalue\n                /* \"smart-contracts/contracts/Credit.sol\":10831:10844  msg.value.sub */\n              tag_96\n              swap1\n                /* \"smart-contracts/contracts/Credit.sol\":10831:10856  msg.value.sub(extraMoney) */\n              swap2\n              swap1\n              0xffffffff\n              and\n              jump\t// in\n            tag_103:\n                /* \"smart-contracts/contracts/Credit.sol\":10814:10826  repaidAmount */\n              sload(0x4)\n                /* \"smart-contracts/contracts/Credit.sol\":10814:10830  repaidAmount.add */\n              tag_104\n              swap1\n                /* \"smart-contracts/contracts/Credit.sol\":10814:10857  repaidAmount.add(msg.value.sub(extraMoney)) */\n              swap2\n              swap1\n              0xffffffff\n              and\n              jump\t// in\n            tag_102:\n                /* \"smart-contracts/contracts/Credit.sol\":10799:10811  repaidAmount */\n              0x4\n                /* \"smart-contracts/contracts/Credit.sol\":10799:10857  repaidAmount = repaidAmount.add(msg.value.sub(extraMoney)) */\n              dup2\n              swap1\n              sstore\n              pop\n                /* \"smart-contracts/contracts/Credit.sol\":10961:10973  returnAmount */\n              sload(0x3)\n                /* \"smart-contracts/contracts/Credit.sol\":10945:10957  repaidAmount */\n              sload(0x4)\n                /* \"smart-contracts/contracts/Credit.sol\":10945:10973  repaidAmount == returnAmount */\n              eq\n                /* \"smart-contracts/contracts/Credit.sol\":10941:11301  if (repaidAmount == returnAmount) {\r... */\n              iszero\n              tag_105\n              jumpi\n                /* \"smart-contracts/contracts/Credit.sol\":11068:11083  block.timestamp */\n              timestamp\n                /* \"smart-contracts/contracts/Credit.sol\":11056:11066  msg.sender */\n              caller\n                /* \"smart-contracts/contracts/Credit.sol\":11027:11084  LogBorrowerRepaymentFinished(msg.sender, block.timestamp) */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              0x25630de45a38a90cbca3a2eb35a8197e51b56d6d912581711e5e3773fe77cabc\n              mload(0x40)\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              log3\n                /* \"smart-contracts/contracts/Credit.sol\":11172:11193  State.interestReturns */\n              0x2\n                /* \"smart-contracts/contracts/Credit.sol\":11164:11169  state */\n              0xc\n              0x1\n                /* \"smart-contracts/contracts/Credit.sol\":11164:11193  state = State.interestReturns */\n              0x100\n              exp\n              dup2\n              sload\n              dup2\n              0xff\n              mul\n              not\n              and\n              swap1\n              dup4\n              0x5\n              dup2\n              gt\n              iszero\n              tag_106\n              jumpi\n              invalid\n            tag_106:\n              mul\n              or\n              swap1\n              sstore\n              pop\n                /* \"smart-contracts/contracts/Credit.sol\":11273:11288  block.timestamp */\n              timestamp\n                /* \"smart-contracts/contracts/Credit.sol\":11266:11271  state */\n              0xc\n              0x1\n              swap1\n              sload\n              swap1\n              0x100\n              exp\n              swap1\n              div\n              0xff\n              and\n                /* \"smart-contracts/contracts/Credit.sol\":11244:11289  LogCreditStateChanged(state, block.timestamp) */\n              0x5\n              dup2\n              gt\n              iszero\n              tag_107\n              jumpi\n              invalid\n            tag_107:\n              0xaaae373901e745122c2e0925ad006227969c6cd190b7d5ea2fb7fdbd1d955b35\n              mload(0x40)\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              log3\n                /* \"smart-contracts/contracts/Credit.sol\":10941:11301  if (repaidAmount == returnAmount) {\r... */\n            tag_105:\n                /* \"smart-contracts/contracts/Credit.sol\":8897:11308  function repay() public onlyBorrower canRepay payable {\r... */\n              pop\n              jump\t// out\n                /* \"smart-contracts/contracts/Credit.sol\":14537:15150  function revokeVote() public isActive isRevokable onlyLender {\r... */\n            tag_36:\n                /* \"smart-contracts/contracts/Credit.sol\":3958:3962  true */\n              0x1\n                /* \"smart-contracts/contracts/Credit.sol\":3948:3962  active == true */\n              iszero\n              iszero\n                /* \"smart-contracts/contracts/Credit.sol\":3948:3954  active */\n              0xc\n              0x0\n              swap1\n              sload\n              swap1\n              0x100\n              exp\n              swap1\n              div\n              0xff\n              and\n                /* \"smart-contracts/contracts/Credit.sol\":3948:3962  active == true */\n              iszero\n              iszero\n              eq\n                /* \"smart-contracts/contracts/Credit.sol\":3940:3963  require(active == true) */\n              iszero\n              iszero\n              tag_109\n              jumpi\n              0x0\n              dup1\n              revert\n            tag_109:\n                /* \"smart-contracts/contracts/Credit.sol\":4785:4801  revokeTimeNeeded */\n              sload(0x12)\n                /* \"smart-contracts/contracts/Credit.sol\":4766:4781  block.timestamp */\n              timestamp\n                /* \"smart-contracts/contracts/Credit.sol\":4766:4801  block.timestamp >= revokeTimeNeeded */\n              lt\n              iszero\n                /* \"smart-contracts/contracts/Credit.sol\":4758:4802  require(block.timestamp >= revokeTimeNeeded) */\n              iszero\n              iszero\n              tag_111\n              jumpi\n              0x0\n              dup1\n              revert\n            tag_111:\n                /* \"smart-contracts/contracts/Credit.sol\":4830:4846  State.investment */\n              0x0\n                /* \"smart-contracts/contracts/Credit.sol\":4821:4846  state == State.investment */\n              0x5\n              dup2\n              gt\n              iszero\n              tag_112\n              jumpi\n              invalid\n            tag_112:\n                /* \"smart-contracts/contracts/Credit.sol\":4821:4826  state */\n              0xc\n              0x1\n              swap1\n              sload\n              swap1\n              0x100\n              exp\n              swap1\n              div\n              0xff\n              and\n                /* \"smart-contracts/contracts/Credit.sol\":4821:4846  state == State.investment */\n              0x5\n              dup2\n              gt\n              iszero\n              tag_113\n              jumpi\n              invalid\n            tag_113:\n              eq\n                /* \"smart-contracts/contracts/Credit.sol\":4813:4847  require(state == State.investment) */\n              iszero\n              iszero\n              tag_114\n              jumpi\n              0x0\n              dup1\n              revert\n            tag_114:\n                /* \"smart-contracts/contracts/Credit.sol\":4149:4153  true */\n              0x1\n                /* \"smart-contracts/contracts/Credit.sol\":4126:4153  lenders[msg.sender] == true */\n              iszero\n              iszero\n                /* \"smart-contracts/contracts/Credit.sol\":4126:4133  lenders */\n              0xd\n                /* \"smart-contracts/contracts/Credit.sol\":4126:4145  lenders[msg.sender] */\n              0x0\n                /* \"smart-contracts/contracts/Credit.sol\":4134:4144  msg.sender */\n              caller\n                /* \"smart-contracts/contracts/Credit.sol\":4126:4145  lenders[msg.sender] */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              dup2\n              mstore\n              0x20\n              add\n              swap1\n              dup2\n              mstore\n              0x20\n              add\n              0x0\n              keccak256\n              0x0\n              swap1\n              sload\n              swap1\n              0x100\n              exp\n              swap1\n              div\n              0xff\n              and\n                /* \"smart-contracts/contracts/Credit.sol\":4126:4153  lenders[msg.sender] == true */\n              iszero\n              iszero\n              eq\n                /* \"smart-contracts/contracts/Credit.sol\":4118:4154  require(lenders[msg.sender] == true) */\n              iszero\n              iszero\n              tag_116\n              jumpi\n              0x0\n              dup1\n              revert\n            tag_116:\n                /* \"smart-contracts/contracts/Credit.sol\":14691:14696  false */\n              0x0\n                /* \"smart-contracts/contracts/Credit.sol\":14663:14696  revokeVoters[msg.sender] == false */\n              iszero\n              iszero\n                /* \"smart-contracts/contracts/Credit.sol\":14663:14675  revokeVoters */\n              0x11\n                /* \"smart-contracts/contracts/Credit.sol\":14663:14687  revokeVoters[msg.sender] */\n              0x0\n                /* \"smart-contracts/contracts/Credit.sol\":14676:14686  msg.sender */\n              caller\n                /* \"smart-contracts/contracts/Credit.sol\":14663:14687  revokeVoters[msg.sender] */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              dup2\n              mstore\n              0x20\n              add\n              swap1\n              dup2\n              mstore\n              0x20\n              add\n              0x0\n              keccak256\n              0x0\n              swap1\n              sload\n              swap1\n              0x100\n              exp\n              swap1\n              div\n              0xff\n              and\n                /* \"smart-contracts/contracts/Credit.sol\":14663:14696  revokeVoters[msg.sender] == false */\n              iszero\n              iszero\n              eq\n                /* \"smart-contracts/contracts/Credit.sol\":14655:14697  require(revokeVoters[msg.sender] == false) */\n              iszero\n              iszero\n              tag_118\n              jumpi\n              0x0\n              dup1\n              revert\n            tag_118:\n                /* \"smart-contracts/contracts/Credit.sol\":14749:14760  revokeVotes */\n              0x10\n              0x0\n                /* \"smart-contracts/contracts/Credit.sol\":14749:14762  revokeVotes++ */\n              dup2\n              sload\n              dup1\n              swap3\n              swap2\n              swap1\n              0x1\n              add\n              swap2\n              swap1\n              pop\n              sstore\n              pop\n                /* \"smart-contracts/contracts/Credit.sol\":14842:14846  true */\n              0x1\n                /* \"smart-contracts/contracts/Credit.sol\":14814:14846  revokeVoters[msg.sender] == true */\n              iszero\n              iszero\n                /* \"smart-contracts/contracts/Credit.sol\":14814:14826  revokeVoters */\n              0x11\n                /* \"smart-contracts/contracts/Credit.sol\":14814:14838  revokeVoters[msg.sender] */\n              0x0\n                /* \"smart-contracts/contracts/Credit.sol\":14827:14837  msg.sender */\n              caller\n                /* \"smart-contracts/contracts/Credit.sol\":14814:14838  revokeVoters[msg.sender] */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              dup2\n              mstore\n              0x20\n              add\n              swap1\n              dup2\n              mstore\n              0x20\n              add\n              0x0\n              keccak256\n              0x0\n              swap1\n              sload\n              swap1\n              0x100\n              exp\n              swap1\n              pop\n              pop\n                /* \"smart-contracts/contracts/Credit.sol\":14814:14846  revokeVoters[msg.sender] == true */\n              pop\n                /* \"smart-contracts/contracts/Credit.sol\":14958:14973  block.timestamp */\n              timestamp\n                /* \"smart-contracts/contracts/Credit.sol\":14946:14956  msg.sender */\n              caller\n                /* \"smart-contracts/contracts/Credit.sol\":14921:14974  LogLenderVoteForRevoking(msg.sender, block.timestamp) */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              0xd7173ce7e4ce6f6d075259ac1a467ab8290db175a2cee8587a663c006b97e129\n              mload(0x40)\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              log3\n                /* \"smart-contracts/contracts/Credit.sol\":15048:15059  revokeVotes */\n              sload(0x10)\n                /* \"smart-contracts/contracts/Credit.sol\":15032:15044  lendersCount */\n              sload(0xf)\n                /* \"smart-contracts/contracts/Credit.sol\":15032:15059  lendersCount == revokeVotes */\n              eq\n                /* \"smart-contracts/contracts/Credit.sol\":15028:15143  if (lendersCount == revokeVotes) {\r... */\n              iszero\n              tag_119\n              jumpi\n                /* \"smart-contracts/contracts/Credit.sol\":15123:15131  revoke() */\n              tag_120\n                /* \"smart-contracts/contracts/Credit.sol\":15123:15129  revoke */\n              tag_121\n                /* \"smart-contracts/contracts/Credit.sol\":15123:15131  revoke() */\n              jump\t// in\n            tag_120:\n                /* \"smart-contracts/contracts/Credit.sol\":15028:15143  if (lendersCount == revokeVotes) {\r... */\n            tag_119:\n                /* \"smart-contracts/contracts/Credit.sol\":14537:15150  function revokeVote() public isActive isRevokable onlyLender {\r... */\n              jump\t// out\n                /* \"smart-contracts/contracts/Credit.sol\":15462:16416  function refund() public isActive onlyLender isRevoked {\r... */\n            tag_39:\n                /* \"smart-contracts/contracts/Credit.sol\":3958:3962  true */\n              0x1\n                /* \"smart-contracts/contracts/Credit.sol\":3948:3962  active == true */\n              iszero\n              iszero\n                /* \"smart-contracts/contracts/Credit.sol\":3948:3954  active */\n              0xc\n              0x0\n              swap1\n              sload\n              swap1\n              0x100\n              exp\n              swap1\n              div\n              0xff\n              and\n                /* \"smart-contracts/contracts/Credit.sol\":3948:3962  active == true */\n              iszero\n              iszero\n              eq\n                /* \"smart-contracts/contracts/Credit.sol\":3940:3963  require(active == true) */\n              iszero\n              iszero\n              tag_123\n              jumpi\n              0x0\n              dup1\n              revert\n            tag_123:\n                /* \"smart-contracts/contracts/Credit.sol\":4149:4153  true */\n              0x1\n                /* \"smart-contracts/contracts/Credit.sol\":4126:4153  lenders[msg.sender] == true */\n              iszero\n              iszero\n                /* \"smart-contracts/contracts/Credit.sol\":4126:4133  lenders */\n              0xd\n                /* \"smart-contracts/contracts/Credit.sol\":4126:4145  lenders[msg.sender] */\n              0x0\n                /* \"smart-contracts/contracts/Credit.sol\":4134:4144  msg.sender */\n              caller\n                /* \"smart-contracts/contracts/Credit.sol\":4126:4145  lenders[msg.sender] */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              dup2\n              mstore\n              0x20\n              add\n              swap1\n              dup2\n              mstore\n              0x20\n              add\n              0x0\n              keccak256\n              0x0\n              swap1\n              sload\n              swap1\n              0x100\n              exp\n              swap1\n              div\n              0xff\n              and\n                /* \"smart-contracts/contracts/Credit.sol\":4126:4153  lenders[msg.sender] == true */\n              iszero\n              iszero\n              eq\n                /* \"smart-contracts/contracts/Credit.sol\":4118:4154  require(lenders[msg.sender] == true) */\n              iszero\n              iszero\n              tag_125\n              jumpi\n              0x0\n              dup1\n              revert\n            tag_125:\n                /* \"smart-contracts/contracts/Credit.sol\":4924:4937  State.revoked */\n              0x4\n                /* \"smart-contracts/contracts/Credit.sol\":4915:4937  state == State.revoked */\n              0x5\n              dup2\n              gt\n              iszero\n              tag_127\n              jumpi\n              invalid\n            tag_127:\n                /* \"smart-contracts/contracts/Credit.sol\":4915:4920  state */\n              0xc\n              0x1\n              swap1\n              sload\n              swap1\n              0x100\n              exp\n              swap1\n              div\n              0xff\n              and\n                /* \"smart-contracts/contracts/Credit.sol\":4915:4937  state == State.revoked */\n              0x5\n              dup2\n              gt\n              iszero\n              tag_128\n              jumpi\n              invalid\n            tag_128:\n              eq\n                /* \"smart-contracts/contracts/Credit.sol\":4907:4938  require(state == State.revoked) */\n              iszero\n              iszero\n              tag_129\n              jumpi\n              0x0\n              dup1\n              revert\n            tag_129:\n                /* \"smart-contracts/contracts/Credit.sol\":15604:15625  lendersInvestedAmount */\n              0xe\n                /* \"smart-contracts/contracts/Credit.sol\":15604:15637  lendersInvestedAmount[msg.sender] */\n              0x0\n                /* \"smart-contracts/contracts/Credit.sol\":15626:15636  msg.sender */\n              caller\n                /* \"smart-contracts/contracts/Credit.sol\":15604:15637  lendersInvestedAmount[msg.sender] */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              dup2\n              mstore\n              0x20\n              add\n              swap1\n              dup2\n              mstore\n              0x20\n              add\n              0x0\n              keccak256\n              sload\n                /* \"smart-contracts/contracts/Credit.sol\":15588:15592  this */\n              address\n                /* \"smart-contracts/contracts/Credit.sol\":15588:15600  this.balance */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              balance\n                /* \"smart-contracts/contracts/Credit.sol\":15588:15637  this.balance >= lendersInvestedAmount[msg.sender] */\n              lt\n              iszero\n                /* \"smart-contracts/contracts/Credit.sol\":15581:15638  assert(this.balance >= lendersInvestedAmount[msg.sender]) */\n              iszero\n              iszero\n              tag_131\n              jumpi\n              invalid\n            tag_131:\n                /* \"smart-contracts/contracts/Credit.sol\":15719:15729  msg.sender */\n              caller\n                /* \"smart-contracts/contracts/Credit.sol\":15719:15738  msg.sender.transfer */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n                /* \"smart-contracts/contracts/Credit.sol\":15719:15773  msg.sender.transfer(lendersInvestedAmount[msg.sender]) */\n              0x8fc\n                /* \"smart-contracts/contracts/Credit.sol\":15739:15760  lendersInvestedAmount */\n              0xe\n                /* \"smart-contracts/contracts/Credit.sol\":15739:15772  lendersInvestedAmount[msg.sender] */\n              0x0\n                /* \"smart-contracts/contracts/Credit.sol\":15761:15771  msg.sender */\n              caller\n                /* \"smart-contracts/contracts/Credit.sol\":15739:15772  lendersInvestedAmount[msg.sender] */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              dup2\n              mstore\n              0x20\n              add\n              swap1\n              dup2\n              mstore\n              0x20\n              add\n              0x0\n              keccak256\n              sload\n                /* \"smart-contracts/contracts/Credit.sol\":15719:15773  msg.sender.transfer(lendersInvestedAmount[msg.sender]) */\n              swap1\n              dup2\n              iszero\n              mul\n              swap1\n              mload(0x40)\n              0x0\n              mload(0x40)\n              dup1\n              dup4\n              sub\n              dup2\n              dup6\n              dup9\n              dup9\n              call\n              swap4\n              pop\n              pop\n              pop\n              pop\n              iszero\n              iszero\n              tag_132\n              jumpi\n              0x0\n              dup1\n              revert\n            tag_132:\n                /* \"smart-contracts/contracts/Credit.sol\":15891:15906  block.timestamp */\n              timestamp\n                /* \"smart-contracts/contracts/Credit.sol\":15856:15877  lendersInvestedAmount */\n              0xe\n                /* \"smart-contracts/contracts/Credit.sol\":15856:15889  lendersInvestedAmount[msg.sender] */\n              0x0\n                /* \"smart-contracts/contracts/Credit.sol\":15878:15888  msg.sender */\n              caller\n                /* \"smart-contracts/contracts/Credit.sol\":15856:15889  lendersInvestedAmount[msg.sender] */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              dup2\n              mstore\n              0x20\n              add\n              swap1\n              dup2\n              mstore\n              0x20\n              add\n              0x0\n              keccak256\n              sload\n                /* \"smart-contracts/contracts/Credit.sol\":15844:15854  msg.sender */\n              caller\n                /* \"smart-contracts/contracts/Credit.sol\":15826:15907  LogLenderRefunded(msg.sender, lendersInvestedAmount[msg.sender], block.timestamp) */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              0x71e252e33f19f0223f47f27d00910548d26488b9b55cb5b410b75e273152f8d6\n              mload(0x40)\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              log4\n                /* \"smart-contracts/contracts/Credit.sol\":15994:15995  0 */\n              0x0\n                /* \"smart-contracts/contracts/Credit.sol\":15978:15982  this */\n              address\n                /* \"smart-contracts/contracts/Credit.sol\":15978:15990  this.balance */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              balance\n                /* \"smart-contracts/contracts/Credit.sol\":15978:15995  this.balance == 0 */\n              eq\n                /* \"smart-contracts/contracts/Credit.sol\":15974:16409  if (this.balance == 0) {\r... */\n              iszero\n              tag_133\n              jumpi\n                /* \"smart-contracts/contracts/Credit.sol\":16070:16075  false */\n              0x0\n                /* \"smart-contracts/contracts/Credit.sol\":16061:16067  active */\n              0xc\n              0x0\n                /* \"smart-contracts/contracts/Credit.sol\":16061:16075  active = false */\n              0x100\n              exp\n              dup2\n              sload\n              dup2\n              0xff\n              mul\n              not\n              and\n              swap1\n              dup4\n              iszero\n              iszero\n              mul\n              or\n              swap1\n              sstore\n              pop\n                /* \"smart-contracts/contracts/Credit.sol\":16170:16185  block.timestamp */\n              timestamp\n                /* \"smart-contracts/contracts/Credit.sol\":16162:16168  active */\n              0xc\n              0x0\n              swap1\n              sload\n              swap1\n              0x100\n              exp\n              swap1\n              div\n              0xff\n              and\n                /* \"smart-contracts/contracts/Credit.sol\":16134:16186  LogCreditStateActiveChanged(active, block.timestamp) */\n              iszero\n              iszero\n              0x160914ea27c60aa29a5f3a69d74e6069869de36e38939de1e0a66b921d8623d2\n              mload(0x40)\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              log3\n                /* \"smart-contracts/contracts/Credit.sol\":16288:16301  State.expired */\n              0x3\n                /* \"smart-contracts/contracts/Credit.sol\":16280:16285  state */\n              0xc\n              0x1\n                /* \"smart-contracts/contracts/Credit.sol\":16280:16301  state = State.expired */\n              0x100\n              exp\n              dup2\n              sload\n              dup2\n              0xff\n              mul\n              not\n              and\n              swap1\n              dup4\n              0x5\n              dup2\n              gt\n              iszero\n              tag_134\n              jumpi\n              invalid\n            tag_134:\n              mul\n              or\n              swap1\n              sstore\n              pop\n                /* \"smart-contracts/contracts/Credit.sol\":16381:16396  block.timestamp */\n              timestamp\n                /* \"smart-contracts/contracts/Credit.sol\":16374:16379  state */\n              0xc\n              0x1\n              swap1\n              sload\n              swap1\n              0x100\n              exp\n              swap1\n              div\n              0xff\n              and\n                /* \"smart-contracts/contracts/Credit.sol\":16352:16397  LogCreditStateChanged(state, block.timestamp) */\n              0x5\n              dup2\n              gt\n              iszero\n              tag_135\n              jumpi\n              invalid\n            tag_135:\n              0xaaae373901e745122c2e0925ad006227969c6cd190b7d5ea2fb7fdbd1d955b35\n              mload(0x40)\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              log3\n                /* \"smart-contracts/contracts/Credit.sol\":15974:16409  if (this.balance == 0) {\r... */\n            tag_133:\n                /* \"smart-contracts/contracts/Credit.sol\":15462:16416  function refund() public isActive onlyLender isRevoked {\r... */\n              jump\t// out\n                /* \"smart-contracts/contracts/common/Destructible.sol\":151:225  function destroy() public onlyOwner {\r... */\n            tag_42:\n                /* \"smart-contracts/contracts/common/Ownable.sol\":232:237  owner */\n              0x0\n              dup1\n              swap1\n              sload\n              swap1\n              0x100\n              exp\n              swap1\n              div\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n                /* \"smart-contracts/contracts/common/Ownable.sol\":218:237  msg.sender == owner */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n                /* \"smart-contracts/contracts/common/Ownable.sol\":218:228  msg.sender */\n              caller\n                /* \"smart-contracts/contracts/common/Ownable.sol\":218:237  msg.sender == owner */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              eq\n                /* \"smart-contracts/contracts/common/Ownable.sol\":210:238  require(msg.sender == owner) */\n              iszero\n              iszero\n              tag_137\n              jumpi\n              0x0\n              dup1\n              revert\n            tag_137:\n                /* \"smart-contracts/contracts/common/Destructible.sol\":211:216  owner */\n              0x0\n              dup1\n              swap1\n              sload\n              swap1\n              0x100\n              exp\n              swap1\n              div\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n                /* \"smart-contracts/contracts/common/Destructible.sol\":198:217  selfdestruct(owner) */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              selfdestruct\n                /* \"smart-contracts/contracts/common/Ownable.sol\":54:74  address public owner */\n            tag_45:\n              0x0\n              dup1\n              swap1\n              sload\n              swap1\n              0x100\n              exp\n              swap1\n              div\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              dup2\n              jump\t// out\n                /* \"smart-contracts/contracts/Credit.sol\":16494:17099  function fraudVote() public isActive onlyLender returns (bool) {\r... */\n            tag_48:\n                /* \"smart-contracts/contracts/Credit.sol\":16551:16555  bool */\n              0x0\n                /* \"smart-contracts/contracts/Credit.sol\":3958:3962  true */\n              0x1\n                /* \"smart-contracts/contracts/Credit.sol\":3948:3962  active == true */\n              iszero\n              iszero\n                /* \"smart-contracts/contracts/Credit.sol\":3948:3954  active */\n              0xc\n              0x0\n              swap1\n              sload\n              swap1\n              0x100\n              exp\n              swap1\n              div\n              0xff\n              and\n                /* \"smart-contracts/contracts/Credit.sol\":3948:3962  active == true */\n              iszero\n              iszero\n              eq\n                /* \"smart-contracts/contracts/Credit.sol\":3940:3963  require(active == true) */\n              iszero\n              iszero\n              tag_140\n              jumpi\n              0x0\n              dup1\n              revert\n            tag_140:\n                /* \"smart-contracts/contracts/Credit.sol\":4149:4153  true */\n              0x1\n                /* \"smart-contracts/contracts/Credit.sol\":4126:4153  lenders[msg.sender] == true */\n              iszero\n              iszero\n                /* \"smart-contracts/contracts/Credit.sol\":4126:4133  lenders */\n              0xd\n                /* \"smart-contracts/contracts/Credit.sol\":4126:4145  lenders[msg.sender] */\n              0x0\n                /* \"smart-contracts/contracts/Credit.sol\":4134:4144  msg.sender */\n              caller\n                /* \"smart-contracts/contracts/Credit.sol\":4126:4145  lenders[msg.sender] */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              dup2\n              mstore\n              0x20\n              add\n              swap1\n              dup2\n              mstore\n              0x20\n              add\n              0x0\n              keccak256\n              0x0\n              swap1\n              sload\n              swap1\n              0x100\n              exp\n              swap1\n              div\n              0xff\n              and\n                /* \"smart-contracts/contracts/Credit.sol\":4126:4153  lenders[msg.sender] == true */\n              iszero\n              iszero\n              eq\n                /* \"smart-contracts/contracts/Credit.sol\":4118:4154  require(lenders[msg.sender] == true) */\n              iszero\n              iszero\n              tag_142\n              jumpi\n              0x0\n              dup1\n              revert\n            tag_142:\n                /* \"smart-contracts/contracts/Credit.sol\":16646:16651  false */\n              0x0\n                /* \"smart-contracts/contracts/Credit.sol\":16619:16651  fraudVoters[msg.sender] == false */\n              iszero\n              iszero\n                /* \"smart-contracts/contracts/Credit.sol\":16619:16630  fraudVoters */\n              0x14\n                /* \"smart-contracts/contracts/Credit.sol\":16619:16642  fraudVoters[msg.sender] */\n              0x0\n                /* \"smart-contracts/contracts/Credit.sol\":16631:16641  msg.sender */\n              caller\n                /* \"smart-contracts/contracts/Credit.sol\":16619:16642  fraudVoters[msg.sender] */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              dup2\n              mstore\n              0x20\n              add\n              swap1\n              dup2\n              mstore\n              0x20\n              add\n              0x0\n              keccak256\n              0x0\n              swap1\n              sload\n              swap1\n              0x100\n              exp\n              swap1\n              div\n              0xff\n              and\n                /* \"smart-contracts/contracts/Credit.sol\":16619:16651  fraudVoters[msg.sender] == false */\n              iszero\n              iszero\n              eq\n                /* \"smart-contracts/contracts/Credit.sol\":16611:16652  require(fraudVoters[msg.sender] == false) */\n              iszero\n              iszero\n              tag_144\n              jumpi\n              0x0\n              dup1\n              revert\n            tag_144:\n                /* \"smart-contracts/contracts/Credit.sol\":16705:16715  fraudVotes */\n              0x13\n              0x0\n                /* \"smart-contracts/contracts/Credit.sol\":16705:16717  fraudVotes++ */\n              dup2\n              sload\n              dup1\n              swap3\n              swap2\n              swap1\n              0x1\n              add\n              swap2\n              swap1\n              pop\n              sstore\n              pop\n                /* \"smart-contracts/contracts/Credit.sol\":16796:16800  true */\n              0x1\n                /* \"smart-contracts/contracts/Credit.sol\":16769:16800  fraudVoters[msg.sender] == true */\n              iszero\n              iszero\n                /* \"smart-contracts/contracts/Credit.sol\":16769:16780  fraudVoters */\n              0x14\n                /* \"smart-contracts/contracts/Credit.sol\":16769:16792  fraudVoters[msg.sender] */\n              0x0\n                /* \"smart-contracts/contracts/Credit.sol\":16781:16791  msg.sender */\n              caller\n                /* \"smart-contracts/contracts/Credit.sol\":16769:16792  fraudVoters[msg.sender] */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              dup2\n              mstore\n              0x20\n              add\n              swap1\n              dup2\n              mstore\n              0x20\n              add\n              0x0\n              keccak256\n              0x0\n              swap1\n              sload\n              swap1\n              0x100\n              exp\n              swap1\n              pop\n              pop\n                /* \"smart-contracts/contracts/Credit.sol\":16769:16800  fraudVoters[msg.sender] == true */\n              pop\n                /* \"smart-contracts/contracts/Credit.sol\":16886:16901  block.timestamp */\n              timestamp\n                /* \"smart-contracts/contracts/Credit.sol\":16874:16884  msg.sender */\n              caller\n                /* \"smart-contracts/contracts/Credit.sol\":16852:16902  LogLenderVoteForFraud(msg.sender, block.timestamp) */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              0x1db613004119dde2a638b639fba9960c0e6064ee7c2d06f300e41c78920ed6dc\n              mload(0x40)\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              log3\n                /* \"smart-contracts/contracts/Credit.sol\":16978:16988  fraudVotes */\n              sload(0x13)\n                /* \"smart-contracts/contracts/Credit.sol\":16962:16974  lendersCount */\n              sload(0xf)\n                /* \"smart-contracts/contracts/Credit.sol\":16962:16988  lendersCount == fraudVotes */\n              eq\n                /* \"smart-contracts/contracts/Credit.sol\":16958:17070  if (lendersCount == fraudVotes) {\r... */\n              iszero\n              tag_145\n              jumpi\n                /* \"smart-contracts/contracts/Credit.sol\":17051:17058  fraud() */\n              tag_146\n                /* \"smart-contracts/contracts/Credit.sol\":17051:17056  fraud */\n              tag_147\n                /* \"smart-contracts/contracts/Credit.sol\":17051:17058  fraud() */\n              jump\t// in\n            tag_146:\n                /* \"smart-contracts/contracts/Credit.sol\":17044:17058  return fraud() */\n              swap1\n              pop\n              jump(tag_143)\n                /* \"smart-contracts/contracts/Credit.sol\":16958:17070  if (lendersCount == fraudVotes) {\r... */\n            tag_145:\n                /* \"smart-contracts/contracts/Credit.sol\":17087:17091  true */\n              0x1\n                /* \"smart-contracts/contracts/Credit.sol\":17080:17091  return true */\n              swap1\n              pop\n                /* \"smart-contracts/contracts/Credit.sol\":4165:4166  _ */\n            tag_143:\n                /* \"smart-contracts/contracts/Credit.sol\":16494:17099  function fraudVote() public isActive onlyLender returns (bool) {\r... */\n              swap1\n              jump\t// out\n                /* \"smart-contracts/contracts/Credit.sol\":7072:8788  function invest() public canInvest payable {\r... */\n            tag_50:\n                /* \"smart-contracts/contracts/Credit.sol\":7213:7228  uint extraMoney */\n              0x0\n                /* \"smart-contracts/contracts/Credit.sol\":4395:4411  State.investment */\n              dup1\n                /* \"smart-contracts/contracts/Credit.sol\":4386:4411  state == State.investment */\n              0x5\n              dup2\n              gt\n              iszero\n              tag_149\n              jumpi\n              invalid\n            tag_149:\n                /* \"smart-contracts/contracts/Credit.sol\":4386:4391  state */\n              0xc\n              0x1\n              swap1\n              sload\n              swap1\n              0x100\n              exp\n              swap1\n              div\n              0xff\n              and\n                /* \"smart-contracts/contracts/Credit.sol\":4386:4411  state == State.investment */\n              0x5\n              dup2\n              gt\n              iszero\n              tag_150\n              jumpi\n              invalid\n            tag_150:\n              eq\n                /* \"smart-contracts/contracts/Credit.sol\":4378:4412  require(state == State.investment) */\n              iszero\n              iszero\n              tag_151\n              jumpi\n              0x0\n              dup1\n              revert\n            tag_151:\n                /* \"smart-contracts/contracts/Credit.sol\":7231:7232  0 */\n              0x0\n                /* \"smart-contracts/contracts/Credit.sol\":7213:7232  uint extraMoney = 0 */\n              swap1\n              pop\n                /* \"smart-contracts/contracts/Credit.sol\":7336:7351  requestedAmount */\n              sload(0x2)\n                /* \"smart-contracts/contracts/Credit.sol\":7320:7324  this */\n              address\n                /* \"smart-contracts/contracts/Credit.sol\":7320:7332  this.balance */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              balance\n                /* \"smart-contracts/contracts/Credit.sol\":7320:7351  this.balance >= requestedAmount */\n              lt\n              iszero\n                /* \"smart-contracts/contracts/Credit.sol\":7316:8247  if (this.balance >= requestedAmount) {\r... */\n              iszero\n              tag_153\n              jumpi\n                /* \"smart-contracts/contracts/Credit.sol\":7450:7483  this.balance.sub(requestedAmount) */\n              tag_154\n                /* \"smart-contracts/contracts/Credit.sol\":7467:7482  requestedAmount */\n              sload(0x2)\n                /* \"smart-contracts/contracts/Credit.sol\":7450:7454  this */\n              address\n                /* \"smart-contracts/contracts/Credit.sol\":7450:7462  this.balance */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              balance\n                /* \"smart-contracts/contracts/Credit.sol\":7450:7466  this.balance.sub */\n              tag_96\n              swap1\n                /* \"smart-contracts/contracts/Credit.sol\":7450:7483  this.balance.sub(requestedAmount) */\n              swap2\n              swap1\n              0xffffffff\n              and\n              jump\t// in\n            tag_154:\n                /* \"smart-contracts/contracts/Credit.sol\":7437:7483  extraMoney = this.balance.sub(requestedAmount) */\n              swap1\n              pop\n                /* \"smart-contracts/contracts/Credit.sol\":7566:7594  this.balance.sub(extraMoney) */\n              tag_155\n                /* \"smart-contracts/contracts/Credit.sol\":7583:7593  extraMoney */\n              dup2\n                /* \"smart-contracts/contracts/Credit.sol\":7566:7570  this */\n              address\n                /* \"smart-contracts/contracts/Credit.sol\":7566:7578  this.balance */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              balance\n                /* \"smart-contracts/contracts/Credit.sol\":7566:7582  this.balance.sub */\n              tag_96\n              swap1\n                /* \"smart-contracts/contracts/Credit.sol\":7566:7594  this.balance.sub(extraMoney) */\n              swap2\n              swap1\n              0xffffffff\n              and\n              jump\t// in\n            tag_155:\n                /* \"smart-contracts/contracts/Credit.sol\":7547:7562  requestedAmount */\n              sload(0x2)\n                /* \"smart-contracts/contracts/Credit.sol\":7547:7594  requestedAmount == this.balance.sub(extraMoney) */\n              eq\n                /* \"smart-contracts/contracts/Credit.sol\":7540:7595  assert(requestedAmount == this.balance.sub(extraMoney)) */\n              iszero\n              iszero\n              tag_156\n              jumpi\n              invalid\n            tag_156:\n                /* \"smart-contracts/contracts/Credit.sol\":7690:7699  msg.value */\n              callvalue\n                /* \"smart-contracts/contracts/Credit.sol\":7676:7686  extraMoney */\n              dup2\n                /* \"smart-contracts/contracts/Credit.sol\":7676:7699  extraMoney <= msg.value */\n              gt\n              iszero\n                /* \"smart-contracts/contracts/Credit.sol\":7669:7700  assert(extraMoney <= msg.value) */\n              iszero\n              iszero\n              tag_157\n              jumpi\n              invalid\n            tag_157:\n                /* \"smart-contracts/contracts/Credit.sol\":7794:7795  0 */\n              0x0\n                /* \"smart-contracts/contracts/Credit.sol\":7781:7791  extraMoney */\n              dup2\n                /* \"smart-contracts/contracts/Credit.sol\":7781:7795  extraMoney > 0 */\n              gt\n                /* \"smart-contracts/contracts/Credit.sol\":7777:8047  if (extraMoney > 0) {\r... */\n              iszero\n              tag_158\n              jumpi\n                /* \"smart-contracts/contracts/Credit.sol\":7874:7884  msg.sender */\n              caller\n                /* \"smart-contracts/contracts/Credit.sol\":7874:7893  msg.sender.transfer */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n                /* \"smart-contracts/contracts/Credit.sol\":7874:7905  msg.sender.transfer(extraMoney) */\n              0x8fc\n                /* \"smart-contracts/contracts/Credit.sol\":7894:7904  extraMoney */\n              dup3\n                /* \"smart-contracts/contracts/Credit.sol\":7874:7905  msg.sender.transfer(extraMoney) */\n              swap1\n              dup2\n              iszero\n              mul\n              swap1\n              mload(0x40)\n              0x0\n              mload(0x40)\n              dup1\n              dup4\n              sub\n              dup2\n              dup6\n              dup9\n              dup9\n              call\n              swap4\n              pop\n              pop\n              pop\n              pop\n              iszero\n              iszero\n              tag_159\n              jumpi\n              0x0\n              dup1\n              revert\n            tag_159:\n                /* \"smart-contracts/contracts/Credit.sol\":8015:8030  block.timestamp */\n              timestamp\n                /* \"smart-contracts/contracts/Credit.sol\":8003:8013  extraMoney */\n              dup2\n                /* \"smart-contracts/contracts/Credit.sol\":7991:8001  msg.sender */\n              caller\n                /* \"smart-contracts/contracts/Credit.sol\":7967:8031  LogLenderChangeReturned(msg.sender, extraMoney, block.timestamp) */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              0x566803f6e271b911c84f87631bcd310d6a6510bf8882577a96fc76975703e431\n              mload(0x40)\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              log4\n                /* \"smart-contracts/contracts/Credit.sol\":7777:8047  if (extraMoney > 0) {\r... */\n            tag_158:\n                /* \"smart-contracts/contracts/Credit.sol\":8124:8139  State.repayment */\n              0x1\n                /* \"smart-contracts/contracts/Credit.sol\":8116:8121  state */\n              0xc\n              0x1\n                /* \"smart-contracts/contracts/Credit.sol\":8116:8139  state = State.repayment */\n              0x100\n              exp\n              dup2\n              sload\n              dup2\n              0xff\n              mul\n              not\n              and\n              swap1\n              dup4\n              0x5\n              dup2\n              gt\n              iszero\n              tag_160\n              jumpi\n              invalid\n            tag_160:\n              mul\n              or\n              swap1\n              sstore\n              pop\n                /* \"smart-contracts/contracts/Credit.sol\":8219:8234  block.timestamp */\n              timestamp\n                /* \"smart-contracts/contracts/Credit.sol\":8212:8217  state */\n              0xc\n              0x1\n              swap1\n              sload\n              swap1\n              0x100\n              exp\n              swap1\n              div\n              0xff\n              and\n                /* \"smart-contracts/contracts/Credit.sol\":8190:8235  LogCreditStateChanged(state, block.timestamp) */\n              0x5\n              dup2\n              gt\n              iszero\n              tag_161\n              jumpi\n              invalid\n            tag_161:\n              0xaaae373901e745122c2e0925ad006227969c6cd190b7d5ea2fb7fdbd1d955b35\n              mload(0x40)\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              log3\n                /* \"smart-contracts/contracts/Credit.sol\":7316:8247  if (this.balance >= requestedAmount) {\r... */\n            tag_153:\n                /* \"smart-contracts/contracts/Credit.sol\":8408:8412  true */\n              0x1\n                /* \"smart-contracts/contracts/Credit.sol\":8386:8393  lenders */\n              0xd\n                /* \"smart-contracts/contracts/Credit.sol\":8386:8405  lenders[msg.sender] */\n              0x0\n                /* \"smart-contracts/contracts/Credit.sol\":8394:8404  msg.sender */\n              caller\n                /* \"smart-contracts/contracts/Credit.sol\":8386:8405  lenders[msg.sender] */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              dup2\n              mstore\n              0x20\n              add\n              swap1\n              dup2\n              mstore\n              0x20\n              add\n              0x0\n              keccak256\n              0x0\n                /* \"smart-contracts/contracts/Credit.sol\":8386:8412  lenders[msg.sender] = true */\n              0x100\n              exp\n              dup2\n              sload\n              dup2\n              0xff\n              mul\n              not\n              and\n              swap1\n              dup4\n              iszero\n              iszero\n              mul\n              or\n              swap1\n              sstore\n              pop\n                /* \"smart-contracts/contracts/Credit.sol\":8466:8478  lendersCount */\n              0xf\n              0x0\n                /* \"smart-contracts/contracts/Credit.sol\":8466:8480  lendersCount++ */\n              dup2\n              sload\n              dup1\n              swap3\n              swap2\n              swap1\n              0x1\n              add\n              swap2\n              swap1\n              pop\n              sstore\n              pop\n                /* \"smart-contracts/contracts/Credit.sol\":8588:8652  lendersInvestedAmount[msg.sender].add(msg.value.sub(extraMoney)) */\n              tag_162\n                /* \"smart-contracts/contracts/Credit.sol\":8626:8651  msg.value.sub(extraMoney) */\n              tag_163\n                /* \"smart-contracts/contracts/Credit.sol\":8640:8650  extraMoney */\n              dup3\n                /* \"smart-contracts/contracts/Credit.sol\":8626:8635  msg.value */\n              callvalue\n                /* \"smart-contracts/contracts/Credit.sol\":8626:8639  msg.value.sub */\n              tag_96\n              swap1\n                /* \"smart-contracts/contracts/Credit.sol\":8626:8651  msg.value.sub(extraMoney) */\n              swap2\n              swap1\n              0xffffffff\n              and\n              jump\t// in\n            tag_163:\n                /* \"smart-contracts/contracts/Credit.sol\":8588:8609  lendersInvestedAmount */\n              0xe\n                /* \"smart-contracts/contracts/Credit.sol\":8588:8621  lendersInvestedAmount[msg.sender] */\n              0x0\n                /* \"smart-contracts/contracts/Credit.sol\":8610:8620  msg.sender */\n              caller\n                /* \"smart-contracts/contracts/Credit.sol\":8588:8621  lendersInvestedAmount[msg.sender] */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              dup2\n              mstore\n              0x20\n              add\n              swap1\n              dup2\n              mstore\n              0x20\n              add\n              0x0\n              keccak256\n              sload\n                /* \"smart-contracts/contracts/Credit.sol\":8588:8625  lendersInvestedAmount[msg.sender].add */\n              tag_104\n              swap1\n                /* \"smart-contracts/contracts/Credit.sol\":8588:8652  lendersInvestedAmount[msg.sender].add(msg.value.sub(extraMoney)) */\n              swap2\n              swap1\n              0xffffffff\n              and\n              jump\t// in\n            tag_162:\n                /* \"smart-contracts/contracts/Credit.sol\":8552:8573  lendersInvestedAmount */\n              0xe\n                /* \"smart-contracts/contracts/Credit.sol\":8552:8585  lendersInvestedAmount[msg.sender] */\n              0x0\n                /* \"smart-contracts/contracts/Credit.sol\":8574:8584  msg.sender */\n              caller\n                /* \"smart-contracts/contracts/Credit.sol\":8552:8585  lendersInvestedAmount[msg.sender] */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              dup2\n              mstore\n              0x20\n              add\n              swap1\n              dup2\n              mstore\n              0x20\n              add\n              0x0\n              keccak256\n                /* \"smart-contracts/contracts/Credit.sol\":8552:8652  lendersInvestedAmount[msg.sender] = lendersInvestedAmount[msg.sender].add(msg.value.sub(extraMoney)) */\n              dup2\n              swap1\n              sstore\n              pop\n                /* \"smart-contracts/contracts/Credit.sol\":8764:8779  block.timestamp */\n              timestamp\n                /* \"smart-contracts/contracts/Credit.sol\":8737:8762  msg.value.sub(extraMoney) */\n              tag_164\n                /* \"smart-contracts/contracts/Credit.sol\":8751:8761  extraMoney */\n              dup3\n                /* \"smart-contracts/contracts/Credit.sol\":8737:8746  msg.value */\n              callvalue\n                /* \"smart-contracts/contracts/Credit.sol\":8737:8750  msg.value.sub */\n              tag_96\n              swap1\n                /* \"smart-contracts/contracts/Credit.sol\":8737:8762  msg.value.sub(extraMoney) */\n              swap2\n              swap1\n              0xffffffff\n              and\n              jump\t// in\n            tag_164:\n                /* \"smart-contracts/contracts/Credit.sol\":8725:8735  msg.sender */\n              caller\n                /* \"smart-contracts/contracts/Credit.sol\":8705:8780  LogLenderInvestment(msg.sender, msg.value.sub(extraMoney), block.timestamp) */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              0x1b0969ce7f5b05c5e0969329a05cdbd7e2e2f6cee33ba26fd6e6bbcff82312cd\n              mload(0x40)\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              log4\n                /* \"smart-contracts/contracts/Credit.sol\":7072:8788  function invest() public canInvest payable {\r... */\n              pop\n              jump\t// out\n                /* \"smart-contracts/contracts/Credit.sol\":12478:13696  function requestInterest() public isActive onlyLender canAskForInterest {\r... */\n            tag_53:\n                /* \"smart-contracts/contracts/Credit.sol\":12769:12792  uint lenderReturnAmount */\n              0x0\n                /* \"smart-contracts/contracts/Credit.sol\":3958:3962  true */\n              0x1\n                /* \"smart-contracts/contracts/Credit.sol\":3948:3962  active == true */\n              iszero\n              iszero\n                /* \"smart-contracts/contracts/Credit.sol\":3948:3954  active */\n              0xc\n              0x0\n              swap1\n              sload\n              swap1\n              0x100\n              exp\n              swap1\n              div\n              0xff\n              and\n                /* \"smart-contracts/contracts/Credit.sol\":3948:3962  active == true */\n              iszero\n              iszero\n              eq\n                /* \"smart-contracts/contracts/Credit.sol\":3940:3963  require(active == true) */\n              iszero\n              iszero\n              tag_166\n              jumpi\n              0x0\n              dup1\n              revert\n            tag_166:\n                /* \"smart-contracts/contracts/Credit.sol\":4149:4153  true */\n              0x1\n                /* \"smart-contracts/contracts/Credit.sol\":4126:4153  lenders[msg.sender] == true */\n              iszero\n              iszero\n                /* \"smart-contracts/contracts/Credit.sol\":4126:4133  lenders */\n              0xd\n                /* \"smart-contracts/contracts/Credit.sol\":4126:4145  lenders[msg.sender] */\n              0x0\n                /* \"smart-contracts/contracts/Credit.sol\":4134:4144  msg.sender */\n              caller\n                /* \"smart-contracts/contracts/Credit.sol\":4126:4145  lenders[msg.sender] */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              dup2\n              mstore\n              0x20\n              add\n              swap1\n              dup2\n              mstore\n              0x20\n              add\n              0x0\n              keccak256\n              0x0\n              swap1\n              sload\n              swap1\n              0x100\n              exp\n              swap1\n              div\n              0xff\n              and\n                /* \"smart-contracts/contracts/Credit.sol\":4126:4153  lenders[msg.sender] == true */\n              iszero\n              iszero\n              eq\n                /* \"smart-contracts/contracts/Credit.sol\":4118:4154  require(lenders[msg.sender] == true) */\n              iszero\n              iszero\n              tag_168\n              jumpi\n              0x0\n              dup1\n              revert\n            tag_168:\n                /* \"smart-contracts/contracts/Credit.sol\":4239:4260  State.interestReturns */\n              0x2\n                /* \"smart-contracts/contracts/Credit.sol\":4230:4260  state == State.interestReturns */\n              0x5\n              dup2\n              gt\n              iszero\n              tag_170\n              jumpi\n              invalid\n            tag_170:\n                /* \"smart-contracts/contracts/Credit.sol\":4230:4235  state */\n              0xc\n              0x1\n              swap1\n              sload\n              swap1\n              0x100\n              exp\n              swap1\n              div\n              0xff\n              and\n                /* \"smart-contracts/contracts/Credit.sol\":4230:4260  state == State.interestReturns */\n              0x5\n              dup2\n              gt\n              iszero\n              tag_171\n              jumpi\n              invalid\n            tag_171:\n              eq\n                /* \"smart-contracts/contracts/Credit.sol\":4222:4261  require(state == State.interestReturns) */\n              iszero\n              iszero\n              tag_172\n              jumpi\n              0x0\n              dup1\n              revert\n            tag_172:\n                /* \"smart-contracts/contracts/Credit.sol\":4316:4317  0 */\n              0x0\n                /* \"smart-contracts/contracts/Credit.sol\":4280:4301  lendersInvestedAmount */\n              0xe\n                /* \"smart-contracts/contracts/Credit.sol\":4280:4313  lendersInvestedAmount[msg.sender] */\n              0x0\n                /* \"smart-contracts/contracts/Credit.sol\":4302:4312  msg.sender */\n              caller\n                /* \"smart-contracts/contracts/Credit.sol\":4280:4313  lendersInvestedAmount[msg.sender] */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              dup2\n              mstore\n              0x20\n              add\n              swap1\n              dup2\n              mstore\n              0x20\n              add\n              0x0\n              keccak256\n              sload\n                /* \"smart-contracts/contracts/Credit.sol\":4280:4317  lendersInvestedAmount[msg.sender] > 0 */\n              gt\n                /* \"smart-contracts/contracts/Credit.sol\":4272:4318  require(lendersInvestedAmount[msg.sender] > 0) */\n              iszero\n              iszero\n              tag_173\n              jumpi\n              0x0\n              dup1\n              revert\n            tag_173:\n                /* \"smart-contracts/contracts/Credit.sol\":12810:12822  lendersCount */\n              sload(0xf)\n                /* \"smart-contracts/contracts/Credit.sol\":12795:12807  returnAmount */\n              sload(0x3)\n                /* \"smart-contracts/contracts/Credit.sol\":12795:12822  returnAmount / lendersCount */\n              dup2\n              iszero\n              iszero\n              tag_175\n              jumpi\n              invalid\n            tag_175:\n              div\n                /* \"smart-contracts/contracts/Credit.sol\":12769:12822  uint lenderReturnAmount = returnAmount / lendersCount */\n              swap1\n              pop\n                /* \"smart-contracts/contracts/Credit.sol\":12928:12946  lenderReturnAmount */\n              dup1\n                /* \"smart-contracts/contracts/Credit.sol\":12912:12916  this */\n              address\n                /* \"smart-contracts/contracts/Credit.sol\":12912:12924  this.balance */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              balance\n                /* \"smart-contracts/contracts/Credit.sol\":12912:12946  this.balance >= lenderReturnAmount */\n              lt\n              iszero\n                /* \"smart-contracts/contracts/Credit.sol\":12905:12947  assert(this.balance >= lenderReturnAmount) */\n              iszero\n              iszero\n              tag_176\n              jumpi\n              invalid\n            tag_176:\n                /* \"smart-contracts/contracts/Credit.sol\":13028:13038  msg.sender */\n              caller\n                /* \"smart-contracts/contracts/Credit.sol\":13028:13047  msg.sender.transfer */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n                /* \"smart-contracts/contracts/Credit.sol\":13028:13067  msg.sender.transfer(lenderReturnAmount) */\n              0x8fc\n                /* \"smart-contracts/contracts/Credit.sol\":13048:13066  lenderReturnAmount */\n              dup3\n                /* \"smart-contracts/contracts/Credit.sol\":13028:13067  msg.sender.transfer(lenderReturnAmount) */\n              swap1\n              dup2\n              iszero\n              mul\n              swap1\n              mload(0x40)\n              0x0\n              mload(0x40)\n              dup1\n              dup4\n              sub\n              dup2\n              dup6\n              dup9\n              dup9\n              call\n              swap4\n              pop\n              pop\n              pop\n              pop\n              iszero\n              iszero\n              tag_177\n              jumpi\n              0x0\n              dup1\n              revert\n            tag_177:\n                /* \"smart-contracts/contracts/Credit.sol\":13172:13187  block.timestamp */\n              timestamp\n                /* \"smart-contracts/contracts/Credit.sol\":13152:13170  lenderReturnAmount */\n              dup2\n                /* \"smart-contracts/contracts/Credit.sol\":13140:13150  msg.sender */\n              caller\n                /* \"smart-contracts/contracts/Credit.sol\":13120:13188  LogLenderWithdrawal(msg.sender, lenderReturnAmount, block.timestamp) */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              0x52f6685df2f773f854b17db1d82e2352e222010daaf8175761f02ef8782c403\n              mload(0x40)\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              log4\n                /* \"smart-contracts/contracts/Credit.sol\":13275:13276  0 */\n              0x0\n                /* \"smart-contracts/contracts/Credit.sol\":13259:13263  this */\n              address\n                /* \"smart-contracts/contracts/Credit.sol\":13259:13271  this.balance */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              balance\n                /* \"smart-contracts/contracts/Credit.sol\":13259:13276  this.balance == 0 */\n              eq\n                /* \"smart-contracts/contracts/Credit.sol\":13255:13689  if (this.balance == 0) {\r... */\n              iszero\n              tag_178\n              jumpi\n                /* \"smart-contracts/contracts/Credit.sol\":13351:13356  false */\n              0x0\n                /* \"smart-contracts/contracts/Credit.sol\":13342:13348  active */\n              0xc\n              0x0\n                /* \"smart-contracts/contracts/Credit.sol\":13342:13356  active = false */\n              0x100\n              exp\n              dup2\n              sload\n              dup2\n              0xff\n              mul\n              not\n              and\n              swap1\n              dup4\n              iszero\n              iszero\n              mul\n              or\n              swap1\n              sstore\n              pop\n                /* \"smart-contracts/contracts/Credit.sol\":13450:13465  block.timestamp */\n              timestamp\n                /* \"smart-contracts/contracts/Credit.sol\":13442:13448  active */\n              0xc\n              0x0\n              swap1\n              sload\n              swap1\n              0x100\n              exp\n              swap1\n              div\n              0xff\n              and\n                /* \"smart-contracts/contracts/Credit.sol\":13414:13466  LogCreditStateActiveChanged(active, block.timestamp) */\n              iszero\n              iszero\n              0x160914ea27c60aa29a5f3a69d74e6069869de36e38939de1e0a66b921d8623d2\n              mload(0x40)\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              log3\n                /* \"smart-contracts/contracts/Credit.sol\":13568:13581  State.expired */\n              0x3\n                /* \"smart-contracts/contracts/Credit.sol\":13560:13565  state */\n              0xc\n              0x1\n                /* \"smart-contracts/contracts/Credit.sol\":13560:13581  state = State.expired */\n              0x100\n              exp\n              dup2\n              sload\n              dup2\n              0xff\n              mul\n              not\n              and\n              swap1\n              dup4\n              0x5\n              dup2\n              gt\n              iszero\n              tag_179\n              jumpi\n              invalid\n            tag_179:\n              mul\n              or\n              swap1\n              sstore\n              pop\n                /* \"smart-contracts/contracts/Credit.sol\":13661:13676  block.timestamp */\n              timestamp\n                /* \"smart-contracts/contracts/Credit.sol\":13654:13659  state */\n              0xc\n              0x1\n              swap1\n              sload\n              swap1\n              0x100\n              exp\n              swap1\n              div\n              0xff\n              and\n                /* \"smart-contracts/contracts/Credit.sol\":13632:13677  LogCreditStateChanged(state, block.timestamp) */\n              0x5\n              dup2\n              gt\n              iszero\n              tag_180\n              jumpi\n              invalid\n            tag_180:\n              0xaaae373901e745122c2e0925ad006227969c6cd190b7d5ea2fb7fdbd1d955b35\n              mload(0x40)\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              log3\n                /* \"smart-contracts/contracts/Credit.sol\":13255:13689  if (this.balance == 0) {\r... */\n            tag_178:\n                /* \"smart-contracts/contracts/Credit.sol\":12478:13696  function requestInterest() public isActive onlyLender canAskForInterest {\r... */\n              pop\n              jump\t// out\n                /* \"smart-contracts/contracts/Credit.sol\":14059:14471  function getCreditInfo() public view returns (address, bytes32, uint, uint, uint, uint, uint, uint, State, bool, uint) {\r... */\n            tag_56:\n                /* \"smart-contracts/contracts/Credit.sol\":14105:14112  address */\n              0x0\n                /* \"smart-contracts/contracts/Credit.sol\":14114:14121  bytes32 */\n              dup1\n                /* \"smart-contracts/contracts/Credit.sol\":14123:14127  uint */\n              0x0\n                /* \"smart-contracts/contracts/Credit.sol\":14129:14133  uint */\n              dup1\n                /* \"smart-contracts/contracts/Credit.sol\":14135:14139  uint */\n              0x0\n                /* \"smart-contracts/contracts/Credit.sol\":14141:14145  uint */\n              dup1\n                /* \"smart-contracts/contracts/Credit.sol\":14147:14151  uint */\n              0x0\n                /* \"smart-contracts/contracts/Credit.sol\":14153:14157  uint */\n              dup1\n                /* \"smart-contracts/contracts/Credit.sol\":14159:14164  State */\n              0x0\n                /* \"smart-contracts/contracts/Credit.sol\":14166:14170  bool */\n              dup1\n                /* \"smart-contracts/contracts/Credit.sol\":14172:14176  uint */\n              0x0\n                /* \"smart-contracts/contracts/Credit.sol\":14207:14215  borrower */\n              0x1\n              0x0\n              swap1\n              sload\n              swap1\n              0x100\n              exp\n              swap1\n              div\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n                /* \"smart-contracts/contracts/Credit.sol\":14226:14237  description */\n              sload(0xb)\n                /* \"smart-contracts/contracts/Credit.sol\":14248:14263  requestedAmount */\n              sload(0x2)\n                /* \"smart-contracts/contracts/Credit.sol\":14274:14293  requestedRepayments */\n              sload(0x6)\n                /* \"smart-contracts/contracts/Credit.sol\":14304:14324  repaymentInstallment */\n              sload(0x8)\n                /* \"smart-contracts/contracts/Credit.sol\":14335:14354  remainingRepayments */\n              sload(0x7)\n                /* \"smart-contracts/contracts/Credit.sol\":14365:14373  interest */\n              sload(0x5)\n                /* \"smart-contracts/contracts/Credit.sol\":14384:14396  returnAmount */\n              sload(0x3)\n                /* \"smart-contracts/contracts/Credit.sol\":14407:14412  state */\n              0xc\n              0x1\n              swap1\n              sload\n              swap1\n              0x100\n              exp\n              swap1\n              div\n              0xff\n              and\n                /* \"smart-contracts/contracts/Credit.sol\":14423:14429  active */\n              0xc\n              0x0\n              swap1\n              sload\n              swap1\n              0x100\n              exp\n              swap1\n              div\n              0xff\n              and\n                /* \"smart-contracts/contracts/Credit.sol\":14440:14444  this */\n              address\n                /* \"smart-contracts/contracts/Credit.sol\":14440:14452  this.balance */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              balance\n                /* \"smart-contracts/contracts/Credit.sol\":14189:14463  return (\r... */\n              swap11\n              pop\n              swap11\n              pop\n              swap11\n              pop\n              swap11\n              pop\n              swap11\n              pop\n              swap11\n              pop\n              swap11\n              pop\n              swap11\n              pop\n              swap11\n              pop\n              swap11\n              pop\n              swap11\n              pop\n                /* \"smart-contracts/contracts/Credit.sol\":14059:14471  function getCreditInfo() public view returns (address, bytes32, uint, uint, uint, uint, uint, uint, State, bool, uint) {\r... */\n              swap1\n              swap2\n              swap3\n              swap4\n              swap5\n              swap6\n              swap7\n              swap8\n              swap9\n              swap10\n              swap11\n              jump\t// out\n                /* \"smart-contracts/contracts/common/Destructible.sol\":237:341  function destroyAndSend(address _recipient) public onlyOwner {\r... */\n            tag_60:\n                /* \"smart-contracts/contracts/common/Ownable.sol\":232:237  owner */\n              0x0\n              dup1\n              swap1\n              sload\n              swap1\n              0x100\n              exp\n              swap1\n              div\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n                /* \"smart-contracts/contracts/common/Ownable.sol\":218:237  msg.sender == owner */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n                /* \"smart-contracts/contracts/common/Ownable.sol\":218:228  msg.sender */\n              caller\n                /* \"smart-contracts/contracts/common/Ownable.sol\":218:237  msg.sender == owner */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              eq\n                /* \"smart-contracts/contracts/common/Ownable.sol\":210:238  require(msg.sender == owner) */\n              iszero\n              iszero\n              tag_183\n              jumpi\n              0x0\n              dup1\n              revert\n            tag_183:\n                /* \"smart-contracts/contracts/common/Destructible.sol\":322:332  _recipient */\n              dup1\n                /* \"smart-contracts/contracts/common/Destructible.sol\":309:333  selfdestruct(_recipient) */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              selfdestruct\n                /* \"smart-contracts/contracts/common/SafeMath.sol\":481:604  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n            tag_96:\n                /* \"smart-contracts/contracts/common/SafeMath.sol\":539:546  uint256 */\n              0x0\n                /* \"smart-contracts/contracts/common/SafeMath.sol\":571:572  a */\n              dup3\n                /* \"smart-contracts/contracts/common/SafeMath.sol\":566:567  b */\n              dup3\n                /* \"smart-contracts/contracts/common/SafeMath.sol\":566:572  b <= a */\n              gt\n              iszero\n                /* \"smart-contracts/contracts/common/SafeMath.sol\":559:573  assert(b <= a) */\n              iszero\n              iszero\n              tag_186\n              jumpi\n              invalid\n            tag_186:\n                /* \"smart-contracts/contracts/common/SafeMath.sol\":595:596  b */\n              dup2\n                /* \"smart-contracts/contracts/common/SafeMath.sol\":591:592  a */\n              dup4\n                /* \"smart-contracts/contracts/common/SafeMath.sol\":591:596  a - b */\n              sub\n                /* \"smart-contracts/contracts/common/SafeMath.sol\":584:596  return a - b */\n              swap1\n              pop\n                /* \"smart-contracts/contracts/common/SafeMath.sol\":481:604  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n              swap3\n              swap2\n              pop\n              pop\n              jump\t// out\n                /* \"smart-contracts/contracts/common/SafeMath.sol\":622:769  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n            tag_104:\n                /* \"smart-contracts/contracts/common/SafeMath.sol\":680:687  uint256 */\n              0x0\n                /* \"smart-contracts/contracts/common/SafeMath.sol\":700:709  uint256 c */\n              dup1\n                /* \"smart-contracts/contracts/common/SafeMath.sol\":716:717  b */\n              dup3\n                /* \"smart-contracts/contracts/common/SafeMath.sol\":712:713  a */\n              dup5\n                /* \"smart-contracts/contracts/common/SafeMath.sol\":712:717  a + b */\n              add\n                /* \"smart-contracts/contracts/common/SafeMath.sol\":700:717  uint256 c = a + b */\n              swap1\n              pop\n                /* \"smart-contracts/contracts/common/SafeMath.sol\":740:741  a */\n              dup4\n                /* \"smart-contracts/contracts/common/SafeMath.sol\":735:736  c */\n              dup2\n                /* \"smart-contracts/contracts/common/SafeMath.sol\":735:741  c >= a */\n              lt\n              iszero\n                /* \"smart-contracts/contracts/common/SafeMath.sol\":728:742  assert(c >= a) */\n              iszero\n              iszero\n              tag_188\n              jumpi\n              invalid\n            tag_188:\n                /* \"smart-contracts/contracts/common/SafeMath.sol\":760:761  c */\n              dup1\n                /* \"smart-contracts/contracts/common/SafeMath.sol\":753:761  return c */\n              swap2\n              pop\n                /* \"smart-contracts/contracts/common/SafeMath.sol\":622:769  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n              pop\n              swap3\n              swap2\n              pop\n              pop\n              jump\t// out\n                /* \"smart-contracts/contracts/Credit.sol\":15208:15406  function revoke() internal {\r... */\n            tag_121:\n                /* \"smart-contracts/contracts/Credit.sol\":15295:15308  State.revoked */\n              0x4\n                /* \"smart-contracts/contracts/Credit.sol\":15287:15292  state */\n              0xc\n              0x1\n                /* \"smart-contracts/contracts/Credit.sol\":15287:15308  state = State.revoked */\n              0x100\n              exp\n              dup2\n              sload\n              dup2\n              0xff\n              mul\n              not\n              and\n              swap1\n              dup4\n              0x5\n              dup2\n              gt\n              iszero\n              tag_190\n              jumpi\n              invalid\n            tag_190:\n              mul\n              or\n              swap1\n              sstore\n              pop\n                /* \"smart-contracts/contracts/Credit.sol\":15382:15397  block.timestamp */\n              timestamp\n                /* \"smart-contracts/contracts/Credit.sol\":15375:15380  state */\n              0xc\n              0x1\n              swap1\n              sload\n              swap1\n              0x100\n              exp\n              swap1\n              div\n              0xff\n              and\n                /* \"smart-contracts/contracts/Credit.sol\":15353:15398  LogCreditStateChanged(state, block.timestamp) */\n              0x5\n              dup2\n              gt\n              iszero\n              tag_191\n              jumpi\n              invalid\n            tag_191:\n              0xaaae373901e745122c2e0925ad006227969c6cd190b7d5ea2fb7fdbd1d955b35\n              mload(0x40)\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              log3\n                /* \"smart-contracts/contracts/Credit.sol\":15208:15406  function revoke() internal {\r... */\n              jump\t// out\n                /* \"smart-contracts/contracts/Credit.sol\":17234:17611  function fraud() internal returns (bool) {\r... */\n            tag_147:\n                /* \"smart-contracts/contracts/Credit.sol\":17269:17273  bool */\n              0x0\n                /* \"smart-contracts/contracts/Credit.sol\":17360:17382  bool fraudStatusResult */\n              dup1\n                /* \"smart-contracts/contracts/Credit.sol\":17385:17390  owner */\n              0x0\n              dup1\n              swap1\n              sload\n              swap1\n              0x100\n              exp\n              swap1\n              div\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n                /* \"smart-contracts/contracts/Credit.sol\":17385:17395  owner.call */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n                /* \"smart-contracts/contracts/Credit.sol\":17403:17439  keccak256(\"setFraudStatus(address)\") */\n              mload(0x40)\n              dup1\n              dup1\n              0x7365744672617564537461747573286164647265737329000000000000000000\n              dup2\n              mstore\n              pop\n              0x17\n              add\n              swap1\n              pop\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              keccak256\n                /* \"smart-contracts/contracts/Credit.sol\":17385:17451  owner.call(bytes4(keccak256(\"setFraudStatus(address)\")), borrower) */\n              0x100000000000000000000000000000000000000000000000000000000\n              swap1\n              div\n                /* \"smart-contracts/contracts/Credit.sol\":17442:17450  borrower */\n              0x1\n              0x0\n              swap1\n              sload\n              swap1\n              0x100\n              exp\n              swap1\n              div\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n                /* \"smart-contracts/contracts/Credit.sol\":17385:17451  owner.call(bytes4(keccak256(\"setFraudStatus(address)\")), borrower) */\n              mload(0x40)\n              dup3\n              0xffffffff\n              and\n              0x100000000000000000000000000000000000000000000000000000000\n              mul\n              dup2\n              mstore\n              0x4\n              add\n              dup1\n              dup3\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              dup2\n              mstore\n              0x20\n              add\n              swap2\n              pop\n              pop\n              0x0\n              mload(0x40)\n              dup1\n              dup4\n              sub\n              dup2\n              0x0\n              dup8\n              sub(gas, 0x646e)\n              call\n              swap3\n              pop\n              pop\n              pop\n                /* \"smart-contracts/contracts/Credit.sol\":17360:17451  bool fraudStatusResult = owner.call(bytes4(keccak256(\"setFraudStatus(address)\")), borrower) */\n              swap1\n              pop\n                /* \"smart-contracts/contracts/Credit.sol\":17550:17565  block.timestamp */\n              timestamp\n                /* \"smart-contracts/contracts/Credit.sol\":17531:17548  fraudStatusResult */\n              dup2\n                /* \"smart-contracts/contracts/Credit.sol\":17502:17566  LogBorrowerIsFraud(borrower, fraudStatusResult, block.timestamp) */\n              iszero\n              iszero\n                /* \"smart-contracts/contracts/Credit.sol\":17521:17529  borrower */\n              0x1\n              0x0\n              swap1\n              sload\n              swap1\n              0x100\n              exp\n              swap1\n              div\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n                /* \"smart-contracts/contracts/Credit.sol\":17502:17566  LogBorrowerIsFraud(borrower, fraudStatusResult, block.timestamp) */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              0xc1bb1d1e99d1e8d2705ba85717226a3fd9a86e4de2284b00dfe6f33538d5249f\n              mload(0x40)\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              log4\n                /* \"smart-contracts/contracts/Credit.sol\":17586:17603  fraudStatusResult */\n              dup1\n                /* \"smart-contracts/contracts/Credit.sol\":17579:17603  return fraudStatusResult */\n              swap2\n              pop\n                /* \"smart-contracts/contracts/Credit.sol\":17234:17611  function fraud() internal returns (bool) {\r... */\n              pop\n              swap1\n              jump\t// out\n                /* \"smart-contracts/contracts/common/SafeMath.sol\":270:463  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n            tag_193:\n                /* \"smart-contracts/contracts/common/SafeMath.sol\":328:335  uint256 */\n              0x0\n                /* \"smart-contracts/contracts/common/SafeMath.sol\":419:428  uint256 c */\n              dup1\n                /* \"smart-contracts/contracts/common/SafeMath.sol\":435:436  b */\n              dup3\n                /* \"smart-contracts/contracts/common/SafeMath.sol\":431:432  a */\n              dup5\n                /* \"smart-contracts/contracts/common/SafeMath.sol\":431:436  a / b */\n              dup2\n              iszero\n              iszero\n              tag_195\n              jumpi\n              invalid\n            tag_195:\n              div\n                /* \"smart-contracts/contracts/common/SafeMath.sol\":419:436  uint256 c = a / b */\n              swap1\n              pop\n                /* \"smart-contracts/contracts/common/SafeMath.sol\":454:455  c */\n              dup1\n                /* \"smart-contracts/contracts/common/SafeMath.sol\":447:455  return c */\n              swap2\n              pop\n                /* \"smart-contracts/contracts/common/SafeMath.sol\":270:463  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n              pop\n              swap3\n              swap2\n              pop\n              pop\n              jump\t// out\n\n            auxdata: 0xa165627a7a72305820b0d9ae8c666bb367167f0bebe9f11aec50f1c233b2498d10b6aef98d7b532fa30029\n        }\n    }\n\n    auxdata: 0xa165627a7a72305820bae59c86fe8f881ebeb7cc729470ee49484154dcfa5d11d7164b89e3ca02d4740029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6060604052341561000f57600080fd5b612d4c8061001e6000396000f3006060604052600436106100af576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063036a1c22146100b45780632092cb331461011757806359658c4814610181578063823a71af146101ba57806383197ef0146102245780638da5cb5b14610239578063a87430ba1461028e578063bb9e42471461031d578063ebb5d8ed1461036e578063f5074f41146103f0578063fa838e5414610429575b600080fd5b34156100bf57600080fd5b6100d5600480803590602001909190505061046e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561012257600080fd5b61012a6104ad565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561016d578082015181840152602081019050610152565b505050509050019250505060405180910390f35b341561018c57600080fd5b6101b8600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610581565b005b34156101c557600080fd5b6101cd6106b7565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156102105780820151818401526020810190506101f5565b505050509050019250505060405180910390f35b341561022f57600080fd5b61023761074b565b005b341561024457600080fd5b61024c6107e0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561029957600080fd5b6102c5600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610805565b60405180841515151581526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182151515158152602001935050505060405180910390f35b341561032857600080fd5b610354600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610869565b604051808215151515815260200191505060405180910390f35b341561037957600080fd5b6103ae6004808035906020019091908035906020019091908035906020019091908035600019169060200190919050506109c5565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156103fb57600080fd5b610427600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610da3565b005b341561043457600080fd5b61046c600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803560ff16906020019091905050610e17565b005b60028181548110151561047d57fe5b90600052602060002090016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6104b5610f6d565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010180548060200260200160405190810160405280929190818152602001828054801561057757602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161052d575b5050505050905090565b6000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156105df57600080fd5b8291508173ffffffffffffffffffffffffffffffffffffffff166329c68dc16000604051602001526040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b151561064e57600080fd5b6102c65a03f1151561065f57600080fd5b505050604051805190509050428115158373ffffffffffffffffffffffffffffffffffffffff167f25270acf0eab637903a9cd906e32d2ac17ce44db6c743ba5812f2924e84ff8d660405160405180910390a4505050565b6106bf610f6d565b600280548060200260200160405190810160405280929190818152602001828054801561074157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106f7575b5050505050905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156107a657600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60016020528060005260406000206000915090508060000160009054906101000a900460ff16908060000160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060000160159054906101000a900460ff16905083565b600060018060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160156101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167fbafb199a9909a7be73ceeaf6193dc9ea119ef469120d998d5f550140c0b13b54600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160159054906101000a900460ff164260405180831515151581526020018281526020019250505060405180910390a2600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160159054906101000a900460ff169050919050565b60008060001515600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff161515141515610a2a57600080fd5b60001515600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160159054906101000a900460ff161515141515610a8c57600080fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515610b1057fe5b60018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff02191690831515021790555085858585610b76610f81565b808581526020018481526020018381526020018260001916600019168152602001945050505050604051809103906000f0801515610bb357600080fd5b905080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060028054806001018281610c4a9190610f91565b9160005260206000209001600083909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018054806001018281610ced9190610f91565b9160005260206000209001600083909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050423373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fa0c75b76492543c8eafdc7e35272287bd6f229dcf0f6c22429343044718c510860405160405180910390a480915050949350505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610dfe57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16ff5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610e7457600080fd5b8290508073ffffffffffffffffffffffffffffffffffffffff1663268f1153836000604051602001526040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180826005811115610ed857fe5b60ff168152602001915050602060405180830381600087803b1515610efc57600080fd5b6102c65a03f11515610f0d57600080fd5b505050604051805190505042826005811115610f2557fe5b8273ffffffffffffffffffffffffffffffffffffffff167f9ae5127f6d87e374b5901ce23a9467e504811c54c03dda8741ad44a35a36146660405160405180910390a4505050565b602060405190810160405280600081525090565b604051611d3e80610fe383390190565b815481835581811511610fb857818360005260206000209182019101610fb79190610fbd565b5b505050565b610fdf91905b80821115610fdb576000816000905550600101610fc3565b5090565b905600606060405234156200001057600080fd5b60405160808062001d3e8339810160405280805190602001909190805190602001909190805190602001909190805190602001909190505032600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600581905550836002819055508260068190555082600781905550620000cc6005546002546200018164010000000002620018ff179091906401000000009004565b600381905550620000f9600654600354620001a06401000000000262001b2b179091906401000000009004565b60088190555080600b81600019169055504260098190555042600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff9f75c99c0e3522cd19ffc66fd6c94989a3f0821d37d5c5bb176aab904c6335d60405160405180910390a350505050620001bc565b60008082840190508381101515156200019657fe5b8091505092915050565b6000808284811515620001af57fe5b0490508091505092915050565b611b7280620001cc6000396000f3006060604052600436106100db576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806312065fe0146100e0578063268f11531461010957806328fd10d71461014357806329c68dc1146101945780633ccfd60b146101c1578063402d8883146101d657806343c14b22146101e0578063590e1ae3146101f557806383197ef01461020a5780638da5cb5b1461021f578063d85da7b614610274578063e8b5e51f146102a1578063efd475ab146102ab578063f06817cf146102c0578063f5074f4114610375575b600080fd5b34156100eb57600080fd5b6100f36103ae565b6040518082815260200191505060405180910390f35b341561011457600080fd5b61012d600480803560ff169060200190919050506103cd565b6040518082815260200191505060405180910390f35b341561014e57600080fd5b61017a600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061049a565b604051808215151515815260200191505060405180910390f35b341561019f57600080fd5b6101a76104ba565b604051808215151515815260200191505060405180910390f35b34156101cc57600080fd5b6101d4610595565b005b6101de6107b2565b005b34156101eb57600080fd5b6101f3610aa9565b005b341561020057600080fd5b610208610c8b565b005b341561021557600080fd5b61021d610f8e565b005b341561022a57600080fd5b610232611023565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561027f57600080fd5b610287611048565b604051808215151515815260200191505060405180910390f35b6102a96111f3565b005b34156102b657600080fd5b6102be611525565b005b34156102cb57600080fd5b6102d36117ce565b604051808c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018b600019166000191681526020018a815260200189815260200188815260200187815260200186815260200185815260200184600581111561034757fe5b60ff168152602001831515151581526020018281526020019b50505050505050505050505060405180910390f35b341561038057600080fd5b6103ac600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611872565b005b60003073ffffffffffffffffffffffffffffffffffffffff1631905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561042a57600080fd5b81600c60016101000a81548160ff0219169083600581111561044857fe5b021790555042600c60019054906101000a900460ff16600581111561046957fe5b7faaae373901e745122c2e0925ad006227969c6cd190b7d5ea2fb7fdbd1d955b3560405160405180910390a3919050565b600d6020528060005260406000206000915054906101000a900460ff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561051757600080fd5b600c60009054906101000a900460ff1615600c60006101000a81548160ff02191690831515021790555042600c60009054906101000a900460ff1615157f160914ea27c60aa29a5f3a69d74e6069869de36e38939de1e0a66b921d8623d260405160405180910390a3600c60009054906101000a900460ff16905090565b60011515600c60009054906101000a900460ff1615151415156105b757600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561061357600080fd5b6002543073ffffffffffffffffffffffffffffffffffffffff16311015151561063b57600080fd5b60058081111561064757fe5b600c60019054906101000a900460ff16600581111561066257fe5b1415151561066f57600080fd5b6001600c60016101000a81548160ff0219169083600581111561068e57fe5b021790555042600c60019054906101000a900460ff1660058111156106af57fe5b7faaae373901e745122c2e0925ad006227969c6cd190b7d5ea2fb7fdbd1d955b3560405160405180910390a3423073ffffffffffffffffffffffffffffffffffffffff16313373ffffffffffffffffffffffffffffffffffffffff167f20734f14d107b526674905e470e35d0a474f9fb996a7bdb034c839c8894524e660405160405180910390a4600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f1935050505015156107b057600080fd5b565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561081057600080fd5b6001600581111561081d57fe5b600c60019054906101000a900460ff16600581111561083857fe5b14151561084457600080fd5b600060075411151561085557600080fd5b600854341015151561086657600080fd5b60035460045410151561087557fe5b6007600081548092919060019003919050555042600a8190555060009050600854341115610965576108b2600854346118e690919063ffffffff16565b90506108c781346118e690919063ffffffff16565b6008541415156108d357fe5b3481111515156108df57fe5b3373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050151561091f57600080fd5b42813373ffffffffffffffffffffffffffffffffffffffff167f5c9874487a2258c6bd6dc39a2cfcf7ea944b50b79d9a7152668779687b2ebd8d60405160405180910390a45b4261097982346118e690919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f350a09487d622378c6efbda255f996387696319f803a2e53eee64f7aa70be85a60405160405180910390a46109e36109d282346118e690919063ffffffff16565b6004546118ff90919063ffffffff16565b6004819055506003546004541415610aa657423373ffffffffffffffffffffffffffffffffffffffff167f25630de45a38a90cbca3a2eb35a8197e51b56d6d912581711e5e3773fe77cabc60405160405180910390a36002600c60016101000a81548160ff02191690836005811115610a5857fe5b021790555042600c60019054906101000a900460ff166005811115610a7957fe5b7faaae373901e745122c2e0925ad006227969c6cd190b7d5ea2fb7fdbd1d955b3560405160405180910390a35b50565b60011515600c60009054906101000a900460ff161515141515610acb57600080fd5b6012544210151515610adc57600080fd5b60006005811115610ae957fe5b600c60019054906101000a900460ff166005811115610b0457fe5b141515610b1057600080fd5b60011515600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515141515610b6f57600080fd5b60001515601160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515141515610bce57600080fd5b60106000815480929190600101919050555060011515601160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a90505050423373ffffffffffffffffffffffffffffffffffffffff167fd7173ce7e4ce6f6d075259ac1a467ab8290db175a2cee8587a663c006b97e12960405160405180910390a3601054600f541415610c8957610c8861191d565b5b565b60011515600c60009054906101000a900460ff161515141515610cad57600080fd5b60011515600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515141515610d0c57600080fd5b60046005811115610d1957fe5b600c60019054906101000a900460ff166005811115610d3457fe5b141515610d4057600080fd5b600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020543073ffffffffffffffffffffffffffffffffffffffff163110151515610da257fe5b3373ffffffffffffffffffffffffffffffffffffffff166108fc600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549081150290604051600060405180830381858888f193505050501515610e2157600080fd5b42600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020543373ffffffffffffffffffffffffffffffffffffffff167f71e252e33f19f0223f47f27d00910548d26488b9b55cb5b410b75e273152f8d660405160405180910390a460003073ffffffffffffffffffffffffffffffffffffffff16311415610f8c576000600c60006101000a81548160ff02191690831515021790555042600c60009054906101000a900460ff1615157f160914ea27c60aa29a5f3a69d74e6069869de36e38939de1e0a66b921d8623d260405160405180910390a36003600c60016101000a81548160ff02191690836005811115610f3e57fe5b021790555042600c60019054906101000a900460ff166005811115610f5f57fe5b7faaae373901e745122c2e0925ad006227969c6cd190b7d5ea2fb7fdbd1d955b3560405160405180910390a35b565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610fe957600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060011515600c60009054906101000a900460ff16151514151561106c57600080fd5b60011515600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151415156110cb57600080fd5b60001515601460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514151561112a57600080fd5b60136000815480929190600101919050555060011515601460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a90505050423373ffffffffffffffffffffffffffffffffffffffff167f1db613004119dde2a638b639fba9960c0e6064ee7c2d06f300e41c78920ed6dc60405160405180910390a3601354600f5414156111eb576111e461198b565b90506111f0565b600190505b90565b600080600581111561120157fe5b600c60019054906101000a900460ff16600581111561121c57fe5b14151561122857600080fd5b600090506002543073ffffffffffffffffffffffffffffffffffffffff16311015156113ba5761127a6002543073ffffffffffffffffffffffffffffffffffffffff16316118e690919063ffffffff16565b90506112a6813073ffffffffffffffffffffffffffffffffffffffff16316118e690919063ffffffff16565b6002541415156112b257fe5b3481111515156112be57fe5b600081111561134d573373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050151561130757600080fd5b42813373ffffffffffffffffffffffffffffffffffffffff167f566803f6e271b911c84f87631bcd310d6a6510bf8882577a96fc76975703e43160405160405180910390a45b6001600c60016101000a81548160ff0219169083600581111561136c57fe5b021790555042600c60019054906101000a900460ff16600581111561138d57fe5b7faaae373901e745122c2e0925ad006227969c6cd190b7d5ea2fb7fdbd1d955b3560405160405180910390a35b6001600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600f6000815480929190600101919050555061148861143a82346118e690919063ffffffff16565b600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546118ff90919063ffffffff16565b600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550426114df82346118e690919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f1b0969ce7f5b05c5e0969329a05cdbd7e2e2f6cee33ba26fd6e6bbcff82312cd60405160405180910390a450565b600060011515600c60009054906101000a900460ff16151514151561154957600080fd5b60011515600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151415156115a857600080fd5b600260058111156115b557fe5b600c60019054906101000a900460ff1660058111156115d057fe5b1415156115dc57600080fd5b6000600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411151561162a57600080fd5b600f5460035481151561163957fe5b049050803073ffffffffffffffffffffffffffffffffffffffff16311015151561165f57fe5b3373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050151561169f57600080fd5b42813373ffffffffffffffffffffffffffffffffffffffff167f052f6685df2f773f854b17db1d82e2352e222010daaf8175761f02ef8782c40360405160405180910390a460003073ffffffffffffffffffffffffffffffffffffffff163114156117cb576000600c60006101000a81548160ff02191690831515021790555042600c60009054906101000a900460ff1615157f160914ea27c60aa29a5f3a69d74e6069869de36e38939de1e0a66b921d8623d260405160405180910390a36003600c60016101000a81548160ff0219169083600581111561177d57fe5b021790555042600c60019054906101000a900460ff16600581111561179e57fe5b7faaae373901e745122c2e0925ad006227969c6cd190b7d5ea2fb7fdbd1d955b3560405160405180910390a35b50565b6000806000806000806000806000806000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600b54600254600654600854600754600554600354600c60019054906101000a900460ff16600c60009054906101000a900460ff163073ffffffffffffffffffffffffffffffffffffffff16319a509a509a509a509a509a509a509a509a509a509a50909192939495969798999a565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156118cd57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16ff5b60008282111515156118f457fe5b818303905092915050565b600080828401905083811015151561191357fe5b8091505092915050565b6004600c60016101000a81548160ff0219169083600581111561193c57fe5b021790555042600c60019054906101000a900460ff16600581111561195d57fe5b7faaae373901e745122c2e0925ad006227969c6cd190b7d5ea2fb7fdbd1d955b3560405160405180910390a3565b6000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660405180807f7365744672617564537461747573286164647265737329000000000000000000815250601701905060405180910390207c01000000000000000000000000000000000000000000000000000000009004600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060006040518083038160008761646e5a03f192505050905042811515600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fc1bb1d1e99d1e8d2705ba85717226a3fd9a86e4de2284b00dfe6f33538d5249f60405160405180910390a48091505090565b6000808284811515611b3957fe5b04905080915050929150505600a165627a7a72305820b0d9ae8c666bb367167f0bebe9f11aec50f1c233b2498d10b6aef98d7b532fa30029a165627a7a72305820bae59c86fe8f881ebeb7cc729470ee49484154dcfa5d11d7164b89e3ca02d4740029",
							"opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE CALLVALUE ISZERO PUSH2 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2D4C DUP1 PUSH2 0x1E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xAF JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x36A1C22 EQ PUSH2 0xB4 JUMPI DUP1 PUSH4 0x2092CB33 EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x59658C48 EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0x823A71AF EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0x83197EF0 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0xA87430BA EQ PUSH2 0x28E JUMPI DUP1 PUSH4 0xBB9E4247 EQ PUSH2 0x31D JUMPI DUP1 PUSH4 0xEBB5D8ED EQ PUSH2 0x36E JUMPI DUP1 PUSH4 0xF5074F41 EQ PUSH2 0x3F0 JUMPI DUP1 PUSH4 0xFA838E54 EQ PUSH2 0x429 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0xBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD5 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x46E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x122 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12A PUSH2 0x4AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x16D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x152 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x18C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B8 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x581 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x1C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1CD PUSH2 0x6B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x210 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1F5 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x22F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x237 PUSH2 0x74B JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x244 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x24C PUSH2 0x7E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x299 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C5 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x805 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP5 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x328 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x354 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x869 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x379 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3AE PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0x0 NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x9C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x3FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x427 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xDA3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x434 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x46C PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xE17 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x47D JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 ADD PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x4B5 PUSH2 0xF6D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x577 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x52D JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x5DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 SWAP2 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x29C68DC1 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD MSTORE PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x64E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0x65F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD DUP1 MLOAD SWAP1 POP SWAP1 POP TIMESTAMP DUP2 ISZERO ISZERO DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x25270ACF0EAB637903A9CD906E32D2AC17CE44DB6C743BA5812F2924E84FF8D6 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH2 0x6BF PUSH2 0xF6D JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x741 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x6F7 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x7A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x15 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBAFB199A9909A7BE73CEEAF6193DC9EA119EF469120D998D5F550140C0B13B54 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND TIMESTAMP PUSH1 0x40 MLOAD DUP1 DUP4 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 ISZERO ISZERO PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO ISZERO PUSH2 0xA2A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO ISZERO PUSH2 0xA8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0xB10 JUMPI INVALID JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP6 DUP6 DUP6 DUP6 PUSH2 0xB76 PUSH2 0xF81 JUMP JUMPDEST DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO ISZERO PUSH2 0xBB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 DUP1 SLOAD DUP1 PUSH1 0x1 ADD DUP3 DUP2 PUSH2 0xC4A SWAP2 SWAP1 PUSH2 0xF91 JUMP JUMPDEST SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 ADD PUSH1 0x0 DUP4 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP1 PUSH1 0x1 ADD DUP3 DUP2 PUSH2 0xCED SWAP2 SWAP1 PUSH2 0xF91 JUMP JUMPDEST SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 ADD PUSH1 0x0 DUP4 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP TIMESTAMP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xA0C75B76492543C8EAFDC7E35272287BD6F229DCF0F6C22429343044718C5108 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0xDFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0xE74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x268F1153 DUP4 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD MSTORE PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0xED8 JUMPI INVALID JUMPDEST PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0xEFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0xF0D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD DUP1 MLOAD SWAP1 POP POP TIMESTAMP DUP3 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0xF25 JUMPI INVALID JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9AE5127F6D87E374B5901CE23A9467E504811C54C03DDA8741AD44A35A361466 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D3E DUP1 PUSH2 0xFE3 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST DUP2 SLOAD DUP2 DUP4 SSTORE DUP2 DUP2 ISZERO GT PUSH2 0xFB8 JUMPI DUP2 DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0xFB7 SWAP2 SWAP1 PUSH2 0xFBD JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xFDF SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xFDB JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0xFC3 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP STOP PUSH1 0x60 PUSH1 0x40 MSTORE CALLVALUE ISZERO PUSH3 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x80 DUP1 PUSH3 0x1D3E DUP4 CODECOPY DUP2 ADD PUSH1 0x40 MSTORE DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP ORIGIN PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x5 DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x2 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x6 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH3 0xCC PUSH1 0x5 SLOAD PUSH1 0x2 SLOAD PUSH3 0x181 PUSH5 0x100000000 MUL PUSH3 0x18FF OR SWAP1 SWAP2 SWAP1 PUSH5 0x100000000 SWAP1 DIV JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH3 0xF9 PUSH1 0x6 SLOAD PUSH1 0x3 SLOAD PUSH3 0x1A0 PUSH5 0x100000000 MUL PUSH3 0x1B2B OR SWAP1 SWAP2 SWAP1 PUSH5 0x100000000 SWAP1 DIV JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xB DUP2 PUSH1 0x0 NOT AND SWAP1 SSTORE POP TIMESTAMP PUSH1 0x9 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF9F75C99C0E3522CD19FFC66FD6C94989A3F0821D37D5C5BB176AAB904C6335D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP PUSH3 0x1BC JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO ISZERO ISZERO PUSH3 0x196 JUMPI INVALID JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 DUP2 ISZERO ISZERO PUSH3 0x1AF JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B72 DUP1 PUSH3 0x1CC PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xDB JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x12065FE0 EQ PUSH2 0xE0 JUMPI DUP1 PUSH4 0x268F1153 EQ PUSH2 0x109 JUMPI DUP1 PUSH4 0x28FD10D7 EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0x29C68DC1 EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x402D8883 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x43C14B22 EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0x590E1AE3 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x83197EF0 EQ PUSH2 0x20A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0xD85DA7B6 EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0xE8B5E51F EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0xEFD475AB EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0xF06817CF EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0xF5074F41 EQ PUSH2 0x375 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0xEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF3 PUSH2 0x3AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x114 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12D PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x3CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x14E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x17A PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x49A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x19F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A7 PUSH2 0x4BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x1CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D4 PUSH2 0x595 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DE PUSH2 0x7B2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x1EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F3 PUSH2 0xAA9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x200 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x208 PUSH2 0xC8B JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x215 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x21D PUSH2 0xF8E JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x22A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x232 PUSH2 0x1023 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x27F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x287 PUSH2 0x1048 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A9 PUSH2 0x11F3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x2B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2BE PUSH2 0x1525 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x2CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2D3 PUSH2 0x17CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP12 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD DUP11 DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x347 JUMPI INVALID JUMPDEST PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x380 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3AC PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1872 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x42A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0xC PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x448 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x469 JUMPI INVALID JUMPDEST PUSH32 0xAAAE373901E745122C2E0925AD006227969C6CD190B7D5EA2FB7FDBD1D955B35 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x517 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH1 0xC PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH32 0x160914EA27C60AA29A5F3A69D74E6069869DE36E38939DE1E0A66B921D8623D2 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO ISZERO PUSH2 0x5B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x613 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 SLOAD ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE LT ISZERO ISZERO ISZERO PUSH2 0x63B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 DUP1 DUP2 GT ISZERO PUSH2 0x647 JUMPI INVALID JUMPDEST PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x662 JUMPI INVALID JUMPDEST EQ ISZERO ISZERO ISZERO PUSH2 0x66F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xC PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x68E JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x6AF JUMPI INVALID JUMPDEST PUSH32 0xAAAE373901E745122C2E0925AD006227969C6CD190B7D5EA2FB7FDBD1D955B35 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 TIMESTAMP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x20734F14D107B526674905E470E35D0A474F9FB996A7BDB034C839C8894524E6 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO ISZERO PUSH2 0x7B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x810 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x81D JUMPI INVALID JUMPDEST PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x838 JUMPI INVALID JUMPDEST EQ ISZERO ISZERO PUSH2 0x844 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x7 SLOAD GT ISZERO ISZERO PUSH2 0x855 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x8 SLOAD CALLVALUE LT ISZERO ISZERO ISZERO PUSH2 0x866 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD LT ISZERO ISZERO PUSH2 0x875 JUMPI INVALID JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 SWAP1 SUB SWAP2 SWAP1 POP SSTORE POP TIMESTAMP PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH1 0x0 SWAP1 POP PUSH1 0x8 SLOAD CALLVALUE GT ISZERO PUSH2 0x965 JUMPI PUSH2 0x8B2 PUSH1 0x8 SLOAD CALLVALUE PUSH2 0x18E6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x8C7 DUP2 CALLVALUE PUSH2 0x18E6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 SLOAD EQ ISZERO ISZERO PUSH2 0x8D3 JUMPI INVALID JUMPDEST CALLVALUE DUP2 GT ISZERO ISZERO ISZERO PUSH2 0x8DF JUMPI INVALID JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO ISZERO PUSH2 0x91F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST TIMESTAMP DUP2 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5C9874487A2258C6BD6DC39A2CFCF7EA944B50B79D9A7152668779687B2EBD8D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST TIMESTAMP PUSH2 0x979 DUP3 CALLVALUE PUSH2 0x18E6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x350A09487D622378C6EFBDA255F996387696319F803A2E53EEE64F7AA70BE85A PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x9E3 PUSH2 0x9D2 DUP3 CALLVALUE PUSH2 0x18E6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x18FF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD EQ ISZERO PUSH2 0xAA6 JUMPI TIMESTAMP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x25630DE45A38A90CBCA3A2EB35A8197E51B56D6D912581711E5E3773FE77CABC PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x2 PUSH1 0xC PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0xA58 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0xA79 JUMPI INVALID JUMPDEST PUSH32 0xAAAE373901E745122C2E0925AD006227969C6CD190B7D5EA2FB7FDBD1D955B35 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO ISZERO PUSH2 0xACB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x12 SLOAD TIMESTAMP LT ISZERO ISZERO ISZERO PUSH2 0xADC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0xAE9 JUMPI INVALID JUMPDEST PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0xB04 JUMPI INVALID JUMPDEST EQ ISZERO ISZERO PUSH2 0xB10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0xD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO ISZERO PUSH2 0xB6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0x11 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO ISZERO PUSH2 0xBCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x10 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE POP PUSH1 0x1 ISZERO ISZERO PUSH1 0x11 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 POP POP POP TIMESTAMP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD7173CE7E4CE6F6D075259AC1A467AB8290DB175A2CEE8587A663C006B97E129 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x10 SLOAD PUSH1 0xF SLOAD EQ ISZERO PUSH2 0xC89 JUMPI PUSH2 0xC88 PUSH2 0x191D JUMP JUMPDEST JUMPDEST JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO ISZERO PUSH2 0xCAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0xD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO ISZERO PUSH2 0xD0C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0xD19 JUMPI INVALID JUMPDEST PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0xD34 JUMPI INVALID JUMPDEST EQ ISZERO ISZERO PUSH2 0xD40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xE PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE LT ISZERO ISZERO ISZERO PUSH2 0xDA2 JUMPI INVALID JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0xE PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO ISZERO PUSH2 0xE21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST TIMESTAMP PUSH1 0xE PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x71E252E33F19F0223F47F27D00910548D26488B9B55CB5B410B75E273152F8D6 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE EQ ISZERO PUSH2 0xF8C JUMPI PUSH1 0x0 PUSH1 0xC PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH32 0x160914EA27C60AA29A5F3A69D74E6069869DE36E38939DE1E0A66B921D8623D2 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x3 PUSH1 0xC PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0xF3E JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0xF5F JUMPI INVALID JUMPDEST PUSH32 0xAAAE373901E745122C2E0925AD006227969C6CD190B7D5EA2FB7FDBD1D955B35 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0xFE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 ISZERO ISZERO PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO ISZERO PUSH2 0x106C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0xD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO ISZERO PUSH2 0x10CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0x14 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO ISZERO PUSH2 0x112A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x13 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE POP PUSH1 0x1 ISZERO ISZERO PUSH1 0x14 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 POP POP POP TIMESTAMP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1DB613004119DDE2A638B639FBA9960C0E6064EE7C2D06F300E41C78920ED6DC PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x13 SLOAD PUSH1 0xF SLOAD EQ ISZERO PUSH2 0x11EB JUMPI PUSH2 0x11E4 PUSH2 0x198B JUMP JUMPDEST SWAP1 POP PUSH2 0x11F0 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x1201 JUMPI INVALID JUMPDEST PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x121C JUMPI INVALID JUMPDEST EQ ISZERO ISZERO PUSH2 0x1228 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 POP PUSH1 0x2 SLOAD ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE LT ISZERO ISZERO PUSH2 0x13BA JUMPI PUSH2 0x127A PUSH1 0x2 SLOAD ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE PUSH2 0x18E6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x12A6 DUP2 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE PUSH2 0x18E6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 SLOAD EQ ISZERO ISZERO PUSH2 0x12B2 JUMPI INVALID JUMPDEST CALLVALUE DUP2 GT ISZERO ISZERO ISZERO PUSH2 0x12BE JUMPI INVALID JUMPDEST PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x134D JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO ISZERO PUSH2 0x1307 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST TIMESTAMP DUP2 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x566803F6E271B911C84F87631BCD310D6A6510BF8882577A96FC76975703E431 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST PUSH1 0x1 PUSH1 0xC PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x136C JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x138D JUMPI INVALID JUMPDEST PUSH32 0xAAAE373901E745122C2E0925AD006227969C6CD190B7D5EA2FB7FDBD1D955B35 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST PUSH1 0x1 PUSH1 0xD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xF PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE POP PUSH2 0x1488 PUSH2 0x143A DUP3 CALLVALUE PUSH2 0x18E6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x18FF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH2 0x14DF DUP3 CALLVALUE PUSH2 0x18E6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1B0969CE7F5B05C5E0969329A05CDBD7E2E2F6CEE33BA26FD6E6BBCFF82312CD PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 ISZERO ISZERO PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO ISZERO PUSH2 0x1549 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0xD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO ISZERO PUSH2 0x15A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x15B5 JUMPI INVALID JUMPDEST PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x15D0 JUMPI INVALID JUMPDEST EQ ISZERO ISZERO PUSH2 0x15DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xE PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT ISZERO ISZERO PUSH2 0x162A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xF SLOAD PUSH1 0x3 SLOAD DUP2 ISZERO ISZERO PUSH2 0x1639 JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE LT ISZERO ISZERO ISZERO PUSH2 0x165F JUMPI INVALID JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO ISZERO PUSH2 0x169F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST TIMESTAMP DUP2 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x52F6685DF2F773F854B17DB1D82E2352E222010DAAF8175761F02EF8782C403 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE EQ ISZERO PUSH2 0x17CB JUMPI PUSH1 0x0 PUSH1 0xC PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH32 0x160914EA27C60AA29A5F3A69D74E6069869DE36E38939DE1E0A66B921D8623D2 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x3 PUSH1 0xC PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x177D JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x179E JUMPI INVALID JUMPDEST PUSH32 0xAAAE373901E745122C2E0925AD006227969C6CD190B7D5EA2FB7FDBD1D955B35 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xB SLOAD PUSH1 0x2 SLOAD PUSH1 0x6 SLOAD PUSH1 0x8 SLOAD PUSH1 0x7 SLOAD PUSH1 0x5 SLOAD PUSH1 0x3 SLOAD PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 SWAP8 SWAP9 SWAP10 SWAP11 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x18CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO ISZERO ISZERO PUSH2 0x18F4 JUMPI INVALID JUMPDEST DUP2 DUP4 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO ISZERO ISZERO PUSH2 0x1913 JUMPI INVALID JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0xC PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x193C JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x195D JUMPI INVALID JUMPDEST PUSH32 0xAAAE373901E745122C2E0925AD006227969C6CD190B7D5EA2FB7FDBD1D955B35 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP1 DUP1 PUSH32 0x7365744672617564537461747573286164647265737329000000000000000000 DUP2 MSTORE POP PUSH1 0x17 ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 PUSH2 0x646E GAS SUB CALL SWAP3 POP POP POP SWAP1 POP TIMESTAMP DUP2 ISZERO ISZERO PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC1BB1D1E99D1E8D2705BA85717226A3FD9A86E4DE2284B00DFE6F33538D5249F PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 DUP2 ISZERO ISZERO PUSH2 0x1B39 JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xb0 0xd9 0xae DUP13 PUSH7 0x6BB367167F0BEB 0xe9 CALL BYTE 0xec POP CALL 0xc2 CALLER 0xb2 0x49 DUP14 LT 0xb6 0xae 0xf9 DUP14 PUSH28 0x532FA30029A165627A7A72305820BAE59C86FE8F881EBEB7CC729470 0xee 0x49 0x48 COINBASE SLOAD 0xdc STATICCALL 0x5d GT 0xd7 AND 0x4b DUP10 0xe3 0xca MUL 0xd4 PUSH21 0x2900000000000000000000000000000000000000 ",
							"sourceMap": "124:3489:1:-;;;1169:46;;;;;;;;124:3489;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6060604052600436106100af576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063036a1c22146100b45780632092cb331461011757806359658c4814610181578063823a71af146101ba57806383197ef0146102245780638da5cb5b14610239578063a87430ba1461028e578063bb9e42471461031d578063ebb5d8ed1461036e578063f5074f41146103f0578063fa838e5414610429575b600080fd5b34156100bf57600080fd5b6100d5600480803590602001909190505061046e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561012257600080fd5b61012a6104ad565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561016d578082015181840152602081019050610152565b505050509050019250505060405180910390f35b341561018c57600080fd5b6101b8600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610581565b005b34156101c557600080fd5b6101cd6106b7565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156102105780820151818401526020810190506101f5565b505050509050019250505060405180910390f35b341561022f57600080fd5b61023761074b565b005b341561024457600080fd5b61024c6107e0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561029957600080fd5b6102c5600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610805565b60405180841515151581526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182151515158152602001935050505060405180910390f35b341561032857600080fd5b610354600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610869565b604051808215151515815260200191505060405180910390f35b341561037957600080fd5b6103ae6004808035906020019091908035906020019091908035906020019091908035600019169060200190919050506109c5565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156103fb57600080fd5b610427600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610da3565b005b341561043457600080fd5b61046c600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803560ff16906020019091905050610e17565b005b60028181548110151561047d57fe5b90600052602060002090016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6104b5610f6d565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010180548060200260200160405190810160405280929190818152602001828054801561057757602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161052d575b5050505050905090565b6000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156105df57600080fd5b8291508173ffffffffffffffffffffffffffffffffffffffff166329c68dc16000604051602001526040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b151561064e57600080fd5b6102c65a03f1151561065f57600080fd5b505050604051805190509050428115158373ffffffffffffffffffffffffffffffffffffffff167f25270acf0eab637903a9cd906e32d2ac17ce44db6c743ba5812f2924e84ff8d660405160405180910390a4505050565b6106bf610f6d565b600280548060200260200160405190810160405280929190818152602001828054801561074157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106f7575b5050505050905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156107a657600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60016020528060005260406000206000915090508060000160009054906101000a900460ff16908060000160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060000160159054906101000a900460ff16905083565b600060018060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160156101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167fbafb199a9909a7be73ceeaf6193dc9ea119ef469120d998d5f550140c0b13b54600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160159054906101000a900460ff164260405180831515151581526020018281526020019250505060405180910390a2600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160159054906101000a900460ff169050919050565b60008060001515600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff161515141515610a2a57600080fd5b60001515600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160159054906101000a900460ff161515141515610a8c57600080fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515610b1057fe5b60018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff02191690831515021790555085858585610b76610f81565b808581526020018481526020018381526020018260001916600019168152602001945050505050604051809103906000f0801515610bb357600080fd5b905080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060028054806001018281610c4a9190610f91565b9160005260206000209001600083909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018054806001018281610ced9190610f91565b9160005260206000209001600083909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050423373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fa0c75b76492543c8eafdc7e35272287bd6f229dcf0f6c22429343044718c510860405160405180910390a480915050949350505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610dfe57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16ff5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610e7457600080fd5b8290508073ffffffffffffffffffffffffffffffffffffffff1663268f1153836000604051602001526040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180826005811115610ed857fe5b60ff168152602001915050602060405180830381600087803b1515610efc57600080fd5b6102c65a03f11515610f0d57600080fd5b505050604051805190505042826005811115610f2557fe5b8273ffffffffffffffffffffffffffffffffffffffff167f9ae5127f6d87e374b5901ce23a9467e504811c54c03dda8741ad44a35a36146660405160405180910390a4505050565b602060405190810160405280600081525090565b604051611d3e80610fe383390190565b815481835581811511610fb857818360005260206000209182019101610fb79190610fbd565b5b505050565b610fdf91905b80821115610fdb576000816000905550600101610fc3565b5090565b905600606060405234156200001057600080fd5b60405160808062001d3e8339810160405280805190602001909190805190602001909190805190602001909190805190602001909190505032600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600581905550836002819055508260068190555082600781905550620000cc6005546002546200018164010000000002620018ff179091906401000000009004565b600381905550620000f9600654600354620001a06401000000000262001b2b179091906401000000009004565b60088190555080600b81600019169055504260098190555042600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff9f75c99c0e3522cd19ffc66fd6c94989a3f0821d37d5c5bb176aab904c6335d60405160405180910390a350505050620001bc565b60008082840190508381101515156200019657fe5b8091505092915050565b6000808284811515620001af57fe5b0490508091505092915050565b611b7280620001cc6000396000f3006060604052600436106100db576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806312065fe0146100e0578063268f11531461010957806328fd10d71461014357806329c68dc1146101945780633ccfd60b146101c1578063402d8883146101d657806343c14b22146101e0578063590e1ae3146101f557806383197ef01461020a5780638da5cb5b1461021f578063d85da7b614610274578063e8b5e51f146102a1578063efd475ab146102ab578063f06817cf146102c0578063f5074f4114610375575b600080fd5b34156100eb57600080fd5b6100f36103ae565b6040518082815260200191505060405180910390f35b341561011457600080fd5b61012d600480803560ff169060200190919050506103cd565b6040518082815260200191505060405180910390f35b341561014e57600080fd5b61017a600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061049a565b604051808215151515815260200191505060405180910390f35b341561019f57600080fd5b6101a76104ba565b604051808215151515815260200191505060405180910390f35b34156101cc57600080fd5b6101d4610595565b005b6101de6107b2565b005b34156101eb57600080fd5b6101f3610aa9565b005b341561020057600080fd5b610208610c8b565b005b341561021557600080fd5b61021d610f8e565b005b341561022a57600080fd5b610232611023565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561027f57600080fd5b610287611048565b604051808215151515815260200191505060405180910390f35b6102a96111f3565b005b34156102b657600080fd5b6102be611525565b005b34156102cb57600080fd5b6102d36117ce565b604051808c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018b600019166000191681526020018a815260200189815260200188815260200187815260200186815260200185815260200184600581111561034757fe5b60ff168152602001831515151581526020018281526020019b50505050505050505050505060405180910390f35b341561038057600080fd5b6103ac600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611872565b005b60003073ffffffffffffffffffffffffffffffffffffffff1631905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561042a57600080fd5b81600c60016101000a81548160ff0219169083600581111561044857fe5b021790555042600c60019054906101000a900460ff16600581111561046957fe5b7faaae373901e745122c2e0925ad006227969c6cd190b7d5ea2fb7fdbd1d955b3560405160405180910390a3919050565b600d6020528060005260406000206000915054906101000a900460ff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561051757600080fd5b600c60009054906101000a900460ff1615600c60006101000a81548160ff02191690831515021790555042600c60009054906101000a900460ff1615157f160914ea27c60aa29a5f3a69d74e6069869de36e38939de1e0a66b921d8623d260405160405180910390a3600c60009054906101000a900460ff16905090565b60011515600c60009054906101000a900460ff1615151415156105b757600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561061357600080fd5b6002543073ffffffffffffffffffffffffffffffffffffffff16311015151561063b57600080fd5b60058081111561064757fe5b600c60019054906101000a900460ff16600581111561066257fe5b1415151561066f57600080fd5b6001600c60016101000a81548160ff0219169083600581111561068e57fe5b021790555042600c60019054906101000a900460ff1660058111156106af57fe5b7faaae373901e745122c2e0925ad006227969c6cd190b7d5ea2fb7fdbd1d955b3560405160405180910390a3423073ffffffffffffffffffffffffffffffffffffffff16313373ffffffffffffffffffffffffffffffffffffffff167f20734f14d107b526674905e470e35d0a474f9fb996a7bdb034c839c8894524e660405160405180910390a4600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f1935050505015156107b057600080fd5b565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561081057600080fd5b6001600581111561081d57fe5b600c60019054906101000a900460ff16600581111561083857fe5b14151561084457600080fd5b600060075411151561085557600080fd5b600854341015151561086657600080fd5b60035460045410151561087557fe5b6007600081548092919060019003919050555042600a8190555060009050600854341115610965576108b2600854346118e690919063ffffffff16565b90506108c781346118e690919063ffffffff16565b6008541415156108d357fe5b3481111515156108df57fe5b3373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050151561091f57600080fd5b42813373ffffffffffffffffffffffffffffffffffffffff167f5c9874487a2258c6bd6dc39a2cfcf7ea944b50b79d9a7152668779687b2ebd8d60405160405180910390a45b4261097982346118e690919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f350a09487d622378c6efbda255f996387696319f803a2e53eee64f7aa70be85a60405160405180910390a46109e36109d282346118e690919063ffffffff16565b6004546118ff90919063ffffffff16565b6004819055506003546004541415610aa657423373ffffffffffffffffffffffffffffffffffffffff167f25630de45a38a90cbca3a2eb35a8197e51b56d6d912581711e5e3773fe77cabc60405160405180910390a36002600c60016101000a81548160ff02191690836005811115610a5857fe5b021790555042600c60019054906101000a900460ff166005811115610a7957fe5b7faaae373901e745122c2e0925ad006227969c6cd190b7d5ea2fb7fdbd1d955b3560405160405180910390a35b50565b60011515600c60009054906101000a900460ff161515141515610acb57600080fd5b6012544210151515610adc57600080fd5b60006005811115610ae957fe5b600c60019054906101000a900460ff166005811115610b0457fe5b141515610b1057600080fd5b60011515600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515141515610b6f57600080fd5b60001515601160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515141515610bce57600080fd5b60106000815480929190600101919050555060011515601160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a90505050423373ffffffffffffffffffffffffffffffffffffffff167fd7173ce7e4ce6f6d075259ac1a467ab8290db175a2cee8587a663c006b97e12960405160405180910390a3601054600f541415610c8957610c8861191d565b5b565b60011515600c60009054906101000a900460ff161515141515610cad57600080fd5b60011515600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515141515610d0c57600080fd5b60046005811115610d1957fe5b600c60019054906101000a900460ff166005811115610d3457fe5b141515610d4057600080fd5b600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020543073ffffffffffffffffffffffffffffffffffffffff163110151515610da257fe5b3373ffffffffffffffffffffffffffffffffffffffff166108fc600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549081150290604051600060405180830381858888f193505050501515610e2157600080fd5b42600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020543373ffffffffffffffffffffffffffffffffffffffff167f71e252e33f19f0223f47f27d00910548d26488b9b55cb5b410b75e273152f8d660405160405180910390a460003073ffffffffffffffffffffffffffffffffffffffff16311415610f8c576000600c60006101000a81548160ff02191690831515021790555042600c60009054906101000a900460ff1615157f160914ea27c60aa29a5f3a69d74e6069869de36e38939de1e0a66b921d8623d260405160405180910390a36003600c60016101000a81548160ff02191690836005811115610f3e57fe5b021790555042600c60019054906101000a900460ff166005811115610f5f57fe5b7faaae373901e745122c2e0925ad006227969c6cd190b7d5ea2fb7fdbd1d955b3560405160405180910390a35b565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610fe957600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060011515600c60009054906101000a900460ff16151514151561106c57600080fd5b60011515600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151415156110cb57600080fd5b60001515601460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514151561112a57600080fd5b60136000815480929190600101919050555060011515601460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a90505050423373ffffffffffffffffffffffffffffffffffffffff167f1db613004119dde2a638b639fba9960c0e6064ee7c2d06f300e41c78920ed6dc60405160405180910390a3601354600f5414156111eb576111e461198b565b90506111f0565b600190505b90565b600080600581111561120157fe5b600c60019054906101000a900460ff16600581111561121c57fe5b14151561122857600080fd5b600090506002543073ffffffffffffffffffffffffffffffffffffffff16311015156113ba5761127a6002543073ffffffffffffffffffffffffffffffffffffffff16316118e690919063ffffffff16565b90506112a6813073ffffffffffffffffffffffffffffffffffffffff16316118e690919063ffffffff16565b6002541415156112b257fe5b3481111515156112be57fe5b600081111561134d573373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050151561130757600080fd5b42813373ffffffffffffffffffffffffffffffffffffffff167f566803f6e271b911c84f87631bcd310d6a6510bf8882577a96fc76975703e43160405160405180910390a45b6001600c60016101000a81548160ff0219169083600581111561136c57fe5b021790555042600c60019054906101000a900460ff16600581111561138d57fe5b7faaae373901e745122c2e0925ad006227969c6cd190b7d5ea2fb7fdbd1d955b3560405160405180910390a35b6001600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600f6000815480929190600101919050555061148861143a82346118e690919063ffffffff16565b600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546118ff90919063ffffffff16565b600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550426114df82346118e690919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f1b0969ce7f5b05c5e0969329a05cdbd7e2e2f6cee33ba26fd6e6bbcff82312cd60405160405180910390a450565b600060011515600c60009054906101000a900460ff16151514151561154957600080fd5b60011515600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151415156115a857600080fd5b600260058111156115b557fe5b600c60019054906101000a900460ff1660058111156115d057fe5b1415156115dc57600080fd5b6000600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411151561162a57600080fd5b600f5460035481151561163957fe5b049050803073ffffffffffffffffffffffffffffffffffffffff16311015151561165f57fe5b3373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050151561169f57600080fd5b42813373ffffffffffffffffffffffffffffffffffffffff167f052f6685df2f773f854b17db1d82e2352e222010daaf8175761f02ef8782c40360405160405180910390a460003073ffffffffffffffffffffffffffffffffffffffff163114156117cb576000600c60006101000a81548160ff02191690831515021790555042600c60009054906101000a900460ff1615157f160914ea27c60aa29a5f3a69d74e6069869de36e38939de1e0a66b921d8623d260405160405180910390a36003600c60016101000a81548160ff0219169083600581111561177d57fe5b021790555042600c60019054906101000a900460ff16600581111561179e57fe5b7faaae373901e745122c2e0925ad006227969c6cd190b7d5ea2fb7fdbd1d955b3560405160405180910390a35b50565b6000806000806000806000806000806000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600b54600254600654600854600754600554600354600c60019054906101000a900460ff16600c60009054906101000a900460ff163073ffffffffffffffffffffffffffffffffffffffff16319a509a509a509a509a509a509a509a509a509a509a50909192939495969798999a565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156118cd57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16ff5b60008282111515156118f457fe5b818303905092915050565b600080828401905083811015151561191357fe5b8091505092915050565b6004600c60016101000a81548160ff0219169083600581111561193c57fe5b021790555042600c60019054906101000a900460ff16600581111561195d57fe5b7faaae373901e745122c2e0925ad006227969c6cd190b7d5ea2fb7fdbd1d955b3560405160405180910390a3565b6000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660405180807f7365744672617564537461747573286164647265737329000000000000000000815250601701905060405180910390207c01000000000000000000000000000000000000000000000000000000009004600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060006040518083038160008761646e5a03f192505050905042811515600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fc1bb1d1e99d1e8d2705ba85717226a3fd9a86e4de2284b00dfe6f33538d5249f60405160405180910390a48091505090565b6000808284811515611b3957fe5b04905080915050929150505600a165627a7a72305820b0d9ae8c666bb367167f0bebe9f11aec50f1c233b2498d10b6aef98d7b532fa30029a165627a7a72305820bae59c86fe8f881ebeb7cc729470ee49484154dcfa5d11d7164b89e3ca02d4740029",
							"opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xAF JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x36A1C22 EQ PUSH2 0xB4 JUMPI DUP1 PUSH4 0x2092CB33 EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x59658C48 EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0x823A71AF EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0x83197EF0 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0xA87430BA EQ PUSH2 0x28E JUMPI DUP1 PUSH4 0xBB9E4247 EQ PUSH2 0x31D JUMPI DUP1 PUSH4 0xEBB5D8ED EQ PUSH2 0x36E JUMPI DUP1 PUSH4 0xF5074F41 EQ PUSH2 0x3F0 JUMPI DUP1 PUSH4 0xFA838E54 EQ PUSH2 0x429 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0xBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD5 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x46E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x122 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12A PUSH2 0x4AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x16D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x152 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x18C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B8 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x581 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x1C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1CD PUSH2 0x6B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x210 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1F5 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x22F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x237 PUSH2 0x74B JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x244 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x24C PUSH2 0x7E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x299 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C5 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x805 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP5 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x328 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x354 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x869 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x379 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3AE PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0x0 NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x9C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x3FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x427 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xDA3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x434 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x46C PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xE17 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x47D JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 ADD PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x4B5 PUSH2 0xF6D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x577 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x52D JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x5DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 SWAP2 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x29C68DC1 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD MSTORE PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x64E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0x65F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD DUP1 MLOAD SWAP1 POP SWAP1 POP TIMESTAMP DUP2 ISZERO ISZERO DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x25270ACF0EAB637903A9CD906E32D2AC17CE44DB6C743BA5812F2924E84FF8D6 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH2 0x6BF PUSH2 0xF6D JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x741 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x6F7 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x7A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x15 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBAFB199A9909A7BE73CEEAF6193DC9EA119EF469120D998D5F550140C0B13B54 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND TIMESTAMP PUSH1 0x40 MLOAD DUP1 DUP4 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 ISZERO ISZERO PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO ISZERO PUSH2 0xA2A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO ISZERO PUSH2 0xA8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0xB10 JUMPI INVALID JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP6 DUP6 DUP6 DUP6 PUSH2 0xB76 PUSH2 0xF81 JUMP JUMPDEST DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO ISZERO PUSH2 0xBB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 DUP1 SLOAD DUP1 PUSH1 0x1 ADD DUP3 DUP2 PUSH2 0xC4A SWAP2 SWAP1 PUSH2 0xF91 JUMP JUMPDEST SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 ADD PUSH1 0x0 DUP4 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP1 PUSH1 0x1 ADD DUP3 DUP2 PUSH2 0xCED SWAP2 SWAP1 PUSH2 0xF91 JUMP JUMPDEST SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 ADD PUSH1 0x0 DUP4 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP TIMESTAMP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xA0C75B76492543C8EAFDC7E35272287BD6F229DCF0F6C22429343044718C5108 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0xDFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0xE74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x268F1153 DUP4 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD MSTORE PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0xED8 JUMPI INVALID JUMPDEST PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0xEFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0xF0D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD DUP1 MLOAD SWAP1 POP POP TIMESTAMP DUP3 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0xF25 JUMPI INVALID JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9AE5127F6D87E374B5901CE23A9467E504811C54C03DDA8741AD44A35A361466 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D3E DUP1 PUSH2 0xFE3 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST DUP2 SLOAD DUP2 DUP4 SSTORE DUP2 DUP2 ISZERO GT PUSH2 0xFB8 JUMPI DUP2 DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0xFB7 SWAP2 SWAP1 PUSH2 0xFBD JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xFDF SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xFDB JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0xFC3 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP STOP PUSH1 0x60 PUSH1 0x40 MSTORE CALLVALUE ISZERO PUSH3 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x80 DUP1 PUSH3 0x1D3E DUP4 CODECOPY DUP2 ADD PUSH1 0x40 MSTORE DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP ORIGIN PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x5 DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x2 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x6 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH3 0xCC PUSH1 0x5 SLOAD PUSH1 0x2 SLOAD PUSH3 0x181 PUSH5 0x100000000 MUL PUSH3 0x18FF OR SWAP1 SWAP2 SWAP1 PUSH5 0x100000000 SWAP1 DIV JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH3 0xF9 PUSH1 0x6 SLOAD PUSH1 0x3 SLOAD PUSH3 0x1A0 PUSH5 0x100000000 MUL PUSH3 0x1B2B OR SWAP1 SWAP2 SWAP1 PUSH5 0x100000000 SWAP1 DIV JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xB DUP2 PUSH1 0x0 NOT AND SWAP1 SSTORE POP TIMESTAMP PUSH1 0x9 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF9F75C99C0E3522CD19FFC66FD6C94989A3F0821D37D5C5BB176AAB904C6335D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP PUSH3 0x1BC JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO ISZERO ISZERO PUSH3 0x196 JUMPI INVALID JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 DUP2 ISZERO ISZERO PUSH3 0x1AF JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B72 DUP1 PUSH3 0x1CC PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xDB JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x12065FE0 EQ PUSH2 0xE0 JUMPI DUP1 PUSH4 0x268F1153 EQ PUSH2 0x109 JUMPI DUP1 PUSH4 0x28FD10D7 EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0x29C68DC1 EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x402D8883 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x43C14B22 EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0x590E1AE3 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x83197EF0 EQ PUSH2 0x20A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0xD85DA7B6 EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0xE8B5E51F EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0xEFD475AB EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0xF06817CF EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0xF5074F41 EQ PUSH2 0x375 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0xEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF3 PUSH2 0x3AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x114 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12D PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x3CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x14E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x17A PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x49A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x19F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A7 PUSH2 0x4BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x1CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D4 PUSH2 0x595 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DE PUSH2 0x7B2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x1EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F3 PUSH2 0xAA9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x200 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x208 PUSH2 0xC8B JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x215 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x21D PUSH2 0xF8E JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x22A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x232 PUSH2 0x1023 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x27F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x287 PUSH2 0x1048 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A9 PUSH2 0x11F3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x2B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2BE PUSH2 0x1525 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x2CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2D3 PUSH2 0x17CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP12 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD DUP11 DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x347 JUMPI INVALID JUMPDEST PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x380 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3AC PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1872 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x42A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0xC PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x448 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x469 JUMPI INVALID JUMPDEST PUSH32 0xAAAE373901E745122C2E0925AD006227969C6CD190B7D5EA2FB7FDBD1D955B35 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x517 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH1 0xC PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH32 0x160914EA27C60AA29A5F3A69D74E6069869DE36E38939DE1E0A66B921D8623D2 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO ISZERO PUSH2 0x5B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x613 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 SLOAD ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE LT ISZERO ISZERO ISZERO PUSH2 0x63B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 DUP1 DUP2 GT ISZERO PUSH2 0x647 JUMPI INVALID JUMPDEST PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x662 JUMPI INVALID JUMPDEST EQ ISZERO ISZERO ISZERO PUSH2 0x66F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xC PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x68E JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x6AF JUMPI INVALID JUMPDEST PUSH32 0xAAAE373901E745122C2E0925AD006227969C6CD190B7D5EA2FB7FDBD1D955B35 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 TIMESTAMP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x20734F14D107B526674905E470E35D0A474F9FB996A7BDB034C839C8894524E6 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO ISZERO PUSH2 0x7B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x810 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x81D JUMPI INVALID JUMPDEST PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x838 JUMPI INVALID JUMPDEST EQ ISZERO ISZERO PUSH2 0x844 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x7 SLOAD GT ISZERO ISZERO PUSH2 0x855 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x8 SLOAD CALLVALUE LT ISZERO ISZERO ISZERO PUSH2 0x866 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD LT ISZERO ISZERO PUSH2 0x875 JUMPI INVALID JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 SWAP1 SUB SWAP2 SWAP1 POP SSTORE POP TIMESTAMP PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH1 0x0 SWAP1 POP PUSH1 0x8 SLOAD CALLVALUE GT ISZERO PUSH2 0x965 JUMPI PUSH2 0x8B2 PUSH1 0x8 SLOAD CALLVALUE PUSH2 0x18E6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x8C7 DUP2 CALLVALUE PUSH2 0x18E6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 SLOAD EQ ISZERO ISZERO PUSH2 0x8D3 JUMPI INVALID JUMPDEST CALLVALUE DUP2 GT ISZERO ISZERO ISZERO PUSH2 0x8DF JUMPI INVALID JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO ISZERO PUSH2 0x91F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST TIMESTAMP DUP2 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5C9874487A2258C6BD6DC39A2CFCF7EA944B50B79D9A7152668779687B2EBD8D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST TIMESTAMP PUSH2 0x979 DUP3 CALLVALUE PUSH2 0x18E6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x350A09487D622378C6EFBDA255F996387696319F803A2E53EEE64F7AA70BE85A PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x9E3 PUSH2 0x9D2 DUP3 CALLVALUE PUSH2 0x18E6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x18FF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD EQ ISZERO PUSH2 0xAA6 JUMPI TIMESTAMP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x25630DE45A38A90CBCA3A2EB35A8197E51B56D6D912581711E5E3773FE77CABC PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x2 PUSH1 0xC PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0xA58 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0xA79 JUMPI INVALID JUMPDEST PUSH32 0xAAAE373901E745122C2E0925AD006227969C6CD190B7D5EA2FB7FDBD1D955B35 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO ISZERO PUSH2 0xACB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x12 SLOAD TIMESTAMP LT ISZERO ISZERO ISZERO PUSH2 0xADC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0xAE9 JUMPI INVALID JUMPDEST PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0xB04 JUMPI INVALID JUMPDEST EQ ISZERO ISZERO PUSH2 0xB10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0xD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO ISZERO PUSH2 0xB6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0x11 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO ISZERO PUSH2 0xBCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x10 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE POP PUSH1 0x1 ISZERO ISZERO PUSH1 0x11 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 POP POP POP TIMESTAMP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD7173CE7E4CE6F6D075259AC1A467AB8290DB175A2CEE8587A663C006B97E129 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x10 SLOAD PUSH1 0xF SLOAD EQ ISZERO PUSH2 0xC89 JUMPI PUSH2 0xC88 PUSH2 0x191D JUMP JUMPDEST JUMPDEST JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO ISZERO PUSH2 0xCAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0xD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO ISZERO PUSH2 0xD0C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0xD19 JUMPI INVALID JUMPDEST PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0xD34 JUMPI INVALID JUMPDEST EQ ISZERO ISZERO PUSH2 0xD40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xE PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE LT ISZERO ISZERO ISZERO PUSH2 0xDA2 JUMPI INVALID JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0xE PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO ISZERO PUSH2 0xE21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST TIMESTAMP PUSH1 0xE PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x71E252E33F19F0223F47F27D00910548D26488B9B55CB5B410B75E273152F8D6 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE EQ ISZERO PUSH2 0xF8C JUMPI PUSH1 0x0 PUSH1 0xC PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH32 0x160914EA27C60AA29A5F3A69D74E6069869DE36E38939DE1E0A66B921D8623D2 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x3 PUSH1 0xC PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0xF3E JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0xF5F JUMPI INVALID JUMPDEST PUSH32 0xAAAE373901E745122C2E0925AD006227969C6CD190B7D5EA2FB7FDBD1D955B35 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0xFE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 ISZERO ISZERO PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO ISZERO PUSH2 0x106C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0xD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO ISZERO PUSH2 0x10CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0x14 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO ISZERO PUSH2 0x112A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x13 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE POP PUSH1 0x1 ISZERO ISZERO PUSH1 0x14 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 POP POP POP TIMESTAMP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1DB613004119DDE2A638B639FBA9960C0E6064EE7C2D06F300E41C78920ED6DC PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x13 SLOAD PUSH1 0xF SLOAD EQ ISZERO PUSH2 0x11EB JUMPI PUSH2 0x11E4 PUSH2 0x198B JUMP JUMPDEST SWAP1 POP PUSH2 0x11F0 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x1201 JUMPI INVALID JUMPDEST PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x121C JUMPI INVALID JUMPDEST EQ ISZERO ISZERO PUSH2 0x1228 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 POP PUSH1 0x2 SLOAD ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE LT ISZERO ISZERO PUSH2 0x13BA JUMPI PUSH2 0x127A PUSH1 0x2 SLOAD ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE PUSH2 0x18E6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x12A6 DUP2 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE PUSH2 0x18E6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 SLOAD EQ ISZERO ISZERO PUSH2 0x12B2 JUMPI INVALID JUMPDEST CALLVALUE DUP2 GT ISZERO ISZERO ISZERO PUSH2 0x12BE JUMPI INVALID JUMPDEST PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x134D JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO ISZERO PUSH2 0x1307 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST TIMESTAMP DUP2 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x566803F6E271B911C84F87631BCD310D6A6510BF8882577A96FC76975703E431 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST PUSH1 0x1 PUSH1 0xC PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x136C JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x138D JUMPI INVALID JUMPDEST PUSH32 0xAAAE373901E745122C2E0925AD006227969C6CD190B7D5EA2FB7FDBD1D955B35 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST PUSH1 0x1 PUSH1 0xD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xF PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE POP PUSH2 0x1488 PUSH2 0x143A DUP3 CALLVALUE PUSH2 0x18E6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x18FF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH2 0x14DF DUP3 CALLVALUE PUSH2 0x18E6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1B0969CE7F5B05C5E0969329A05CDBD7E2E2F6CEE33BA26FD6E6BBCFF82312CD PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 ISZERO ISZERO PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO ISZERO PUSH2 0x1549 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0xD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO ISZERO PUSH2 0x15A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x15B5 JUMPI INVALID JUMPDEST PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x15D0 JUMPI INVALID JUMPDEST EQ ISZERO ISZERO PUSH2 0x15DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xE PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT ISZERO ISZERO PUSH2 0x162A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xF SLOAD PUSH1 0x3 SLOAD DUP2 ISZERO ISZERO PUSH2 0x1639 JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE LT ISZERO ISZERO ISZERO PUSH2 0x165F JUMPI INVALID JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO ISZERO PUSH2 0x169F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST TIMESTAMP DUP2 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x52F6685DF2F773F854B17DB1D82E2352E222010DAAF8175761F02EF8782C403 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE EQ ISZERO PUSH2 0x17CB JUMPI PUSH1 0x0 PUSH1 0xC PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH32 0x160914EA27C60AA29A5F3A69D74E6069869DE36E38939DE1E0A66B921D8623D2 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x3 PUSH1 0xC PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x177D JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x179E JUMPI INVALID JUMPDEST PUSH32 0xAAAE373901E745122C2E0925AD006227969C6CD190B7D5EA2FB7FDBD1D955B35 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xB SLOAD PUSH1 0x2 SLOAD PUSH1 0x6 SLOAD PUSH1 0x8 SLOAD PUSH1 0x7 SLOAD PUSH1 0x5 SLOAD PUSH1 0x3 SLOAD PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 SWAP8 SWAP9 SWAP10 SWAP11 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x18CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO ISZERO ISZERO PUSH2 0x18F4 JUMPI INVALID JUMPDEST DUP2 DUP4 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO ISZERO ISZERO PUSH2 0x1913 JUMPI INVALID JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0xC PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x193C JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x195D JUMPI INVALID JUMPDEST PUSH32 0xAAAE373901E745122C2E0925AD006227969C6CD190B7D5EA2FB7FDBD1D955B35 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP1 DUP1 PUSH32 0x7365744672617564537461747573286164647265737329000000000000000000 DUP2 MSTORE POP PUSH1 0x17 ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 PUSH2 0x646E GAS SUB CALL SWAP3 POP POP POP SWAP1 POP TIMESTAMP DUP2 ISZERO ISZERO PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC1BB1D1E99D1E8D2705BA85717226A3FD9A86E4DE2284B00DFE6F33538D5249F PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 DUP2 ISZERO ISZERO PUSH2 0x1B39 JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xb0 0xd9 0xae DUP13 PUSH7 0x6BB367167F0BEB 0xe9 CALL BYTE 0xec POP CALL 0xc2 CALLER 0xb2 0x49 DUP14 LT 0xb6 0xae 0xf9 DUP14 PUSH28 0x532FA30029A165627A7A72305820BAE59C86FE8F881EBEB7CC729470 0xee 0x49 0x48 COINBASE SLOAD 0xdc STATICCALL 0x5d GT 0xd7 AND 0x4b DUP10 0xe3 0xca MUL 0xd4 PUSH21 0x2900000000000000000000000000000000000000 ",
							"sourceMap": "124:3489:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;722:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2533:112;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;80:1;75:3;71;64:6;52:2;49:1;45:3;40:15;;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;3301:309:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;2438:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;80:1;75:3;71;64:6;52:2;49:1;45:3;40:15;;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;151:74:2;;;;;;;;;;;;;;54:20:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;637:37:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2653:323;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1223:1207;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;237:104:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;2984:309:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;722:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2533:112::-;2580:9;;:::i;:::-;2609:5;:17;2615:10;2609:17;;;;;;;;;;;;;;;:28;;2602:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2533:112;:::o;3301:309::-;3427:13;3469:11;232:5:3;;;;;;;;;;;218:19;;:10;:19;;;210:28;;;;;;;;3450:7:1;3427:31;;3483:6;:19;;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3469:35;;3586:15;3578:6;3547:55;;3570:6;3547:55;;;;;;;;;;;;3301:309;;;:::o;2438:87::-;2481:9;;:::i;:::-;2510:7;2503:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2438:87;:::o;151:74:2:-;232:5:3;;;;;;;;;;;218:19;;:10;:19;;;210:28;;;;;;;;211:5:2;;;;;;;;;;;198:19;;;54:20:3;;;;;;;;;;;;;:::o;637:37:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2653:323::-;2714:4;2800;2769:5;:16;2775:9;2769:16;;;;;;;;;;;;;;;:28;;;:35;;;;;;;;;;;;;;;;;;2863:9;2847:73;;;2874:5;:16;2880:9;2874:16;;;;;;;;;;;;;;;:28;;;;;;;;;;;;2904:15;2847:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;2940:5;:16;2946:9;2940:16;;;;;;;;;;;;;;;:28;;;;;;;;;;;;2933:35;;2653:323;;;:::o;1223:1207::-;1348:15;1894:13;1466:5;1436:35;;:5;:17;1442:10;1436:17;;;;;;;;;;;;;;;:26;;;;;;;;;;;;:35;;;1428:44;;;;;;;;1582:5;1549:38;;:5;:17;1555:10;1549:17;;;;;;;;;;;;;;;:29;;;;;;;;;;;;:38;;;1541:47;;;;;;;;1701:1;1667:5;:17;1673:10;1667:17;;;;;;;;;;;;;;;:30;;;;;;;;;;;;:35;;;1660:43;;;;;;1809:4;1780:5;:17;1786:10;1780:17;;;;;;;;;;;;;;;:26;;;:33;;;;;;;;;;;;;;;;;;1921:15;1938;1955:8;1965:17;1910:73;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1894:89;;2080:6;2047:5;:17;2053:10;2047:17;;;;;;;;;;;;;;;:30;;;:39;;;;;;;;;;;;;;;;;;2163:7;:20;;;;;;;;;;;:::i;:::-;;;;;;;;;;2176:6;2163:20;;;;;;;;;;;;;;;;;;;;;;;2246:5;:17;2252:10;2246:17;;;;;;;;;;;;;;;:28;;:41;;;;;;;;;;;:::i;:::-;;;;;;;;;;2280:6;2246:41;;;;;;;;;;;;;;;;;;;;;;;2380:15;2368:10;2343:53;;2360:6;2343:53;;;;;;;;;;;;2416:6;2409:13;;1223:1207;;;;;;;:::o;237:104:2:-;232:5:3;;;;;;;;;;;218:19;;:10;:19;;;210:28;;;;;;;;322:10:2;309:24;;;2984:309:1;3122:13;232:5:3;;;;;;;;;;;218:19;;:10;:19;;;210:28;;;;;;;;3145:7:1;3122:31;;3164:6;:18;;;3183:5;3164:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3269:15;3262:5;3232:53;;;;;;;;3254:6;3232:53;;;;;;;;;;;;2984:309;;;:::o;124:3489::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2319200",
								"executionCost": "2481",
								"totalCost": "2321681"
							},
							"external": {
								"applyForCredit(uint256,uint256,uint256,bytes32)": "infinite",
								"changeCreditState(address)": "infinite",
								"changeCreditState(address,uint8)": "infinite",
								"credits(uint256)": "759",
								"destroy()": "30728",
								"destroyAndSend(address)": "30642",
								"getCredits()": "infinite",
								"getUserCredits()": "infinite",
								"owner()": "544",
								"setFraudStatus(address)": "23317",
								"users(address)": "1356"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 124,
									"end": 3613,
									"name": "PUSH",
									"value": "60"
								},
								{
									"begin": 124,
									"end": 3613,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 124,
									"end": 3613,
									"name": "MSTORE"
								},
								{
									"begin": 1169,
									"end": 1215,
									"name": "CALLVALUE"
								},
								{
									"begin": 1169,
									"end": 1215,
									"name": "ISZERO"
								},
								{
									"begin": 1169,
									"end": 1215,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 1169,
									"end": 1215,
									"name": "JUMPI"
								},
								{
									"begin": 1169,
									"end": 1215,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1169,
									"end": 1215,
									"name": "DUP1"
								},
								{
									"begin": 1169,
									"end": 1215,
									"name": "REVERT"
								},
								{
									"begin": 1169,
									"end": 1215,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 1169,
									"end": 1215,
									"name": "JUMPDEST"
								},
								{
									"begin": 124,
									"end": 3613,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 124,
									"end": 3613,
									"name": "DUP1"
								},
								{
									"begin": 124,
									"end": 3613,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 124,
									"end": 3613,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 124,
									"end": 3613,
									"name": "CODECOPY"
								},
								{
									"begin": 124,
									"end": 3613,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 124,
									"end": 3613,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a72305820bae59c86fe8f881ebeb7cc729470ee49484154dcfa5d11d7164b89e3ca02d4740029",
									".code": [
										{
											"begin": 124,
											"end": 3613,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "MSTORE"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "LT"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "JUMPI"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "SWAP1"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "DIV"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "AND"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "DUP1"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "PUSH",
											"value": "36A1C22"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "EQ"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "JUMPI"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "DUP1"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "PUSH",
											"value": "2092CB33"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "EQ"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "JUMPI"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "DUP1"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "PUSH",
											"value": "59658C48"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "EQ"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "JUMPI"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "DUP1"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "PUSH",
											"value": "823A71AF"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "EQ"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "JUMPI"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "DUP1"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "PUSH",
											"value": "83197EF0"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "EQ"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "JUMPI"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "DUP1"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "EQ"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "JUMPI"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "DUP1"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "PUSH",
											"value": "A87430BA"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "EQ"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "JUMPI"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "DUP1"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "PUSH",
											"value": "BB9E4247"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "EQ"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "JUMPI"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "DUP1"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "PUSH",
											"value": "EBB5D8ED"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "EQ"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "JUMPI"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "DUP1"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "PUSH",
											"value": "F5074F41"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "EQ"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "JUMPI"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "DUP1"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "PUSH",
											"value": "FA838E54"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "EQ"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "JUMPI"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "JUMPDEST"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "DUP1"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "REVERT"
										},
										{
											"begin": 722,
											"end": 746,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 722,
											"end": 746,
											"name": "JUMPDEST"
										},
										{
											"begin": 722,
											"end": 746,
											"name": "CALLVALUE"
										},
										{
											"begin": 722,
											"end": 746,
											"name": "ISZERO"
										},
										{
											"begin": 722,
											"end": 746,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 722,
											"end": 746,
											"name": "JUMPI"
										},
										{
											"begin": 722,
											"end": 746,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 722,
											"end": 746,
											"name": "DUP1"
										},
										{
											"begin": 722,
											"end": 746,
											"name": "REVERT"
										},
										{
											"begin": 722,
											"end": 746,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 722,
											"end": 746,
											"name": "JUMPDEST"
										},
										{
											"begin": 722,
											"end": 746,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 722,
											"end": 746,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 722,
											"end": 746,
											"name": "DUP1"
										},
										{
											"begin": 722,
											"end": 746,
											"name": "DUP1"
										},
										{
											"begin": 722,
											"end": 746,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 722,
											"end": 746,
											"name": "SWAP1"
										},
										{
											"begin": 722,
											"end": 746,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 722,
											"end": 746,
											"name": "ADD"
										},
										{
											"begin": 722,
											"end": 746,
											"name": "SWAP1"
										},
										{
											"begin": 722,
											"end": 746,
											"name": "SWAP2"
										},
										{
											"begin": 722,
											"end": 746,
											"name": "SWAP1"
										},
										{
											"begin": 722,
											"end": 746,
											"name": "POP"
										},
										{
											"begin": 722,
											"end": 746,
											"name": "POP"
										},
										{
											"begin": 722,
											"end": 746,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 722,
											"end": 746,
											"name": "JUMP"
										},
										{
											"begin": 722,
											"end": 746,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 722,
											"end": 746,
											"name": "JUMPDEST"
										},
										{
											"begin": 722,
											"end": 746,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 722,
											"end": 746,
											"name": "MLOAD"
										},
										{
											"begin": 722,
											"end": 746,
											"name": "DUP1"
										},
										{
											"begin": 722,
											"end": 746,
											"name": "DUP3"
										},
										{
											"begin": 722,
											"end": 746,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 722,
											"end": 746,
											"name": "AND"
										},
										{
											"begin": 722,
											"end": 746,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 722,
											"end": 746,
											"name": "AND"
										},
										{
											"begin": 722,
											"end": 746,
											"name": "DUP2"
										},
										{
											"begin": 722,
											"end": 746,
											"name": "MSTORE"
										},
										{
											"begin": 722,
											"end": 746,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 722,
											"end": 746,
											"name": "ADD"
										},
										{
											"begin": 722,
											"end": 746,
											"name": "SWAP2"
										},
										{
											"begin": 722,
											"end": 746,
											"name": "POP"
										},
										{
											"begin": 722,
											"end": 746,
											"name": "POP"
										},
										{
											"begin": 722,
											"end": 746,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 722,
											"end": 746,
											"name": "MLOAD"
										},
										{
											"begin": 722,
											"end": 746,
											"name": "DUP1"
										},
										{
											"begin": 722,
											"end": 746,
											"name": "SWAP2"
										},
										{
											"begin": 722,
											"end": 746,
											"name": "SUB"
										},
										{
											"begin": 722,
											"end": 746,
											"name": "SWAP1"
										},
										{
											"begin": 722,
											"end": 746,
											"name": "RETURN"
										},
										{
											"begin": 2533,
											"end": 2645,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 2533,
											"end": 2645,
											"name": "JUMPDEST"
										},
										{
											"begin": 2533,
											"end": 2645,
											"name": "CALLVALUE"
										},
										{
											"begin": 2533,
											"end": 2645,
											"name": "ISZERO"
										},
										{
											"begin": 2533,
											"end": 2645,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 2533,
											"end": 2645,
											"name": "JUMPI"
										},
										{
											"begin": 2533,
											"end": 2645,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2533,
											"end": 2645,
											"name": "DUP1"
										},
										{
											"begin": 2533,
											"end": 2645,
											"name": "REVERT"
										},
										{
											"begin": 2533,
											"end": 2645,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 2533,
											"end": 2645,
											"name": "JUMPDEST"
										},
										{
											"begin": 2533,
											"end": 2645,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 2533,
											"end": 2645,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 2533,
											"end": 2645,
											"name": "JUMP"
										},
										{
											"begin": 2533,
											"end": 2645,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 2533,
											"end": 2645,
											"name": "JUMPDEST"
										},
										{
											"begin": 2533,
											"end": 2645,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2533,
											"end": 2645,
											"name": "MLOAD"
										},
										{
											"begin": 2533,
											"end": 2645,
											"name": "DUP1"
										},
										{
											"begin": 2533,
											"end": 2645,
											"name": "DUP1"
										},
										{
											"begin": 2533,
											"end": 2645,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2533,
											"end": 2645,
											"name": "ADD"
										},
										{
											"begin": 2533,
											"end": 2645,
											"name": "DUP3"
										},
										{
											"begin": 2533,
											"end": 2645,
											"name": "DUP2"
										},
										{
											"begin": 2533,
											"end": 2645,
											"name": "SUB"
										},
										{
											"begin": 2533,
											"end": 2645,
											"name": "DUP3"
										},
										{
											"begin": 2533,
											"end": 2645,
											"name": "MSTORE"
										},
										{
											"begin": 2533,
											"end": 2645,
											"name": "DUP4"
										},
										{
											"begin": 2533,
											"end": 2645,
											"name": "DUP2"
										},
										{
											"begin": 2533,
											"end": 2645,
											"name": "DUP2"
										},
										{
											"begin": 2533,
											"end": 2645,
											"name": "MLOAD"
										},
										{
											"begin": 2533,
											"end": 2645,
											"name": "DUP2"
										},
										{
											"begin": 2533,
											"end": 2645,
											"name": "MSTORE"
										},
										{
											"begin": 2533,
											"end": 2645,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2533,
											"end": 2645,
											"name": "ADD"
										},
										{
											"begin": 2533,
											"end": 2645,
											"name": "SWAP2"
										},
										{
											"begin": 2533,
											"end": 2645,
											"name": "POP"
										},
										{
											"begin": 2533,
											"end": 2645,
											"name": "DUP1"
										},
										{
											"begin": 2533,
											"end": 2645,
											"name": "MLOAD"
										},
										{
											"begin": 2533,
											"end": 2645,
											"name": "SWAP1"
										},
										{
											"begin": 2533,
											"end": 2645,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2533,
											"end": 2645,
											"name": "ADD"
										},
										{
											"begin": 2533,
											"end": 2645,
											"name": "SWAP1"
										},
										{
											"begin": 2533,
											"end": 2645,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2533,
											"end": 2645,
											"name": "MUL"
										},
										{
											"begin": 2533,
											"end": 2645,
											"name": "DUP1"
										},
										{
											"begin": 2533,
											"end": 2645,
											"name": "DUP4"
										},
										{
											"begin": 2533,
											"end": 2645,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 29,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 93,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 89,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 74,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 70,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 48,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SWAP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "ADD"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SWAP3"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "MLOAD"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SWAP2"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SUB"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SWAP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "RETURN"
										},
										{
											"begin": 3301,
											"end": 3610,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 3301,
											"end": 3610,
											"name": "JUMPDEST"
										},
										{
											"begin": 3301,
											"end": 3610,
											"name": "CALLVALUE"
										},
										{
											"begin": 3301,
											"end": 3610,
											"name": "ISZERO"
										},
										{
											"begin": 3301,
											"end": 3610,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 3301,
											"end": 3610,
											"name": "JUMPI"
										},
										{
											"begin": 3301,
											"end": 3610,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3301,
											"end": 3610,
											"name": "DUP1"
										},
										{
											"begin": 3301,
											"end": 3610,
											"name": "REVERT"
										},
										{
											"begin": 3301,
											"end": 3610,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 3301,
											"end": 3610,
											"name": "JUMPDEST"
										},
										{
											"begin": 3301,
											"end": 3610,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 3301,
											"end": 3610,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3301,
											"end": 3610,
											"name": "DUP1"
										},
										{
											"begin": 3301,
											"end": 3610,
											"name": "DUP1"
										},
										{
											"begin": 3301,
											"end": 3610,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3301,
											"end": 3610,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3301,
											"end": 3610,
											"name": "AND"
										},
										{
											"begin": 3301,
											"end": 3610,
											"name": "SWAP1"
										},
										{
											"begin": 3301,
											"end": 3610,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3301,
											"end": 3610,
											"name": "ADD"
										},
										{
											"begin": 3301,
											"end": 3610,
											"name": "SWAP1"
										},
										{
											"begin": 3301,
											"end": 3610,
											"name": "SWAP2"
										},
										{
											"begin": 3301,
											"end": 3610,
											"name": "SWAP1"
										},
										{
											"begin": 3301,
											"end": 3610,
											"name": "POP"
										},
										{
											"begin": 3301,
											"end": 3610,
											"name": "POP"
										},
										{
											"begin": 3301,
											"end": 3610,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 3301,
											"end": 3610,
											"name": "JUMP"
										},
										{
											"begin": 3301,
											"end": 3610,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 3301,
											"end": 3610,
											"name": "JUMPDEST"
										},
										{
											"begin": 3301,
											"end": 3610,
											"name": "STOP"
										},
										{
											"begin": 2438,
											"end": 2525,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 2438,
											"end": 2525,
											"name": "JUMPDEST"
										},
										{
											"begin": 2438,
											"end": 2525,
											"name": "CALLVALUE"
										},
										{
											"begin": 2438,
											"end": 2525,
											"name": "ISZERO"
										},
										{
											"begin": 2438,
											"end": 2525,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 2438,
											"end": 2525,
											"name": "JUMPI"
										},
										{
											"begin": 2438,
											"end": 2525,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2438,
											"end": 2525,
											"name": "DUP1"
										},
										{
											"begin": 2438,
											"end": 2525,
											"name": "REVERT"
										},
										{
											"begin": 2438,
											"end": 2525,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 2438,
											"end": 2525,
											"name": "JUMPDEST"
										},
										{
											"begin": 2438,
											"end": 2525,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 2438,
											"end": 2525,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 2438,
											"end": 2525,
											"name": "JUMP"
										},
										{
											"begin": 2438,
											"end": 2525,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 2438,
											"end": 2525,
											"name": "JUMPDEST"
										},
										{
											"begin": 2438,
											"end": 2525,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2438,
											"end": 2525,
											"name": "MLOAD"
										},
										{
											"begin": 2438,
											"end": 2525,
											"name": "DUP1"
										},
										{
											"begin": 2438,
											"end": 2525,
											"name": "DUP1"
										},
										{
											"begin": 2438,
											"end": 2525,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2438,
											"end": 2525,
											"name": "ADD"
										},
										{
											"begin": 2438,
											"end": 2525,
											"name": "DUP3"
										},
										{
											"begin": 2438,
											"end": 2525,
											"name": "DUP2"
										},
										{
											"begin": 2438,
											"end": 2525,
											"name": "SUB"
										},
										{
											"begin": 2438,
											"end": 2525,
											"name": "DUP3"
										},
										{
											"begin": 2438,
											"end": 2525,
											"name": "MSTORE"
										},
										{
											"begin": 2438,
											"end": 2525,
											"name": "DUP4"
										},
										{
											"begin": 2438,
											"end": 2525,
											"name": "DUP2"
										},
										{
											"begin": 2438,
											"end": 2525,
											"name": "DUP2"
										},
										{
											"begin": 2438,
											"end": 2525,
											"name": "MLOAD"
										},
										{
											"begin": 2438,
											"end": 2525,
											"name": "DUP2"
										},
										{
											"begin": 2438,
											"end": 2525,
											"name": "MSTORE"
										},
										{
											"begin": 2438,
											"end": 2525,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2438,
											"end": 2525,
											"name": "ADD"
										},
										{
											"begin": 2438,
											"end": 2525,
											"name": "SWAP2"
										},
										{
											"begin": 2438,
											"end": 2525,
											"name": "POP"
										},
										{
											"begin": 2438,
											"end": 2525,
											"name": "DUP1"
										},
										{
											"begin": 2438,
											"end": 2525,
											"name": "MLOAD"
										},
										{
											"begin": 2438,
											"end": 2525,
											"name": "SWAP1"
										},
										{
											"begin": 2438,
											"end": 2525,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2438,
											"end": 2525,
											"name": "ADD"
										},
										{
											"begin": 2438,
											"end": 2525,
											"name": "SWAP1"
										},
										{
											"begin": 2438,
											"end": 2525,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2438,
											"end": 2525,
											"name": "MUL"
										},
										{
											"begin": 2438,
											"end": 2525,
											"name": "DUP1"
										},
										{
											"begin": 2438,
											"end": 2525,
											"name": "DUP4"
										},
										{
											"begin": 2438,
											"end": 2525,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 29,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 93,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 89,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 74,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 70,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 48,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SWAP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "ADD"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SWAP3"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "MLOAD"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SWAP2"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SUB"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SWAP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "RETURN"
										},
										{
											"begin": 151,
											"end": 225,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 151,
											"end": 225,
											"name": "JUMPDEST"
										},
										{
											"begin": 151,
											"end": 225,
											"name": "CALLVALUE"
										},
										{
											"begin": 151,
											"end": 225,
											"name": "ISZERO"
										},
										{
											"begin": 151,
											"end": 225,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 151,
											"end": 225,
											"name": "JUMPI"
										},
										{
											"begin": 151,
											"end": 225,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 151,
											"end": 225,
											"name": "DUP1"
										},
										{
											"begin": 151,
											"end": 225,
											"name": "REVERT"
										},
										{
											"begin": 151,
											"end": 225,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 151,
											"end": 225,
											"name": "JUMPDEST"
										},
										{
											"begin": 151,
											"end": 225,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 151,
											"end": 225,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 151,
											"end": 225,
											"name": "JUMP"
										},
										{
											"begin": 151,
											"end": 225,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 151,
											"end": 225,
											"name": "JUMPDEST"
										},
										{
											"begin": 151,
											"end": 225,
											"name": "STOP"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "JUMPDEST"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "CALLVALUE"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "ISZERO"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "JUMPI"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "DUP1"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "REVERT"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "JUMPDEST"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "JUMP"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "JUMPDEST"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "MLOAD"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "DUP1"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "DUP3"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "AND"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "AND"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "DUP2"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "MSTORE"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "ADD"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "SWAP2"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "POP"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "POP"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "MLOAD"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "DUP1"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "SWAP2"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "SUB"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "SWAP1"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "RETURN"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "JUMPDEST"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "CALLVALUE"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "ISZERO"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "JUMPI"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "DUP1"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "REVERT"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "JUMPDEST"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "DUP1"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "DUP1"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "AND"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "SWAP1"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "ADD"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "SWAP1"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "SWAP2"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "SWAP1"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "POP"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "POP"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "JUMP"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "JUMPDEST"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "MLOAD"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "DUP1"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "DUP5"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "ISZERO"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "ISZERO"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "ISZERO"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "ISZERO"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "DUP2"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "MSTORE"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "ADD"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "DUP4"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "AND"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "AND"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "DUP2"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "MSTORE"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "ADD"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "DUP3"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "ISZERO"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "ISZERO"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "ISZERO"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "ISZERO"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "DUP2"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "MSTORE"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "ADD"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "SWAP4"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "POP"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "POP"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "POP"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "POP"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "MLOAD"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "DUP1"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "SWAP2"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "SUB"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "SWAP1"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "RETURN"
										},
										{
											"begin": 2653,
											"end": 2976,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 2653,
											"end": 2976,
											"name": "JUMPDEST"
										},
										{
											"begin": 2653,
											"end": 2976,
											"name": "CALLVALUE"
										},
										{
											"begin": 2653,
											"end": 2976,
											"name": "ISZERO"
										},
										{
											"begin": 2653,
											"end": 2976,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 2653,
											"end": 2976,
											"name": "JUMPI"
										},
										{
											"begin": 2653,
											"end": 2976,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2653,
											"end": 2976,
											"name": "DUP1"
										},
										{
											"begin": 2653,
											"end": 2976,
											"name": "REVERT"
										},
										{
											"begin": 2653,
											"end": 2976,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 2653,
											"end": 2976,
											"name": "JUMPDEST"
										},
										{
											"begin": 2653,
											"end": 2976,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 2653,
											"end": 2976,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2653,
											"end": 2976,
											"name": "DUP1"
										},
										{
											"begin": 2653,
											"end": 2976,
											"name": "DUP1"
										},
										{
											"begin": 2653,
											"end": 2976,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2653,
											"end": 2976,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2653,
											"end": 2976,
											"name": "AND"
										},
										{
											"begin": 2653,
											"end": 2976,
											"name": "SWAP1"
										},
										{
											"begin": 2653,
											"end": 2976,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2653,
											"end": 2976,
											"name": "ADD"
										},
										{
											"begin": 2653,
											"end": 2976,
											"name": "SWAP1"
										},
										{
											"begin": 2653,
											"end": 2976,
											"name": "SWAP2"
										},
										{
											"begin": 2653,
											"end": 2976,
											"name": "SWAP1"
										},
										{
											"begin": 2653,
											"end": 2976,
											"name": "POP"
										},
										{
											"begin": 2653,
											"end": 2976,
											"name": "POP"
										},
										{
											"begin": 2653,
											"end": 2976,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 2653,
											"end": 2976,
											"name": "JUMP"
										},
										{
											"begin": 2653,
											"end": 2976,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 2653,
											"end": 2976,
											"name": "JUMPDEST"
										},
										{
											"begin": 2653,
											"end": 2976,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2653,
											"end": 2976,
											"name": "MLOAD"
										},
										{
											"begin": 2653,
											"end": 2976,
											"name": "DUP1"
										},
										{
											"begin": 2653,
											"end": 2976,
											"name": "DUP3"
										},
										{
											"begin": 2653,
											"end": 2976,
											"name": "ISZERO"
										},
										{
											"begin": 2653,
											"end": 2976,
											"name": "ISZERO"
										},
										{
											"begin": 2653,
											"end": 2976,
											"name": "ISZERO"
										},
										{
											"begin": 2653,
											"end": 2976,
											"name": "ISZERO"
										},
										{
											"begin": 2653,
											"end": 2976,
											"name": "DUP2"
										},
										{
											"begin": 2653,
											"end": 2976,
											"name": "MSTORE"
										},
										{
											"begin": 2653,
											"end": 2976,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2653,
											"end": 2976,
											"name": "ADD"
										},
										{
											"begin": 2653,
											"end": 2976,
											"name": "SWAP2"
										},
										{
											"begin": 2653,
											"end": 2976,
											"name": "POP"
										},
										{
											"begin": 2653,
											"end": 2976,
											"name": "POP"
										},
										{
											"begin": 2653,
											"end": 2976,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2653,
											"end": 2976,
											"name": "MLOAD"
										},
										{
											"begin": 2653,
											"end": 2976,
											"name": "DUP1"
										},
										{
											"begin": 2653,
											"end": 2976,
											"name": "SWAP2"
										},
										{
											"begin": 2653,
											"end": 2976,
											"name": "SUB"
										},
										{
											"begin": 2653,
											"end": 2976,
											"name": "SWAP1"
										},
										{
											"begin": 2653,
											"end": 2976,
											"name": "RETURN"
										},
										{
											"begin": 1223,
											"end": 2430,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 1223,
											"end": 2430,
											"name": "JUMPDEST"
										},
										{
											"begin": 1223,
											"end": 2430,
											"name": "CALLVALUE"
										},
										{
											"begin": 1223,
											"end": 2430,
											"name": "ISZERO"
										},
										{
											"begin": 1223,
											"end": 2430,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 1223,
											"end": 2430,
											"name": "JUMPI"
										},
										{
											"begin": 1223,
											"end": 2430,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1223,
											"end": 2430,
											"name": "DUP1"
										},
										{
											"begin": 1223,
											"end": 2430,
											"name": "REVERT"
										},
										{
											"begin": 1223,
											"end": 2430,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 1223,
											"end": 2430,
											"name": "JUMPDEST"
										},
										{
											"begin": 1223,
											"end": 2430,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 1223,
											"end": 2430,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1223,
											"end": 2430,
											"name": "DUP1"
										},
										{
											"begin": 1223,
											"end": 2430,
											"name": "DUP1"
										},
										{
											"begin": 1223,
											"end": 2430,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1223,
											"end": 2430,
											"name": "SWAP1"
										},
										{
											"begin": 1223,
											"end": 2430,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1223,
											"end": 2430,
											"name": "ADD"
										},
										{
											"begin": 1223,
											"end": 2430,
											"name": "SWAP1"
										},
										{
											"begin": 1223,
											"end": 2430,
											"name": "SWAP2"
										},
										{
											"begin": 1223,
											"end": 2430,
											"name": "SWAP1"
										},
										{
											"begin": 1223,
											"end": 2430,
											"name": "DUP1"
										},
										{
											"begin": 1223,
											"end": 2430,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1223,
											"end": 2430,
											"name": "SWAP1"
										},
										{
											"begin": 1223,
											"end": 2430,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1223,
											"end": 2430,
											"name": "ADD"
										},
										{
											"begin": 1223,
											"end": 2430,
											"name": "SWAP1"
										},
										{
											"begin": 1223,
											"end": 2430,
											"name": "SWAP2"
										},
										{
											"begin": 1223,
											"end": 2430,
											"name": "SWAP1"
										},
										{
											"begin": 1223,
											"end": 2430,
											"name": "DUP1"
										},
										{
											"begin": 1223,
											"end": 2430,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1223,
											"end": 2430,
											"name": "SWAP1"
										},
										{
											"begin": 1223,
											"end": 2430,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1223,
											"end": 2430,
											"name": "ADD"
										},
										{
											"begin": 1223,
											"end": 2430,
											"name": "SWAP1"
										},
										{
											"begin": 1223,
											"end": 2430,
											"name": "SWAP2"
										},
										{
											"begin": 1223,
											"end": 2430,
											"name": "SWAP1"
										},
										{
											"begin": 1223,
											"end": 2430,
											"name": "DUP1"
										},
										{
											"begin": 1223,
											"end": 2430,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1223,
											"end": 2430,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1223,
											"end": 2430,
											"name": "NOT"
										},
										{
											"begin": 1223,
											"end": 2430,
											"name": "AND"
										},
										{
											"begin": 1223,
											"end": 2430,
											"name": "SWAP1"
										},
										{
											"begin": 1223,
											"end": 2430,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1223,
											"end": 2430,
											"name": "ADD"
										},
										{
											"begin": 1223,
											"end": 2430,
											"name": "SWAP1"
										},
										{
											"begin": 1223,
											"end": 2430,
											"name": "SWAP2"
										},
										{
											"begin": 1223,
											"end": 2430,
											"name": "SWAP1"
										},
										{
											"begin": 1223,
											"end": 2430,
											"name": "POP"
										},
										{
											"begin": 1223,
											"end": 2430,
											"name": "POP"
										},
										{
											"begin": 1223,
											"end": 2430,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 1223,
											"end": 2430,
											"name": "JUMP"
										},
										{
											"begin": 1223,
											"end": 2430,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 1223,
											"end": 2430,
											"name": "JUMPDEST"
										},
										{
											"begin": 1223,
											"end": 2430,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1223,
											"end": 2430,
											"name": "MLOAD"
										},
										{
											"begin": 1223,
											"end": 2430,
											"name": "DUP1"
										},
										{
											"begin": 1223,
											"end": 2430,
											"name": "DUP3"
										},
										{
											"begin": 1223,
											"end": 2430,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1223,
											"end": 2430,
											"name": "AND"
										},
										{
											"begin": 1223,
											"end": 2430,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1223,
											"end": 2430,
											"name": "AND"
										},
										{
											"begin": 1223,
											"end": 2430,
											"name": "DUP2"
										},
										{
											"begin": 1223,
											"end": 2430,
											"name": "MSTORE"
										},
										{
											"begin": 1223,
											"end": 2430,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1223,
											"end": 2430,
											"name": "ADD"
										},
										{
											"begin": 1223,
											"end": 2430,
											"name": "SWAP2"
										},
										{
											"begin": 1223,
											"end": 2430,
											"name": "POP"
										},
										{
											"begin": 1223,
											"end": 2430,
											"name": "POP"
										},
										{
											"begin": 1223,
											"end": 2430,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1223,
											"end": 2430,
											"name": "MLOAD"
										},
										{
											"begin": 1223,
											"end": 2430,
											"name": "DUP1"
										},
										{
											"begin": 1223,
											"end": 2430,
											"name": "SWAP2"
										},
										{
											"begin": 1223,
											"end": 2430,
											"name": "SUB"
										},
										{
											"begin": 1223,
											"end": 2430,
											"name": "SWAP1"
										},
										{
											"begin": 1223,
											"end": 2430,
											"name": "RETURN"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "JUMPDEST"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "CALLVALUE"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "ISZERO"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "JUMPI"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "DUP1"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "REVERT"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "JUMPDEST"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "DUP1"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "DUP1"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "AND"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "SWAP1"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "ADD"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "SWAP1"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "SWAP2"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "SWAP1"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "POP"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "POP"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "JUMP"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "JUMPDEST"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "STOP"
										},
										{
											"begin": 2984,
											"end": 3293,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 2984,
											"end": 3293,
											"name": "JUMPDEST"
										},
										{
											"begin": 2984,
											"end": 3293,
											"name": "CALLVALUE"
										},
										{
											"begin": 2984,
											"end": 3293,
											"name": "ISZERO"
										},
										{
											"begin": 2984,
											"end": 3293,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 2984,
											"end": 3293,
											"name": "JUMPI"
										},
										{
											"begin": 2984,
											"end": 3293,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2984,
											"end": 3293,
											"name": "DUP1"
										},
										{
											"begin": 2984,
											"end": 3293,
											"name": "REVERT"
										},
										{
											"begin": 2984,
											"end": 3293,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 2984,
											"end": 3293,
											"name": "JUMPDEST"
										},
										{
											"begin": 2984,
											"end": 3293,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 2984,
											"end": 3293,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2984,
											"end": 3293,
											"name": "DUP1"
										},
										{
											"begin": 2984,
											"end": 3293,
											"name": "DUP1"
										},
										{
											"begin": 2984,
											"end": 3293,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2984,
											"end": 3293,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2984,
											"end": 3293,
											"name": "AND"
										},
										{
											"begin": 2984,
											"end": 3293,
											"name": "SWAP1"
										},
										{
											"begin": 2984,
											"end": 3293,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2984,
											"end": 3293,
											"name": "ADD"
										},
										{
											"begin": 2984,
											"end": 3293,
											"name": "SWAP1"
										},
										{
											"begin": 2984,
											"end": 3293,
											"name": "SWAP2"
										},
										{
											"begin": 2984,
											"end": 3293,
											"name": "SWAP1"
										},
										{
											"begin": 2984,
											"end": 3293,
											"name": "DUP1"
										},
										{
											"begin": 2984,
											"end": 3293,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2984,
											"end": 3293,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 2984,
											"end": 3293,
											"name": "AND"
										},
										{
											"begin": 2984,
											"end": 3293,
											"name": "SWAP1"
										},
										{
											"begin": 2984,
											"end": 3293,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2984,
											"end": 3293,
											"name": "ADD"
										},
										{
											"begin": 2984,
											"end": 3293,
											"name": "SWAP1"
										},
										{
											"begin": 2984,
											"end": 3293,
											"name": "SWAP2"
										},
										{
											"begin": 2984,
											"end": 3293,
											"name": "SWAP1"
										},
										{
											"begin": 2984,
											"end": 3293,
											"name": "POP"
										},
										{
											"begin": 2984,
											"end": 3293,
											"name": "POP"
										},
										{
											"begin": 2984,
											"end": 3293,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 2984,
											"end": 3293,
											"name": "JUMP"
										},
										{
											"begin": 2984,
											"end": 3293,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 2984,
											"end": 3293,
											"name": "JUMPDEST"
										},
										{
											"begin": 2984,
											"end": 3293,
											"name": "STOP"
										},
										{
											"begin": 722,
											"end": 746,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 722,
											"end": 746,
											"name": "JUMPDEST"
										},
										{
											"begin": 722,
											"end": 746,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 722,
											"end": 746,
											"name": "DUP2"
										},
										{
											"begin": 722,
											"end": 746,
											"name": "DUP2"
										},
										{
											"begin": 722,
											"end": 746,
											"name": "SLOAD"
										},
										{
											"begin": 722,
											"end": 746,
											"name": "DUP2"
										},
										{
											"begin": 722,
											"end": 746,
											"name": "LT"
										},
										{
											"begin": 722,
											"end": 746,
											"name": "ISZERO"
										},
										{
											"begin": 722,
											"end": 746,
											"name": "ISZERO"
										},
										{
											"begin": 722,
											"end": 746,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 722,
											"end": 746,
											"name": "JUMPI"
										},
										{
											"begin": 722,
											"end": 746,
											"name": "INVALID"
										},
										{
											"begin": 722,
											"end": 746,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 722,
											"end": 746,
											"name": "JUMPDEST"
										},
										{
											"begin": 722,
											"end": 746,
											"name": "SWAP1"
										},
										{
											"begin": 722,
											"end": 746,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 722,
											"end": 746,
											"name": "MSTORE"
										},
										{
											"begin": 722,
											"end": 746,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 722,
											"end": 746,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 722,
											"end": 746,
											"name": "KECCAK256"
										},
										{
											"begin": 722,
											"end": 746,
											"name": "SWAP1"
										},
										{
											"begin": 722,
											"end": 746,
											"name": "ADD"
										},
										{
											"begin": 722,
											"end": 746,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 722,
											"end": 746,
											"name": "SWAP2"
										},
										{
											"begin": 722,
											"end": 746,
											"name": "POP"
										},
										{
											"begin": 722,
											"end": 746,
											"name": "SLOAD"
										},
										{
											"begin": 722,
											"end": 746,
											"name": "SWAP1"
										},
										{
											"begin": 722,
											"end": 746,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 722,
											"end": 746,
											"name": "EXP"
										},
										{
											"begin": 722,
											"end": 746,
											"name": "SWAP1"
										},
										{
											"begin": 722,
											"end": 746,
											"name": "DIV"
										},
										{
											"begin": 722,
											"end": 746,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 722,
											"end": 746,
											"name": "AND"
										},
										{
											"begin": 722,
											"end": 746,
											"name": "DUP2"
										},
										{
											"begin": 722,
											"end": 746,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2533,
											"end": 2645,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 2533,
											"end": 2645,
											"name": "JUMPDEST"
										},
										{
											"begin": 2580,
											"end": 2589,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 2580,
											"end": 2589,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 2580,
											"end": 2589,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2580,
											"end": 2589,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 2580,
											"end": 2589,
											"name": "JUMPDEST"
										},
										{
											"begin": 2609,
											"end": 2614,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2609,
											"end": 2626,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2615,
											"end": 2625,
											"name": "CALLER"
										},
										{
											"begin": 2609,
											"end": 2626,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2609,
											"end": 2626,
											"name": "AND"
										},
										{
											"begin": 2609,
											"end": 2626,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2609,
											"end": 2626,
											"name": "AND"
										},
										{
											"begin": 2609,
											"end": 2626,
											"name": "DUP2"
										},
										{
											"begin": 2609,
											"end": 2626,
											"name": "MSTORE"
										},
										{
											"begin": 2609,
											"end": 2626,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2609,
											"end": 2626,
											"name": "ADD"
										},
										{
											"begin": 2609,
											"end": 2626,
											"name": "SWAP1"
										},
										{
											"begin": 2609,
											"end": 2626,
											"name": "DUP2"
										},
										{
											"begin": 2609,
											"end": 2626,
											"name": "MSTORE"
										},
										{
											"begin": 2609,
											"end": 2626,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2609,
											"end": 2626,
											"name": "ADD"
										},
										{
											"begin": 2609,
											"end": 2626,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2609,
											"end": 2626,
											"name": "KECCAK256"
										},
										{
											"begin": 2609,
											"end": 2637,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2609,
											"end": 2637,
											"name": "ADD"
										},
										{
											"begin": 2602,
											"end": 2637,
											"name": "DUP1"
										},
										{
											"begin": 2602,
											"end": 2637,
											"name": "SLOAD"
										},
										{
											"begin": 2602,
											"end": 2637,
											"name": "DUP1"
										},
										{
											"begin": 2602,
											"end": 2637,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2602,
											"end": 2637,
											"name": "MUL"
										},
										{
											"begin": 2602,
											"end": 2637,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2602,
											"end": 2637,
											"name": "ADD"
										},
										{
											"begin": 2602,
											"end": 2637,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2602,
											"end": 2637,
											"name": "MLOAD"
										},
										{
											"begin": 2602,
											"end": 2637,
											"name": "SWAP1"
										},
										{
											"begin": 2602,
											"end": 2637,
											"name": "DUP2"
										},
										{
											"begin": 2602,
											"end": 2637,
											"name": "ADD"
										},
										{
											"begin": 2602,
											"end": 2637,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2602,
											"end": 2637,
											"name": "MSTORE"
										},
										{
											"begin": 2602,
											"end": 2637,
											"name": "DUP1"
										},
										{
											"begin": 2602,
											"end": 2637,
											"name": "SWAP3"
										},
										{
											"begin": 2602,
											"end": 2637,
											"name": "SWAP2"
										},
										{
											"begin": 2602,
											"end": 2637,
											"name": "SWAP1"
										},
										{
											"begin": 2602,
											"end": 2637,
											"name": "DUP2"
										},
										{
											"begin": 2602,
											"end": 2637,
											"name": "DUP2"
										},
										{
											"begin": 2602,
											"end": 2637,
											"name": "MSTORE"
										},
										{
											"begin": 2602,
											"end": 2637,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2602,
											"end": 2637,
											"name": "ADD"
										},
										{
											"begin": 2602,
											"end": 2637,
											"name": "DUP3"
										},
										{
											"begin": 2602,
											"end": 2637,
											"name": "DUP1"
										},
										{
											"begin": 2602,
											"end": 2637,
											"name": "SLOAD"
										},
										{
											"begin": 2602,
											"end": 2637,
											"name": "DUP1"
										},
										{
											"begin": 2602,
											"end": 2637,
											"name": "ISZERO"
										},
										{
											"begin": 2602,
											"end": 2637,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 2602,
											"end": 2637,
											"name": "JUMPI"
										},
										{
											"begin": 2602,
											"end": 2637,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2602,
											"end": 2637,
											"name": "MUL"
										},
										{
											"begin": 2602,
											"end": 2637,
											"name": "DUP3"
										},
										{
											"begin": 2602,
											"end": 2637,
											"name": "ADD"
										},
										{
											"begin": 2602,
											"end": 2637,
											"name": "SWAP2"
										},
										{
											"begin": 2602,
											"end": 2637,
											"name": "SWAP1"
										},
										{
											"begin": 2602,
											"end": 2637,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2602,
											"end": 2637,
											"name": "MSTORE"
										},
										{
											"begin": 2602,
											"end": 2637,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2602,
											"end": 2637,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2602,
											"end": 2637,
											"name": "KECCAK256"
										},
										{
											"begin": 2602,
											"end": 2637,
											"name": "SWAP1"
										},
										{
											"begin": 2602,
											"end": 2637,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 2602,
											"end": 2637,
											"name": "JUMPDEST"
										},
										{
											"begin": 2602,
											"end": 2637,
											"name": "DUP2"
										},
										{
											"begin": 2602,
											"end": 2637,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2602,
											"end": 2637,
											"name": "SWAP1"
										},
										{
											"begin": 2602,
											"end": 2637,
											"name": "SLOAD"
										},
										{
											"begin": 2602,
											"end": 2637,
											"name": "SWAP1"
										},
										{
											"begin": 2602,
											"end": 2637,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2602,
											"end": 2637,
											"name": "EXP"
										},
										{
											"begin": 2602,
											"end": 2637,
											"name": "SWAP1"
										},
										{
											"begin": 2602,
											"end": 2637,
											"name": "DIV"
										},
										{
											"begin": 2602,
											"end": 2637,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2602,
											"end": 2637,
											"name": "AND"
										},
										{
											"begin": 2602,
											"end": 2637,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2602,
											"end": 2637,
											"name": "AND"
										},
										{
											"begin": 2602,
											"end": 2637,
											"name": "DUP2"
										},
										{
											"begin": 2602,
											"end": 2637,
											"name": "MSTORE"
										},
										{
											"begin": 2602,
											"end": 2637,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2602,
											"end": 2637,
											"name": "ADD"
										},
										{
											"begin": 2602,
											"end": 2637,
											"name": "SWAP1"
										},
										{
											"begin": 2602,
											"end": 2637,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2602,
											"end": 2637,
											"name": "ADD"
										},
										{
											"begin": 2602,
											"end": 2637,
											"name": "SWAP1"
										},
										{
											"begin": 2602,
											"end": 2637,
											"name": "DUP1"
										},
										{
											"begin": 2602,
											"end": 2637,
											"name": "DUP4"
										},
										{
											"begin": 2602,
											"end": 2637,
											"name": "GT"
										},
										{
											"begin": 2602,
											"end": 2637,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 2602,
											"end": 2637,
											"name": "JUMPI"
										},
										{
											"begin": 2602,
											"end": 2637,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 2602,
											"end": 2637,
											"name": "JUMPDEST"
										},
										{
											"begin": 2602,
											"end": 2637,
											"name": "POP"
										},
										{
											"begin": 2602,
											"end": 2637,
											"name": "POP"
										},
										{
											"begin": 2602,
											"end": 2637,
											"name": "POP"
										},
										{
											"begin": 2602,
											"end": 2637,
											"name": "POP"
										},
										{
											"begin": 2602,
											"end": 2637,
											"name": "POP"
										},
										{
											"begin": 2602,
											"end": 2637,
											"name": "SWAP1"
										},
										{
											"begin": 2602,
											"end": 2637,
											"name": "POP"
										},
										{
											"begin": 2533,
											"end": 2645,
											"name": "SWAP1"
										},
										{
											"begin": 2533,
											"end": 2645,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3301,
											"end": 3610,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 3301,
											"end": 3610,
											"name": "JUMPDEST"
										},
										{
											"begin": 3427,
											"end": 3440,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3469,
											"end": 3480,
											"name": "DUP1"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "DUP1"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "SWAP1"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "SLOAD"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "SWAP1"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "EXP"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "SWAP1"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "DIV"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "AND"
										},
										{
											"begin": 218,
											"end": 237,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 218,
											"end": 237,
											"name": "AND"
										},
										{
											"begin": 218,
											"end": 228,
											"name": "CALLER"
										},
										{
											"begin": 218,
											"end": 237,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 218,
											"end": 237,
											"name": "AND"
										},
										{
											"begin": 218,
											"end": 237,
											"name": "EQ"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "ISZERO"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "ISZERO"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "JUMPI"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "DUP1"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "REVERT"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "JUMPDEST"
										},
										{
											"begin": 3450,
											"end": 3457,
											"name": "DUP3"
										},
										{
											"begin": 3427,
											"end": 3458,
											"name": "SWAP2"
										},
										{
											"begin": 3427,
											"end": 3458,
											"name": "POP"
										},
										{
											"begin": 3483,
											"end": 3489,
											"name": "DUP2"
										},
										{
											"begin": 3483,
											"end": 3502,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3483,
											"end": 3502,
											"name": "AND"
										},
										{
											"begin": 3483,
											"end": 3502,
											"name": "PUSH",
											"value": "29C68DC1"
										},
										{
											"begin": 3483,
											"end": 3504,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3483,
											"end": 3504,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3483,
											"end": 3504,
											"name": "MLOAD"
										},
										{
											"begin": 3483,
											"end": 3504,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3483,
											"end": 3504,
											"name": "ADD"
										},
										{
											"begin": 3483,
											"end": 3504,
											"name": "MSTORE"
										},
										{
											"begin": 3483,
											"end": 3504,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3483,
											"end": 3504,
											"name": "MLOAD"
										},
										{
											"begin": 3483,
											"end": 3504,
											"name": "DUP2"
										},
										{
											"begin": 3483,
											"end": 3504,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3483,
											"end": 3504,
											"name": "AND"
										},
										{
											"begin": 3483,
											"end": 3504,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3483,
											"end": 3504,
											"name": "MUL"
										},
										{
											"begin": 3483,
											"end": 3504,
											"name": "DUP2"
										},
										{
											"begin": 3483,
											"end": 3504,
											"name": "MSTORE"
										},
										{
											"begin": 3483,
											"end": 3504,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3483,
											"end": 3504,
											"name": "ADD"
										},
										{
											"begin": 3483,
											"end": 3504,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3483,
											"end": 3504,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3483,
											"end": 3504,
											"name": "MLOAD"
										},
										{
											"begin": 3483,
											"end": 3504,
											"name": "DUP1"
										},
										{
											"begin": 3483,
											"end": 3504,
											"name": "DUP4"
										},
										{
											"begin": 3483,
											"end": 3504,
											"name": "SUB"
										},
										{
											"begin": 3483,
											"end": 3504,
											"name": "DUP2"
										},
										{
											"begin": 3483,
											"end": 3504,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3483,
											"end": 3504,
											"name": "DUP8"
										},
										{
											"begin": 3483,
											"end": 3504,
											"name": "DUP1"
										},
										{
											"begin": 3483,
											"end": 3504,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 3483,
											"end": 3504,
											"name": "ISZERO"
										},
										{
											"begin": 3483,
											"end": 3504,
											"name": "ISZERO"
										},
										{
											"begin": 3483,
											"end": 3504,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 3483,
											"end": 3504,
											"name": "JUMPI"
										},
										{
											"begin": 3483,
											"end": 3504,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3483,
											"end": 3504,
											"name": "DUP1"
										},
										{
											"begin": 3483,
											"end": 3504,
											"name": "REVERT"
										},
										{
											"begin": 3483,
											"end": 3504,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 3483,
											"end": 3504,
											"name": "JUMPDEST"
										},
										{
											"begin": 3483,
											"end": 3504,
											"name": "PUSH",
											"value": "2C6"
										},
										{
											"begin": 3483,
											"end": 3504,
											"name": "GAS"
										},
										{
											"begin": 3483,
											"end": 3504,
											"name": "SUB"
										},
										{
											"begin": 3483,
											"end": 3504,
											"name": "CALL"
										},
										{
											"begin": 3483,
											"end": 3504,
											"name": "ISZERO"
										},
										{
											"begin": 3483,
											"end": 3504,
											"name": "ISZERO"
										},
										{
											"begin": 3483,
											"end": 3504,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 3483,
											"end": 3504,
											"name": "JUMPI"
										},
										{
											"begin": 3483,
											"end": 3504,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3483,
											"end": 3504,
											"name": "DUP1"
										},
										{
											"begin": 3483,
											"end": 3504,
											"name": "REVERT"
										},
										{
											"begin": 3483,
											"end": 3504,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 3483,
											"end": 3504,
											"name": "JUMPDEST"
										},
										{
											"begin": 3483,
											"end": 3504,
											"name": "POP"
										},
										{
											"begin": 3483,
											"end": 3504,
											"name": "POP"
										},
										{
											"begin": 3483,
											"end": 3504,
											"name": "POP"
										},
										{
											"begin": 3483,
											"end": 3504,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3483,
											"end": 3504,
											"name": "MLOAD"
										},
										{
											"begin": 3483,
											"end": 3504,
											"name": "DUP1"
										},
										{
											"begin": 3483,
											"end": 3504,
											"name": "MLOAD"
										},
										{
											"begin": 3483,
											"end": 3504,
											"name": "SWAP1"
										},
										{
											"begin": 3483,
											"end": 3504,
											"name": "POP"
										},
										{
											"begin": 3469,
											"end": 3504,
											"name": "SWAP1"
										},
										{
											"begin": 3469,
											"end": 3504,
											"name": "POP"
										},
										{
											"begin": 3586,
											"end": 3601,
											"name": "TIMESTAMP"
										},
										{
											"begin": 3578,
											"end": 3584,
											"name": "DUP2"
										},
										{
											"begin": 3547,
											"end": 3602,
											"name": "ISZERO"
										},
										{
											"begin": 3547,
											"end": 3602,
											"name": "ISZERO"
										},
										{
											"begin": 3570,
											"end": 3576,
											"name": "DUP4"
										},
										{
											"begin": 3547,
											"end": 3602,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3547,
											"end": 3602,
											"name": "AND"
										},
										{
											"begin": 3547,
											"end": 3602,
											"name": "PUSH",
											"value": "25270ACF0EAB637903A9CD906E32D2AC17CE44DB6C743BA5812F2924E84FF8D6"
										},
										{
											"begin": 3547,
											"end": 3602,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3547,
											"end": 3602,
											"name": "MLOAD"
										},
										{
											"begin": 3547,
											"end": 3602,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3547,
											"end": 3602,
											"name": "MLOAD"
										},
										{
											"begin": 3547,
											"end": 3602,
											"name": "DUP1"
										},
										{
											"begin": 3547,
											"end": 3602,
											"name": "SWAP2"
										},
										{
											"begin": 3547,
											"end": 3602,
											"name": "SUB"
										},
										{
											"begin": 3547,
											"end": 3602,
											"name": "SWAP1"
										},
										{
											"begin": 3547,
											"end": 3602,
											"name": "LOG4"
										},
										{
											"begin": 3301,
											"end": 3610,
											"name": "POP"
										},
										{
											"begin": 3301,
											"end": 3610,
											"name": "POP"
										},
										{
											"begin": 3301,
											"end": 3610,
											"name": "POP"
										},
										{
											"begin": 3301,
											"end": 3610,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2438,
											"end": 2525,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 2438,
											"end": 2525,
											"name": "JUMPDEST"
										},
										{
											"begin": 2481,
											"end": 2490,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 2481,
											"end": 2490,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 2481,
											"end": 2490,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2481,
											"end": 2490,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 2481,
											"end": 2490,
											"name": "JUMPDEST"
										},
										{
											"begin": 2510,
											"end": 2517,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "DUP1"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "SLOAD"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "DUP1"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "MUL"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "ADD"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "MLOAD"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "SWAP1"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "DUP2"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "ADD"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "MSTORE"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "DUP1"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "SWAP3"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "SWAP2"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "SWAP1"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "DUP2"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "DUP2"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "MSTORE"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "ADD"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "DUP3"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "DUP1"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "SLOAD"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "DUP1"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "ISZERO"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "JUMPI"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "MUL"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "DUP3"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "ADD"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "SWAP2"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "SWAP1"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "MSTORE"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "KECCAK256"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "SWAP1"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "JUMPDEST"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "DUP2"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "SWAP1"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "SLOAD"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "SWAP1"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "EXP"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "SWAP1"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "DIV"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "AND"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "AND"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "DUP2"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "MSTORE"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "ADD"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "SWAP1"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "ADD"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "SWAP1"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "DUP1"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "DUP4"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "GT"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "JUMPI"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "JUMPDEST"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "POP"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "POP"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "POP"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "POP"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "POP"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "SWAP1"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "POP"
										},
										{
											"begin": 2438,
											"end": 2525,
											"name": "SWAP1"
										},
										{
											"begin": 2438,
											"end": 2525,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 151,
											"end": 225,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 151,
											"end": 225,
											"name": "JUMPDEST"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "DUP1"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "SWAP1"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "SLOAD"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "SWAP1"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "EXP"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "SWAP1"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "DIV"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "AND"
										},
										{
											"begin": 218,
											"end": 237,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 218,
											"end": 237,
											"name": "AND"
										},
										{
											"begin": 218,
											"end": 228,
											"name": "CALLER"
										},
										{
											"begin": 218,
											"end": 237,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 218,
											"end": 237,
											"name": "AND"
										},
										{
											"begin": 218,
											"end": 237,
											"name": "EQ"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "ISZERO"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "ISZERO"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "JUMPI"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "DUP1"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "REVERT"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "JUMPDEST"
										},
										{
											"begin": 211,
											"end": 216,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 211,
											"end": 216,
											"name": "DUP1"
										},
										{
											"begin": 211,
											"end": 216,
											"name": "SWAP1"
										},
										{
											"begin": 211,
											"end": 216,
											"name": "SLOAD"
										},
										{
											"begin": 211,
											"end": 216,
											"name": "SWAP1"
										},
										{
											"begin": 211,
											"end": 216,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 211,
											"end": 216,
											"name": "EXP"
										},
										{
											"begin": 211,
											"end": 216,
											"name": "SWAP1"
										},
										{
											"begin": 211,
											"end": 216,
											"name": "DIV"
										},
										{
											"begin": 211,
											"end": 216,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 211,
											"end": 216,
											"name": "AND"
										},
										{
											"begin": 198,
											"end": 217,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 198,
											"end": 217,
											"name": "AND"
										},
										{
											"begin": 198,
											"end": 217,
											"name": "SELFDESTRUCT"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "JUMPDEST"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "DUP1"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "SWAP1"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "SLOAD"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "SWAP1"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "EXP"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "SWAP1"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "DIV"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "AND"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "DUP2"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "JUMPDEST"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "MSTORE"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "DUP1"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "MSTORE"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "KECCAK256"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "SWAP2"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "POP"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "SWAP1"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "POP"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "DUP1"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "ADD"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "SWAP1"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "SLOAD"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "SWAP1"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "EXP"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "SWAP1"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "DIV"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "AND"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "SWAP1"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "DUP1"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "ADD"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "SWAP1"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "SLOAD"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "SWAP1"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "EXP"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "SWAP1"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "DIV"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "AND"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "SWAP1"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "DUP1"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "ADD"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "PUSH",
											"value": "15"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "SWAP1"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "SLOAD"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "SWAP1"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "EXP"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "SWAP1"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "DIV"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "AND"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "SWAP1"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "POP"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "DUP4"
										},
										{
											"begin": 637,
											"end": 674,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2653,
											"end": 2976,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 2653,
											"end": 2976,
											"name": "JUMPDEST"
										},
										{
											"begin": 2714,
											"end": 2718,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2800,
											"end": 2804,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2769,
											"end": 2774,
											"name": "DUP1"
										},
										{
											"begin": 2769,
											"end": 2785,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2775,
											"end": 2784,
											"name": "DUP5"
										},
										{
											"begin": 2769,
											"end": 2785,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2769,
											"end": 2785,
											"name": "AND"
										},
										{
											"begin": 2769,
											"end": 2785,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2769,
											"end": 2785,
											"name": "AND"
										},
										{
											"begin": 2769,
											"end": 2785,
											"name": "DUP2"
										},
										{
											"begin": 2769,
											"end": 2785,
											"name": "MSTORE"
										},
										{
											"begin": 2769,
											"end": 2785,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2769,
											"end": 2785,
											"name": "ADD"
										},
										{
											"begin": 2769,
											"end": 2785,
											"name": "SWAP1"
										},
										{
											"begin": 2769,
											"end": 2785,
											"name": "DUP2"
										},
										{
											"begin": 2769,
											"end": 2785,
											"name": "MSTORE"
										},
										{
											"begin": 2769,
											"end": 2785,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2769,
											"end": 2785,
											"name": "ADD"
										},
										{
											"begin": 2769,
											"end": 2785,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2769,
											"end": 2785,
											"name": "KECCAK256"
										},
										{
											"begin": 2769,
											"end": 2797,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2769,
											"end": 2797,
											"name": "ADD"
										},
										{
											"begin": 2769,
											"end": 2797,
											"name": "PUSH",
											"value": "15"
										},
										{
											"begin": 2769,
											"end": 2804,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2769,
											"end": 2804,
											"name": "EXP"
										},
										{
											"begin": 2769,
											"end": 2804,
											"name": "DUP2"
										},
										{
											"begin": 2769,
											"end": 2804,
											"name": "SLOAD"
										},
										{
											"begin": 2769,
											"end": 2804,
											"name": "DUP2"
										},
										{
											"begin": 2769,
											"end": 2804,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 2769,
											"end": 2804,
											"name": "MUL"
										},
										{
											"begin": 2769,
											"end": 2804,
											"name": "NOT"
										},
										{
											"begin": 2769,
											"end": 2804,
											"name": "AND"
										},
										{
											"begin": 2769,
											"end": 2804,
											"name": "SWAP1"
										},
										{
											"begin": 2769,
											"end": 2804,
											"name": "DUP4"
										},
										{
											"begin": 2769,
											"end": 2804,
											"name": "ISZERO"
										},
										{
											"begin": 2769,
											"end": 2804,
											"name": "ISZERO"
										},
										{
											"begin": 2769,
											"end": 2804,
											"name": "MUL"
										},
										{
											"begin": 2769,
											"end": 2804,
											"name": "OR"
										},
										{
											"begin": 2769,
											"end": 2804,
											"name": "SWAP1"
										},
										{
											"begin": 2769,
											"end": 2804,
											"name": "SSTORE"
										},
										{
											"begin": 2769,
											"end": 2804,
											"name": "POP"
										},
										{
											"begin": 2863,
											"end": 2872,
											"name": "DUP2"
										},
										{
											"begin": 2847,
											"end": 2920,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2847,
											"end": 2920,
											"name": "AND"
										},
										{
											"begin": 2847,
											"end": 2920,
											"name": "PUSH",
											"value": "BAFB199A9909A7BE73CEEAF6193DC9EA119EF469120D998D5F550140C0B13B54"
										},
										{
											"begin": 2874,
											"end": 2879,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2874,
											"end": 2890,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2880,
											"end": 2889,
											"name": "DUP6"
										},
										{
											"begin": 2874,
											"end": 2890,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2874,
											"end": 2890,
											"name": "AND"
										},
										{
											"begin": 2874,
											"end": 2890,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2874,
											"end": 2890,
											"name": "AND"
										},
										{
											"begin": 2874,
											"end": 2890,
											"name": "DUP2"
										},
										{
											"begin": 2874,
											"end": 2890,
											"name": "MSTORE"
										},
										{
											"begin": 2874,
											"end": 2890,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2874,
											"end": 2890,
											"name": "ADD"
										},
										{
											"begin": 2874,
											"end": 2890,
											"name": "SWAP1"
										},
										{
											"begin": 2874,
											"end": 2890,
											"name": "DUP2"
										},
										{
											"begin": 2874,
											"end": 2890,
											"name": "MSTORE"
										},
										{
											"begin": 2874,
											"end": 2890,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2874,
											"end": 2890,
											"name": "ADD"
										},
										{
											"begin": 2874,
											"end": 2890,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2874,
											"end": 2890,
											"name": "KECCAK256"
										},
										{
											"begin": 2874,
											"end": 2902,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2874,
											"end": 2902,
											"name": "ADD"
										},
										{
											"begin": 2874,
											"end": 2902,
											"name": "PUSH",
											"value": "15"
										},
										{
											"begin": 2874,
											"end": 2902,
											"name": "SWAP1"
										},
										{
											"begin": 2874,
											"end": 2902,
											"name": "SLOAD"
										},
										{
											"begin": 2874,
											"end": 2902,
											"name": "SWAP1"
										},
										{
											"begin": 2874,
											"end": 2902,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2874,
											"end": 2902,
											"name": "EXP"
										},
										{
											"begin": 2874,
											"end": 2902,
											"name": "SWAP1"
										},
										{
											"begin": 2874,
											"end": 2902,
											"name": "DIV"
										},
										{
											"begin": 2874,
											"end": 2902,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 2874,
											"end": 2902,
											"name": "AND"
										},
										{
											"begin": 2904,
											"end": 2919,
											"name": "TIMESTAMP"
										},
										{
											"begin": 2847,
											"end": 2920,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2847,
											"end": 2920,
											"name": "MLOAD"
										},
										{
											"begin": 2847,
											"end": 2920,
											"name": "DUP1"
										},
										{
											"begin": 2847,
											"end": 2920,
											"name": "DUP4"
										},
										{
											"begin": 2847,
											"end": 2920,
											"name": "ISZERO"
										},
										{
											"begin": 2847,
											"end": 2920,
											"name": "ISZERO"
										},
										{
											"begin": 2847,
											"end": 2920,
											"name": "ISZERO"
										},
										{
											"begin": 2847,
											"end": 2920,
											"name": "ISZERO"
										},
										{
											"begin": 2847,
											"end": 2920,
											"name": "DUP2"
										},
										{
											"begin": 2847,
											"end": 2920,
											"name": "MSTORE"
										},
										{
											"begin": 2847,
											"end": 2920,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2847,
											"end": 2920,
											"name": "ADD"
										},
										{
											"begin": 2847,
											"end": 2920,
											"name": "DUP3"
										},
										{
											"begin": 2847,
											"end": 2920,
											"name": "DUP2"
										},
										{
											"begin": 2847,
											"end": 2920,
											"name": "MSTORE"
										},
										{
											"begin": 2847,
											"end": 2920,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2847,
											"end": 2920,
											"name": "ADD"
										},
										{
											"begin": 2847,
											"end": 2920,
											"name": "SWAP3"
										},
										{
											"begin": 2847,
											"end": 2920,
											"name": "POP"
										},
										{
											"begin": 2847,
											"end": 2920,
											"name": "POP"
										},
										{
											"begin": 2847,
											"end": 2920,
											"name": "POP"
										},
										{
											"begin": 2847,
											"end": 2920,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2847,
											"end": 2920,
											"name": "MLOAD"
										},
										{
											"begin": 2847,
											"end": 2920,
											"name": "DUP1"
										},
										{
											"begin": 2847,
											"end": 2920,
											"name": "SWAP2"
										},
										{
											"begin": 2847,
											"end": 2920,
											"name": "SUB"
										},
										{
											"begin": 2847,
											"end": 2920,
											"name": "SWAP1"
										},
										{
											"begin": 2847,
											"end": 2920,
											"name": "LOG2"
										},
										{
											"begin": 2940,
											"end": 2945,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2940,
											"end": 2956,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2946,
											"end": 2955,
											"name": "DUP4"
										},
										{
											"begin": 2940,
											"end": 2956,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2940,
											"end": 2956,
											"name": "AND"
										},
										{
											"begin": 2940,
											"end": 2956,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2940,
											"end": 2956,
											"name": "AND"
										},
										{
											"begin": 2940,
											"end": 2956,
											"name": "DUP2"
										},
										{
											"begin": 2940,
											"end": 2956,
											"name": "MSTORE"
										},
										{
											"begin": 2940,
											"end": 2956,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2940,
											"end": 2956,
											"name": "ADD"
										},
										{
											"begin": 2940,
											"end": 2956,
											"name": "SWAP1"
										},
										{
											"begin": 2940,
											"end": 2956,
											"name": "DUP2"
										},
										{
											"begin": 2940,
											"end": 2956,
											"name": "MSTORE"
										},
										{
											"begin": 2940,
											"end": 2956,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2940,
											"end": 2956,
											"name": "ADD"
										},
										{
											"begin": 2940,
											"end": 2956,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2940,
											"end": 2956,
											"name": "KECCAK256"
										},
										{
											"begin": 2940,
											"end": 2968,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2940,
											"end": 2968,
											"name": "ADD"
										},
										{
											"begin": 2940,
											"end": 2968,
											"name": "PUSH",
											"value": "15"
										},
										{
											"begin": 2940,
											"end": 2968,
											"name": "SWAP1"
										},
										{
											"begin": 2940,
											"end": 2968,
											"name": "SLOAD"
										},
										{
											"begin": 2940,
											"end": 2968,
											"name": "SWAP1"
										},
										{
											"begin": 2940,
											"end": 2968,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2940,
											"end": 2968,
											"name": "EXP"
										},
										{
											"begin": 2940,
											"end": 2968,
											"name": "SWAP1"
										},
										{
											"begin": 2940,
											"end": 2968,
											"name": "DIV"
										},
										{
											"begin": 2940,
											"end": 2968,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 2940,
											"end": 2968,
											"name": "AND"
										},
										{
											"begin": 2933,
											"end": 2968,
											"name": "SWAP1"
										},
										{
											"begin": 2933,
											"end": 2968,
											"name": "POP"
										},
										{
											"begin": 2653,
											"end": 2976,
											"name": "SWAP2"
										},
										{
											"begin": 2653,
											"end": 2976,
											"name": "SWAP1"
										},
										{
											"begin": 2653,
											"end": 2976,
											"name": "POP"
										},
										{
											"begin": 2653,
											"end": 2976,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1223,
											"end": 2430,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 1223,
											"end": 2430,
											"name": "JUMPDEST"
										},
										{
											"begin": 1348,
											"end": 1363,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1894,
											"end": 1907,
											"name": "DUP1"
										},
										{
											"begin": 1466,
											"end": 1471,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1436,
											"end": 1471,
											"name": "ISZERO"
										},
										{
											"begin": 1436,
											"end": 1471,
											"name": "ISZERO"
										},
										{
											"begin": 1436,
											"end": 1441,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1436,
											"end": 1453,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1442,
											"end": 1452,
											"name": "CALLER"
										},
										{
											"begin": 1436,
											"end": 1453,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1436,
											"end": 1453,
											"name": "AND"
										},
										{
											"begin": 1436,
											"end": 1453,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1436,
											"end": 1453,
											"name": "AND"
										},
										{
											"begin": 1436,
											"end": 1453,
											"name": "DUP2"
										},
										{
											"begin": 1436,
											"end": 1453,
											"name": "MSTORE"
										},
										{
											"begin": 1436,
											"end": 1453,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1436,
											"end": 1453,
											"name": "ADD"
										},
										{
											"begin": 1436,
											"end": 1453,
											"name": "SWAP1"
										},
										{
											"begin": 1436,
											"end": 1453,
											"name": "DUP2"
										},
										{
											"begin": 1436,
											"end": 1453,
											"name": "MSTORE"
										},
										{
											"begin": 1436,
											"end": 1453,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1436,
											"end": 1453,
											"name": "ADD"
										},
										{
											"begin": 1436,
											"end": 1453,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1436,
											"end": 1453,
											"name": "KECCAK256"
										},
										{
											"begin": 1436,
											"end": 1462,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1436,
											"end": 1462,
											"name": "ADD"
										},
										{
											"begin": 1436,
											"end": 1462,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1436,
											"end": 1462,
											"name": "SWAP1"
										},
										{
											"begin": 1436,
											"end": 1462,
											"name": "SLOAD"
										},
										{
											"begin": 1436,
											"end": 1462,
											"name": "SWAP1"
										},
										{
											"begin": 1436,
											"end": 1462,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1436,
											"end": 1462,
											"name": "EXP"
										},
										{
											"begin": 1436,
											"end": 1462,
											"name": "SWAP1"
										},
										{
											"begin": 1436,
											"end": 1462,
											"name": "DIV"
										},
										{
											"begin": 1436,
											"end": 1462,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1436,
											"end": 1462,
											"name": "AND"
										},
										{
											"begin": 1436,
											"end": 1471,
											"name": "ISZERO"
										},
										{
											"begin": 1436,
											"end": 1471,
											"name": "ISZERO"
										},
										{
											"begin": 1436,
											"end": 1471,
											"name": "EQ"
										},
										{
											"begin": 1428,
											"end": 1472,
											"name": "ISZERO"
										},
										{
											"begin": 1428,
											"end": 1472,
											"name": "ISZERO"
										},
										{
											"begin": 1428,
											"end": 1472,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 1428,
											"end": 1472,
											"name": "JUMPI"
										},
										{
											"begin": 1428,
											"end": 1472,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1428,
											"end": 1472,
											"name": "DUP1"
										},
										{
											"begin": 1428,
											"end": 1472,
											"name": "REVERT"
										},
										{
											"begin": 1428,
											"end": 1472,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 1428,
											"end": 1472,
											"name": "JUMPDEST"
										},
										{
											"begin": 1582,
											"end": 1587,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1549,
											"end": 1587,
											"name": "ISZERO"
										},
										{
											"begin": 1549,
											"end": 1587,
											"name": "ISZERO"
										},
										{
											"begin": 1549,
											"end": 1554,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1549,
											"end": 1566,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1555,
											"end": 1565,
											"name": "CALLER"
										},
										{
											"begin": 1549,
											"end": 1566,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1549,
											"end": 1566,
											"name": "AND"
										},
										{
											"begin": 1549,
											"end": 1566,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1549,
											"end": 1566,
											"name": "AND"
										},
										{
											"begin": 1549,
											"end": 1566,
											"name": "DUP2"
										},
										{
											"begin": 1549,
											"end": 1566,
											"name": "MSTORE"
										},
										{
											"begin": 1549,
											"end": 1566,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1549,
											"end": 1566,
											"name": "ADD"
										},
										{
											"begin": 1549,
											"end": 1566,
											"name": "SWAP1"
										},
										{
											"begin": 1549,
											"end": 1566,
											"name": "DUP2"
										},
										{
											"begin": 1549,
											"end": 1566,
											"name": "MSTORE"
										},
										{
											"begin": 1549,
											"end": 1566,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1549,
											"end": 1566,
											"name": "ADD"
										},
										{
											"begin": 1549,
											"end": 1566,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1549,
											"end": 1566,
											"name": "KECCAK256"
										},
										{
											"begin": 1549,
											"end": 1578,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1549,
											"end": 1578,
											"name": "ADD"
										},
										{
											"begin": 1549,
											"end": 1578,
											"name": "PUSH",
											"value": "15"
										},
										{
											"begin": 1549,
											"end": 1578,
											"name": "SWAP1"
										},
										{
											"begin": 1549,
											"end": 1578,
											"name": "SLOAD"
										},
										{
											"begin": 1549,
											"end": 1578,
											"name": "SWAP1"
										},
										{
											"begin": 1549,
											"end": 1578,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1549,
											"end": 1578,
											"name": "EXP"
										},
										{
											"begin": 1549,
											"end": 1578,
											"name": "SWAP1"
										},
										{
											"begin": 1549,
											"end": 1578,
											"name": "DIV"
										},
										{
											"begin": 1549,
											"end": 1578,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1549,
											"end": 1578,
											"name": "AND"
										},
										{
											"begin": 1549,
											"end": 1587,
											"name": "ISZERO"
										},
										{
											"begin": 1549,
											"end": 1587,
											"name": "ISZERO"
										},
										{
											"begin": 1549,
											"end": 1587,
											"name": "EQ"
										},
										{
											"begin": 1541,
											"end": 1588,
											"name": "ISZERO"
										},
										{
											"begin": 1541,
											"end": 1588,
											"name": "ISZERO"
										},
										{
											"begin": 1541,
											"end": 1588,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 1541,
											"end": 1588,
											"name": "JUMPI"
										},
										{
											"begin": 1541,
											"end": 1588,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1541,
											"end": 1588,
											"name": "DUP1"
										},
										{
											"begin": 1541,
											"end": 1588,
											"name": "REVERT"
										},
										{
											"begin": 1541,
											"end": 1588,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 1541,
											"end": 1588,
											"name": "JUMPDEST"
										},
										{
											"begin": 1701,
											"end": 1702,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1667,
											"end": 1672,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1667,
											"end": 1684,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1673,
											"end": 1683,
											"name": "CALLER"
										},
										{
											"begin": 1667,
											"end": 1684,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1667,
											"end": 1684,
											"name": "AND"
										},
										{
											"begin": 1667,
											"end": 1684,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1667,
											"end": 1684,
											"name": "AND"
										},
										{
											"begin": 1667,
											"end": 1684,
											"name": "DUP2"
										},
										{
											"begin": 1667,
											"end": 1684,
											"name": "MSTORE"
										},
										{
											"begin": 1667,
											"end": 1684,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1667,
											"end": 1684,
											"name": "ADD"
										},
										{
											"begin": 1667,
											"end": 1684,
											"name": "SWAP1"
										},
										{
											"begin": 1667,
											"end": 1684,
											"name": "DUP2"
										},
										{
											"begin": 1667,
											"end": 1684,
											"name": "MSTORE"
										},
										{
											"begin": 1667,
											"end": 1684,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1667,
											"end": 1684,
											"name": "ADD"
										},
										{
											"begin": 1667,
											"end": 1684,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1667,
											"end": 1684,
											"name": "KECCAK256"
										},
										{
											"begin": 1667,
											"end": 1697,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1667,
											"end": 1697,
											"name": "ADD"
										},
										{
											"begin": 1667,
											"end": 1697,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1667,
											"end": 1697,
											"name": "SWAP1"
										},
										{
											"begin": 1667,
											"end": 1697,
											"name": "SLOAD"
										},
										{
											"begin": 1667,
											"end": 1697,
											"name": "SWAP1"
										},
										{
											"begin": 1667,
											"end": 1697,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1667,
											"end": 1697,
											"name": "EXP"
										},
										{
											"begin": 1667,
											"end": 1697,
											"name": "SWAP1"
										},
										{
											"begin": 1667,
											"end": 1697,
											"name": "DIV"
										},
										{
											"begin": 1667,
											"end": 1697,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1667,
											"end": 1697,
											"name": "AND"
										},
										{
											"begin": 1667,
											"end": 1702,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1667,
											"end": 1702,
											"name": "AND"
										},
										{
											"begin": 1667,
											"end": 1702,
											"name": "EQ"
										},
										{
											"begin": 1660,
											"end": 1703,
											"name": "ISZERO"
										},
										{
											"begin": 1660,
											"end": 1703,
											"name": "ISZERO"
										},
										{
											"begin": 1660,
											"end": 1703,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 1660,
											"end": 1703,
											"name": "JUMPI"
										},
										{
											"begin": 1660,
											"end": 1703,
											"name": "INVALID"
										},
										{
											"begin": 1660,
											"end": 1703,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 1660,
											"end": 1703,
											"name": "JUMPDEST"
										},
										{
											"begin": 1809,
											"end": 1813,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1780,
											"end": 1785,
											"name": "DUP1"
										},
										{
											"begin": 1780,
											"end": 1797,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1786,
											"end": 1796,
											"name": "CALLER"
										},
										{
											"begin": 1780,
											"end": 1797,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1780,
											"end": 1797,
											"name": "AND"
										},
										{
											"begin": 1780,
											"end": 1797,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1780,
											"end": 1797,
											"name": "AND"
										},
										{
											"begin": 1780,
											"end": 1797,
											"name": "DUP2"
										},
										{
											"begin": 1780,
											"end": 1797,
											"name": "MSTORE"
										},
										{
											"begin": 1780,
											"end": 1797,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1780,
											"end": 1797,
											"name": "ADD"
										},
										{
											"begin": 1780,
											"end": 1797,
											"name": "SWAP1"
										},
										{
											"begin": 1780,
											"end": 1797,
											"name": "DUP2"
										},
										{
											"begin": 1780,
											"end": 1797,
											"name": "MSTORE"
										},
										{
											"begin": 1780,
											"end": 1797,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1780,
											"end": 1797,
											"name": "ADD"
										},
										{
											"begin": 1780,
											"end": 1797,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1780,
											"end": 1797,
											"name": "KECCAK256"
										},
										{
											"begin": 1780,
											"end": 1806,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1780,
											"end": 1806,
											"name": "ADD"
										},
										{
											"begin": 1780,
											"end": 1806,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1780,
											"end": 1813,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1780,
											"end": 1813,
											"name": "EXP"
										},
										{
											"begin": 1780,
											"end": 1813,
											"name": "DUP2"
										},
										{
											"begin": 1780,
											"end": 1813,
											"name": "SLOAD"
										},
										{
											"begin": 1780,
											"end": 1813,
											"name": "DUP2"
										},
										{
											"begin": 1780,
											"end": 1813,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1780,
											"end": 1813,
											"name": "MUL"
										},
										{
											"begin": 1780,
											"end": 1813,
											"name": "NOT"
										},
										{
											"begin": 1780,
											"end": 1813,
											"name": "AND"
										},
										{
											"begin": 1780,
											"end": 1813,
											"name": "SWAP1"
										},
										{
											"begin": 1780,
											"end": 1813,
											"name": "DUP4"
										},
										{
											"begin": 1780,
											"end": 1813,
											"name": "ISZERO"
										},
										{
											"begin": 1780,
											"end": 1813,
											"name": "ISZERO"
										},
										{
											"begin": 1780,
											"end": 1813,
											"name": "MUL"
										},
										{
											"begin": 1780,
											"end": 1813,
											"name": "OR"
										},
										{
											"begin": 1780,
											"end": 1813,
											"name": "SWAP1"
										},
										{
											"begin": 1780,
											"end": 1813,
											"name": "SSTORE"
										},
										{
											"begin": 1780,
											"end": 1813,
											"name": "POP"
										},
										{
											"begin": 1921,
											"end": 1936,
											"name": "DUP6"
										},
										{
											"begin": 1938,
											"end": 1953,
											"name": "DUP6"
										},
										{
											"begin": 1955,
											"end": 1963,
											"name": "DUP6"
										},
										{
											"begin": 1965,
											"end": 1982,
											"name": "DUP6"
										},
										{
											"begin": 1910,
											"end": 1983,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 1910,
											"end": 1983,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 1910,
											"end": 1983,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1910,
											"end": 1983,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 1910,
											"end": 1983,
											"name": "JUMPDEST"
										},
										{
											"begin": 1910,
											"end": 1983,
											"name": "DUP1"
										},
										{
											"begin": 1910,
											"end": 1983,
											"name": "DUP6"
										},
										{
											"begin": 1910,
											"end": 1983,
											"name": "DUP2"
										},
										{
											"begin": 1910,
											"end": 1983,
											"name": "MSTORE"
										},
										{
											"begin": 1910,
											"end": 1983,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1910,
											"end": 1983,
											"name": "ADD"
										},
										{
											"begin": 1910,
											"end": 1983,
											"name": "DUP5"
										},
										{
											"begin": 1910,
											"end": 1983,
											"name": "DUP2"
										},
										{
											"begin": 1910,
											"end": 1983,
											"name": "MSTORE"
										},
										{
											"begin": 1910,
											"end": 1983,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1910,
											"end": 1983,
											"name": "ADD"
										},
										{
											"begin": 1910,
											"end": 1983,
											"name": "DUP4"
										},
										{
											"begin": 1910,
											"end": 1983,
											"name": "DUP2"
										},
										{
											"begin": 1910,
											"end": 1983,
											"name": "MSTORE"
										},
										{
											"begin": 1910,
											"end": 1983,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1910,
											"end": 1983,
											"name": "ADD"
										},
										{
											"begin": 1910,
											"end": 1983,
											"name": "DUP3"
										},
										{
											"begin": 1910,
											"end": 1983,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1910,
											"end": 1983,
											"name": "NOT"
										},
										{
											"begin": 1910,
											"end": 1983,
											"name": "AND"
										},
										{
											"begin": 1910,
											"end": 1983,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1910,
											"end": 1983,
											"name": "NOT"
										},
										{
											"begin": 1910,
											"end": 1983,
											"name": "AND"
										},
										{
											"begin": 1910,
											"end": 1983,
											"name": "DUP2"
										},
										{
											"begin": 1910,
											"end": 1983,
											"name": "MSTORE"
										},
										{
											"begin": 1910,
											"end": 1983,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1910,
											"end": 1983,
											"name": "ADD"
										},
										{
											"begin": 1910,
											"end": 1983,
											"name": "SWAP5"
										},
										{
											"begin": 1910,
											"end": 1983,
											"name": "POP"
										},
										{
											"begin": 1910,
											"end": 1983,
											"name": "POP"
										},
										{
											"begin": 1910,
											"end": 1983,
											"name": "POP"
										},
										{
											"begin": 1910,
											"end": 1983,
											"name": "POP"
										},
										{
											"begin": 1910,
											"end": 1983,
											"name": "POP"
										},
										{
											"begin": 1910,
											"end": 1983,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1910,
											"end": 1983,
											"name": "MLOAD"
										},
										{
											"begin": 1910,
											"end": 1983,
											"name": "DUP1"
										},
										{
											"begin": 1910,
											"end": 1983,
											"name": "SWAP2"
										},
										{
											"begin": 1910,
											"end": 1983,
											"name": "SUB"
										},
										{
											"begin": 1910,
											"end": 1983,
											"name": "SWAP1"
										},
										{
											"begin": 1910,
											"end": 1983,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1910,
											"end": 1983,
											"name": "CREATE"
										},
										{
											"begin": 1910,
											"end": 1983,
											"name": "DUP1"
										},
										{
											"begin": 1910,
											"end": 1983,
											"name": "ISZERO"
										},
										{
											"begin": 1910,
											"end": 1983,
											"name": "ISZERO"
										},
										{
											"begin": 1910,
											"end": 1983,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 1910,
											"end": 1983,
											"name": "JUMPI"
										},
										{
											"begin": 1910,
											"end": 1983,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1910,
											"end": 1983,
											"name": "DUP1"
										},
										{
											"begin": 1910,
											"end": 1983,
											"name": "REVERT"
										},
										{
											"begin": 1910,
											"end": 1983,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 1910,
											"end": 1983,
											"name": "JUMPDEST"
										},
										{
											"begin": 1894,
											"end": 1983,
											"name": "SWAP1"
										},
										{
											"begin": 1894,
											"end": 1983,
											"name": "POP"
										},
										{
											"begin": 2080,
											"end": 2086,
											"name": "DUP1"
										},
										{
											"begin": 2047,
											"end": 2052,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2047,
											"end": 2064,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2063,
											"name": "CALLER"
										},
										{
											"begin": 2047,
											"end": 2064,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2047,
											"end": 2064,
											"name": "AND"
										},
										{
											"begin": 2047,
											"end": 2064,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2047,
											"end": 2064,
											"name": "AND"
										},
										{
											"begin": 2047,
											"end": 2064,
											"name": "DUP2"
										},
										{
											"begin": 2047,
											"end": 2064,
											"name": "MSTORE"
										},
										{
											"begin": 2047,
											"end": 2064,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2047,
											"end": 2064,
											"name": "ADD"
										},
										{
											"begin": 2047,
											"end": 2064,
											"name": "SWAP1"
										},
										{
											"begin": 2047,
											"end": 2064,
											"name": "DUP2"
										},
										{
											"begin": 2047,
											"end": 2064,
											"name": "MSTORE"
										},
										{
											"begin": 2047,
											"end": 2064,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2047,
											"end": 2064,
											"name": "ADD"
										},
										{
											"begin": 2047,
											"end": 2064,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2047,
											"end": 2064,
											"name": "KECCAK256"
										},
										{
											"begin": 2047,
											"end": 2077,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2047,
											"end": 2077,
											"name": "ADD"
										},
										{
											"begin": 2047,
											"end": 2077,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2047,
											"end": 2086,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2047,
											"end": 2086,
											"name": "EXP"
										},
										{
											"begin": 2047,
											"end": 2086,
											"name": "DUP2"
										},
										{
											"begin": 2047,
											"end": 2086,
											"name": "SLOAD"
										},
										{
											"begin": 2047,
											"end": 2086,
											"name": "DUP2"
										},
										{
											"begin": 2047,
											"end": 2086,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2047,
											"end": 2086,
											"name": "MUL"
										},
										{
											"begin": 2047,
											"end": 2086,
											"name": "NOT"
										},
										{
											"begin": 2047,
											"end": 2086,
											"name": "AND"
										},
										{
											"begin": 2047,
											"end": 2086,
											"name": "SWAP1"
										},
										{
											"begin": 2047,
											"end": 2086,
											"name": "DUP4"
										},
										{
											"begin": 2047,
											"end": 2086,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2047,
											"end": 2086,
											"name": "AND"
										},
										{
											"begin": 2047,
											"end": 2086,
											"name": "MUL"
										},
										{
											"begin": 2047,
											"end": 2086,
											"name": "OR"
										},
										{
											"begin": 2047,
											"end": 2086,
											"name": "SWAP1"
										},
										{
											"begin": 2047,
											"end": 2086,
											"name": "SSTORE"
										},
										{
											"begin": 2047,
											"end": 2086,
											"name": "POP"
										},
										{
											"begin": 2163,
											"end": 2170,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2163,
											"end": 2183,
											"name": "DUP1"
										},
										{
											"begin": 2163,
											"end": 2183,
											"name": "SLOAD"
										},
										{
											"begin": 2163,
											"end": 2183,
											"name": "DUP1"
										},
										{
											"begin": 2163,
											"end": 2183,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2163,
											"end": 2183,
											"name": "ADD"
										},
										{
											"begin": 2163,
											"end": 2183,
											"name": "DUP3"
										},
										{
											"begin": 2163,
											"end": 2183,
											"name": "DUP2"
										},
										{
											"begin": 2163,
											"end": 2183,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 2163,
											"end": 2183,
											"name": "SWAP2"
										},
										{
											"begin": 2163,
											"end": 2183,
											"name": "SWAP1"
										},
										{
											"begin": 2163,
											"end": 2183,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 2163,
											"end": 2183,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2163,
											"end": 2183,
											"name": "tag",
											"value": "79"
										},
										{
											"begin": 2163,
											"end": 2183,
											"name": "JUMPDEST"
										},
										{
											"begin": 2163,
											"end": 2183,
											"name": "SWAP2"
										},
										{
											"begin": 2163,
											"end": 2183,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2163,
											"end": 2183,
											"name": "MSTORE"
										},
										{
											"begin": 2163,
											"end": 2183,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2163,
											"end": 2183,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2163,
											"end": 2183,
											"name": "KECCAK256"
										},
										{
											"begin": 2163,
											"end": 2183,
											"name": "SWAP1"
										},
										{
											"begin": 2163,
											"end": 2183,
											"name": "ADD"
										},
										{
											"begin": 2163,
											"end": 2183,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2176,
											"end": 2182,
											"name": "DUP4"
										},
										{
											"begin": 2163,
											"end": 2183,
											"name": "SWAP1"
										},
										{
											"begin": 2163,
											"end": 2183,
											"name": "SWAP2"
										},
										{
											"begin": 2163,
											"end": 2183,
											"name": "SWAP1"
										},
										{
											"begin": 2163,
											"end": 2183,
											"name": "SWAP2"
										},
										{
											"begin": 2163,
											"end": 2183,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2163,
											"end": 2183,
											"name": "EXP"
										},
										{
											"begin": 2163,
											"end": 2183,
											"name": "DUP2"
										},
										{
											"begin": 2163,
											"end": 2183,
											"name": "SLOAD"
										},
										{
											"begin": 2163,
											"end": 2183,
											"name": "DUP2"
										},
										{
											"begin": 2163,
											"end": 2183,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2163,
											"end": 2183,
											"name": "MUL"
										},
										{
											"begin": 2163,
											"end": 2183,
											"name": "NOT"
										},
										{
											"begin": 2163,
											"end": 2183,
											"name": "AND"
										},
										{
											"begin": 2163,
											"end": 2183,
											"name": "SWAP1"
										},
										{
											"begin": 2163,
											"end": 2183,
											"name": "DUP4"
										},
										{
											"begin": 2163,
											"end": 2183,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2163,
											"end": 2183,
											"name": "AND"
										},
										{
											"begin": 2163,
											"end": 2183,
											"name": "MUL"
										},
										{
											"begin": 2163,
											"end": 2183,
											"name": "OR"
										},
										{
											"begin": 2163,
											"end": 2183,
											"name": "SWAP1"
										},
										{
											"begin": 2163,
											"end": 2183,
											"name": "SSTORE"
										},
										{
											"begin": 2163,
											"end": 2183,
											"name": "POP"
										},
										{
											"begin": 2163,
											"end": 2183,
											"name": "POP"
										},
										{
											"begin": 2246,
											"end": 2251,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2246,
											"end": 2263,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2252,
											"end": 2262,
											"name": "CALLER"
										},
										{
											"begin": 2246,
											"end": 2263,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2246,
											"end": 2263,
											"name": "AND"
										},
										{
											"begin": 2246,
											"end": 2263,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2246,
											"end": 2263,
											"name": "AND"
										},
										{
											"begin": 2246,
											"end": 2263,
											"name": "DUP2"
										},
										{
											"begin": 2246,
											"end": 2263,
											"name": "MSTORE"
										},
										{
											"begin": 2246,
											"end": 2263,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2246,
											"end": 2263,
											"name": "ADD"
										},
										{
											"begin": 2246,
											"end": 2263,
											"name": "SWAP1"
										},
										{
											"begin": 2246,
											"end": 2263,
											"name": "DUP2"
										},
										{
											"begin": 2246,
											"end": 2263,
											"name": "MSTORE"
										},
										{
											"begin": 2246,
											"end": 2263,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2246,
											"end": 2263,
											"name": "ADD"
										},
										{
											"begin": 2246,
											"end": 2263,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2246,
											"end": 2263,
											"name": "KECCAK256"
										},
										{
											"begin": 2246,
											"end": 2274,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2246,
											"end": 2274,
											"name": "ADD"
										},
										{
											"begin": 2246,
											"end": 2287,
											"name": "DUP1"
										},
										{
											"begin": 2246,
											"end": 2287,
											"name": "SLOAD"
										},
										{
											"begin": 2246,
											"end": 2287,
											"name": "DUP1"
										},
										{
											"begin": 2246,
											"end": 2287,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2246,
											"end": 2287,
											"name": "ADD"
										},
										{
											"begin": 2246,
											"end": 2287,
											"name": "DUP3"
										},
										{
											"begin": 2246,
											"end": 2287,
											"name": "DUP2"
										},
										{
											"begin": 2246,
											"end": 2287,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 2246,
											"end": 2287,
											"name": "SWAP2"
										},
										{
											"begin": 2246,
											"end": 2287,
											"name": "SWAP1"
										},
										{
											"begin": 2246,
											"end": 2287,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 2246,
											"end": 2287,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2246,
											"end": 2287,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 2246,
											"end": 2287,
											"name": "JUMPDEST"
										},
										{
											"begin": 2246,
											"end": 2287,
											"name": "SWAP2"
										},
										{
											"begin": 2246,
											"end": 2287,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2246,
											"end": 2287,
											"name": "MSTORE"
										},
										{
											"begin": 2246,
											"end": 2287,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2246,
											"end": 2287,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2246,
											"end": 2287,
											"name": "KECCAK256"
										},
										{
											"begin": 2246,
											"end": 2287,
											"name": "SWAP1"
										},
										{
											"begin": 2246,
											"end": 2287,
											"name": "ADD"
										},
										{
											"begin": 2246,
											"end": 2287,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2280,
											"end": 2286,
											"name": "DUP4"
										},
										{
											"begin": 2246,
											"end": 2287,
											"name": "SWAP1"
										},
										{
											"begin": 2246,
											"end": 2287,
											"name": "SWAP2"
										},
										{
											"begin": 2246,
											"end": 2287,
											"name": "SWAP1"
										},
										{
											"begin": 2246,
											"end": 2287,
											"name": "SWAP2"
										},
										{
											"begin": 2246,
											"end": 2287,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2246,
											"end": 2287,
											"name": "EXP"
										},
										{
											"begin": 2246,
											"end": 2287,
											"name": "DUP2"
										},
										{
											"begin": 2246,
											"end": 2287,
											"name": "SLOAD"
										},
										{
											"begin": 2246,
											"end": 2287,
											"name": "DUP2"
										},
										{
											"begin": 2246,
											"end": 2287,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2246,
											"end": 2287,
											"name": "MUL"
										},
										{
											"begin": 2246,
											"end": 2287,
											"name": "NOT"
										},
										{
											"begin": 2246,
											"end": 2287,
											"name": "AND"
										},
										{
											"begin": 2246,
											"end": 2287,
											"name": "SWAP1"
										},
										{
											"begin": 2246,
											"end": 2287,
											"name": "DUP4"
										},
										{
											"begin": 2246,
											"end": 2287,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2246,
											"end": 2287,
											"name": "AND"
										},
										{
											"begin": 2246,
											"end": 2287,
											"name": "MUL"
										},
										{
											"begin": 2246,
											"end": 2287,
											"name": "OR"
										},
										{
											"begin": 2246,
											"end": 2287,
											"name": "SWAP1"
										},
										{
											"begin": 2246,
											"end": 2287,
											"name": "SSTORE"
										},
										{
											"begin": 2246,
											"end": 2287,
											"name": "POP"
										},
										{
											"begin": 2246,
											"end": 2287,
											"name": "POP"
										},
										{
											"begin": 2380,
											"end": 2395,
											"name": "TIMESTAMP"
										},
										{
											"begin": 2368,
											"end": 2378,
											"name": "CALLER"
										},
										{
											"begin": 2343,
											"end": 2396,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2343,
											"end": 2396,
											"name": "AND"
										},
										{
											"begin": 2360,
											"end": 2366,
											"name": "DUP3"
										},
										{
											"begin": 2343,
											"end": 2396,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2343,
											"end": 2396,
											"name": "AND"
										},
										{
											"begin": 2343,
											"end": 2396,
											"name": "PUSH",
											"value": "A0C75B76492543C8EAFDC7E35272287BD6F229DCF0F6C22429343044718C5108"
										},
										{
											"begin": 2343,
											"end": 2396,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2343,
											"end": 2396,
											"name": "MLOAD"
										},
										{
											"begin": 2343,
											"end": 2396,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2343,
											"end": 2396,
											"name": "MLOAD"
										},
										{
											"begin": 2343,
											"end": 2396,
											"name": "DUP1"
										},
										{
											"begin": 2343,
											"end": 2396,
											"name": "SWAP2"
										},
										{
											"begin": 2343,
											"end": 2396,
											"name": "SUB"
										},
										{
											"begin": 2343,
											"end": 2396,
											"name": "SWAP1"
										},
										{
											"begin": 2343,
											"end": 2396,
											"name": "LOG4"
										},
										{
											"begin": 2416,
											"end": 2422,
											"name": "DUP1"
										},
										{
											"begin": 2409,
											"end": 2422,
											"name": "SWAP2"
										},
										{
											"begin": 2409,
											"end": 2422,
											"name": "POP"
										},
										{
											"begin": 1223,
											"end": 2430,
											"name": "POP"
										},
										{
											"begin": 1223,
											"end": 2430,
											"name": "SWAP5"
										},
										{
											"begin": 1223,
											"end": 2430,
											"name": "SWAP4"
										},
										{
											"begin": 1223,
											"end": 2430,
											"name": "POP"
										},
										{
											"begin": 1223,
											"end": 2430,
											"name": "POP"
										},
										{
											"begin": 1223,
											"end": 2430,
											"name": "POP"
										},
										{
											"begin": 1223,
											"end": 2430,
											"name": "POP"
										},
										{
											"begin": 1223,
											"end": 2430,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "JUMPDEST"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "DUP1"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "SWAP1"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "SLOAD"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "SWAP1"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "EXP"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "SWAP1"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "DIV"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "AND"
										},
										{
											"begin": 218,
											"end": 237,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 218,
											"end": 237,
											"name": "AND"
										},
										{
											"begin": 218,
											"end": 228,
											"name": "CALLER"
										},
										{
											"begin": 218,
											"end": 237,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 218,
											"end": 237,
											"name": "AND"
										},
										{
											"begin": 218,
											"end": 237,
											"name": "EQ"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "ISZERO"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "ISZERO"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "JUMPI"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "DUP1"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "REVERT"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "JUMPDEST"
										},
										{
											"begin": 322,
											"end": 332,
											"name": "DUP1"
										},
										{
											"begin": 309,
											"end": 333,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 309,
											"end": 333,
											"name": "AND"
										},
										{
											"begin": 309,
											"end": 333,
											"name": "SELFDESTRUCT"
										},
										{
											"begin": 2984,
											"end": 3293,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 2984,
											"end": 3293,
											"name": "JUMPDEST"
										},
										{
											"begin": 3122,
											"end": 3135,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "DUP1"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "SWAP1"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "SLOAD"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "SWAP1"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "EXP"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "SWAP1"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "DIV"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "AND"
										},
										{
											"begin": 218,
											"end": 237,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 218,
											"end": 237,
											"name": "AND"
										},
										{
											"begin": 218,
											"end": 228,
											"name": "CALLER"
										},
										{
											"begin": 218,
											"end": 237,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 218,
											"end": 237,
											"name": "AND"
										},
										{
											"begin": 218,
											"end": 237,
											"name": "EQ"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "ISZERO"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "ISZERO"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "JUMPI"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "DUP1"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "REVERT"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "tag",
											"value": "88"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "JUMPDEST"
										},
										{
											"begin": 3145,
											"end": 3152,
											"name": "DUP3"
										},
										{
											"begin": 3122,
											"end": 3153,
											"name": "SWAP1"
										},
										{
											"begin": 3122,
											"end": 3153,
											"name": "POP"
										},
										{
											"begin": 3164,
											"end": 3170,
											"name": "DUP1"
										},
										{
											"begin": 3164,
											"end": 3182,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3164,
											"end": 3182,
											"name": "AND"
										},
										{
											"begin": 3164,
											"end": 3182,
											"name": "PUSH",
											"value": "268F1153"
										},
										{
											"begin": 3183,
											"end": 3188,
											"name": "DUP4"
										},
										{
											"begin": 3164,
											"end": 3189,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3164,
											"end": 3189,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3164,
											"end": 3189,
											"name": "MLOAD"
										},
										{
											"begin": 3164,
											"end": 3189,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3164,
											"end": 3189,
											"name": "ADD"
										},
										{
											"begin": 3164,
											"end": 3189,
											"name": "MSTORE"
										},
										{
											"begin": 3164,
											"end": 3189,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3164,
											"end": 3189,
											"name": "MLOAD"
										},
										{
											"begin": 3164,
											"end": 3189,
											"name": "DUP3"
										},
										{
											"begin": 3164,
											"end": 3189,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3164,
											"end": 3189,
											"name": "AND"
										},
										{
											"begin": 3164,
											"end": 3189,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3164,
											"end": 3189,
											"name": "MUL"
										},
										{
											"begin": 3164,
											"end": 3189,
											"name": "DUP2"
										},
										{
											"begin": 3164,
											"end": 3189,
											"name": "MSTORE"
										},
										{
											"begin": 3164,
											"end": 3189,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3164,
											"end": 3189,
											"name": "ADD"
										},
										{
											"begin": 3164,
											"end": 3189,
											"name": "DUP1"
										},
										{
											"begin": 3164,
											"end": 3189,
											"name": "DUP3"
										},
										{
											"begin": 3164,
											"end": 3189,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 3164,
											"end": 3189,
											"name": "DUP2"
										},
										{
											"begin": 3164,
											"end": 3189,
											"name": "GT"
										},
										{
											"begin": 3164,
											"end": 3189,
											"name": "ISZERO"
										},
										{
											"begin": 3164,
											"end": 3189,
											"name": "PUSH [tag]",
											"value": "90"
										},
										{
											"begin": 3164,
											"end": 3189,
											"name": "JUMPI"
										},
										{
											"begin": 3164,
											"end": 3189,
											"name": "INVALID"
										},
										{
											"begin": 3164,
											"end": 3189,
											"name": "tag",
											"value": "90"
										},
										{
											"begin": 3164,
											"end": 3189,
											"name": "JUMPDEST"
										},
										{
											"begin": 3164,
											"end": 3189,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3164,
											"end": 3189,
											"name": "AND"
										},
										{
											"begin": 3164,
											"end": 3189,
											"name": "DUP2"
										},
										{
											"begin": 3164,
											"end": 3189,
											"name": "MSTORE"
										},
										{
											"begin": 3164,
											"end": 3189,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3164,
											"end": 3189,
											"name": "ADD"
										},
										{
											"begin": 3164,
											"end": 3189,
											"name": "SWAP2"
										},
										{
											"begin": 3164,
											"end": 3189,
											"name": "POP"
										},
										{
											"begin": 3164,
											"end": 3189,
											"name": "POP"
										},
										{
											"begin": 3164,
											"end": 3189,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3164,
											"end": 3189,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3164,
											"end": 3189,
											"name": "MLOAD"
										},
										{
											"begin": 3164,
											"end": 3189,
											"name": "DUP1"
										},
										{
											"begin": 3164,
											"end": 3189,
											"name": "DUP4"
										},
										{
											"begin": 3164,
											"end": 3189,
											"name": "SUB"
										},
										{
											"begin": 3164,
											"end": 3189,
											"name": "DUP2"
										},
										{
											"begin": 3164,
											"end": 3189,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3164,
											"end": 3189,
											"name": "DUP8"
										},
										{
											"begin": 3164,
											"end": 3189,
											"name": "DUP1"
										},
										{
											"begin": 3164,
											"end": 3189,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 3164,
											"end": 3189,
											"name": "ISZERO"
										},
										{
											"begin": 3164,
											"end": 3189,
											"name": "ISZERO"
										},
										{
											"begin": 3164,
											"end": 3189,
											"name": "PUSH [tag]",
											"value": "91"
										},
										{
											"begin": 3164,
											"end": 3189,
											"name": "JUMPI"
										},
										{
											"begin": 3164,
											"end": 3189,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3164,
											"end": 3189,
											"name": "DUP1"
										},
										{
											"begin": 3164,
											"end": 3189,
											"name": "REVERT"
										},
										{
											"begin": 3164,
											"end": 3189,
											"name": "tag",
											"value": "91"
										},
										{
											"begin": 3164,
											"end": 3189,
											"name": "JUMPDEST"
										},
										{
											"begin": 3164,
											"end": 3189,
											"name": "PUSH",
											"value": "2C6"
										},
										{
											"begin": 3164,
											"end": 3189,
											"name": "GAS"
										},
										{
											"begin": 3164,
											"end": 3189,
											"name": "SUB"
										},
										{
											"begin": 3164,
											"end": 3189,
											"name": "CALL"
										},
										{
											"begin": 3164,
											"end": 3189,
											"name": "ISZERO"
										},
										{
											"begin": 3164,
											"end": 3189,
											"name": "ISZERO"
										},
										{
											"begin": 3164,
											"end": 3189,
											"name": "PUSH [tag]",
											"value": "92"
										},
										{
											"begin": 3164,
											"end": 3189,
											"name": "JUMPI"
										},
										{
											"begin": 3164,
											"end": 3189,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3164,
											"end": 3189,
											"name": "DUP1"
										},
										{
											"begin": 3164,
											"end": 3189,
											"name": "REVERT"
										},
										{
											"begin": 3164,
											"end": 3189,
											"name": "tag",
											"value": "92"
										},
										{
											"begin": 3164,
											"end": 3189,
											"name": "JUMPDEST"
										},
										{
											"begin": 3164,
											"end": 3189,
											"name": "POP"
										},
										{
											"begin": 3164,
											"end": 3189,
											"name": "POP"
										},
										{
											"begin": 3164,
											"end": 3189,
											"name": "POP"
										},
										{
											"begin": 3164,
											"end": 3189,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3164,
											"end": 3189,
											"name": "MLOAD"
										},
										{
											"begin": 3164,
											"end": 3189,
											"name": "DUP1"
										},
										{
											"begin": 3164,
											"end": 3189,
											"name": "MLOAD"
										},
										{
											"begin": 3164,
											"end": 3189,
											"name": "SWAP1"
										},
										{
											"begin": 3164,
											"end": 3189,
											"name": "POP"
										},
										{
											"begin": 3164,
											"end": 3189,
											"name": "POP"
										},
										{
											"begin": 3269,
											"end": 3284,
											"name": "TIMESTAMP"
										},
										{
											"begin": 3262,
											"end": 3267,
											"name": "DUP3"
										},
										{
											"begin": 3232,
											"end": 3285,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 3232,
											"end": 3285,
											"name": "DUP2"
										},
										{
											"begin": 3232,
											"end": 3285,
											"name": "GT"
										},
										{
											"begin": 3232,
											"end": 3285,
											"name": "ISZERO"
										},
										{
											"begin": 3232,
											"end": 3285,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 3232,
											"end": 3285,
											"name": "JUMPI"
										},
										{
											"begin": 3232,
											"end": 3285,
											"name": "INVALID"
										},
										{
											"begin": 3232,
											"end": 3285,
											"name": "tag",
											"value": "93"
										},
										{
											"begin": 3232,
											"end": 3285,
											"name": "JUMPDEST"
										},
										{
											"begin": 3254,
											"end": 3260,
											"name": "DUP3"
										},
										{
											"begin": 3232,
											"end": 3285,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3232,
											"end": 3285,
											"name": "AND"
										},
										{
											"begin": 3232,
											"end": 3285,
											"name": "PUSH",
											"value": "9AE5127F6D87E374B5901CE23A9467E504811C54C03DDA8741AD44A35A361466"
										},
										{
											"begin": 3232,
											"end": 3285,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3232,
											"end": 3285,
											"name": "MLOAD"
										},
										{
											"begin": 3232,
											"end": 3285,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3232,
											"end": 3285,
											"name": "MLOAD"
										},
										{
											"begin": 3232,
											"end": 3285,
											"name": "DUP1"
										},
										{
											"begin": 3232,
											"end": 3285,
											"name": "SWAP2"
										},
										{
											"begin": 3232,
											"end": 3285,
											"name": "SUB"
										},
										{
											"begin": 3232,
											"end": 3285,
											"name": "SWAP1"
										},
										{
											"begin": 3232,
											"end": 3285,
											"name": "LOG4"
										},
										{
											"begin": 2984,
											"end": 3293,
											"name": "POP"
										},
										{
											"begin": 2984,
											"end": 3293,
											"name": "POP"
										},
										{
											"begin": 2984,
											"end": 3293,
											"name": "POP"
										},
										{
											"begin": 2984,
											"end": 3293,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "JUMPDEST"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "MLOAD"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "SWAP1"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "DUP2"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "ADD"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "MSTORE"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "DUP1"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "DUP2"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "MSTORE"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "POP"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "SWAP1"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "JUMPDEST"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "MLOAD"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "PUSH #[$]",
											"value": "0000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "DUP1"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "PUSH [$]",
											"value": "0000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "DUP4"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "CODECOPY"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "ADD"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "SWAP1"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "JUMPDEST"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "DUP2"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "SLOAD"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "DUP2"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "DUP4"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "SSTORE"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "DUP2"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "DUP2"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "ISZERO"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "GT"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "JUMPI"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "DUP2"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "DUP4"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "MSTORE"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "KECCAK256"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "SWAP2"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "DUP3"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "ADD"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "SWAP2"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "ADD"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "SWAP2"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "SWAP1"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "tag",
											"value": "95"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "JUMPDEST"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "tag",
											"value": "94"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "JUMPDEST"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "POP"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "POP"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "POP"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "tag",
											"value": "96"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "JUMPDEST"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "PUSH [tag]",
											"value": "97"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "SWAP2"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "SWAP1"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "tag",
											"value": "98"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "JUMPDEST"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "DUP1"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "DUP3"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "GT"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "ISZERO"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "JUMPI"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "DUP2"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "SWAP1"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "SSTORE"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "POP"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "ADD"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "JUMP"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "tag",
											"value": "99"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "JUMPDEST"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "POP"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "SWAP1"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "JUMP"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "tag",
											"value": "97"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "JUMPDEST"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "SWAP1"
										},
										{
											"begin": 124,
											"end": 3613,
											"name": "JUMP",
											"value": "[out]"
										}
									],
									".data": {
										"0": {
											".code": [
												{
													"begin": 189,
													"end": 18405,
													"name": "PUSH",
													"value": "60"
												},
												{
													"begin": 189,
													"end": 18405,
													"name": "PUSH",
													"value": "40"
												},
												{
													"begin": 189,
													"end": 18405,
													"name": "MSTORE"
												},
												{
													"begin": 5188,
													"end": 6727,
													"name": "CALLVALUE"
												},
												{
													"begin": 5188,
													"end": 6727,
													"name": "ISZERO"
												},
												{
													"begin": 5188,
													"end": 6727,
													"name": "PUSH [tag]",
													"value": "1"
												},
												{
													"begin": 5188,
													"end": 6727,
													"name": "JUMPI"
												},
												{
													"begin": 5188,
													"end": 6727,
													"name": "PUSH",
													"value": "0"
												},
												{
													"begin": 5188,
													"end": 6727,
													"name": "DUP1"
												},
												{
													"begin": 5188,
													"end": 6727,
													"name": "REVERT"
												},
												{
													"begin": 5188,
													"end": 6727,
													"name": "tag",
													"value": "1"
												},
												{
													"begin": 5188,
													"end": 6727,
													"name": "JUMPDEST"
												},
												{
													"begin": 5188,
													"end": 6727,
													"name": "PUSH",
													"value": "40"
												},
												{
													"begin": 5188,
													"end": 6727,
													"name": "MLOAD"
												},
												{
													"begin": 5188,
													"end": 6727,
													"name": "PUSH",
													"value": "80"
												},
												{
													"begin": 5188,
													"end": 6727,
													"name": "DUP1"
												},
												{
													"begin": 5188,
													"end": 6727,
													"name": "PUSHSIZE"
												},
												{
													"begin": 5188,
													"end": 6727,
													"name": "DUP4"
												},
												{
													"begin": 5188,
													"end": 6727,
													"name": "CODECOPY"
												},
												{
													"begin": 5188,
													"end": 6727,
													"name": "DUP2"
												},
												{
													"begin": 5188,
													"end": 6727,
													"name": "ADD"
												},
												{
													"begin": 5188,
													"end": 6727,
													"name": "PUSH",
													"value": "40"
												},
												{
													"begin": 5188,
													"end": 6727,
													"name": "MSTORE"
												},
												{
													"begin": 5188,
													"end": 6727,
													"name": "DUP1"
												},
												{
													"begin": 5188,
													"end": 6727,
													"name": "DUP1"
												},
												{
													"begin": 5188,
													"end": 6727,
													"name": "MLOAD"
												},
												{
													"begin": 5188,
													"end": 6727,
													"name": "SWAP1"
												},
												{
													"begin": 5188,
													"end": 6727,
													"name": "PUSH",
													"value": "20"
												},
												{
													"begin": 5188,
													"end": 6727,
													"name": "ADD"
												},
												{
													"begin": 5188,
													"end": 6727,
													"name": "SWAP1"
												},
												{
													"begin": 5188,
													"end": 6727,
													"name": "SWAP2"
												},
												{
													"begin": 5188,
													"end": 6727,
													"name": "SWAP1"
												},
												{
													"begin": 5188,
													"end": 6727,
													"name": "DUP1"
												},
												{
													"begin": 5188,
													"end": 6727,
													"name": "MLOAD"
												},
												{
													"begin": 5188,
													"end": 6727,
													"name": "SWAP1"
												},
												{
													"begin": 5188,
													"end": 6727,
													"name": "PUSH",
													"value": "20"
												},
												{
													"begin": 5188,
													"end": 6727,
													"name": "ADD"
												},
												{
													"begin": 5188,
													"end": 6727,
													"name": "SWAP1"
												},
												{
													"begin": 5188,
													"end": 6727,
													"name": "SWAP2"
												},
												{
													"begin": 5188,
													"end": 6727,
													"name": "SWAP1"
												},
												{
													"begin": 5188,
													"end": 6727,
													"name": "DUP1"
												},
												{
													"begin": 5188,
													"end": 6727,
													"name": "MLOAD"
												},
												{
													"begin": 5188,
													"end": 6727,
													"name": "SWAP1"
												},
												{
													"begin": 5188,
													"end": 6727,
													"name": "PUSH",
													"value": "20"
												},
												{
													"begin": 5188,
													"end": 6727,
													"name": "ADD"
												},
												{
													"begin": 5188,
													"end": 6727,
													"name": "SWAP1"
												},
												{
													"begin": 5188,
													"end": 6727,
													"name": "SWAP2"
												},
												{
													"begin": 5188,
													"end": 6727,
													"name": "SWAP1"
												},
												{
													"begin": 5188,
													"end": 6727,
													"name": "DUP1"
												},
												{
													"begin": 5188,
													"end": 6727,
													"name": "MLOAD"
												},
												{
													"begin": 5188,
													"end": 6727,
													"name": "SWAP1"
												},
												{
													"begin": 5188,
													"end": 6727,
													"name": "PUSH",
													"value": "20"
												},
												{
													"begin": 5188,
													"end": 6727,
													"name": "ADD"
												},
												{
													"begin": 5188,
													"end": 6727,
													"name": "SWAP1"
												},
												{
													"begin": 5188,
													"end": 6727,
													"name": "SWAP2"
												},
												{
													"begin": 5188,
													"end": 6727,
													"name": "SWAP1"
												},
												{
													"begin": 5188,
													"end": 6727,
													"name": "POP"
												},
												{
													"begin": 5188,
													"end": 6727,
													"name": "POP"
												},
												{
													"begin": 5549,
													"end": 5558,
													"name": "ORIGIN"
												},
												{
													"begin": 5538,
													"end": 5546,
													"name": "PUSH",
													"value": "1"
												},
												{
													"begin": 5538,
													"end": 5546,
													"name": "PUSH",
													"value": "0"
												},
												{
													"begin": 5538,
													"end": 5558,
													"name": "PUSH",
													"value": "100"
												},
												{
													"begin": 5538,
													"end": 5558,
													"name": "EXP"
												},
												{
													"begin": 5538,
													"end": 5558,
													"name": "DUP2"
												},
												{
													"begin": 5538,
													"end": 5558,
													"name": "SLOAD"
												},
												{
													"begin": 5538,
													"end": 5558,
													"name": "DUP2"
												},
												{
													"begin": 5538,
													"end": 5558,
													"name": "PUSH",
													"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
												},
												{
													"begin": 5538,
													"end": 5558,
													"name": "MUL"
												},
												{
													"begin": 5538,
													"end": 5558,
													"name": "NOT"
												},
												{
													"begin": 5538,
													"end": 5558,
													"name": "AND"
												},
												{
													"begin": 5538,
													"end": 5558,
													"name": "SWAP1"
												},
												{
													"begin": 5538,
													"end": 5558,
													"name": "DUP4"
												},
												{
													"begin": 5538,
													"end": 5558,
													"name": "PUSH",
													"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
												},
												{
													"begin": 5538,
													"end": 5558,
													"name": "AND"
												},
												{
													"begin": 5538,
													"end": 5558,
													"name": "MUL"
												},
												{
													"begin": 5538,
													"end": 5558,
													"name": "OR"
												},
												{
													"begin": 5538,
													"end": 5558,
													"name": "SWAP1"
												},
												{
													"begin": 5538,
													"end": 5558,
													"name": "SSTORE"
												},
												{
													"begin": 5538,
													"end": 5558,
													"name": "POP"
												},
												{
													"begin": 5627,
													"end": 5636,
													"name": "DUP2"
												},
												{
													"begin": 5616,
													"end": 5624,
													"name": "PUSH",
													"value": "5"
												},
												{
													"begin": 5616,
													"end": 5636,
													"name": "DUP2"
												},
												{
													"begin": 5616,
													"end": 5636,
													"name": "SWAP1"
												},
												{
													"begin": 5616,
													"end": 5636,
													"name": "SSTORE"
												},
												{
													"begin": 5616,
													"end": 5636,
													"name": "POP"
												},
												{
													"begin": 5705,
													"end": 5721,
													"name": "DUP4"
												},
												{
													"begin": 5687,
													"end": 5702,
													"name": "PUSH",
													"value": "2"
												},
												{
													"begin": 5687,
													"end": 5721,
													"name": "DUP2"
												},
												{
													"begin": 5687,
													"end": 5721,
													"name": "SWAP1"
												},
												{
													"begin": 5687,
													"end": 5721,
													"name": "SSTORE"
												},
												{
													"begin": 5687,
													"end": 5721,
													"name": "POP"
												},
												{
													"begin": 5798,
													"end": 5818,
													"name": "DUP3"
												},
												{
													"begin": 5776,
													"end": 5795,
													"name": "PUSH",
													"value": "6"
												},
												{
													"begin": 5776,
													"end": 5818,
													"name": "DUP2"
												},
												{
													"begin": 5776,
													"end": 5818,
													"name": "SWAP1"
												},
												{
													"begin": 5776,
													"end": 5818,
													"name": "SSTORE"
												},
												{
													"begin": 5776,
													"end": 5818,
													"name": "POP"
												},
												{
													"begin": 5976,
													"end": 5996,
													"name": "DUP3"
												},
												{
													"begin": 5954,
													"end": 5973,
													"name": "PUSH",
													"value": "7"
												},
												{
													"begin": 5954,
													"end": 5996,
													"name": "DUP2"
												},
												{
													"begin": 5954,
													"end": 5996,
													"name": "SWAP1"
												},
												{
													"begin": 5954,
													"end": 5996,
													"name": "SSTORE"
												},
												{
													"begin": 5954,
													"end": 5996,
													"name": "POP"
												},
												{
													"begin": 6194,
													"end": 6223,
													"name": "PUSH [tag]",
													"value": "6"
												},
												{
													"begin": 6214,
													"end": 6222,
													"name": "PUSH",
													"value": "5"
												},
												{
													"begin": 6214,
													"end": 6222,
													"name": "SLOAD"
												},
												{
													"begin": 6194,
													"end": 6209,
													"name": "PUSH",
													"value": "2"
												},
												{
													"begin": 6194,
													"end": 6209,
													"name": "SLOAD"
												},
												{
													"begin": 6194,
													"end": 6213,
													"name": "PUSH [tag]",
													"value": "7"
												},
												{
													"begin": 6194,
													"end": 6213,
													"name": "PUSH",
													"value": "100000000"
												},
												{
													"begin": 6194,
													"end": 6213,
													"name": "MUL"
												},
												{
													"begin": 6194,
													"end": 6213,
													"name": "PUSH [tag]",
													"value": "18446744073709551720"
												},
												{
													"begin": 6194,
													"end": 6213,
													"name": "OR"
												},
												{
													"begin": 6194,
													"end": 6213,
													"name": "SWAP1"
												},
												{
													"begin": 6194,
													"end": 6223,
													"name": "SWAP2"
												},
												{
													"begin": 6194,
													"end": 6223,
													"name": "SWAP1"
												},
												{
													"begin": 6194,
													"end": 6223,
													"name": "PUSH",
													"value": "100000000"
												},
												{
													"begin": 6194,
													"end": 6223,
													"name": "SWAP1"
												},
												{
													"begin": 6194,
													"end": 6223,
													"name": "DIV"
												},
												{
													"begin": 6194,
													"end": 6223,
													"name": "JUMP",
													"value": "[in]"
												},
												{
													"begin": 6194,
													"end": 6223,
													"name": "tag",
													"value": "6"
												},
												{
													"begin": 6194,
													"end": 6223,
													"name": "JUMPDEST"
												},
												{
													"begin": 6179,
													"end": 6191,
													"name": "PUSH",
													"value": "3"
												},
												{
													"begin": 6179,
													"end": 6223,
													"name": "DUP2"
												},
												{
													"begin": 6179,
													"end": 6223,
													"name": "SWAP1"
												},
												{
													"begin": 6179,
													"end": 6223,
													"name": "SSTORE"
												},
												{
													"begin": 6179,
													"end": 6223,
													"name": "POP"
												},
												{
													"begin": 6419,
													"end": 6456,
													"name": "PUSH [tag]",
													"value": "8"
												},
												{
													"begin": 6436,
													"end": 6455,
													"name": "PUSH",
													"value": "6"
												},
												{
													"begin": 6436,
													"end": 6455,
													"name": "SLOAD"
												},
												{
													"begin": 6419,
													"end": 6431,
													"name": "PUSH",
													"value": "3"
												},
												{
													"begin": 6419,
													"end": 6431,
													"name": "SLOAD"
												},
												{
													"begin": 6419,
													"end": 6435,
													"name": "PUSH [tag]",
													"value": "9"
												},
												{
													"begin": 6419,
													"end": 6435,
													"name": "PUSH",
													"value": "100000000"
												},
												{
													"begin": 6419,
													"end": 6435,
													"name": "MUL"
												},
												{
													"begin": 6419,
													"end": 6435,
													"name": "PUSH [tag]",
													"value": "18446744073709551809"
												},
												{
													"begin": 6419,
													"end": 6435,
													"name": "OR"
												},
												{
													"begin": 6419,
													"end": 6435,
													"name": "SWAP1"
												},
												{
													"begin": 6419,
													"end": 6456,
													"name": "SWAP2"
												},
												{
													"begin": 6419,
													"end": 6456,
													"name": "SWAP1"
												},
												{
													"begin": 6419,
													"end": 6456,
													"name": "PUSH",
													"value": "100000000"
												},
												{
													"begin": 6419,
													"end": 6456,
													"name": "SWAP1"
												},
												{
													"begin": 6419,
													"end": 6456,
													"name": "DIV"
												},
												{
													"begin": 6419,
													"end": 6456,
													"name": "JUMP",
													"value": "[in]"
												},
												{
													"begin": 6419,
													"end": 6456,
													"name": "tag",
													"value": "8"
												},
												{
													"begin": 6419,
													"end": 6456,
													"name": "JUMPDEST"
												},
												{
													"begin": 6396,
													"end": 6416,
													"name": "PUSH",
													"value": "8"
												},
												{
													"begin": 6396,
													"end": 6456,
													"name": "DUP2"
												},
												{
													"begin": 6396,
													"end": 6456,
													"name": "SWAP1"
												},
												{
													"begin": 6396,
													"end": 6456,
													"name": "SSTORE"
												},
												{
													"begin": 6396,
													"end": 6456,
													"name": "POP"
												},
												{
													"begin": 6523,
													"end": 6535,
													"name": "DUP1"
												},
												{
													"begin": 6509,
													"end": 6520,
													"name": "PUSH",
													"value": "B"
												},
												{
													"begin": 6509,
													"end": 6535,
													"name": "DUP2"
												},
												{
													"begin": 6509,
													"end": 6535,
													"name": "PUSH",
													"value": "0"
												},
												{
													"begin": 6509,
													"end": 6535,
													"name": "NOT"
												},
												{
													"begin": 6509,
													"end": 6535,
													"name": "AND"
												},
												{
													"begin": 6509,
													"end": 6535,
													"name": "SWAP1"
												},
												{
													"begin": 6509,
													"end": 6535,
													"name": "SSTORE"
												},
												{
													"begin": 6509,
													"end": 6535,
													"name": "POP"
												},
												{
													"begin": 6605,
													"end": 6620,
													"name": "TIMESTAMP"
												},
												{
													"begin": 6589,
													"end": 6602,
													"name": "PUSH",
													"value": "9"
												},
												{
													"begin": 6589,
													"end": 6620,
													"name": "DUP2"
												},
												{
													"begin": 6589,
													"end": 6620,
													"name": "SWAP1"
												},
												{
													"begin": 6589,
													"end": 6620,
													"name": "SSTORE"
												},
												{
													"begin": 6589,
													"end": 6620,
													"name": "POP"
												},
												{
													"begin": 6703,
													"end": 6718,
													"name": "TIMESTAMP"
												},
												{
													"begin": 6693,
													"end": 6701,
													"name": "PUSH",
													"value": "1"
												},
												{
													"begin": 6693,
													"end": 6701,
													"name": "PUSH",
													"value": "0"
												},
												{
													"begin": 6693,
													"end": 6701,
													"name": "SWAP1"
												},
												{
													"begin": 6693,
													"end": 6701,
													"name": "SLOAD"
												},
												{
													"begin": 6693,
													"end": 6701,
													"name": "SWAP1"
												},
												{
													"begin": 6693,
													"end": 6701,
													"name": "PUSH",
													"value": "100"
												},
												{
													"begin": 6693,
													"end": 6701,
													"name": "EXP"
												},
												{
													"begin": 6693,
													"end": 6701,
													"name": "SWAP1"
												},
												{
													"begin": 6693,
													"end": 6701,
													"name": "DIV"
												},
												{
													"begin": 6693,
													"end": 6701,
													"name": "PUSH",
													"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
												},
												{
													"begin": 6693,
													"end": 6701,
													"name": "AND"
												},
												{
													"begin": 6672,
													"end": 6719,
													"name": "PUSH",
													"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
												},
												{
													"begin": 6672,
													"end": 6719,
													"name": "AND"
												},
												{
													"begin": 6672,
													"end": 6719,
													"name": "PUSH",
													"value": "F9F75C99C0E3522CD19FFC66FD6C94989A3F0821D37D5C5BB176AAB904C6335D"
												},
												{
													"begin": 6672,
													"end": 6719,
													"name": "PUSH",
													"value": "40"
												},
												{
													"begin": 6672,
													"end": 6719,
													"name": "MLOAD"
												},
												{
													"begin": 6672,
													"end": 6719,
													"name": "PUSH",
													"value": "40"
												},
												{
													"begin": 6672,
													"end": 6719,
													"name": "MLOAD"
												},
												{
													"begin": 6672,
													"end": 6719,
													"name": "DUP1"
												},
												{
													"begin": 6672,
													"end": 6719,
													"name": "SWAP2"
												},
												{
													"begin": 6672,
													"end": 6719,
													"name": "SUB"
												},
												{
													"begin": 6672,
													"end": 6719,
													"name": "SWAP1"
												},
												{
													"begin": 6672,
													"end": 6719,
													"name": "LOG3"
												},
												{
													"begin": 5188,
													"end": 6727,
													"name": "POP"
												},
												{
													"begin": 5188,
													"end": 6727,
													"name": "POP"
												},
												{
													"begin": 5188,
													"end": 6727,
													"name": "POP"
												},
												{
													"begin": 5188,
													"end": 6727,
													"name": "POP"
												},
												{
													"begin": 189,
													"end": 18405,
													"name": "PUSH [tag]",
													"value": "10"
												},
												{
													"begin": 189,
													"end": 18405,
													"name": "JUMP"
												},
												{
													"begin": 622,
													"end": 769,
													"name": "tag",
													"value": "7"
												},
												{
													"begin": 622,
													"end": 769,
													"name": "JUMPDEST"
												},
												{
													"begin": 680,
													"end": 687,
													"name": "PUSH",
													"value": "0"
												},
												{
													"begin": 700,
													"end": 709,
													"name": "DUP1"
												},
												{
													"begin": 716,
													"end": 717,
													"name": "DUP3"
												},
												{
													"begin": 712,
													"end": 713,
													"name": "DUP5"
												},
												{
													"begin": 712,
													"end": 717,
													"name": "ADD"
												},
												{
													"begin": 700,
													"end": 717,
													"name": "SWAP1"
												},
												{
													"begin": 700,
													"end": 717,
													"name": "POP"
												},
												{
													"begin": 740,
													"end": 741,
													"name": "DUP4"
												},
												{
													"begin": 735,
													"end": 736,
													"name": "DUP2"
												},
												{
													"begin": 735,
													"end": 741,
													"name": "LT"
												},
												{
													"begin": 735,
													"end": 741,
													"name": "ISZERO"
												},
												{
													"begin": 728,
													"end": 742,
													"name": "ISZERO"
												},
												{
													"begin": 728,
													"end": 742,
													"name": "ISZERO"
												},
												{
													"begin": 728,
													"end": 742,
													"name": "PUSH [tag]",
													"value": "12"
												},
												{
													"begin": 728,
													"end": 742,
													"name": "JUMPI"
												},
												{
													"begin": 728,
													"end": 742,
													"name": "INVALID"
												},
												{
													"begin": 728,
													"end": 742,
													"name": "tag",
													"value": "12"
												},
												{
													"begin": 728,
													"end": 742,
													"name": "JUMPDEST"
												},
												{
													"begin": 760,
													"end": 761,
													"name": "DUP1"
												},
												{
													"begin": 753,
													"end": 761,
													"name": "SWAP2"
												},
												{
													"begin": 753,
													"end": 761,
													"name": "POP"
												},
												{
													"begin": 622,
													"end": 769,
													"name": "POP"
												},
												{
													"begin": 622,
													"end": 769,
													"name": "SWAP3"
												},
												{
													"begin": 622,
													"end": 769,
													"name": "SWAP2"
												},
												{
													"begin": 622,
													"end": 769,
													"name": "POP"
												},
												{
													"begin": 622,
													"end": 769,
													"name": "POP"
												},
												{
													"begin": 622,
													"end": 769,
													"name": "JUMP",
													"value": "[out]"
												},
												{
													"begin": 270,
													"end": 463,
													"name": "tag",
													"value": "9"
												},
												{
													"begin": 270,
													"end": 463,
													"name": "JUMPDEST"
												},
												{
													"begin": 328,
													"end": 335,
													"name": "PUSH",
													"value": "0"
												},
												{
													"begin": 419,
													"end": 428,
													"name": "DUP1"
												},
												{
													"begin": 435,
													"end": 436,
													"name": "DUP3"
												},
												{
													"begin": 431,
													"end": 432,
													"name": "DUP5"
												},
												{
													"begin": 431,
													"end": 436,
													"name": "DUP2"
												},
												{
													"begin": 431,
													"end": 436,
													"name": "ISZERO"
												},
												{
													"begin": 431,
													"end": 436,
													"name": "ISZERO"
												},
												{
													"begin": 431,
													"end": 436,
													"name": "PUSH [tag]",
													"value": "14"
												},
												{
													"begin": 431,
													"end": 436,
													"name": "JUMPI"
												},
												{
													"begin": 431,
													"end": 436,
													"name": "INVALID"
												},
												{
													"begin": 431,
													"end": 436,
													"name": "tag",
													"value": "14"
												},
												{
													"begin": 431,
													"end": 436,
													"name": "JUMPDEST"
												},
												{
													"begin": 431,
													"end": 436,
													"name": "DIV"
												},
												{
													"begin": 419,
													"end": 436,
													"name": "SWAP1"
												},
												{
													"begin": 419,
													"end": 436,
													"name": "POP"
												},
												{
													"begin": 454,
													"end": 455,
													"name": "DUP1"
												},
												{
													"begin": 447,
													"end": 455,
													"name": "SWAP2"
												},
												{
													"begin": 447,
													"end": 455,
													"name": "POP"
												},
												{
													"begin": 270,
													"end": 463,
													"name": "POP"
												},
												{
													"begin": 270,
													"end": 463,
													"name": "SWAP3"
												},
												{
													"begin": 270,
													"end": 463,
													"name": "SWAP2"
												},
												{
													"begin": 270,
													"end": 463,
													"name": "POP"
												},
												{
													"begin": 270,
													"end": 463,
													"name": "POP"
												},
												{
													"begin": 270,
													"end": 463,
													"name": "JUMP",
													"value": "[out]"
												},
												{
													"begin": 189,
													"end": 18405,
													"name": "tag",
													"value": "10"
												},
												{
													"begin": 189,
													"end": 18405,
													"name": "JUMPDEST"
												},
												{
													"begin": 189,
													"end": 18405,
													"name": "PUSH #[$]",
													"value": "0000000000000000000000000000000000000000000000000000000000000000"
												},
												{
													"begin": 189,
													"end": 18405,
													"name": "DUP1"
												},
												{
													"begin": 189,
													"end": 18405,
													"name": "PUSH [$]",
													"value": "0000000000000000000000000000000000000000000000000000000000000000"
												},
												{
													"begin": 189,
													"end": 18405,
													"name": "PUSH",
													"value": "0"
												},
												{
													"begin": 189,
													"end": 18405,
													"name": "CODECOPY"
												},
												{
													"begin": 189,
													"end": 18405,
													"name": "PUSH",
													"value": "0"
												},
												{
													"begin": 189,
													"end": 18405,
													"name": "RETURN"
												}
											],
											".data": {
												"0": {
													".auxdata": "a165627a7a72305820b0d9ae8c666bb367167f0bebe9f11aec50f1c233b2498d10b6aef98d7b532fa30029",
													".code": [
														{
															"begin": 189,
															"end": 18405,
															"name": "PUSH",
															"value": "60"
														},
														{
															"begin": 189,
															"end": 18405,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 189,
															"end": 18405,
															"name": "MSTORE"
														},
														{
															"begin": 189,
															"end": 18405,
															"name": "PUSH",
															"value": "4"
														},
														{
															"begin": 189,
															"end": 18405,
															"name": "CALLDATASIZE"
														},
														{
															"begin": 189,
															"end": 18405,
															"name": "LT"
														},
														{
															"begin": 189,
															"end": 18405,
															"name": "PUSH [tag]",
															"value": "1"
														},
														{
															"begin": 189,
															"end": 18405,
															"name": "JUMPI"
														},
														{
															"begin": 189,
															"end": 18405,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 189,
															"end": 18405,
															"name": "CALLDATALOAD"
														},
														{
															"begin": 189,
															"end": 18405,
															"name": "PUSH",
															"value": "100000000000000000000000000000000000000000000000000000000"
														},
														{
															"begin": 189,
															"end": 18405,
															"name": "SWAP1"
														},
														{
															"begin": 189,
															"end": 18405,
															"name": "DIV"
														},
														{
															"begin": 189,
															"end": 18405,
															"name": "PUSH",
															"value": "FFFFFFFF"
														},
														{
															"begin": 189,
															"end": 18405,
															"name": "AND"
														},
														{
															"begin": 189,
															"end": 18405,
															"name": "DUP1"
														},
														{
															"begin": 189,
															"end": 18405,
															"name": "PUSH",
															"value": "12065FE0"
														},
														{
															"begin": 189,
															"end": 18405,
															"name": "EQ"
														},
														{
															"begin": 189,
															"end": 18405,
															"name": "PUSH [tag]",
															"value": "2"
														},
														{
															"begin": 189,
															"end": 18405,
															"name": "JUMPI"
														},
														{
															"begin": 189,
															"end": 18405,
															"name": "DUP1"
														},
														{
															"begin": 189,
															"end": 18405,
															"name": "PUSH",
															"value": "268F1153"
														},
														{
															"begin": 189,
															"end": 18405,
															"name": "EQ"
														},
														{
															"begin": 189,
															"end": 18405,
															"name": "PUSH [tag]",
															"value": "3"
														},
														{
															"begin": 189,
															"end": 18405,
															"name": "JUMPI"
														},
														{
															"begin": 189,
															"end": 18405,
															"name": "DUP1"
														},
														{
															"begin": 189,
															"end": 18405,
															"name": "PUSH",
															"value": "28FD10D7"
														},
														{
															"begin": 189,
															"end": 18405,
															"name": "EQ"
														},
														{
															"begin": 189,
															"end": 18405,
															"name": "PUSH [tag]",
															"value": "4"
														},
														{
															"begin": 189,
															"end": 18405,
															"name": "JUMPI"
														},
														{
															"begin": 189,
															"end": 18405,
															"name": "DUP1"
														},
														{
															"begin": 189,
															"end": 18405,
															"name": "PUSH",
															"value": "29C68DC1"
														},
														{
															"begin": 189,
															"end": 18405,
															"name": "EQ"
														},
														{
															"begin": 189,
															"end": 18405,
															"name": "PUSH [tag]",
															"value": "5"
														},
														{
															"begin": 189,
															"end": 18405,
															"name": "JUMPI"
														},
														{
															"begin": 189,
															"end": 18405,
															"name": "DUP1"
														},
														{
															"begin": 189,
															"end": 18405,
															"name": "PUSH",
															"value": "3CCFD60B"
														},
														{
															"begin": 189,
															"end": 18405,
															"name": "EQ"
														},
														{
															"begin": 189,
															"end": 18405,
															"name": "PUSH [tag]",
															"value": "6"
														},
														{
															"begin": 189,
															"end": 18405,
															"name": "JUMPI"
														},
														{
															"begin": 189,
															"end": 18405,
															"name": "DUP1"
														},
														{
															"begin": 189,
															"end": 18405,
															"name": "PUSH",
															"value": "402D8883"
														},
														{
															"begin": 189,
															"end": 18405,
															"name": "EQ"
														},
														{
															"begin": 189,
															"end": 18405,
															"name": "PUSH [tag]",
															"value": "7"
														},
														{
															"begin": 189,
															"end": 18405,
															"name": "JUMPI"
														},
														{
															"begin": 189,
															"end": 18405,
															"name": "DUP1"
														},
														{
															"begin": 189,
															"end": 18405,
															"name": "PUSH",
															"value": "43C14B22"
														},
														{
															"begin": 189,
															"end": 18405,
															"name": "EQ"
														},
														{
															"begin": 189,
															"end": 18405,
															"name": "PUSH [tag]",
															"value": "8"
														},
														{
															"begin": 189,
															"end": 18405,
															"name": "JUMPI"
														},
														{
															"begin": 189,
															"end": 18405,
															"name": "DUP1"
														},
														{
															"begin": 189,
															"end": 18405,
															"name": "PUSH",
															"value": "590E1AE3"
														},
														{
															"begin": 189,
															"end": 18405,
															"name": "EQ"
														},
														{
															"begin": 189,
															"end": 18405,
															"name": "PUSH [tag]",
															"value": "9"
														},
														{
															"begin": 189,
															"end": 18405,
															"name": "JUMPI"
														},
														{
															"begin": 189,
															"end": 18405,
															"name": "DUP1"
														},
														{
															"begin": 189,
															"end": 18405,
															"name": "PUSH",
															"value": "83197EF0"
														},
														{
															"begin": 189,
															"end": 18405,
															"name": "EQ"
														},
														{
															"begin": 189,
															"end": 18405,
															"name": "PUSH [tag]",
															"value": "10"
														},
														{
															"begin": 189,
															"end": 18405,
															"name": "JUMPI"
														},
														{
															"begin": 189,
															"end": 18405,
															"name": "DUP1"
														},
														{
															"begin": 189,
															"end": 18405,
															"name": "PUSH",
															"value": "8DA5CB5B"
														},
														{
															"begin": 189,
															"end": 18405,
															"name": "EQ"
														},
														{
															"begin": 189,
															"end": 18405,
															"name": "PUSH [tag]",
															"value": "11"
														},
														{
															"begin": 189,
															"end": 18405,
															"name": "JUMPI"
														},
														{
															"begin": 189,
															"end": 18405,
															"name": "DUP1"
														},
														{
															"begin": 189,
															"end": 18405,
															"name": "PUSH",
															"value": "D85DA7B6"
														},
														{
															"begin": 189,
															"end": 18405,
															"name": "EQ"
														},
														{
															"begin": 189,
															"end": 18405,
															"name": "PUSH [tag]",
															"value": "12"
														},
														{
															"begin": 189,
															"end": 18405,
															"name": "JUMPI"
														},
														{
															"begin": 189,
															"end": 18405,
															"name": "DUP1"
														},
														{
															"begin": 189,
															"end": 18405,
															"name": "PUSH",
															"value": "E8B5E51F"
														},
														{
															"begin": 189,
															"end": 18405,
															"name": "EQ"
														},
														{
															"begin": 189,
															"end": 18405,
															"name": "PUSH [tag]",
															"value": "13"
														},
														{
															"begin": 189,
															"end": 18405,
															"name": "JUMPI"
														},
														{
															"begin": 189,
															"end": 18405,
															"name": "DUP1"
														},
														{
															"begin": 189,
															"end": 18405,
															"name": "PUSH",
															"value": "EFD475AB"
														},
														{
															"begin": 189,
															"end": 18405,
															"name": "EQ"
														},
														{
															"begin": 189,
															"end": 18405,
															"name": "PUSH [tag]",
															"value": "14"
														},
														{
															"begin": 189,
															"end": 18405,
															"name": "JUMPI"
														},
														{
															"begin": 189,
															"end": 18405,
															"name": "DUP1"
														},
														{
															"begin": 189,
															"end": 18405,
															"name": "PUSH",
															"value": "F06817CF"
														},
														{
															"begin": 189,
															"end": 18405,
															"name": "EQ"
														},
														{
															"begin": 189,
															"end": 18405,
															"name": "PUSH [tag]",
															"value": "15"
														},
														{
															"begin": 189,
															"end": 18405,
															"name": "JUMPI"
														},
														{
															"begin": 189,
															"end": 18405,
															"name": "DUP1"
														},
														{
															"begin": 189,
															"end": 18405,
															"name": "PUSH",
															"value": "F5074F41"
														},
														{
															"begin": 189,
															"end": 18405,
															"name": "EQ"
														},
														{
															"begin": 189,
															"end": 18405,
															"name": "PUSH [tag]",
															"value": "16"
														},
														{
															"begin": 189,
															"end": 18405,
															"name": "JUMPI"
														},
														{
															"begin": 189,
															"end": 18405,
															"name": "tag",
															"value": "1"
														},
														{
															"begin": 189,
															"end": 18405,
															"name": "JUMPDEST"
														},
														{
															"begin": 189,
															"end": 18405,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 189,
															"end": 18405,
															"name": "DUP1"
														},
														{
															"begin": 189,
															"end": 18405,
															"name": "REVERT"
														},
														{
															"begin": 6810,
															"end": 6900,
															"name": "tag",
															"value": "2"
														},
														{
															"begin": 6810,
															"end": 6900,
															"name": "JUMPDEST"
														},
														{
															"begin": 6810,
															"end": 6900,
															"name": "CALLVALUE"
														},
														{
															"begin": 6810,
															"end": 6900,
															"name": "ISZERO"
														},
														{
															"begin": 6810,
															"end": 6900,
															"name": "PUSH [tag]",
															"value": "17"
														},
														{
															"begin": 6810,
															"end": 6900,
															"name": "JUMPI"
														},
														{
															"begin": 6810,
															"end": 6900,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 6810,
															"end": 6900,
															"name": "DUP1"
														},
														{
															"begin": 6810,
															"end": 6900,
															"name": "REVERT"
														},
														{
															"begin": 6810,
															"end": 6900,
															"name": "tag",
															"value": "17"
														},
														{
															"begin": 6810,
															"end": 6900,
															"name": "JUMPDEST"
														},
														{
															"begin": 6810,
															"end": 6900,
															"name": "PUSH [tag]",
															"value": "18"
														},
														{
															"begin": 6810,
															"end": 6900,
															"name": "PUSH [tag]",
															"value": "19"
														},
														{
															"begin": 6810,
															"end": 6900,
															"name": "JUMP"
														},
														{
															"begin": 6810,
															"end": 6900,
															"name": "tag",
															"value": "18"
														},
														{
															"begin": 6810,
															"end": 6900,
															"name": "JUMPDEST"
														},
														{
															"begin": 6810,
															"end": 6900,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 6810,
															"end": 6900,
															"name": "MLOAD"
														},
														{
															"begin": 6810,
															"end": 6900,
															"name": "DUP1"
														},
														{
															"begin": 6810,
															"end": 6900,
															"name": "DUP3"
														},
														{
															"begin": 6810,
															"end": 6900,
															"name": "DUP2"
														},
														{
															"begin": 6810,
															"end": 6900,
															"name": "MSTORE"
														},
														{
															"begin": 6810,
															"end": 6900,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 6810,
															"end": 6900,
															"name": "ADD"
														},
														{
															"begin": 6810,
															"end": 6900,
															"name": "SWAP2"
														},
														{
															"begin": 6810,
															"end": 6900,
															"name": "POP"
														},
														{
															"begin": 6810,
															"end": 6900,
															"name": "POP"
														},
														{
															"begin": 6810,
															"end": 6900,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 6810,
															"end": 6900,
															"name": "MLOAD"
														},
														{
															"begin": 6810,
															"end": 6900,
															"name": "DUP1"
														},
														{
															"begin": 6810,
															"end": 6900,
															"name": "SWAP2"
														},
														{
															"begin": 6810,
															"end": 6900,
															"name": "SUB"
														},
														{
															"begin": 6810,
															"end": 6900,
															"name": "SWAP1"
														},
														{
															"begin": 6810,
															"end": 6900,
															"name": "RETURN"
														},
														{
															"begin": 17799,
															"end": 17989,
															"name": "tag",
															"value": "3"
														},
														{
															"begin": 17799,
															"end": 17989,
															"name": "JUMPDEST"
														},
														{
															"begin": 17799,
															"end": 17989,
															"name": "CALLVALUE"
														},
														{
															"begin": 17799,
															"end": 17989,
															"name": "ISZERO"
														},
														{
															"begin": 17799,
															"end": 17989,
															"name": "PUSH [tag]",
															"value": "20"
														},
														{
															"begin": 17799,
															"end": 17989,
															"name": "JUMPI"
														},
														{
															"begin": 17799,
															"end": 17989,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 17799,
															"end": 17989,
															"name": "DUP1"
														},
														{
															"begin": 17799,
															"end": 17989,
															"name": "REVERT"
														},
														{
															"begin": 17799,
															"end": 17989,
															"name": "tag",
															"value": "20"
														},
														{
															"begin": 17799,
															"end": 17989,
															"name": "JUMPDEST"
														},
														{
															"begin": 17799,
															"end": 17989,
															"name": "PUSH [tag]",
															"value": "21"
														},
														{
															"begin": 17799,
															"end": 17989,
															"name": "PUSH",
															"value": "4"
														},
														{
															"begin": 17799,
															"end": 17989,
															"name": "DUP1"
														},
														{
															"begin": 17799,
															"end": 17989,
															"name": "DUP1"
														},
														{
															"begin": 17799,
															"end": 17989,
															"name": "CALLDATALOAD"
														},
														{
															"begin": 17799,
															"end": 17989,
															"name": "PUSH",
															"value": "FF"
														},
														{
															"begin": 17799,
															"end": 17989,
															"name": "AND"
														},
														{
															"begin": 17799,
															"end": 17989,
															"name": "SWAP1"
														},
														{
															"begin": 17799,
															"end": 17989,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 17799,
															"end": 17989,
															"name": "ADD"
														},
														{
															"begin": 17799,
															"end": 17989,
															"name": "SWAP1"
														},
														{
															"begin": 17799,
															"end": 17989,
															"name": "SWAP2"
														},
														{
															"begin": 17799,
															"end": 17989,
															"name": "SWAP1"
														},
														{
															"begin": 17799,
															"end": 17989,
															"name": "POP"
														},
														{
															"begin": 17799,
															"end": 17989,
															"name": "POP"
														},
														{
															"begin": 17799,
															"end": 17989,
															"name": "PUSH [tag]",
															"value": "22"
														},
														{
															"begin": 17799,
															"end": 17989,
															"name": "JUMP"
														},
														{
															"begin": 17799,
															"end": 17989,
															"name": "tag",
															"value": "21"
														},
														{
															"begin": 17799,
															"end": 17989,
															"name": "JUMPDEST"
														},
														{
															"begin": 17799,
															"end": 17989,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 17799,
															"end": 17989,
															"name": "MLOAD"
														},
														{
															"begin": 17799,
															"end": 17989,
															"name": "DUP1"
														},
														{
															"begin": 17799,
															"end": 17989,
															"name": "DUP3"
														},
														{
															"begin": 17799,
															"end": 17989,
															"name": "DUP2"
														},
														{
															"begin": 17799,
															"end": 17989,
															"name": "MSTORE"
														},
														{
															"begin": 17799,
															"end": 17989,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 17799,
															"end": 17989,
															"name": "ADD"
														},
														{
															"begin": 17799,
															"end": 17989,
															"name": "SWAP2"
														},
														{
															"begin": 17799,
															"end": 17989,
															"name": "POP"
														},
														{
															"begin": 17799,
															"end": 17989,
															"name": "POP"
														},
														{
															"begin": 17799,
															"end": 17989,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 17799,
															"end": 17989,
															"name": "MLOAD"
														},
														{
															"begin": 17799,
															"end": 17989,
															"name": "DUP1"
														},
														{
															"begin": 17799,
															"end": 17989,
															"name": "SWAP2"
														},
														{
															"begin": 17799,
															"end": 17989,
															"name": "SUB"
														},
														{
															"begin": 17799,
															"end": 17989,
															"name": "SWAP1"
														},
														{
															"begin": 17799,
															"end": 17989,
															"name": "RETURN"
														},
														{
															"begin": 1845,
															"end": 1884,
															"name": "tag",
															"value": "4"
														},
														{
															"begin": 1845,
															"end": 1884,
															"name": "JUMPDEST"
														},
														{
															"begin": 1845,
															"end": 1884,
															"name": "CALLVALUE"
														},
														{
															"begin": 1845,
															"end": 1884,
															"name": "ISZERO"
														},
														{
															"begin": 1845,
															"end": 1884,
															"name": "PUSH [tag]",
															"value": "23"
														},
														{
															"begin": 1845,
															"end": 1884,
															"name": "JUMPI"
														},
														{
															"begin": 1845,
															"end": 1884,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 1845,
															"end": 1884,
															"name": "DUP1"
														},
														{
															"begin": 1845,
															"end": 1884,
															"name": "REVERT"
														},
														{
															"begin": 1845,
															"end": 1884,
															"name": "tag",
															"value": "23"
														},
														{
															"begin": 1845,
															"end": 1884,
															"name": "JUMPDEST"
														},
														{
															"begin": 1845,
															"end": 1884,
															"name": "PUSH [tag]",
															"value": "24"
														},
														{
															"begin": 1845,
															"end": 1884,
															"name": "PUSH",
															"value": "4"
														},
														{
															"begin": 1845,
															"end": 1884,
															"name": "DUP1"
														},
														{
															"begin": 1845,
															"end": 1884,
															"name": "DUP1"
														},
														{
															"begin": 1845,
															"end": 1884,
															"name": "CALLDATALOAD"
														},
														{
															"begin": 1845,
															"end": 1884,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 1845,
															"end": 1884,
															"name": "AND"
														},
														{
															"begin": 1845,
															"end": 1884,
															"name": "SWAP1"
														},
														{
															"begin": 1845,
															"end": 1884,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 1845,
															"end": 1884,
															"name": "ADD"
														},
														{
															"begin": 1845,
															"end": 1884,
															"name": "SWAP1"
														},
														{
															"begin": 1845,
															"end": 1884,
															"name": "SWAP2"
														},
														{
															"begin": 1845,
															"end": 1884,
															"name": "SWAP1"
														},
														{
															"begin": 1845,
															"end": 1884,
															"name": "POP"
														},
														{
															"begin": 1845,
															"end": 1884,
															"name": "POP"
														},
														{
															"begin": 1845,
															"end": 1884,
															"name": "PUSH [tag]",
															"value": "25"
														},
														{
															"begin": 1845,
															"end": 1884,
															"name": "JUMP"
														},
														{
															"begin": 1845,
															"end": 1884,
															"name": "tag",
															"value": "24"
														},
														{
															"begin": 1845,
															"end": 1884,
															"name": "JUMPDEST"
														},
														{
															"begin": 1845,
															"end": 1884,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 1845,
															"end": 1884,
															"name": "MLOAD"
														},
														{
															"begin": 1845,
															"end": 1884,
															"name": "DUP1"
														},
														{
															"begin": 1845,
															"end": 1884,
															"name": "DUP3"
														},
														{
															"begin": 1845,
															"end": 1884,
															"name": "ISZERO"
														},
														{
															"begin": 1845,
															"end": 1884,
															"name": "ISZERO"
														},
														{
															"begin": 1845,
															"end": 1884,
															"name": "ISZERO"
														},
														{
															"begin": 1845,
															"end": 1884,
															"name": "ISZERO"
														},
														{
															"begin": 1845,
															"end": 1884,
															"name": "DUP2"
														},
														{
															"begin": 1845,
															"end": 1884,
															"name": "MSTORE"
														},
														{
															"begin": 1845,
															"end": 1884,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 1845,
															"end": 1884,
															"name": "ADD"
														},
														{
															"begin": 1845,
															"end": 1884,
															"name": "SWAP2"
														},
														{
															"begin": 1845,
															"end": 1884,
															"name": "POP"
														},
														{
															"begin": 1845,
															"end": 1884,
															"name": "POP"
														},
														{
															"begin": 1845,
															"end": 1884,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 1845,
															"end": 1884,
															"name": "MLOAD"
														},
														{
															"begin": 1845,
															"end": 1884,
															"name": "DUP1"
														},
														{
															"begin": 1845,
															"end": 1884,
															"name": "SWAP2"
														},
														{
															"begin": 1845,
															"end": 1884,
															"name": "SUB"
														},
														{
															"begin": 1845,
															"end": 1884,
															"name": "SWAP1"
														},
														{
															"begin": 1845,
															"end": 1884,
															"name": "RETURN"
														},
														{
															"begin": 18178,
															"end": 18400,
															"name": "tag",
															"value": "5"
														},
														{
															"begin": 18178,
															"end": 18400,
															"name": "JUMPDEST"
														},
														{
															"begin": 18178,
															"end": 18400,
															"name": "CALLVALUE"
														},
														{
															"begin": 18178,
															"end": 18400,
															"name": "ISZERO"
														},
														{
															"begin": 18178,
															"end": 18400,
															"name": "PUSH [tag]",
															"value": "26"
														},
														{
															"begin": 18178,
															"end": 18400,
															"name": "JUMPI"
														},
														{
															"begin": 18178,
															"end": 18400,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 18178,
															"end": 18400,
															"name": "DUP1"
														},
														{
															"begin": 18178,
															"end": 18400,
															"name": "REVERT"
														},
														{
															"begin": 18178,
															"end": 18400,
															"name": "tag",
															"value": "26"
														},
														{
															"begin": 18178,
															"end": 18400,
															"name": "JUMPDEST"
														},
														{
															"begin": 18178,
															"end": 18400,
															"name": "PUSH [tag]",
															"value": "27"
														},
														{
															"begin": 18178,
															"end": 18400,
															"name": "PUSH [tag]",
															"value": "28"
														},
														{
															"begin": 18178,
															"end": 18400,
															"name": "JUMP"
														},
														{
															"begin": 18178,
															"end": 18400,
															"name": "tag",
															"value": "27"
														},
														{
															"begin": 18178,
															"end": 18400,
															"name": "JUMPDEST"
														},
														{
															"begin": 18178,
															"end": 18400,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 18178,
															"end": 18400,
															"name": "MLOAD"
														},
														{
															"begin": 18178,
															"end": 18400,
															"name": "DUP1"
														},
														{
															"begin": 18178,
															"end": 18400,
															"name": "DUP3"
														},
														{
															"begin": 18178,
															"end": 18400,
															"name": "ISZERO"
														},
														{
															"begin": 18178,
															"end": 18400,
															"name": "ISZERO"
														},
														{
															"begin": 18178,
															"end": 18400,
															"name": "ISZERO"
														},
														{
															"begin": 18178,
															"end": 18400,
															"name": "ISZERO"
														},
														{
															"begin": 18178,
															"end": 18400,
															"name": "DUP2"
														},
														{
															"begin": 18178,
															"end": 18400,
															"name": "MSTORE"
														},
														{
															"begin": 18178,
															"end": 18400,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 18178,
															"end": 18400,
															"name": "ADD"
														},
														{
															"begin": 18178,
															"end": 18400,
															"name": "SWAP2"
														},
														{
															"begin": 18178,
															"end": 18400,
															"name": "POP"
														},
														{
															"begin": 18178,
															"end": 18400,
															"name": "POP"
														},
														{
															"begin": 18178,
															"end": 18400,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 18178,
															"end": 18400,
															"name": "MLOAD"
														},
														{
															"begin": 18178,
															"end": 18400,
															"name": "DUP1"
														},
														{
															"begin": 18178,
															"end": 18400,
															"name": "SWAP2"
														},
														{
															"begin": 18178,
															"end": 18400,
															"name": "SUB"
														},
														{
															"begin": 18178,
															"end": 18400,
															"name": "SWAP1"
														},
														{
															"begin": 18178,
															"end": 18400,
															"name": "RETURN"
														},
														{
															"begin": 11651,
															"end": 12143,
															"name": "tag",
															"value": "6"
														},
														{
															"begin": 11651,
															"end": 12143,
															"name": "JUMPDEST"
														},
														{
															"begin": 11651,
															"end": 12143,
															"name": "CALLVALUE"
														},
														{
															"begin": 11651,
															"end": 12143,
															"name": "ISZERO"
														},
														{
															"begin": 11651,
															"end": 12143,
															"name": "PUSH [tag]",
															"value": "29"
														},
														{
															"begin": 11651,
															"end": 12143,
															"name": "JUMPI"
														},
														{
															"begin": 11651,
															"end": 12143,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 11651,
															"end": 12143,
															"name": "DUP1"
														},
														{
															"begin": 11651,
															"end": 12143,
															"name": "REVERT"
														},
														{
															"begin": 11651,
															"end": 12143,
															"name": "tag",
															"value": "29"
														},
														{
															"begin": 11651,
															"end": 12143,
															"name": "JUMPDEST"
														},
														{
															"begin": 11651,
															"end": 12143,
															"name": "PUSH [tag]",
															"value": "30"
														},
														{
															"begin": 11651,
															"end": 12143,
															"name": "PUSH [tag]",
															"value": "31"
														},
														{
															"begin": 11651,
															"end": 12143,
															"name": "JUMP"
														},
														{
															"begin": 11651,
															"end": 12143,
															"name": "tag",
															"value": "30"
														},
														{
															"begin": 11651,
															"end": 12143,
															"name": "JUMPDEST"
														},
														{
															"begin": 11651,
															"end": 12143,
															"name": "STOP"
														},
														{
															"begin": 8897,
															"end": 11308,
															"name": "tag",
															"value": "7"
														},
														{
															"begin": 8897,
															"end": 11308,
															"name": "JUMPDEST"
														},
														{
															"begin": 8897,
															"end": 11308,
															"name": "PUSH [tag]",
															"value": "32"
														},
														{
															"begin": 8897,
															"end": 11308,
															"name": "PUSH [tag]",
															"value": "33"
														},
														{
															"begin": 8897,
															"end": 11308,
															"name": "JUMP"
														},
														{
															"begin": 8897,
															"end": 11308,
															"name": "tag",
															"value": "32"
														},
														{
															"begin": 8897,
															"end": 11308,
															"name": "JUMPDEST"
														},
														{
															"begin": 8897,
															"end": 11308,
															"name": "STOP"
														},
														{
															"begin": 14537,
															"end": 15150,
															"name": "tag",
															"value": "8"
														},
														{
															"begin": 14537,
															"end": 15150,
															"name": "JUMPDEST"
														},
														{
															"begin": 14537,
															"end": 15150,
															"name": "CALLVALUE"
														},
														{
															"begin": 14537,
															"end": 15150,
															"name": "ISZERO"
														},
														{
															"begin": 14537,
															"end": 15150,
															"name": "PUSH [tag]",
															"value": "34"
														},
														{
															"begin": 14537,
															"end": 15150,
															"name": "JUMPI"
														},
														{
															"begin": 14537,
															"end": 15150,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 14537,
															"end": 15150,
															"name": "DUP1"
														},
														{
															"begin": 14537,
															"end": 15150,
															"name": "REVERT"
														},
														{
															"begin": 14537,
															"end": 15150,
															"name": "tag",
															"value": "34"
														},
														{
															"begin": 14537,
															"end": 15150,
															"name": "JUMPDEST"
														},
														{
															"begin": 14537,
															"end": 15150,
															"name": "PUSH [tag]",
															"value": "35"
														},
														{
															"begin": 14537,
															"end": 15150,
															"name": "PUSH [tag]",
															"value": "36"
														},
														{
															"begin": 14537,
															"end": 15150,
															"name": "JUMP"
														},
														{
															"begin": 14537,
															"end": 15150,
															"name": "tag",
															"value": "35"
														},
														{
															"begin": 14537,
															"end": 15150,
															"name": "JUMPDEST"
														},
														{
															"begin": 14537,
															"end": 15150,
															"name": "STOP"
														},
														{
															"begin": 15462,
															"end": 16416,
															"name": "tag",
															"value": "9"
														},
														{
															"begin": 15462,
															"end": 16416,
															"name": "JUMPDEST"
														},
														{
															"begin": 15462,
															"end": 16416,
															"name": "CALLVALUE"
														},
														{
															"begin": 15462,
															"end": 16416,
															"name": "ISZERO"
														},
														{
															"begin": 15462,
															"end": 16416,
															"name": "PUSH [tag]",
															"value": "37"
														},
														{
															"begin": 15462,
															"end": 16416,
															"name": "JUMPI"
														},
														{
															"begin": 15462,
															"end": 16416,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 15462,
															"end": 16416,
															"name": "DUP1"
														},
														{
															"begin": 15462,
															"end": 16416,
															"name": "REVERT"
														},
														{
															"begin": 15462,
															"end": 16416,
															"name": "tag",
															"value": "37"
														},
														{
															"begin": 15462,
															"end": 16416,
															"name": "JUMPDEST"
														},
														{
															"begin": 15462,
															"end": 16416,
															"name": "PUSH [tag]",
															"value": "38"
														},
														{
															"begin": 15462,
															"end": 16416,
															"name": "PUSH [tag]",
															"value": "39"
														},
														{
															"begin": 15462,
															"end": 16416,
															"name": "JUMP"
														},
														{
															"begin": 15462,
															"end": 16416,
															"name": "tag",
															"value": "38"
														},
														{
															"begin": 15462,
															"end": 16416,
															"name": "JUMPDEST"
														},
														{
															"begin": 15462,
															"end": 16416,
															"name": "STOP"
														},
														{
															"begin": 151,
															"end": 225,
															"name": "tag",
															"value": "10"
														},
														{
															"begin": 151,
															"end": 225,
															"name": "JUMPDEST"
														},
														{
															"begin": 151,
															"end": 225,
															"name": "CALLVALUE"
														},
														{
															"begin": 151,
															"end": 225,
															"name": "ISZERO"
														},
														{
															"begin": 151,
															"end": 225,
															"name": "PUSH [tag]",
															"value": "40"
														},
														{
															"begin": 151,
															"end": 225,
															"name": "JUMPI"
														},
														{
															"begin": 151,
															"end": 225,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 151,
															"end": 225,
															"name": "DUP1"
														},
														{
															"begin": 151,
															"end": 225,
															"name": "REVERT"
														},
														{
															"begin": 151,
															"end": 225,
															"name": "tag",
															"value": "40"
														},
														{
															"begin": 151,
															"end": 225,
															"name": "JUMPDEST"
														},
														{
															"begin": 151,
															"end": 225,
															"name": "PUSH [tag]",
															"value": "41"
														},
														{
															"begin": 151,
															"end": 225,
															"name": "PUSH [tag]",
															"value": "42"
														},
														{
															"begin": 151,
															"end": 225,
															"name": "JUMP"
														},
														{
															"begin": 151,
															"end": 225,
															"name": "tag",
															"value": "41"
														},
														{
															"begin": 151,
															"end": 225,
															"name": "JUMPDEST"
														},
														{
															"begin": 151,
															"end": 225,
															"name": "STOP"
														},
														{
															"begin": 54,
															"end": 74,
															"name": "tag",
															"value": "11"
														},
														{
															"begin": 54,
															"end": 74,
															"name": "JUMPDEST"
														},
														{
															"begin": 54,
															"end": 74,
															"name": "CALLVALUE"
														},
														{
															"begin": 54,
															"end": 74,
															"name": "ISZERO"
														},
														{
															"begin": 54,
															"end": 74,
															"name": "PUSH [tag]",
															"value": "43"
														},
														{
															"begin": 54,
															"end": 74,
															"name": "JUMPI"
														},
														{
															"begin": 54,
															"end": 74,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 54,
															"end": 74,
															"name": "DUP1"
														},
														{
															"begin": 54,
															"end": 74,
															"name": "REVERT"
														},
														{
															"begin": 54,
															"end": 74,
															"name": "tag",
															"value": "43"
														},
														{
															"begin": 54,
															"end": 74,
															"name": "JUMPDEST"
														},
														{
															"begin": 54,
															"end": 74,
															"name": "PUSH [tag]",
															"value": "44"
														},
														{
															"begin": 54,
															"end": 74,
															"name": "PUSH [tag]",
															"value": "45"
														},
														{
															"begin": 54,
															"end": 74,
															"name": "JUMP"
														},
														{
															"begin": 54,
															"end": 74,
															"name": "tag",
															"value": "44"
														},
														{
															"begin": 54,
															"end": 74,
															"name": "JUMPDEST"
														},
														{
															"begin": 54,
															"end": 74,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 54,
															"end": 74,
															"name": "MLOAD"
														},
														{
															"begin": 54,
															"end": 74,
															"name": "DUP1"
														},
														{
															"begin": 54,
															"end": 74,
															"name": "DUP3"
														},
														{
															"begin": 54,
															"end": 74,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 54,
															"end": 74,
															"name": "AND"
														},
														{
															"begin": 54,
															"end": 74,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 54,
															"end": 74,
															"name": "AND"
														},
														{
															"begin": 54,
															"end": 74,
															"name": "DUP2"
														},
														{
															"begin": 54,
															"end": 74,
															"name": "MSTORE"
														},
														{
															"begin": 54,
															"end": 74,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 54,
															"end": 74,
															"name": "ADD"
														},
														{
															"begin": 54,
															"end": 74,
															"name": "SWAP2"
														},
														{
															"begin": 54,
															"end": 74,
															"name": "POP"
														},
														{
															"begin": 54,
															"end": 74,
															"name": "POP"
														},
														{
															"begin": 54,
															"end": 74,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 54,
															"end": 74,
															"name": "MLOAD"
														},
														{
															"begin": 54,
															"end": 74,
															"name": "DUP1"
														},
														{
															"begin": 54,
															"end": 74,
															"name": "SWAP2"
														},
														{
															"begin": 54,
															"end": 74,
															"name": "SUB"
														},
														{
															"begin": 54,
															"end": 74,
															"name": "SWAP1"
														},
														{
															"begin": 54,
															"end": 74,
															"name": "RETURN"
														},
														{
															"begin": 16494,
															"end": 17099,
															"name": "tag",
															"value": "12"
														},
														{
															"begin": 16494,
															"end": 17099,
															"name": "JUMPDEST"
														},
														{
															"begin": 16494,
															"end": 17099,
															"name": "CALLVALUE"
														},
														{
															"begin": 16494,
															"end": 17099,
															"name": "ISZERO"
														},
														{
															"begin": 16494,
															"end": 17099,
															"name": "PUSH [tag]",
															"value": "46"
														},
														{
															"begin": 16494,
															"end": 17099,
															"name": "JUMPI"
														},
														{
															"begin": 16494,
															"end": 17099,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 16494,
															"end": 17099,
															"name": "DUP1"
														},
														{
															"begin": 16494,
															"end": 17099,
															"name": "REVERT"
														},
														{
															"begin": 16494,
															"end": 17099,
															"name": "tag",
															"value": "46"
														},
														{
															"begin": 16494,
															"end": 17099,
															"name": "JUMPDEST"
														},
														{
															"begin": 16494,
															"end": 17099,
															"name": "PUSH [tag]",
															"value": "47"
														},
														{
															"begin": 16494,
															"end": 17099,
															"name": "PUSH [tag]",
															"value": "48"
														},
														{
															"begin": 16494,
															"end": 17099,
															"name": "JUMP"
														},
														{
															"begin": 16494,
															"end": 17099,
															"name": "tag",
															"value": "47"
														},
														{
															"begin": 16494,
															"end": 17099,
															"name": "JUMPDEST"
														},
														{
															"begin": 16494,
															"end": 17099,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 16494,
															"end": 17099,
															"name": "MLOAD"
														},
														{
															"begin": 16494,
															"end": 17099,
															"name": "DUP1"
														},
														{
															"begin": 16494,
															"end": 17099,
															"name": "DUP3"
														},
														{
															"begin": 16494,
															"end": 17099,
															"name": "ISZERO"
														},
														{
															"begin": 16494,
															"end": 17099,
															"name": "ISZERO"
														},
														{
															"begin": 16494,
															"end": 17099,
															"name": "ISZERO"
														},
														{
															"begin": 16494,
															"end": 17099,
															"name": "ISZERO"
														},
														{
															"begin": 16494,
															"end": 17099,
															"name": "DUP2"
														},
														{
															"begin": 16494,
															"end": 17099,
															"name": "MSTORE"
														},
														{
															"begin": 16494,
															"end": 17099,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 16494,
															"end": 17099,
															"name": "ADD"
														},
														{
															"begin": 16494,
															"end": 17099,
															"name": "SWAP2"
														},
														{
															"begin": 16494,
															"end": 17099,
															"name": "POP"
														},
														{
															"begin": 16494,
															"end": 17099,
															"name": "POP"
														},
														{
															"begin": 16494,
															"end": 17099,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 16494,
															"end": 17099,
															"name": "MLOAD"
														},
														{
															"begin": 16494,
															"end": 17099,
															"name": "DUP1"
														},
														{
															"begin": 16494,
															"end": 17099,
															"name": "SWAP2"
														},
														{
															"begin": 16494,
															"end": 17099,
															"name": "SUB"
														},
														{
															"begin": 16494,
															"end": 17099,
															"name": "SWAP1"
														},
														{
															"begin": 16494,
															"end": 17099,
															"name": "RETURN"
														},
														{
															"begin": 7072,
															"end": 8788,
															"name": "tag",
															"value": "13"
														},
														{
															"begin": 7072,
															"end": 8788,
															"name": "JUMPDEST"
														},
														{
															"begin": 7072,
															"end": 8788,
															"name": "PUSH [tag]",
															"value": "49"
														},
														{
															"begin": 7072,
															"end": 8788,
															"name": "PUSH [tag]",
															"value": "50"
														},
														{
															"begin": 7072,
															"end": 8788,
															"name": "JUMP"
														},
														{
															"begin": 7072,
															"end": 8788,
															"name": "tag",
															"value": "49"
														},
														{
															"begin": 7072,
															"end": 8788,
															"name": "JUMPDEST"
														},
														{
															"begin": 7072,
															"end": 8788,
															"name": "STOP"
														},
														{
															"begin": 12478,
															"end": 13696,
															"name": "tag",
															"value": "14"
														},
														{
															"begin": 12478,
															"end": 13696,
															"name": "JUMPDEST"
														},
														{
															"begin": 12478,
															"end": 13696,
															"name": "CALLVALUE"
														},
														{
															"begin": 12478,
															"end": 13696,
															"name": "ISZERO"
														},
														{
															"begin": 12478,
															"end": 13696,
															"name": "PUSH [tag]",
															"value": "51"
														},
														{
															"begin": 12478,
															"end": 13696,
															"name": "JUMPI"
														},
														{
															"begin": 12478,
															"end": 13696,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 12478,
															"end": 13696,
															"name": "DUP1"
														},
														{
															"begin": 12478,
															"end": 13696,
															"name": "REVERT"
														},
														{
															"begin": 12478,
															"end": 13696,
															"name": "tag",
															"value": "51"
														},
														{
															"begin": 12478,
															"end": 13696,
															"name": "JUMPDEST"
														},
														{
															"begin": 12478,
															"end": 13696,
															"name": "PUSH [tag]",
															"value": "52"
														},
														{
															"begin": 12478,
															"end": 13696,
															"name": "PUSH [tag]",
															"value": "53"
														},
														{
															"begin": 12478,
															"end": 13696,
															"name": "JUMP"
														},
														{
															"begin": 12478,
															"end": 13696,
															"name": "tag",
															"value": "52"
														},
														{
															"begin": 12478,
															"end": 13696,
															"name": "JUMPDEST"
														},
														{
															"begin": 12478,
															"end": 13696,
															"name": "STOP"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "tag",
															"value": "15"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "JUMPDEST"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "CALLVALUE"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "ISZERO"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "PUSH [tag]",
															"value": "54"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "JUMPI"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "DUP1"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "REVERT"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "tag",
															"value": "54"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "JUMPDEST"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "PUSH [tag]",
															"value": "55"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "PUSH [tag]",
															"value": "56"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "JUMP"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "tag",
															"value": "55"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "JUMPDEST"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "MLOAD"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "DUP1"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "DUP13"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "AND"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "AND"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "DUP2"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "MSTORE"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "ADD"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "DUP12"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "NOT"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "AND"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "NOT"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "AND"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "DUP2"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "MSTORE"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "ADD"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "DUP11"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "DUP2"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "MSTORE"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "ADD"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "DUP10"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "DUP2"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "MSTORE"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "ADD"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "DUP9"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "DUP2"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "MSTORE"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "ADD"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "DUP8"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "DUP2"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "MSTORE"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "ADD"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "DUP7"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "DUP2"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "MSTORE"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "ADD"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "DUP6"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "DUP2"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "MSTORE"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "ADD"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "DUP5"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "PUSH",
															"value": "5"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "DUP2"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "GT"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "ISZERO"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "PUSH [tag]",
															"value": "57"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "JUMPI"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "INVALID"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "tag",
															"value": "57"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "JUMPDEST"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "PUSH",
															"value": "FF"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "AND"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "DUP2"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "MSTORE"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "ADD"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "DUP4"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "ISZERO"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "ISZERO"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "ISZERO"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "ISZERO"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "DUP2"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "MSTORE"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "ADD"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "DUP3"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "DUP2"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "MSTORE"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "ADD"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "SWAP12"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "POP"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "POP"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "POP"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "POP"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "POP"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "POP"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "POP"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "POP"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "POP"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "POP"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "POP"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "POP"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "MLOAD"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "DUP1"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "SWAP2"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "SUB"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "SWAP1"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "RETURN"
														},
														{
															"begin": 237,
															"end": 341,
															"name": "tag",
															"value": "16"
														},
														{
															"begin": 237,
															"end": 341,
															"name": "JUMPDEST"
														},
														{
															"begin": 237,
															"end": 341,
															"name": "CALLVALUE"
														},
														{
															"begin": 237,
															"end": 341,
															"name": "ISZERO"
														},
														{
															"begin": 237,
															"end": 341,
															"name": "PUSH [tag]",
															"value": "58"
														},
														{
															"begin": 237,
															"end": 341,
															"name": "JUMPI"
														},
														{
															"begin": 237,
															"end": 341,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 237,
															"end": 341,
															"name": "DUP1"
														},
														{
															"begin": 237,
															"end": 341,
															"name": "REVERT"
														},
														{
															"begin": 237,
															"end": 341,
															"name": "tag",
															"value": "58"
														},
														{
															"begin": 237,
															"end": 341,
															"name": "JUMPDEST"
														},
														{
															"begin": 237,
															"end": 341,
															"name": "PUSH [tag]",
															"value": "59"
														},
														{
															"begin": 237,
															"end": 341,
															"name": "PUSH",
															"value": "4"
														},
														{
															"begin": 237,
															"end": 341,
															"name": "DUP1"
														},
														{
															"begin": 237,
															"end": 341,
															"name": "DUP1"
														},
														{
															"begin": 237,
															"end": 341,
															"name": "CALLDATALOAD"
														},
														{
															"begin": 237,
															"end": 341,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 237,
															"end": 341,
															"name": "AND"
														},
														{
															"begin": 237,
															"end": 341,
															"name": "SWAP1"
														},
														{
															"begin": 237,
															"end": 341,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 237,
															"end": 341,
															"name": "ADD"
														},
														{
															"begin": 237,
															"end": 341,
															"name": "SWAP1"
														},
														{
															"begin": 237,
															"end": 341,
															"name": "SWAP2"
														},
														{
															"begin": 237,
															"end": 341,
															"name": "SWAP1"
														},
														{
															"begin": 237,
															"end": 341,
															"name": "POP"
														},
														{
															"begin": 237,
															"end": 341,
															"name": "POP"
														},
														{
															"begin": 237,
															"end": 341,
															"name": "PUSH [tag]",
															"value": "60"
														},
														{
															"begin": 237,
															"end": 341,
															"name": "JUMP"
														},
														{
															"begin": 237,
															"end": 341,
															"name": "tag",
															"value": "59"
														},
														{
															"begin": 237,
															"end": 341,
															"name": "JUMPDEST"
														},
														{
															"begin": 237,
															"end": 341,
															"name": "STOP"
														},
														{
															"begin": 6810,
															"end": 6900,
															"name": "tag",
															"value": "19"
														},
														{
															"begin": 6810,
															"end": 6900,
															"name": "JUMPDEST"
														},
														{
															"begin": 6853,
															"end": 6860,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 6880,
															"end": 6884,
															"name": "ADDRESS"
														},
														{
															"begin": 6880,
															"end": 6892,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 6880,
															"end": 6892,
															"name": "AND"
														},
														{
															"begin": 6880,
															"end": 6892,
															"name": "BALANCE"
														},
														{
															"begin": 6873,
															"end": 6892,
															"name": "SWAP1"
														},
														{
															"begin": 6873,
															"end": 6892,
															"name": "POP"
														},
														{
															"begin": 6810,
															"end": 6900,
															"name": "SWAP1"
														},
														{
															"begin": 6810,
															"end": 6900,
															"name": "JUMP",
															"value": "[out]"
														},
														{
															"begin": 17799,
															"end": 17989,
															"name": "tag",
															"value": "22"
														},
														{
															"begin": 17799,
															"end": 17989,
															"name": "JUMPDEST"
														},
														{
															"begin": 17862,
															"end": 17866,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 232,
															"end": 237,
															"name": "DUP1"
														},
														{
															"begin": 232,
															"end": 237,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 232,
															"end": 237,
															"name": "SWAP1"
														},
														{
															"begin": 232,
															"end": 237,
															"name": "SLOAD"
														},
														{
															"begin": 232,
															"end": 237,
															"name": "SWAP1"
														},
														{
															"begin": 232,
															"end": 237,
															"name": "PUSH",
															"value": "100"
														},
														{
															"begin": 232,
															"end": 237,
															"name": "EXP"
														},
														{
															"begin": 232,
															"end": 237,
															"name": "SWAP1"
														},
														{
															"begin": 232,
															"end": 237,
															"name": "DIV"
														},
														{
															"begin": 232,
															"end": 237,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 232,
															"end": 237,
															"name": "AND"
														},
														{
															"begin": 218,
															"end": 237,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 218,
															"end": 237,
															"name": "AND"
														},
														{
															"begin": 218,
															"end": 228,
															"name": "CALLER"
														},
														{
															"begin": 218,
															"end": 237,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 218,
															"end": 237,
															"name": "AND"
														},
														{
															"begin": 218,
															"end": 237,
															"name": "EQ"
														},
														{
															"begin": 210,
															"end": 238,
															"name": "ISZERO"
														},
														{
															"begin": 210,
															"end": 238,
															"name": "ISZERO"
														},
														{
															"begin": 210,
															"end": 238,
															"name": "PUSH [tag]",
															"value": "63"
														},
														{
															"begin": 210,
															"end": 238,
															"name": "JUMPI"
														},
														{
															"begin": 210,
															"end": 238,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 210,
															"end": 238,
															"name": "DUP1"
														},
														{
															"begin": 210,
															"end": 238,
															"name": "REVERT"
														},
														{
															"begin": 210,
															"end": 238,
															"name": "tag",
															"value": "63"
														},
														{
															"begin": 210,
															"end": 238,
															"name": "JUMPDEST"
														},
														{
															"begin": 17887,
															"end": 17893,
															"name": "DUP2"
														},
														{
															"begin": 17879,
															"end": 17884,
															"name": "PUSH",
															"value": "C"
														},
														{
															"begin": 17879,
															"end": 17884,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": 17879,
															"end": 17893,
															"name": "PUSH",
															"value": "100"
														},
														{
															"begin": 17879,
															"end": 17893,
															"name": "EXP"
														},
														{
															"begin": 17879,
															"end": 17893,
															"name": "DUP2"
														},
														{
															"begin": 17879,
															"end": 17893,
															"name": "SLOAD"
														},
														{
															"begin": 17879,
															"end": 17893,
															"name": "DUP2"
														},
														{
															"begin": 17879,
															"end": 17893,
															"name": "PUSH",
															"value": "FF"
														},
														{
															"begin": 17879,
															"end": 17893,
															"name": "MUL"
														},
														{
															"begin": 17879,
															"end": 17893,
															"name": "NOT"
														},
														{
															"begin": 17879,
															"end": 17893,
															"name": "AND"
														},
														{
															"begin": 17879,
															"end": 17893,
															"name": "SWAP1"
														},
														{
															"begin": 17879,
															"end": 17893,
															"name": "DUP4"
														},
														{
															"begin": 17879,
															"end": 17893,
															"name": "PUSH",
															"value": "5"
														},
														{
															"begin": 17879,
															"end": 17893,
															"name": "DUP2"
														},
														{
															"begin": 17879,
															"end": 17893,
															"name": "GT"
														},
														{
															"begin": 17879,
															"end": 17893,
															"name": "ISZERO"
														},
														{
															"begin": 17879,
															"end": 17893,
															"name": "PUSH [tag]",
															"value": "65"
														},
														{
															"begin": 17879,
															"end": 17893,
															"name": "JUMPI"
														},
														{
															"begin": 17879,
															"end": 17893,
															"name": "INVALID"
														},
														{
															"begin": 17879,
															"end": 17893,
															"name": "tag",
															"value": "65"
														},
														{
															"begin": 17879,
															"end": 17893,
															"name": "JUMPDEST"
														},
														{
															"begin": 17879,
															"end": 17893,
															"name": "MUL"
														},
														{
															"begin": 17879,
															"end": 17893,
															"name": "OR"
														},
														{
															"begin": 17879,
															"end": 17893,
															"name": "SWAP1"
														},
														{
															"begin": 17879,
															"end": 17893,
															"name": "SSTORE"
														},
														{
															"begin": 17879,
															"end": 17893,
															"name": "POP"
														},
														{
															"begin": 17965,
															"end": 17980,
															"name": "TIMESTAMP"
														},
														{
															"begin": 17958,
															"end": 17963,
															"name": "PUSH",
															"value": "C"
														},
														{
															"begin": 17958,
															"end": 17963,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": 17958,
															"end": 17963,
															"name": "SWAP1"
														},
														{
															"begin": 17958,
															"end": 17963,
															"name": "SLOAD"
														},
														{
															"begin": 17958,
															"end": 17963,
															"name": "SWAP1"
														},
														{
															"begin": 17958,
															"end": 17963,
															"name": "PUSH",
															"value": "100"
														},
														{
															"begin": 17958,
															"end": 17963,
															"name": "EXP"
														},
														{
															"begin": 17958,
															"end": 17963,
															"name": "SWAP1"
														},
														{
															"begin": 17958,
															"end": 17963,
															"name": "DIV"
														},
														{
															"begin": 17958,
															"end": 17963,
															"name": "PUSH",
															"value": "FF"
														},
														{
															"begin": 17958,
															"end": 17963,
															"name": "AND"
														},
														{
															"begin": 17936,
															"end": 17981,
															"name": "PUSH",
															"value": "5"
														},
														{
															"begin": 17936,
															"end": 17981,
															"name": "DUP2"
														},
														{
															"begin": 17936,
															"end": 17981,
															"name": "GT"
														},
														{
															"begin": 17936,
															"end": 17981,
															"name": "ISZERO"
														},
														{
															"begin": 17936,
															"end": 17981,
															"name": "PUSH [tag]",
															"value": "66"
														},
														{
															"begin": 17936,
															"end": 17981,
															"name": "JUMPI"
														},
														{
															"begin": 17936,
															"end": 17981,
															"name": "INVALID"
														},
														{
															"begin": 17936,
															"end": 17981,
															"name": "tag",
															"value": "66"
														},
														{
															"begin": 17936,
															"end": 17981,
															"name": "JUMPDEST"
														},
														{
															"begin": 17936,
															"end": 17981,
															"name": "PUSH",
															"value": "AAAE373901E745122C2E0925AD006227969C6CD190B7D5EA2FB7FDBD1D955B35"
														},
														{
															"begin": 17936,
															"end": 17981,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 17936,
															"end": 17981,
															"name": "MLOAD"
														},
														{
															"begin": 17936,
															"end": 17981,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 17936,
															"end": 17981,
															"name": "MLOAD"
														},
														{
															"begin": 17936,
															"end": 17981,
															"name": "DUP1"
														},
														{
															"begin": 17936,
															"end": 17981,
															"name": "SWAP2"
														},
														{
															"begin": 17936,
															"end": 17981,
															"name": "SUB"
														},
														{
															"begin": 17936,
															"end": 17981,
															"name": "SWAP1"
														},
														{
															"begin": 17936,
															"end": 17981,
															"name": "LOG3"
														},
														{
															"begin": 17799,
															"end": 17989,
															"name": "SWAP2"
														},
														{
															"begin": 17799,
															"end": 17989,
															"name": "SWAP1"
														},
														{
															"begin": 17799,
															"end": 17989,
															"name": "POP"
														},
														{
															"begin": 17799,
															"end": 17989,
															"name": "JUMP",
															"value": "[out]"
														},
														{
															"begin": 1845,
															"end": 1884,
															"name": "tag",
															"value": "25"
														},
														{
															"begin": 1845,
															"end": 1884,
															"name": "JUMPDEST"
														},
														{
															"begin": 1845,
															"end": 1884,
															"name": "PUSH",
															"value": "D"
														},
														{
															"begin": 1845,
															"end": 1884,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 1845,
															"end": 1884,
															"name": "MSTORE"
														},
														{
															"begin": 1845,
															"end": 1884,
															"name": "DUP1"
														},
														{
															"begin": 1845,
															"end": 1884,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 1845,
															"end": 1884,
															"name": "MSTORE"
														},
														{
															"begin": 1845,
															"end": 1884,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 1845,
															"end": 1884,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 1845,
															"end": 1884,
															"name": "KECCAK256"
														},
														{
															"begin": 1845,
															"end": 1884,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 1845,
															"end": 1884,
															"name": "SWAP2"
														},
														{
															"begin": 1845,
															"end": 1884,
															"name": "POP"
														},
														{
															"begin": 1845,
															"end": 1884,
															"name": "SLOAD"
														},
														{
															"begin": 1845,
															"end": 1884,
															"name": "SWAP1"
														},
														{
															"begin": 1845,
															"end": 1884,
															"name": "PUSH",
															"value": "100"
														},
														{
															"begin": 1845,
															"end": 1884,
															"name": "EXP"
														},
														{
															"begin": 1845,
															"end": 1884,
															"name": "SWAP1"
														},
														{
															"begin": 1845,
															"end": 1884,
															"name": "DIV"
														},
														{
															"begin": 1845,
															"end": 1884,
															"name": "PUSH",
															"value": "FF"
														},
														{
															"begin": 1845,
															"end": 1884,
															"name": "AND"
														},
														{
															"begin": 1845,
															"end": 1884,
															"name": "DUP2"
														},
														{
															"begin": 1845,
															"end": 1884,
															"name": "JUMP",
															"value": "[out]"
														},
														{
															"begin": 18178,
															"end": 18400,
															"name": "tag",
															"value": "28"
														},
														{
															"begin": 18178,
															"end": 18400,
															"name": "JUMPDEST"
														},
														{
															"begin": 18230,
															"end": 18234,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 232,
															"end": 237,
															"name": "DUP1"
														},
														{
															"begin": 232,
															"end": 237,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 232,
															"end": 237,
															"name": "SWAP1"
														},
														{
															"begin": 232,
															"end": 237,
															"name": "SLOAD"
														},
														{
															"begin": 232,
															"end": 237,
															"name": "SWAP1"
														},
														{
															"begin": 232,
															"end": 237,
															"name": "PUSH",
															"value": "100"
														},
														{
															"begin": 232,
															"end": 237,
															"name": "EXP"
														},
														{
															"begin": 232,
															"end": 237,
															"name": "SWAP1"
														},
														{
															"begin": 232,
															"end": 237,
															"name": "DIV"
														},
														{
															"begin": 232,
															"end": 237,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 232,
															"end": 237,
															"name": "AND"
														},
														{
															"begin": 218,
															"end": 237,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 218,
															"end": 237,
															"name": "AND"
														},
														{
															"begin": 218,
															"end": 228,
															"name": "CALLER"
														},
														{
															"begin": 218,
															"end": 237,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 218,
															"end": 237,
															"name": "AND"
														},
														{
															"begin": 218,
															"end": 237,
															"name": "EQ"
														},
														{
															"begin": 210,
															"end": 238,
															"name": "ISZERO"
														},
														{
															"begin": 210,
															"end": 238,
															"name": "ISZERO"
														},
														{
															"begin": 210,
															"end": 238,
															"name": "PUSH [tag]",
															"value": "68"
														},
														{
															"begin": 210,
															"end": 238,
															"name": "JUMPI"
														},
														{
															"begin": 210,
															"end": 238,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 210,
															"end": 238,
															"name": "DUP1"
														},
														{
															"begin": 210,
															"end": 238,
															"name": "REVERT"
														},
														{
															"begin": 210,
															"end": 238,
															"name": "tag",
															"value": "68"
														},
														{
															"begin": 210,
															"end": 238,
															"name": "JUMPDEST"
														},
														{
															"begin": 18257,
															"end": 18263,
															"name": "PUSH",
															"value": "C"
														},
														{
															"begin": 18257,
															"end": 18263,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 18257,
															"end": 18263,
															"name": "SWAP1"
														},
														{
															"begin": 18257,
															"end": 18263,
															"name": "SLOAD"
														},
														{
															"begin": 18257,
															"end": 18263,
															"name": "SWAP1"
														},
														{
															"begin": 18257,
															"end": 18263,
															"name": "PUSH",
															"value": "100"
														},
														{
															"begin": 18257,
															"end": 18263,
															"name": "EXP"
														},
														{
															"begin": 18257,
															"end": 18263,
															"name": "SWAP1"
														},
														{
															"begin": 18257,
															"end": 18263,
															"name": "DIV"
														},
														{
															"begin": 18257,
															"end": 18263,
															"name": "PUSH",
															"value": "FF"
														},
														{
															"begin": 18257,
															"end": 18263,
															"name": "AND"
														},
														{
															"begin": 18256,
															"end": 18263,
															"name": "ISZERO"
														},
														{
															"begin": 18247,
															"end": 18253,
															"name": "PUSH",
															"value": "C"
														},
														{
															"begin": 18247,
															"end": 18253,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 18247,
															"end": 18263,
															"name": "PUSH",
															"value": "100"
														},
														{
															"begin": 18247,
															"end": 18263,
															"name": "EXP"
														},
														{
															"begin": 18247,
															"end": 18263,
															"name": "DUP2"
														},
														{
															"begin": 18247,
															"end": 18263,
															"name": "SLOAD"
														},
														{
															"begin": 18247,
															"end": 18263,
															"name": "DUP2"
														},
														{
															"begin": 18247,
															"end": 18263,
															"name": "PUSH",
															"value": "FF"
														},
														{
															"begin": 18247,
															"end": 18263,
															"name": "MUL"
														},
														{
															"begin": 18247,
															"end": 18263,
															"name": "NOT"
														},
														{
															"begin": 18247,
															"end": 18263,
															"name": "AND"
														},
														{
															"begin": 18247,
															"end": 18263,
															"name": "SWAP1"
														},
														{
															"begin": 18247,
															"end": 18263,
															"name": "DUP4"
														},
														{
															"begin": 18247,
															"end": 18263,
															"name": "ISZERO"
														},
														{
															"begin": 18247,
															"end": 18263,
															"name": "ISZERO"
														},
														{
															"begin": 18247,
															"end": 18263,
															"name": "MUL"
														},
														{
															"begin": 18247,
															"end": 18263,
															"name": "OR"
														},
														{
															"begin": 18247,
															"end": 18263,
															"name": "SWAP1"
														},
														{
															"begin": 18247,
															"end": 18263,
															"name": "SSTORE"
														},
														{
															"begin": 18247,
															"end": 18263,
															"name": "POP"
														},
														{
															"begin": 18350,
															"end": 18365,
															"name": "TIMESTAMP"
														},
														{
															"begin": 18342,
															"end": 18348,
															"name": "PUSH",
															"value": "C"
														},
														{
															"begin": 18342,
															"end": 18348,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 18342,
															"end": 18348,
															"name": "SWAP1"
														},
														{
															"begin": 18342,
															"end": 18348,
															"name": "SLOAD"
														},
														{
															"begin": 18342,
															"end": 18348,
															"name": "SWAP1"
														},
														{
															"begin": 18342,
															"end": 18348,
															"name": "PUSH",
															"value": "100"
														},
														{
															"begin": 18342,
															"end": 18348,
															"name": "EXP"
														},
														{
															"begin": 18342,
															"end": 18348,
															"name": "SWAP1"
														},
														{
															"begin": 18342,
															"end": 18348,
															"name": "DIV"
														},
														{
															"begin": 18342,
															"end": 18348,
															"name": "PUSH",
															"value": "FF"
														},
														{
															"begin": 18342,
															"end": 18348,
															"name": "AND"
														},
														{
															"begin": 18314,
															"end": 18366,
															"name": "ISZERO"
														},
														{
															"begin": 18314,
															"end": 18366,
															"name": "ISZERO"
														},
														{
															"begin": 18314,
															"end": 18366,
															"name": "PUSH",
															"value": "160914EA27C60AA29A5F3A69D74E6069869DE36E38939DE1E0A66B921D8623D2"
														},
														{
															"begin": 18314,
															"end": 18366,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 18314,
															"end": 18366,
															"name": "MLOAD"
														},
														{
															"begin": 18314,
															"end": 18366,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 18314,
															"end": 18366,
															"name": "MLOAD"
														},
														{
															"begin": 18314,
															"end": 18366,
															"name": "DUP1"
														},
														{
															"begin": 18314,
															"end": 18366,
															"name": "SWAP2"
														},
														{
															"begin": 18314,
															"end": 18366,
															"name": "SUB"
														},
														{
															"begin": 18314,
															"end": 18366,
															"name": "SWAP1"
														},
														{
															"begin": 18314,
															"end": 18366,
															"name": "LOG3"
														},
														{
															"begin": 18386,
															"end": 18392,
															"name": "PUSH",
															"value": "C"
														},
														{
															"begin": 18386,
															"end": 18392,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 18386,
															"end": 18392,
															"name": "SWAP1"
														},
														{
															"begin": 18386,
															"end": 18392,
															"name": "SLOAD"
														},
														{
															"begin": 18386,
															"end": 18392,
															"name": "SWAP1"
														},
														{
															"begin": 18386,
															"end": 18392,
															"name": "PUSH",
															"value": "100"
														},
														{
															"begin": 18386,
															"end": 18392,
															"name": "EXP"
														},
														{
															"begin": 18386,
															"end": 18392,
															"name": "SWAP1"
														},
														{
															"begin": 18386,
															"end": 18392,
															"name": "DIV"
														},
														{
															"begin": 18386,
															"end": 18392,
															"name": "PUSH",
															"value": "FF"
														},
														{
															"begin": 18386,
															"end": 18392,
															"name": "AND"
														},
														{
															"begin": 18379,
															"end": 18392,
															"name": "SWAP1"
														},
														{
															"begin": 18379,
															"end": 18392,
															"name": "POP"
														},
														{
															"begin": 18178,
															"end": 18400,
															"name": "SWAP1"
														},
														{
															"begin": 18178,
															"end": 18400,
															"name": "JUMP",
															"value": "[out]"
														},
														{
															"begin": 11651,
															"end": 12143,
															"name": "tag",
															"value": "31"
														},
														{
															"begin": 11651,
															"end": 12143,
															"name": "JUMPDEST"
														},
														{
															"begin": 3958,
															"end": 3962,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": 3948,
															"end": 3962,
															"name": "ISZERO"
														},
														{
															"begin": 3948,
															"end": 3962,
															"name": "ISZERO"
														},
														{
															"begin": 3948,
															"end": 3954,
															"name": "PUSH",
															"value": "C"
														},
														{
															"begin": 3948,
															"end": 3954,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 3948,
															"end": 3954,
															"name": "SWAP1"
														},
														{
															"begin": 3948,
															"end": 3954,
															"name": "SLOAD"
														},
														{
															"begin": 3948,
															"end": 3954,
															"name": "SWAP1"
														},
														{
															"begin": 3948,
															"end": 3954,
															"name": "PUSH",
															"value": "100"
														},
														{
															"begin": 3948,
															"end": 3954,
															"name": "EXP"
														},
														{
															"begin": 3948,
															"end": 3954,
															"name": "SWAP1"
														},
														{
															"begin": 3948,
															"end": 3954,
															"name": "DIV"
														},
														{
															"begin": 3948,
															"end": 3954,
															"name": "PUSH",
															"value": "FF"
														},
														{
															"begin": 3948,
															"end": 3954,
															"name": "AND"
														},
														{
															"begin": 3948,
															"end": 3962,
															"name": "ISZERO"
														},
														{
															"begin": 3948,
															"end": 3962,
															"name": "ISZERO"
														},
														{
															"begin": 3948,
															"end": 3962,
															"name": "EQ"
														},
														{
															"begin": 3940,
															"end": 3963,
															"name": "ISZERO"
														},
														{
															"begin": 3940,
															"end": 3963,
															"name": "ISZERO"
														},
														{
															"begin": 3940,
															"end": 3963,
															"name": "PUSH [tag]",
															"value": "71"
														},
														{
															"begin": 3940,
															"end": 3963,
															"name": "JUMPI"
														},
														{
															"begin": 3940,
															"end": 3963,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 3940,
															"end": 3963,
															"name": "DUP1"
														},
														{
															"begin": 3940,
															"end": 3963,
															"name": "REVERT"
														},
														{
															"begin": 3940,
															"end": 3963,
															"name": "tag",
															"value": "71"
														},
														{
															"begin": 3940,
															"end": 3963,
															"name": "JUMPDEST"
														},
														{
															"begin": 4048,
															"end": 4056,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": 4048,
															"end": 4056,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 4048,
															"end": 4056,
															"name": "SWAP1"
														},
														{
															"begin": 4048,
															"end": 4056,
															"name": "SLOAD"
														},
														{
															"begin": 4048,
															"end": 4056,
															"name": "SWAP1"
														},
														{
															"begin": 4048,
															"end": 4056,
															"name": "PUSH",
															"value": "100"
														},
														{
															"begin": 4048,
															"end": 4056,
															"name": "EXP"
														},
														{
															"begin": 4048,
															"end": 4056,
															"name": "SWAP1"
														},
														{
															"begin": 4048,
															"end": 4056,
															"name": "DIV"
														},
														{
															"begin": 4048,
															"end": 4056,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 4048,
															"end": 4056,
															"name": "AND"
														},
														{
															"begin": 4034,
															"end": 4056,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 4034,
															"end": 4056,
															"name": "AND"
														},
														{
															"begin": 4034,
															"end": 4044,
															"name": "CALLER"
														},
														{
															"begin": 4034,
															"end": 4056,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 4034,
															"end": 4056,
															"name": "AND"
														},
														{
															"begin": 4034,
															"end": 4056,
															"name": "EQ"
														},
														{
															"begin": 4026,
															"end": 4057,
															"name": "ISZERO"
														},
														{
															"begin": 4026,
															"end": 4057,
															"name": "ISZERO"
														},
														{
															"begin": 4026,
															"end": 4057,
															"name": "PUSH [tag]",
															"value": "73"
														},
														{
															"begin": 4026,
															"end": 4057,
															"name": "JUMPI"
														},
														{
															"begin": 4026,
															"end": 4057,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 4026,
															"end": 4057,
															"name": "DUP1"
														},
														{
															"begin": 4026,
															"end": 4057,
															"name": "REVERT"
														},
														{
															"begin": 4026,
															"end": 4057,
															"name": "tag",
															"value": "73"
														},
														{
															"begin": 4026,
															"end": 4057,
															"name": "JUMPDEST"
														},
														{
															"begin": 4590,
															"end": 4605,
															"name": "PUSH",
															"value": "2"
														},
														{
															"begin": 4590,
															"end": 4605,
															"name": "SLOAD"
														},
														{
															"begin": 4574,
															"end": 4578,
															"name": "ADDRESS"
														},
														{
															"begin": 4574,
															"end": 4586,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 4574,
															"end": 4586,
															"name": "AND"
														},
														{
															"begin": 4574,
															"end": 4586,
															"name": "BALANCE"
														},
														{
															"begin": 4574,
															"end": 4605,
															"name": "LT"
														},
														{
															"begin": 4574,
															"end": 4605,
															"name": "ISZERO"
														},
														{
															"begin": 4566,
															"end": 4606,
															"name": "ISZERO"
														},
														{
															"begin": 4566,
															"end": 4606,
															"name": "ISZERO"
														},
														{
															"begin": 4566,
															"end": 4606,
															"name": "PUSH [tag]",
															"value": "75"
														},
														{
															"begin": 4566,
															"end": 4606,
															"name": "JUMPI"
														},
														{
															"begin": 4566,
															"end": 4606,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 4566,
															"end": 4606,
															"name": "DUP1"
														},
														{
															"begin": 4566,
															"end": 4606,
															"name": "REVERT"
														},
														{
															"begin": 4566,
															"end": 4606,
															"name": "tag",
															"value": "75"
														},
														{
															"begin": 4566,
															"end": 4606,
															"name": "JUMPDEST"
														},
														{
															"begin": 4684,
															"end": 4695,
															"name": "PUSH",
															"value": "5"
														},
														{
															"begin": 4675,
															"end": 4695,
															"name": "DUP1"
														},
														{
															"begin": 4675,
															"end": 4695,
															"name": "DUP2"
														},
														{
															"begin": 4675,
															"end": 4695,
															"name": "GT"
														},
														{
															"begin": 4675,
															"end": 4695,
															"name": "ISZERO"
														},
														{
															"begin": 4675,
															"end": 4695,
															"name": "PUSH [tag]",
															"value": "77"
														},
														{
															"begin": 4675,
															"end": 4695,
															"name": "JUMPI"
														},
														{
															"begin": 4675,
															"end": 4695,
															"name": "INVALID"
														},
														{
															"begin": 4675,
															"end": 4695,
															"name": "tag",
															"value": "77"
														},
														{
															"begin": 4675,
															"end": 4695,
															"name": "JUMPDEST"
														},
														{
															"begin": 4675,
															"end": 4680,
															"name": "PUSH",
															"value": "C"
														},
														{
															"begin": 4675,
															"end": 4680,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": 4675,
															"end": 4680,
															"name": "SWAP1"
														},
														{
															"begin": 4675,
															"end": 4680,
															"name": "SLOAD"
														},
														{
															"begin": 4675,
															"end": 4680,
															"name": "SWAP1"
														},
														{
															"begin": 4675,
															"end": 4680,
															"name": "PUSH",
															"value": "100"
														},
														{
															"begin": 4675,
															"end": 4680,
															"name": "EXP"
														},
														{
															"begin": 4675,
															"end": 4680,
															"name": "SWAP1"
														},
														{
															"begin": 4675,
															"end": 4680,
															"name": "DIV"
														},
														{
															"begin": 4675,
															"end": 4680,
															"name": "PUSH",
															"value": "FF"
														},
														{
															"begin": 4675,
															"end": 4680,
															"name": "AND"
														},
														{
															"begin": 4675,
															"end": 4695,
															"name": "PUSH",
															"value": "5"
														},
														{
															"begin": 4675,
															"end": 4695,
															"name": "DUP2"
														},
														{
															"begin": 4675,
															"end": 4695,
															"name": "GT"
														},
														{
															"begin": 4675,
															"end": 4695,
															"name": "ISZERO"
														},
														{
															"begin": 4675,
															"end": 4695,
															"name": "PUSH [tag]",
															"value": "78"
														},
														{
															"begin": 4675,
															"end": 4695,
															"name": "JUMPI"
														},
														{
															"begin": 4675,
															"end": 4695,
															"name": "INVALID"
														},
														{
															"begin": 4675,
															"end": 4695,
															"name": "tag",
															"value": "78"
														},
														{
															"begin": 4675,
															"end": 4695,
															"name": "JUMPDEST"
														},
														{
															"begin": 4675,
															"end": 4695,
															"name": "EQ"
														},
														{
															"begin": 4675,
															"end": 4695,
															"name": "ISZERO"
														},
														{
															"begin": 4667,
															"end": 4696,
															"name": "ISZERO"
														},
														{
															"begin": 4667,
															"end": 4696,
															"name": "ISZERO"
														},
														{
															"begin": 4667,
															"end": 4696,
															"name": "PUSH [tag]",
															"value": "79"
														},
														{
															"begin": 4667,
															"end": 4696,
															"name": "JUMPI"
														},
														{
															"begin": 4667,
															"end": 4696,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 4667,
															"end": 4696,
															"name": "DUP1"
														},
														{
															"begin": 4667,
															"end": 4696,
															"name": "REVERT"
														},
														{
															"begin": 4667,
															"end": 4696,
															"name": "tag",
															"value": "79"
														},
														{
															"begin": 4667,
															"end": 4696,
															"name": "JUMPDEST"
														},
														{
															"begin": 11809,
															"end": 11824,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": 11801,
															"end": 11806,
															"name": "PUSH",
															"value": "C"
														},
														{
															"begin": 11801,
															"end": 11806,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": 11801,
															"end": 11824,
															"name": "PUSH",
															"value": "100"
														},
														{
															"begin": 11801,
															"end": 11824,
															"name": "EXP"
														},
														{
															"begin": 11801,
															"end": 11824,
															"name": "DUP2"
														},
														{
															"begin": 11801,
															"end": 11824,
															"name": "SLOAD"
														},
														{
															"begin": 11801,
															"end": 11824,
															"name": "DUP2"
														},
														{
															"begin": 11801,
															"end": 11824,
															"name": "PUSH",
															"value": "FF"
														},
														{
															"begin": 11801,
															"end": 11824,
															"name": "MUL"
														},
														{
															"begin": 11801,
															"end": 11824,
															"name": "NOT"
														},
														{
															"begin": 11801,
															"end": 11824,
															"name": "AND"
														},
														{
															"begin": 11801,
															"end": 11824,
															"name": "SWAP1"
														},
														{
															"begin": 11801,
															"end": 11824,
															"name": "DUP4"
														},
														{
															"begin": 11801,
															"end": 11824,
															"name": "PUSH",
															"value": "5"
														},
														{
															"begin": 11801,
															"end": 11824,
															"name": "DUP2"
														},
														{
															"begin": 11801,
															"end": 11824,
															"name": "GT"
														},
														{
															"begin": 11801,
															"end": 11824,
															"name": "ISZERO"
														},
														{
															"begin": 11801,
															"end": 11824,
															"name": "PUSH [tag]",
															"value": "81"
														},
														{
															"begin": 11801,
															"end": 11824,
															"name": "JUMPI"
														},
														{
															"begin": 11801,
															"end": 11824,
															"name": "INVALID"
														},
														{
															"begin": 11801,
															"end": 11824,
															"name": "tag",
															"value": "81"
														},
														{
															"begin": 11801,
															"end": 11824,
															"name": "JUMPDEST"
														},
														{
															"begin": 11801,
															"end": 11824,
															"name": "MUL"
														},
														{
															"begin": 11801,
															"end": 11824,
															"name": "OR"
														},
														{
															"begin": 11801,
															"end": 11824,
															"name": "SWAP1"
														},
														{
															"begin": 11801,
															"end": 11824,
															"name": "SSTORE"
														},
														{
															"begin": 11801,
															"end": 11824,
															"name": "POP"
														},
														{
															"begin": 11896,
															"end": 11911,
															"name": "TIMESTAMP"
														},
														{
															"begin": 11889,
															"end": 11894,
															"name": "PUSH",
															"value": "C"
														},
														{
															"begin": 11889,
															"end": 11894,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": 11889,
															"end": 11894,
															"name": "SWAP1"
														},
														{
															"begin": 11889,
															"end": 11894,
															"name": "SLOAD"
														},
														{
															"begin": 11889,
															"end": 11894,
															"name": "SWAP1"
														},
														{
															"begin": 11889,
															"end": 11894,
															"name": "PUSH",
															"value": "100"
														},
														{
															"begin": 11889,
															"end": 11894,
															"name": "EXP"
														},
														{
															"begin": 11889,
															"end": 11894,
															"name": "SWAP1"
														},
														{
															"begin": 11889,
															"end": 11894,
															"name": "DIV"
														},
														{
															"begin": 11889,
															"end": 11894,
															"name": "PUSH",
															"value": "FF"
														},
														{
															"begin": 11889,
															"end": 11894,
															"name": "AND"
														},
														{
															"begin": 11867,
															"end": 11912,
															"name": "PUSH",
															"value": "5"
														},
														{
															"begin": 11867,
															"end": 11912,
															"name": "DUP2"
														},
														{
															"begin": 11867,
															"end": 11912,
															"name": "GT"
														},
														{
															"begin": 11867,
															"end": 11912,
															"name": "ISZERO"
														},
														{
															"begin": 11867,
															"end": 11912,
															"name": "PUSH [tag]",
															"value": "82"
														},
														{
															"begin": 11867,
															"end": 11912,
															"name": "JUMPI"
														},
														{
															"begin": 11867,
															"end": 11912,
															"name": "INVALID"
														},
														{
															"begin": 11867,
															"end": 11912,
															"name": "tag",
															"value": "82"
														},
														{
															"begin": 11867,
															"end": 11912,
															"name": "JUMPDEST"
														},
														{
															"begin": 11867,
															"end": 11912,
															"name": "PUSH",
															"value": "AAAE373901E745122C2E0925AD006227969C6CD190B7D5EA2FB7FDBD1D955B35"
														},
														{
															"begin": 11867,
															"end": 11912,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 11867,
															"end": 11912,
															"name": "MLOAD"
														},
														{
															"begin": 11867,
															"end": 11912,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 11867,
															"end": 11912,
															"name": "MLOAD"
														},
														{
															"begin": 11867,
															"end": 11912,
															"name": "DUP1"
														},
														{
															"begin": 11867,
															"end": 11912,
															"name": "SWAP2"
														},
														{
															"begin": 11867,
															"end": 11912,
															"name": "SUB"
														},
														{
															"begin": 11867,
															"end": 11912,
															"name": "SWAP1"
														},
														{
															"begin": 11867,
															"end": 11912,
															"name": "LOG3"
														},
														{
															"begin": 12010,
															"end": 12025,
															"name": "TIMESTAMP"
														},
														{
															"begin": 11996,
															"end": 12000,
															"name": "ADDRESS"
														},
														{
															"begin": 11996,
															"end": 12008,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 11996,
															"end": 12008,
															"name": "AND"
														},
														{
															"begin": 11996,
															"end": 12008,
															"name": "BALANCE"
														},
														{
															"begin": 11984,
															"end": 11994,
															"name": "CALLER"
														},
														{
															"begin": 11962,
															"end": 12026,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 11962,
															"end": 12026,
															"name": "AND"
														},
														{
															"begin": 11962,
															"end": 12026,
															"name": "PUSH",
															"value": "20734F14D107B526674905E470E35D0A474F9FB996A7BDB034C839C8894524E6"
														},
														{
															"begin": 11962,
															"end": 12026,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 11962,
															"end": 12026,
															"name": "MLOAD"
														},
														{
															"begin": 11962,
															"end": 12026,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 11962,
															"end": 12026,
															"name": "MLOAD"
														},
														{
															"begin": 11962,
															"end": 12026,
															"name": "DUP1"
														},
														{
															"begin": 11962,
															"end": 12026,
															"name": "SWAP2"
														},
														{
															"begin": 11962,
															"end": 12026,
															"name": "SUB"
														},
														{
															"begin": 11962,
															"end": 12026,
															"name": "SWAP1"
														},
														{
															"begin": 11962,
															"end": 12026,
															"name": "LOG4"
														},
														{
															"begin": 12104,
															"end": 12112,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": 12104,
															"end": 12112,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 12104,
															"end": 12112,
															"name": "SWAP1"
														},
														{
															"begin": 12104,
															"end": 12112,
															"name": "SLOAD"
														},
														{
															"begin": 12104,
															"end": 12112,
															"name": "SWAP1"
														},
														{
															"begin": 12104,
															"end": 12112,
															"name": "PUSH",
															"value": "100"
														},
														{
															"begin": 12104,
															"end": 12112,
															"name": "EXP"
														},
														{
															"begin": 12104,
															"end": 12112,
															"name": "SWAP1"
														},
														{
															"begin": 12104,
															"end": 12112,
															"name": "DIV"
														},
														{
															"begin": 12104,
															"end": 12112,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 12104,
															"end": 12112,
															"name": "AND"
														},
														{
															"begin": 12104,
															"end": 12121,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 12104,
															"end": 12121,
															"name": "AND"
														},
														{
															"begin": 12104,
															"end": 12135,
															"name": "PUSH",
															"value": "8FC"
														},
														{
															"begin": 12122,
															"end": 12126,
															"name": "ADDRESS"
														},
														{
															"begin": 12122,
															"end": 12134,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 12122,
															"end": 12134,
															"name": "AND"
														},
														{
															"begin": 12122,
															"end": 12134,
															"name": "BALANCE"
														},
														{
															"begin": 12104,
															"end": 12135,
															"name": "SWAP1"
														},
														{
															"begin": 12104,
															"end": 12135,
															"name": "DUP2"
														},
														{
															"begin": 12104,
															"end": 12135,
															"name": "ISZERO"
														},
														{
															"begin": 12104,
															"end": 12135,
															"name": "MUL"
														},
														{
															"begin": 12104,
															"end": 12135,
															"name": "SWAP1"
														},
														{
															"begin": 12104,
															"end": 12135,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 12104,
															"end": 12135,
															"name": "MLOAD"
														},
														{
															"begin": 12104,
															"end": 12135,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 12104,
															"end": 12135,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 12104,
															"end": 12135,
															"name": "MLOAD"
														},
														{
															"begin": 12104,
															"end": 12135,
															"name": "DUP1"
														},
														{
															"begin": 12104,
															"end": 12135,
															"name": "DUP4"
														},
														{
															"begin": 12104,
															"end": 12135,
															"name": "SUB"
														},
														{
															"begin": 12104,
															"end": 12135,
															"name": "DUP2"
														},
														{
															"begin": 12104,
															"end": 12135,
															"name": "DUP6"
														},
														{
															"begin": 12104,
															"end": 12135,
															"name": "DUP9"
														},
														{
															"begin": 12104,
															"end": 12135,
															"name": "DUP9"
														},
														{
															"begin": 12104,
															"end": 12135,
															"name": "CALL"
														},
														{
															"begin": 12104,
															"end": 12135,
															"name": "SWAP4"
														},
														{
															"begin": 12104,
															"end": 12135,
															"name": "POP"
														},
														{
															"begin": 12104,
															"end": 12135,
															"name": "POP"
														},
														{
															"begin": 12104,
															"end": 12135,
															"name": "POP"
														},
														{
															"begin": 12104,
															"end": 12135,
															"name": "POP"
														},
														{
															"begin": 12104,
															"end": 12135,
															"name": "ISZERO"
														},
														{
															"begin": 12104,
															"end": 12135,
															"name": "ISZERO"
														},
														{
															"begin": 12104,
															"end": 12135,
															"name": "PUSH [tag]",
															"value": "83"
														},
														{
															"begin": 12104,
															"end": 12135,
															"name": "JUMPI"
														},
														{
															"begin": 12104,
															"end": 12135,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 12104,
															"end": 12135,
															"name": "DUP1"
														},
														{
															"begin": 12104,
															"end": 12135,
															"name": "REVERT"
														},
														{
															"begin": 12104,
															"end": 12135,
															"name": "tag",
															"value": "83"
														},
														{
															"begin": 12104,
															"end": 12135,
															"name": "JUMPDEST"
														},
														{
															"begin": 11651,
															"end": 12143,
															"name": "JUMP",
															"value": "[out]"
														},
														{
															"begin": 8897,
															"end": 11308,
															"name": "tag",
															"value": "33"
														},
														{
															"begin": 8897,
															"end": 11308,
															"name": "JUMPDEST"
														},
														{
															"begin": 9704,
															"end": 9719,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 4048,
															"end": 4056,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": 4048,
															"end": 4056,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 4048,
															"end": 4056,
															"name": "SWAP1"
														},
														{
															"begin": 4048,
															"end": 4056,
															"name": "SLOAD"
														},
														{
															"begin": 4048,
															"end": 4056,
															"name": "SWAP1"
														},
														{
															"begin": 4048,
															"end": 4056,
															"name": "PUSH",
															"value": "100"
														},
														{
															"begin": 4048,
															"end": 4056,
															"name": "EXP"
														},
														{
															"begin": 4048,
															"end": 4056,
															"name": "SWAP1"
														},
														{
															"begin": 4048,
															"end": 4056,
															"name": "DIV"
														},
														{
															"begin": 4048,
															"end": 4056,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 4048,
															"end": 4056,
															"name": "AND"
														},
														{
															"begin": 4034,
															"end": 4056,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 4034,
															"end": 4056,
															"name": "AND"
														},
														{
															"begin": 4034,
															"end": 4044,
															"name": "CALLER"
														},
														{
															"begin": 4034,
															"end": 4056,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 4034,
															"end": 4056,
															"name": "AND"
														},
														{
															"begin": 4034,
															"end": 4056,
															"name": "EQ"
														},
														{
															"begin": 4026,
															"end": 4057,
															"name": "ISZERO"
														},
														{
															"begin": 4026,
															"end": 4057,
															"name": "ISZERO"
														},
														{
															"begin": 4026,
															"end": 4057,
															"name": "PUSH [tag]",
															"value": "85"
														},
														{
															"begin": 4026,
															"end": 4057,
															"name": "JUMPI"
														},
														{
															"begin": 4026,
															"end": 4057,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 4026,
															"end": 4057,
															"name": "DUP1"
														},
														{
															"begin": 4026,
															"end": 4057,
															"name": "REVERT"
														},
														{
															"begin": 4026,
															"end": 4057,
															"name": "tag",
															"value": "85"
														},
														{
															"begin": 4026,
															"end": 4057,
															"name": "JUMPDEST"
														},
														{
															"begin": 4488,
															"end": 4503,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": 4479,
															"end": 4503,
															"name": "PUSH",
															"value": "5"
														},
														{
															"begin": 4479,
															"end": 4503,
															"name": "DUP2"
														},
														{
															"begin": 4479,
															"end": 4503,
															"name": "GT"
														},
														{
															"begin": 4479,
															"end": 4503,
															"name": "ISZERO"
														},
														{
															"begin": 4479,
															"end": 4503,
															"name": "PUSH [tag]",
															"value": "87"
														},
														{
															"begin": 4479,
															"end": 4503,
															"name": "JUMPI"
														},
														{
															"begin": 4479,
															"end": 4503,
															"name": "INVALID"
														},
														{
															"begin": 4479,
															"end": 4503,
															"name": "tag",
															"value": "87"
														},
														{
															"begin": 4479,
															"end": 4503,
															"name": "JUMPDEST"
														},
														{
															"begin": 4479,
															"end": 4484,
															"name": "PUSH",
															"value": "C"
														},
														{
															"begin": 4479,
															"end": 4484,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": 4479,
															"end": 4484,
															"name": "SWAP1"
														},
														{
															"begin": 4479,
															"end": 4484,
															"name": "SLOAD"
														},
														{
															"begin": 4479,
															"end": 4484,
															"name": "SWAP1"
														},
														{
															"begin": 4479,
															"end": 4484,
															"name": "PUSH",
															"value": "100"
														},
														{
															"begin": 4479,
															"end": 4484,
															"name": "EXP"
														},
														{
															"begin": 4479,
															"end": 4484,
															"name": "SWAP1"
														},
														{
															"begin": 4479,
															"end": 4484,
															"name": "DIV"
														},
														{
															"begin": 4479,
															"end": 4484,
															"name": "PUSH",
															"value": "FF"
														},
														{
															"begin": 4479,
															"end": 4484,
															"name": "AND"
														},
														{
															"begin": 4479,
															"end": 4503,
															"name": "PUSH",
															"value": "5"
														},
														{
															"begin": 4479,
															"end": 4503,
															"name": "DUP2"
														},
														{
															"begin": 4479,
															"end": 4503,
															"name": "GT"
														},
														{
															"begin": 4479,
															"end": 4503,
															"name": "ISZERO"
														},
														{
															"begin": 4479,
															"end": 4503,
															"name": "PUSH [tag]",
															"value": "88"
														},
														{
															"begin": 4479,
															"end": 4503,
															"name": "JUMPI"
														},
														{
															"begin": 4479,
															"end": 4503,
															"name": "INVALID"
														},
														{
															"begin": 4479,
															"end": 4503,
															"name": "tag",
															"value": "88"
														},
														{
															"begin": 4479,
															"end": 4503,
															"name": "JUMPDEST"
														},
														{
															"begin": 4479,
															"end": 4503,
															"name": "EQ"
														},
														{
															"begin": 4471,
															"end": 4504,
															"name": "ISZERO"
														},
														{
															"begin": 4471,
															"end": 4504,
															"name": "ISZERO"
														},
														{
															"begin": 4471,
															"end": 4504,
															"name": "PUSH [tag]",
															"value": "89"
														},
														{
															"begin": 4471,
															"end": 4504,
															"name": "JUMPI"
														},
														{
															"begin": 4471,
															"end": 4504,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 4471,
															"end": 4504,
															"name": "DUP1"
														},
														{
															"begin": 4471,
															"end": 4504,
															"name": "REVERT"
														},
														{
															"begin": 4471,
															"end": 4504,
															"name": "tag",
															"value": "89"
														},
														{
															"begin": 4471,
															"end": 4504,
															"name": "JUMPDEST"
														},
														{
															"begin": 9067,
															"end": 9068,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 9045,
															"end": 9064,
															"name": "PUSH",
															"value": "7"
														},
														{
															"begin": 9045,
															"end": 9064,
															"name": "SLOAD"
														},
														{
															"begin": 9045,
															"end": 9068,
															"name": "GT"
														},
														{
															"begin": 9037,
															"end": 9069,
															"name": "ISZERO"
														},
														{
															"begin": 9037,
															"end": 9069,
															"name": "ISZERO"
														},
														{
															"begin": 9037,
															"end": 9069,
															"name": "PUSH [tag]",
															"value": "91"
														},
														{
															"begin": 9037,
															"end": 9069,
															"name": "JUMPI"
														},
														{
															"begin": 9037,
															"end": 9069,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 9037,
															"end": 9069,
															"name": "DUP1"
														},
														{
															"begin": 9037,
															"end": 9069,
															"name": "REVERT"
														},
														{
															"begin": 9037,
															"end": 9069,
															"name": "tag",
															"value": "91"
														},
														{
															"begin": 9037,
															"end": 9069,
															"name": "JUMPDEST"
														},
														{
															"begin": 9180,
															"end": 9200,
															"name": "PUSH",
															"value": "8"
														},
														{
															"begin": 9180,
															"end": 9200,
															"name": "SLOAD"
														},
														{
															"begin": 9167,
															"end": 9176,
															"name": "CALLVALUE"
														},
														{
															"begin": 9167,
															"end": 9200,
															"name": "LT"
														},
														{
															"begin": 9167,
															"end": 9200,
															"name": "ISZERO"
														},
														{
															"begin": 9159,
															"end": 9201,
															"name": "ISZERO"
														},
														{
															"begin": 9159,
															"end": 9201,
															"name": "ISZERO"
														},
														{
															"begin": 9159,
															"end": 9201,
															"name": "PUSH [tag]",
															"value": "92"
														},
														{
															"begin": 9159,
															"end": 9201,
															"name": "JUMPI"
														},
														{
															"begin": 9159,
															"end": 9201,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 9159,
															"end": 9201,
															"name": "DUP1"
														},
														{
															"begin": 9159,
															"end": 9201,
															"name": "REVERT"
														},
														{
															"begin": 9159,
															"end": 9201,
															"name": "tag",
															"value": "92"
														},
														{
															"begin": 9159,
															"end": 9201,
															"name": "JUMPDEST"
														},
														{
															"begin": 9421,
															"end": 9433,
															"name": "PUSH",
															"value": "3"
														},
														{
															"begin": 9421,
															"end": 9433,
															"name": "SLOAD"
														},
														{
															"begin": 9406,
															"end": 9418,
															"name": "PUSH",
															"value": "4"
														},
														{
															"begin": 9406,
															"end": 9418,
															"name": "SLOAD"
														},
														{
															"begin": 9406,
															"end": 9433,
															"name": "LT"
														},
														{
															"begin": 9399,
															"end": 9434,
															"name": "ISZERO"
														},
														{
															"begin": 9399,
															"end": 9434,
															"name": "ISZERO"
														},
														{
															"begin": 9399,
															"end": 9434,
															"name": "PUSH [tag]",
															"value": "93"
														},
														{
															"begin": 9399,
															"end": 9434,
															"name": "JUMPI"
														},
														{
															"begin": 9399,
															"end": 9434,
															"name": "INVALID"
														},
														{
															"begin": 9399,
															"end": 9434,
															"name": "tag",
															"value": "93"
														},
														{
															"begin": 9399,
															"end": 9434,
															"name": "JUMPDEST"
														},
														{
															"begin": 9495,
															"end": 9514,
															"name": "PUSH",
															"value": "7"
														},
														{
															"begin": 9495,
															"end": 9514,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 9495,
															"end": 9516,
															"name": "DUP2"
														},
														{
															"begin": 9495,
															"end": 9516,
															"name": "SLOAD"
														},
														{
															"begin": 9495,
															"end": 9516,
															"name": "DUP1"
														},
														{
															"begin": 9495,
															"end": 9516,
															"name": "SWAP3"
														},
														{
															"begin": 9495,
															"end": 9516,
															"name": "SWAP2"
														},
														{
															"begin": 9495,
															"end": 9516,
															"name": "SWAP1"
														},
														{
															"begin": 9495,
															"end": 9516,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": 9495,
															"end": 9516,
															"name": "SWAP1"
														},
														{
															"begin": 9495,
															"end": 9516,
															"name": "SUB"
														},
														{
															"begin": 9495,
															"end": 9516,
															"name": "SWAP2"
														},
														{
															"begin": 9495,
															"end": 9516,
															"name": "SWAP1"
														},
														{
															"begin": 9495,
															"end": 9516,
															"name": "POP"
														},
														{
															"begin": 9495,
															"end": 9516,
															"name": "SSTORE"
														},
														{
															"begin": 9495,
															"end": 9516,
															"name": "POP"
														},
														{
															"begin": 9589,
															"end": 9604,
															"name": "TIMESTAMP"
														},
														{
															"begin": 9569,
															"end": 9586,
															"name": "PUSH",
															"value": "A"
														},
														{
															"begin": 9569,
															"end": 9604,
															"name": "DUP2"
														},
														{
															"begin": 9569,
															"end": 9604,
															"name": "SWAP1"
														},
														{
															"begin": 9569,
															"end": 9604,
															"name": "SSTORE"
														},
														{
															"begin": 9569,
															"end": 9604,
															"name": "POP"
														},
														{
															"begin": 9722,
															"end": 9723,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 9704,
															"end": 9723,
															"name": "SWAP1"
														},
														{
															"begin": 9704,
															"end": 9723,
															"name": "POP"
														},
														{
															"begin": 9943,
															"end": 9963,
															"name": "PUSH",
															"value": "8"
														},
														{
															"begin": 9943,
															"end": 9963,
															"name": "SLOAD"
														},
														{
															"begin": 9931,
															"end": 9940,
															"name": "CALLVALUE"
														},
														{
															"begin": 9931,
															"end": 9963,
															"name": "GT"
														},
														{
															"begin": 9927,
															"end": 10563,
															"name": "ISZERO"
														},
														{
															"begin": 9927,
															"end": 10563,
															"name": "PUSH [tag]",
															"value": "94"
														},
														{
															"begin": 9927,
															"end": 10563,
															"name": "JUMPI"
														},
														{
															"begin": 10068,
															"end": 10103,
															"name": "PUSH [tag]",
															"value": "95"
														},
														{
															"begin": 10082,
															"end": 10102,
															"name": "PUSH",
															"value": "8"
														},
														{
															"begin": 10082,
															"end": 10102,
															"name": "SLOAD"
														},
														{
															"begin": 10068,
															"end": 10077,
															"name": "CALLVALUE"
														},
														{
															"begin": 10068,
															"end": 10081,
															"name": "PUSH [tag]",
															"value": "96"
														},
														{
															"begin": 10068,
															"end": 10081,
															"name": "SWAP1"
														},
														{
															"begin": 10068,
															"end": 10103,
															"name": "SWAP2"
														},
														{
															"begin": 10068,
															"end": 10103,
															"name": "SWAP1"
														},
														{
															"begin": 10068,
															"end": 10103,
															"name": "PUSH",
															"value": "FFFFFFFF"
														},
														{
															"begin": 10068,
															"end": 10103,
															"name": "AND"
														},
														{
															"begin": 10068,
															"end": 10103,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 10068,
															"end": 10103,
															"name": "tag",
															"value": "95"
														},
														{
															"begin": 10068,
															"end": 10103,
															"name": "JUMPDEST"
														},
														{
															"begin": 10055,
															"end": 10103,
															"name": "SWAP1"
														},
														{
															"begin": 10055,
															"end": 10103,
															"name": "POP"
														},
														{
															"begin": 10192,
															"end": 10217,
															"name": "PUSH [tag]",
															"value": "97"
														},
														{
															"begin": 10206,
															"end": 10216,
															"name": "DUP2"
														},
														{
															"begin": 10192,
															"end": 10201,
															"name": "CALLVALUE"
														},
														{
															"begin": 10192,
															"end": 10205,
															"name": "PUSH [tag]",
															"value": "96"
														},
														{
															"begin": 10192,
															"end": 10205,
															"name": "SWAP1"
														},
														{
															"begin": 10192,
															"end": 10217,
															"name": "SWAP2"
														},
														{
															"begin": 10192,
															"end": 10217,
															"name": "SWAP1"
														},
														{
															"begin": 10192,
															"end": 10217,
															"name": "PUSH",
															"value": "FFFFFFFF"
														},
														{
															"begin": 10192,
															"end": 10217,
															"name": "AND"
														},
														{
															"begin": 10192,
															"end": 10217,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 10192,
															"end": 10217,
															"name": "tag",
															"value": "97"
														},
														{
															"begin": 10192,
															"end": 10217,
															"name": "JUMPDEST"
														},
														{
															"begin": 10168,
															"end": 10188,
															"name": "PUSH",
															"value": "8"
														},
														{
															"begin": 10168,
															"end": 10188,
															"name": "SLOAD"
														},
														{
															"begin": 10168,
															"end": 10217,
															"name": "EQ"
														},
														{
															"begin": 10161,
															"end": 10218,
															"name": "ISZERO"
														},
														{
															"begin": 10161,
															"end": 10218,
															"name": "ISZERO"
														},
														{
															"begin": 10161,
															"end": 10218,
															"name": "PUSH [tag]",
															"value": "98"
														},
														{
															"begin": 10161,
															"end": 10218,
															"name": "JUMPI"
														},
														{
															"begin": 10161,
															"end": 10218,
															"name": "INVALID"
														},
														{
															"begin": 10161,
															"end": 10218,
															"name": "tag",
															"value": "98"
														},
														{
															"begin": 10161,
															"end": 10218,
															"name": "JUMPDEST"
														},
														{
															"begin": 10294,
															"end": 10303,
															"name": "CALLVALUE"
														},
														{
															"begin": 10280,
															"end": 10290,
															"name": "DUP2"
														},
														{
															"begin": 10280,
															"end": 10303,
															"name": "GT"
														},
														{
															"begin": 10280,
															"end": 10303,
															"name": "ISZERO"
														},
														{
															"begin": 10273,
															"end": 10304,
															"name": "ISZERO"
														},
														{
															"begin": 10273,
															"end": 10304,
															"name": "ISZERO"
														},
														{
															"begin": 10273,
															"end": 10304,
															"name": "PUSH [tag]",
															"value": "99"
														},
														{
															"begin": 10273,
															"end": 10304,
															"name": "JUMPI"
														},
														{
															"begin": 10273,
															"end": 10304,
															"name": "INVALID"
														},
														{
															"begin": 10273,
															"end": 10304,
															"name": "tag",
															"value": "99"
														},
														{
															"begin": 10273,
															"end": 10304,
															"name": "JUMPDEST"
														},
														{
															"begin": 10386,
															"end": 10396,
															"name": "CALLER"
														},
														{
															"begin": 10386,
															"end": 10405,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 10386,
															"end": 10405,
															"name": "AND"
														},
														{
															"begin": 10386,
															"end": 10417,
															"name": "PUSH",
															"value": "8FC"
														},
														{
															"begin": 10406,
															"end": 10416,
															"name": "DUP3"
														},
														{
															"begin": 10386,
															"end": 10417,
															"name": "SWAP1"
														},
														{
															"begin": 10386,
															"end": 10417,
															"name": "DUP2"
														},
														{
															"begin": 10386,
															"end": 10417,
															"name": "ISZERO"
														},
														{
															"begin": 10386,
															"end": 10417,
															"name": "MUL"
														},
														{
															"begin": 10386,
															"end": 10417,
															"name": "SWAP1"
														},
														{
															"begin": 10386,
															"end": 10417,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 10386,
															"end": 10417,
															"name": "MLOAD"
														},
														{
															"begin": 10386,
															"end": 10417,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 10386,
															"end": 10417,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 10386,
															"end": 10417,
															"name": "MLOAD"
														},
														{
															"begin": 10386,
															"end": 10417,
															"name": "DUP1"
														},
														{
															"begin": 10386,
															"end": 10417,
															"name": "DUP4"
														},
														{
															"begin": 10386,
															"end": 10417,
															"name": "SUB"
														},
														{
															"begin": 10386,
															"end": 10417,
															"name": "DUP2"
														},
														{
															"begin": 10386,
															"end": 10417,
															"name": "DUP6"
														},
														{
															"begin": 10386,
															"end": 10417,
															"name": "DUP9"
														},
														{
															"begin": 10386,
															"end": 10417,
															"name": "DUP9"
														},
														{
															"begin": 10386,
															"end": 10417,
															"name": "CALL"
														},
														{
															"begin": 10386,
															"end": 10417,
															"name": "SWAP4"
														},
														{
															"begin": 10386,
															"end": 10417,
															"name": "POP"
														},
														{
															"begin": 10386,
															"end": 10417,
															"name": "POP"
														},
														{
															"begin": 10386,
															"end": 10417,
															"name": "POP"
														},
														{
															"begin": 10386,
															"end": 10417,
															"name": "POP"
														},
														{
															"begin": 10386,
															"end": 10417,
															"name": "ISZERO"
														},
														{
															"begin": 10386,
															"end": 10417,
															"name": "ISZERO"
														},
														{
															"begin": 10386,
															"end": 10417,
															"name": "PUSH [tag]",
															"value": "100"
														},
														{
															"begin": 10386,
															"end": 10417,
															"name": "JUMPI"
														},
														{
															"begin": 10386,
															"end": 10417,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 10386,
															"end": 10417,
															"name": "DUP1"
														},
														{
															"begin": 10386,
															"end": 10417,
															"name": "REVERT"
														},
														{
															"begin": 10386,
															"end": 10417,
															"name": "tag",
															"value": "100"
														},
														{
															"begin": 10386,
															"end": 10417,
															"name": "JUMPDEST"
														},
														{
															"begin": 10535,
															"end": 10550,
															"name": "TIMESTAMP"
														},
														{
															"begin": 10523,
															"end": 10533,
															"name": "DUP2"
														},
														{
															"begin": 10511,
															"end": 10521,
															"name": "CALLER"
														},
														{
															"begin": 10485,
															"end": 10551,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 10485,
															"end": 10551,
															"name": "AND"
														},
														{
															"begin": 10485,
															"end": 10551,
															"name": "PUSH",
															"value": "5C9874487A2258C6BD6DC39A2CFCF7EA944B50B79D9A7152668779687B2EBD8D"
														},
														{
															"begin": 10485,
															"end": 10551,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 10485,
															"end": 10551,
															"name": "MLOAD"
														},
														{
															"begin": 10485,
															"end": 10551,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 10485,
															"end": 10551,
															"name": "MLOAD"
														},
														{
															"begin": 10485,
															"end": 10551,
															"name": "DUP1"
														},
														{
															"begin": 10485,
															"end": 10551,
															"name": "SWAP2"
														},
														{
															"begin": 10485,
															"end": 10551,
															"name": "SUB"
														},
														{
															"begin": 10485,
															"end": 10551,
															"name": "SWAP1"
														},
														{
															"begin": 10485,
															"end": 10551,
															"name": "LOG4"
														},
														{
															"begin": 9927,
															"end": 10563,
															"name": "tag",
															"value": "94"
														},
														{
															"begin": 9927,
															"end": 10563,
															"name": "JUMPDEST"
														},
														{
															"begin": 10693,
															"end": 10708,
															"name": "TIMESTAMP"
														},
														{
															"begin": 10666,
															"end": 10691,
															"name": "PUSH [tag]",
															"value": "101"
														},
														{
															"begin": 10680,
															"end": 10690,
															"name": "DUP3"
														},
														{
															"begin": 10666,
															"end": 10675,
															"name": "CALLVALUE"
														},
														{
															"begin": 10666,
															"end": 10679,
															"name": "PUSH [tag]",
															"value": "96"
														},
														{
															"begin": 10666,
															"end": 10679,
															"name": "SWAP1"
														},
														{
															"begin": 10666,
															"end": 10691,
															"name": "SWAP2"
														},
														{
															"begin": 10666,
															"end": 10691,
															"name": "SWAP1"
														},
														{
															"begin": 10666,
															"end": 10691,
															"name": "PUSH",
															"value": "FFFFFFFF"
														},
														{
															"begin": 10666,
															"end": 10691,
															"name": "AND"
														},
														{
															"begin": 10666,
															"end": 10691,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 10666,
															"end": 10691,
															"name": "tag",
															"value": "101"
														},
														{
															"begin": 10666,
															"end": 10691,
															"name": "JUMPDEST"
														},
														{
															"begin": 10654,
															"end": 10664,
															"name": "CALLER"
														},
														{
															"begin": 10622,
															"end": 10709,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 10622,
															"end": 10709,
															"name": "AND"
														},
														{
															"begin": 10622,
															"end": 10709,
															"name": "PUSH",
															"value": "350A09487D622378C6EFBDA255F996387696319F803A2E53EEE64F7AA70BE85A"
														},
														{
															"begin": 10622,
															"end": 10709,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 10622,
															"end": 10709,
															"name": "MLOAD"
														},
														{
															"begin": 10622,
															"end": 10709,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 10622,
															"end": 10709,
															"name": "MLOAD"
														},
														{
															"begin": 10622,
															"end": 10709,
															"name": "DUP1"
														},
														{
															"begin": 10622,
															"end": 10709,
															"name": "SWAP2"
														},
														{
															"begin": 10622,
															"end": 10709,
															"name": "SUB"
														},
														{
															"begin": 10622,
															"end": 10709,
															"name": "SWAP1"
														},
														{
															"begin": 10622,
															"end": 10709,
															"name": "LOG4"
														},
														{
															"begin": 10814,
															"end": 10857,
															"name": "PUSH [tag]",
															"value": "102"
														},
														{
															"begin": 10831,
															"end": 10856,
															"name": "PUSH [tag]",
															"value": "103"
														},
														{
															"begin": 10845,
															"end": 10855,
															"name": "DUP3"
														},
														{
															"begin": 10831,
															"end": 10840,
															"name": "CALLVALUE"
														},
														{
															"begin": 10831,
															"end": 10844,
															"name": "PUSH [tag]",
															"value": "96"
														},
														{
															"begin": 10831,
															"end": 10844,
															"name": "SWAP1"
														},
														{
															"begin": 10831,
															"end": 10856,
															"name": "SWAP2"
														},
														{
															"begin": 10831,
															"end": 10856,
															"name": "SWAP1"
														},
														{
															"begin": 10831,
															"end": 10856,
															"name": "PUSH",
															"value": "FFFFFFFF"
														},
														{
															"begin": 10831,
															"end": 10856,
															"name": "AND"
														},
														{
															"begin": 10831,
															"end": 10856,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 10831,
															"end": 10856,
															"name": "tag",
															"value": "103"
														},
														{
															"begin": 10831,
															"end": 10856,
															"name": "JUMPDEST"
														},
														{
															"begin": 10814,
															"end": 10826,
															"name": "PUSH",
															"value": "4"
														},
														{
															"begin": 10814,
															"end": 10826,
															"name": "SLOAD"
														},
														{
															"begin": 10814,
															"end": 10830,
															"name": "PUSH [tag]",
															"value": "104"
														},
														{
															"begin": 10814,
															"end": 10830,
															"name": "SWAP1"
														},
														{
															"begin": 10814,
															"end": 10857,
															"name": "SWAP2"
														},
														{
															"begin": 10814,
															"end": 10857,
															"name": "SWAP1"
														},
														{
															"begin": 10814,
															"end": 10857,
															"name": "PUSH",
															"value": "FFFFFFFF"
														},
														{
															"begin": 10814,
															"end": 10857,
															"name": "AND"
														},
														{
															"begin": 10814,
															"end": 10857,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 10814,
															"end": 10857,
															"name": "tag",
															"value": "102"
														},
														{
															"begin": 10814,
															"end": 10857,
															"name": "JUMPDEST"
														},
														{
															"begin": 10799,
															"end": 10811,
															"name": "PUSH",
															"value": "4"
														},
														{
															"begin": 10799,
															"end": 10857,
															"name": "DUP2"
														},
														{
															"begin": 10799,
															"end": 10857,
															"name": "SWAP1"
														},
														{
															"begin": 10799,
															"end": 10857,
															"name": "SSTORE"
														},
														{
															"begin": 10799,
															"end": 10857,
															"name": "POP"
														},
														{
															"begin": 10961,
															"end": 10973,
															"name": "PUSH",
															"value": "3"
														},
														{
															"begin": 10961,
															"end": 10973,
															"name": "SLOAD"
														},
														{
															"begin": 10945,
															"end": 10957,
															"name": "PUSH",
															"value": "4"
														},
														{
															"begin": 10945,
															"end": 10957,
															"name": "SLOAD"
														},
														{
															"begin": 10945,
															"end": 10973,
															"name": "EQ"
														},
														{
															"begin": 10941,
															"end": 11301,
															"name": "ISZERO"
														},
														{
															"begin": 10941,
															"end": 11301,
															"name": "PUSH [tag]",
															"value": "105"
														},
														{
															"begin": 10941,
															"end": 11301,
															"name": "JUMPI"
														},
														{
															"begin": 11068,
															"end": 11083,
															"name": "TIMESTAMP"
														},
														{
															"begin": 11056,
															"end": 11066,
															"name": "CALLER"
														},
														{
															"begin": 11027,
															"end": 11084,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 11027,
															"end": 11084,
															"name": "AND"
														},
														{
															"begin": 11027,
															"end": 11084,
															"name": "PUSH",
															"value": "25630DE45A38A90CBCA3A2EB35A8197E51B56D6D912581711E5E3773FE77CABC"
														},
														{
															"begin": 11027,
															"end": 11084,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 11027,
															"end": 11084,
															"name": "MLOAD"
														},
														{
															"begin": 11027,
															"end": 11084,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 11027,
															"end": 11084,
															"name": "MLOAD"
														},
														{
															"begin": 11027,
															"end": 11084,
															"name": "DUP1"
														},
														{
															"begin": 11027,
															"end": 11084,
															"name": "SWAP2"
														},
														{
															"begin": 11027,
															"end": 11084,
															"name": "SUB"
														},
														{
															"begin": 11027,
															"end": 11084,
															"name": "SWAP1"
														},
														{
															"begin": 11027,
															"end": 11084,
															"name": "LOG3"
														},
														{
															"begin": 11172,
															"end": 11193,
															"name": "PUSH",
															"value": "2"
														},
														{
															"begin": 11164,
															"end": 11169,
															"name": "PUSH",
															"value": "C"
														},
														{
															"begin": 11164,
															"end": 11169,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": 11164,
															"end": 11193,
															"name": "PUSH",
															"value": "100"
														},
														{
															"begin": 11164,
															"end": 11193,
															"name": "EXP"
														},
														{
															"begin": 11164,
															"end": 11193,
															"name": "DUP2"
														},
														{
															"begin": 11164,
															"end": 11193,
															"name": "SLOAD"
														},
														{
															"begin": 11164,
															"end": 11193,
															"name": "DUP2"
														},
														{
															"begin": 11164,
															"end": 11193,
															"name": "PUSH",
															"value": "FF"
														},
														{
															"begin": 11164,
															"end": 11193,
															"name": "MUL"
														},
														{
															"begin": 11164,
															"end": 11193,
															"name": "NOT"
														},
														{
															"begin": 11164,
															"end": 11193,
															"name": "AND"
														},
														{
															"begin": 11164,
															"end": 11193,
															"name": "SWAP1"
														},
														{
															"begin": 11164,
															"end": 11193,
															"name": "DUP4"
														},
														{
															"begin": 11164,
															"end": 11193,
															"name": "PUSH",
															"value": "5"
														},
														{
															"begin": 11164,
															"end": 11193,
															"name": "DUP2"
														},
														{
															"begin": 11164,
															"end": 11193,
															"name": "GT"
														},
														{
															"begin": 11164,
															"end": 11193,
															"name": "ISZERO"
														},
														{
															"begin": 11164,
															"end": 11193,
															"name": "PUSH [tag]",
															"value": "106"
														},
														{
															"begin": 11164,
															"end": 11193,
															"name": "JUMPI"
														},
														{
															"begin": 11164,
															"end": 11193,
															"name": "INVALID"
														},
														{
															"begin": 11164,
															"end": 11193,
															"name": "tag",
															"value": "106"
														},
														{
															"begin": 11164,
															"end": 11193,
															"name": "JUMPDEST"
														},
														{
															"begin": 11164,
															"end": 11193,
															"name": "MUL"
														},
														{
															"begin": 11164,
															"end": 11193,
															"name": "OR"
														},
														{
															"begin": 11164,
															"end": 11193,
															"name": "SWAP1"
														},
														{
															"begin": 11164,
															"end": 11193,
															"name": "SSTORE"
														},
														{
															"begin": 11164,
															"end": 11193,
															"name": "POP"
														},
														{
															"begin": 11273,
															"end": 11288,
															"name": "TIMESTAMP"
														},
														{
															"begin": 11266,
															"end": 11271,
															"name": "PUSH",
															"value": "C"
														},
														{
															"begin": 11266,
															"end": 11271,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": 11266,
															"end": 11271,
															"name": "SWAP1"
														},
														{
															"begin": 11266,
															"end": 11271,
															"name": "SLOAD"
														},
														{
															"begin": 11266,
															"end": 11271,
															"name": "SWAP1"
														},
														{
															"begin": 11266,
															"end": 11271,
															"name": "PUSH",
															"value": "100"
														},
														{
															"begin": 11266,
															"end": 11271,
															"name": "EXP"
														},
														{
															"begin": 11266,
															"end": 11271,
															"name": "SWAP1"
														},
														{
															"begin": 11266,
															"end": 11271,
															"name": "DIV"
														},
														{
															"begin": 11266,
															"end": 11271,
															"name": "PUSH",
															"value": "FF"
														},
														{
															"begin": 11266,
															"end": 11271,
															"name": "AND"
														},
														{
															"begin": 11244,
															"end": 11289,
															"name": "PUSH",
															"value": "5"
														},
														{
															"begin": 11244,
															"end": 11289,
															"name": "DUP2"
														},
														{
															"begin": 11244,
															"end": 11289,
															"name": "GT"
														},
														{
															"begin": 11244,
															"end": 11289,
															"name": "ISZERO"
														},
														{
															"begin": 11244,
															"end": 11289,
															"name": "PUSH [tag]",
															"value": "107"
														},
														{
															"begin": 11244,
															"end": 11289,
															"name": "JUMPI"
														},
														{
															"begin": 11244,
															"end": 11289,
															"name": "INVALID"
														},
														{
															"begin": 11244,
															"end": 11289,
															"name": "tag",
															"value": "107"
														},
														{
															"begin": 11244,
															"end": 11289,
															"name": "JUMPDEST"
														},
														{
															"begin": 11244,
															"end": 11289,
															"name": "PUSH",
															"value": "AAAE373901E745122C2E0925AD006227969C6CD190B7D5EA2FB7FDBD1D955B35"
														},
														{
															"begin": 11244,
															"end": 11289,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 11244,
															"end": 11289,
															"name": "MLOAD"
														},
														{
															"begin": 11244,
															"end": 11289,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 11244,
															"end": 11289,
															"name": "MLOAD"
														},
														{
															"begin": 11244,
															"end": 11289,
															"name": "DUP1"
														},
														{
															"begin": 11244,
															"end": 11289,
															"name": "SWAP2"
														},
														{
															"begin": 11244,
															"end": 11289,
															"name": "SUB"
														},
														{
															"begin": 11244,
															"end": 11289,
															"name": "SWAP1"
														},
														{
															"begin": 11244,
															"end": 11289,
															"name": "LOG3"
														},
														{
															"begin": 10941,
															"end": 11301,
															"name": "tag",
															"value": "105"
														},
														{
															"begin": 10941,
															"end": 11301,
															"name": "JUMPDEST"
														},
														{
															"begin": 8897,
															"end": 11308,
															"name": "POP"
														},
														{
															"begin": 8897,
															"end": 11308,
															"name": "JUMP",
															"value": "[out]"
														},
														{
															"begin": 14537,
															"end": 15150,
															"name": "tag",
															"value": "36"
														},
														{
															"begin": 14537,
															"end": 15150,
															"name": "JUMPDEST"
														},
														{
															"begin": 3958,
															"end": 3962,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": 3948,
															"end": 3962,
															"name": "ISZERO"
														},
														{
															"begin": 3948,
															"end": 3962,
															"name": "ISZERO"
														},
														{
															"begin": 3948,
															"end": 3954,
															"name": "PUSH",
															"value": "C"
														},
														{
															"begin": 3948,
															"end": 3954,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 3948,
															"end": 3954,
															"name": "SWAP1"
														},
														{
															"begin": 3948,
															"end": 3954,
															"name": "SLOAD"
														},
														{
															"begin": 3948,
															"end": 3954,
															"name": "SWAP1"
														},
														{
															"begin": 3948,
															"end": 3954,
															"name": "PUSH",
															"value": "100"
														},
														{
															"begin": 3948,
															"end": 3954,
															"name": "EXP"
														},
														{
															"begin": 3948,
															"end": 3954,
															"name": "SWAP1"
														},
														{
															"begin": 3948,
															"end": 3954,
															"name": "DIV"
														},
														{
															"begin": 3948,
															"end": 3954,
															"name": "PUSH",
															"value": "FF"
														},
														{
															"begin": 3948,
															"end": 3954,
															"name": "AND"
														},
														{
															"begin": 3948,
															"end": 3962,
															"name": "ISZERO"
														},
														{
															"begin": 3948,
															"end": 3962,
															"name": "ISZERO"
														},
														{
															"begin": 3948,
															"end": 3962,
															"name": "EQ"
														},
														{
															"begin": 3940,
															"end": 3963,
															"name": "ISZERO"
														},
														{
															"begin": 3940,
															"end": 3963,
															"name": "ISZERO"
														},
														{
															"begin": 3940,
															"end": 3963,
															"name": "PUSH [tag]",
															"value": "109"
														},
														{
															"begin": 3940,
															"end": 3963,
															"name": "JUMPI"
														},
														{
															"begin": 3940,
															"end": 3963,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 3940,
															"end": 3963,
															"name": "DUP1"
														},
														{
															"begin": 3940,
															"end": 3963,
															"name": "REVERT"
														},
														{
															"begin": 3940,
															"end": 3963,
															"name": "tag",
															"value": "109"
														},
														{
															"begin": 3940,
															"end": 3963,
															"name": "JUMPDEST"
														},
														{
															"begin": 4785,
															"end": 4801,
															"name": "PUSH",
															"value": "12"
														},
														{
															"begin": 4785,
															"end": 4801,
															"name": "SLOAD"
														},
														{
															"begin": 4766,
															"end": 4781,
															"name": "TIMESTAMP"
														},
														{
															"begin": 4766,
															"end": 4801,
															"name": "LT"
														},
														{
															"begin": 4766,
															"end": 4801,
															"name": "ISZERO"
														},
														{
															"begin": 4758,
															"end": 4802,
															"name": "ISZERO"
														},
														{
															"begin": 4758,
															"end": 4802,
															"name": "ISZERO"
														},
														{
															"begin": 4758,
															"end": 4802,
															"name": "PUSH [tag]",
															"value": "111"
														},
														{
															"begin": 4758,
															"end": 4802,
															"name": "JUMPI"
														},
														{
															"begin": 4758,
															"end": 4802,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 4758,
															"end": 4802,
															"name": "DUP1"
														},
														{
															"begin": 4758,
															"end": 4802,
															"name": "REVERT"
														},
														{
															"begin": 4758,
															"end": 4802,
															"name": "tag",
															"value": "111"
														},
														{
															"begin": 4758,
															"end": 4802,
															"name": "JUMPDEST"
														},
														{
															"begin": 4830,
															"end": 4846,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 4821,
															"end": 4846,
															"name": "PUSH",
															"value": "5"
														},
														{
															"begin": 4821,
															"end": 4846,
															"name": "DUP2"
														},
														{
															"begin": 4821,
															"end": 4846,
															"name": "GT"
														},
														{
															"begin": 4821,
															"end": 4846,
															"name": "ISZERO"
														},
														{
															"begin": 4821,
															"end": 4846,
															"name": "PUSH [tag]",
															"value": "112"
														},
														{
															"begin": 4821,
															"end": 4846,
															"name": "JUMPI"
														},
														{
															"begin": 4821,
															"end": 4846,
															"name": "INVALID"
														},
														{
															"begin": 4821,
															"end": 4846,
															"name": "tag",
															"value": "112"
														},
														{
															"begin": 4821,
															"end": 4846,
															"name": "JUMPDEST"
														},
														{
															"begin": 4821,
															"end": 4826,
															"name": "PUSH",
															"value": "C"
														},
														{
															"begin": 4821,
															"end": 4826,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": 4821,
															"end": 4826,
															"name": "SWAP1"
														},
														{
															"begin": 4821,
															"end": 4826,
															"name": "SLOAD"
														},
														{
															"begin": 4821,
															"end": 4826,
															"name": "SWAP1"
														},
														{
															"begin": 4821,
															"end": 4826,
															"name": "PUSH",
															"value": "100"
														},
														{
															"begin": 4821,
															"end": 4826,
															"name": "EXP"
														},
														{
															"begin": 4821,
															"end": 4826,
															"name": "SWAP1"
														},
														{
															"begin": 4821,
															"end": 4826,
															"name": "DIV"
														},
														{
															"begin": 4821,
															"end": 4826,
															"name": "PUSH",
															"value": "FF"
														},
														{
															"begin": 4821,
															"end": 4826,
															"name": "AND"
														},
														{
															"begin": 4821,
															"end": 4846,
															"name": "PUSH",
															"value": "5"
														},
														{
															"begin": 4821,
															"end": 4846,
															"name": "DUP2"
														},
														{
															"begin": 4821,
															"end": 4846,
															"name": "GT"
														},
														{
															"begin": 4821,
															"end": 4846,
															"name": "ISZERO"
														},
														{
															"begin": 4821,
															"end": 4846,
															"name": "PUSH [tag]",
															"value": "113"
														},
														{
															"begin": 4821,
															"end": 4846,
															"name": "JUMPI"
														},
														{
															"begin": 4821,
															"end": 4846,
															"name": "INVALID"
														},
														{
															"begin": 4821,
															"end": 4846,
															"name": "tag",
															"value": "113"
														},
														{
															"begin": 4821,
															"end": 4846,
															"name": "JUMPDEST"
														},
														{
															"begin": 4821,
															"end": 4846,
															"name": "EQ"
														},
														{
															"begin": 4813,
															"end": 4847,
															"name": "ISZERO"
														},
														{
															"begin": 4813,
															"end": 4847,
															"name": "ISZERO"
														},
														{
															"begin": 4813,
															"end": 4847,
															"name": "PUSH [tag]",
															"value": "114"
														},
														{
															"begin": 4813,
															"end": 4847,
															"name": "JUMPI"
														},
														{
															"begin": 4813,
															"end": 4847,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 4813,
															"end": 4847,
															"name": "DUP1"
														},
														{
															"begin": 4813,
															"end": 4847,
															"name": "REVERT"
														},
														{
															"begin": 4813,
															"end": 4847,
															"name": "tag",
															"value": "114"
														},
														{
															"begin": 4813,
															"end": 4847,
															"name": "JUMPDEST"
														},
														{
															"begin": 4149,
															"end": 4153,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": 4126,
															"end": 4153,
															"name": "ISZERO"
														},
														{
															"begin": 4126,
															"end": 4153,
															"name": "ISZERO"
														},
														{
															"begin": 4126,
															"end": 4133,
															"name": "PUSH",
															"value": "D"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 4134,
															"end": 4144,
															"name": "CALLER"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "AND"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "AND"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "DUP2"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "MSTORE"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "ADD"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "SWAP1"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "DUP2"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "MSTORE"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "ADD"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "KECCAK256"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "SWAP1"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "SLOAD"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "SWAP1"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "PUSH",
															"value": "100"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "EXP"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "SWAP1"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "DIV"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "PUSH",
															"value": "FF"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "AND"
														},
														{
															"begin": 4126,
															"end": 4153,
															"name": "ISZERO"
														},
														{
															"begin": 4126,
															"end": 4153,
															"name": "ISZERO"
														},
														{
															"begin": 4126,
															"end": 4153,
															"name": "EQ"
														},
														{
															"begin": 4118,
															"end": 4154,
															"name": "ISZERO"
														},
														{
															"begin": 4118,
															"end": 4154,
															"name": "ISZERO"
														},
														{
															"begin": 4118,
															"end": 4154,
															"name": "PUSH [tag]",
															"value": "116"
														},
														{
															"begin": 4118,
															"end": 4154,
															"name": "JUMPI"
														},
														{
															"begin": 4118,
															"end": 4154,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 4118,
															"end": 4154,
															"name": "DUP1"
														},
														{
															"begin": 4118,
															"end": 4154,
															"name": "REVERT"
														},
														{
															"begin": 4118,
															"end": 4154,
															"name": "tag",
															"value": "116"
														},
														{
															"begin": 4118,
															"end": 4154,
															"name": "JUMPDEST"
														},
														{
															"begin": 14691,
															"end": 14696,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 14663,
															"end": 14696,
															"name": "ISZERO"
														},
														{
															"begin": 14663,
															"end": 14696,
															"name": "ISZERO"
														},
														{
															"begin": 14663,
															"end": 14675,
															"name": "PUSH",
															"value": "11"
														},
														{
															"begin": 14663,
															"end": 14687,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 14676,
															"end": 14686,
															"name": "CALLER"
														},
														{
															"begin": 14663,
															"end": 14687,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 14663,
															"end": 14687,
															"name": "AND"
														},
														{
															"begin": 14663,
															"end": 14687,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 14663,
															"end": 14687,
															"name": "AND"
														},
														{
															"begin": 14663,
															"end": 14687,
															"name": "DUP2"
														},
														{
															"begin": 14663,
															"end": 14687,
															"name": "MSTORE"
														},
														{
															"begin": 14663,
															"end": 14687,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 14663,
															"end": 14687,
															"name": "ADD"
														},
														{
															"begin": 14663,
															"end": 14687,
															"name": "SWAP1"
														},
														{
															"begin": 14663,
															"end": 14687,
															"name": "DUP2"
														},
														{
															"begin": 14663,
															"end": 14687,
															"name": "MSTORE"
														},
														{
															"begin": 14663,
															"end": 14687,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 14663,
															"end": 14687,
															"name": "ADD"
														},
														{
															"begin": 14663,
															"end": 14687,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 14663,
															"end": 14687,
															"name": "KECCAK256"
														},
														{
															"begin": 14663,
															"end": 14687,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 14663,
															"end": 14687,
															"name": "SWAP1"
														},
														{
															"begin": 14663,
															"end": 14687,
															"name": "SLOAD"
														},
														{
															"begin": 14663,
															"end": 14687,
															"name": "SWAP1"
														},
														{
															"begin": 14663,
															"end": 14687,
															"name": "PUSH",
															"value": "100"
														},
														{
															"begin": 14663,
															"end": 14687,
															"name": "EXP"
														},
														{
															"begin": 14663,
															"end": 14687,
															"name": "SWAP1"
														},
														{
															"begin": 14663,
															"end": 14687,
															"name": "DIV"
														},
														{
															"begin": 14663,
															"end": 14687,
															"name": "PUSH",
															"value": "FF"
														},
														{
															"begin": 14663,
															"end": 14687,
															"name": "AND"
														},
														{
															"begin": 14663,
															"end": 14696,
															"name": "ISZERO"
														},
														{
															"begin": 14663,
															"end": 14696,
															"name": "ISZERO"
														},
														{
															"begin": 14663,
															"end": 14696,
															"name": "EQ"
														},
														{
															"begin": 14655,
															"end": 14697,
															"name": "ISZERO"
														},
														{
															"begin": 14655,
															"end": 14697,
															"name": "ISZERO"
														},
														{
															"begin": 14655,
															"end": 14697,
															"name": "PUSH [tag]",
															"value": "118"
														},
														{
															"begin": 14655,
															"end": 14697,
															"name": "JUMPI"
														},
														{
															"begin": 14655,
															"end": 14697,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 14655,
															"end": 14697,
															"name": "DUP1"
														},
														{
															"begin": 14655,
															"end": 14697,
															"name": "REVERT"
														},
														{
															"begin": 14655,
															"end": 14697,
															"name": "tag",
															"value": "118"
														},
														{
															"begin": 14655,
															"end": 14697,
															"name": "JUMPDEST"
														},
														{
															"begin": 14749,
															"end": 14760,
															"name": "PUSH",
															"value": "10"
														},
														{
															"begin": 14749,
															"end": 14760,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 14749,
															"end": 14762,
															"name": "DUP2"
														},
														{
															"begin": 14749,
															"end": 14762,
															"name": "SLOAD"
														},
														{
															"begin": 14749,
															"end": 14762,
															"name": "DUP1"
														},
														{
															"begin": 14749,
															"end": 14762,
															"name": "SWAP3"
														},
														{
															"begin": 14749,
															"end": 14762,
															"name": "SWAP2"
														},
														{
															"begin": 14749,
															"end": 14762,
															"name": "SWAP1"
														},
														{
															"begin": 14749,
															"end": 14762,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": 14749,
															"end": 14762,
															"name": "ADD"
														},
														{
															"begin": 14749,
															"end": 14762,
															"name": "SWAP2"
														},
														{
															"begin": 14749,
															"end": 14762,
															"name": "SWAP1"
														},
														{
															"begin": 14749,
															"end": 14762,
															"name": "POP"
														},
														{
															"begin": 14749,
															"end": 14762,
															"name": "SSTORE"
														},
														{
															"begin": 14749,
															"end": 14762,
															"name": "POP"
														},
														{
															"begin": 14842,
															"end": 14846,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": 14814,
															"end": 14846,
															"name": "ISZERO"
														},
														{
															"begin": 14814,
															"end": 14846,
															"name": "ISZERO"
														},
														{
															"begin": 14814,
															"end": 14826,
															"name": "PUSH",
															"value": "11"
														},
														{
															"begin": 14814,
															"end": 14838,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 14827,
															"end": 14837,
															"name": "CALLER"
														},
														{
															"begin": 14814,
															"end": 14838,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 14814,
															"end": 14838,
															"name": "AND"
														},
														{
															"begin": 14814,
															"end": 14838,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 14814,
															"end": 14838,
															"name": "AND"
														},
														{
															"begin": 14814,
															"end": 14838,
															"name": "DUP2"
														},
														{
															"begin": 14814,
															"end": 14838,
															"name": "MSTORE"
														},
														{
															"begin": 14814,
															"end": 14838,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 14814,
															"end": 14838,
															"name": "ADD"
														},
														{
															"begin": 14814,
															"end": 14838,
															"name": "SWAP1"
														},
														{
															"begin": 14814,
															"end": 14838,
															"name": "DUP2"
														},
														{
															"begin": 14814,
															"end": 14838,
															"name": "MSTORE"
														},
														{
															"begin": 14814,
															"end": 14838,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 14814,
															"end": 14838,
															"name": "ADD"
														},
														{
															"begin": 14814,
															"end": 14838,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 14814,
															"end": 14838,
															"name": "KECCAK256"
														},
														{
															"begin": 14814,
															"end": 14838,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 14814,
															"end": 14838,
															"name": "SWAP1"
														},
														{
															"begin": 14814,
															"end": 14838,
															"name": "SLOAD"
														},
														{
															"begin": 14814,
															"end": 14838,
															"name": "SWAP1"
														},
														{
															"begin": 14814,
															"end": 14838,
															"name": "PUSH",
															"value": "100"
														},
														{
															"begin": 14814,
															"end": 14838,
															"name": "EXP"
														},
														{
															"begin": 14814,
															"end": 14838,
															"name": "SWAP1"
														},
														{
															"begin": 14814,
															"end": 14838,
															"name": "POP"
														},
														{
															"begin": 14814,
															"end": 14838,
															"name": "POP"
														},
														{
															"begin": 14814,
															"end": 14846,
															"name": "POP"
														},
														{
															"begin": 14958,
															"end": 14973,
															"name": "TIMESTAMP"
														},
														{
															"begin": 14946,
															"end": 14956,
															"name": "CALLER"
														},
														{
															"begin": 14921,
															"end": 14974,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 14921,
															"end": 14974,
															"name": "AND"
														},
														{
															"begin": 14921,
															"end": 14974,
															"name": "PUSH",
															"value": "D7173CE7E4CE6F6D075259AC1A467AB8290DB175A2CEE8587A663C006B97E129"
														},
														{
															"begin": 14921,
															"end": 14974,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 14921,
															"end": 14974,
															"name": "MLOAD"
														},
														{
															"begin": 14921,
															"end": 14974,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 14921,
															"end": 14974,
															"name": "MLOAD"
														},
														{
															"begin": 14921,
															"end": 14974,
															"name": "DUP1"
														},
														{
															"begin": 14921,
															"end": 14974,
															"name": "SWAP2"
														},
														{
															"begin": 14921,
															"end": 14974,
															"name": "SUB"
														},
														{
															"begin": 14921,
															"end": 14974,
															"name": "SWAP1"
														},
														{
															"begin": 14921,
															"end": 14974,
															"name": "LOG3"
														},
														{
															"begin": 15048,
															"end": 15059,
															"name": "PUSH",
															"value": "10"
														},
														{
															"begin": 15048,
															"end": 15059,
															"name": "SLOAD"
														},
														{
															"begin": 15032,
															"end": 15044,
															"name": "PUSH",
															"value": "F"
														},
														{
															"begin": 15032,
															"end": 15044,
															"name": "SLOAD"
														},
														{
															"begin": 15032,
															"end": 15059,
															"name": "EQ"
														},
														{
															"begin": 15028,
															"end": 15143,
															"name": "ISZERO"
														},
														{
															"begin": 15028,
															"end": 15143,
															"name": "PUSH [tag]",
															"value": "119"
														},
														{
															"begin": 15028,
															"end": 15143,
															"name": "JUMPI"
														},
														{
															"begin": 15123,
															"end": 15131,
															"name": "PUSH [tag]",
															"value": "120"
														},
														{
															"begin": 15123,
															"end": 15129,
															"name": "PUSH [tag]",
															"value": "121"
														},
														{
															"begin": 15123,
															"end": 15131,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 15123,
															"end": 15131,
															"name": "tag",
															"value": "120"
														},
														{
															"begin": 15123,
															"end": 15131,
															"name": "JUMPDEST"
														},
														{
															"begin": 15028,
															"end": 15143,
															"name": "tag",
															"value": "119"
														},
														{
															"begin": 15028,
															"end": 15143,
															"name": "JUMPDEST"
														},
														{
															"begin": 14537,
															"end": 15150,
															"name": "JUMP",
															"value": "[out]"
														},
														{
															"begin": 15462,
															"end": 16416,
															"name": "tag",
															"value": "39"
														},
														{
															"begin": 15462,
															"end": 16416,
															"name": "JUMPDEST"
														},
														{
															"begin": 3958,
															"end": 3962,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": 3948,
															"end": 3962,
															"name": "ISZERO"
														},
														{
															"begin": 3948,
															"end": 3962,
															"name": "ISZERO"
														},
														{
															"begin": 3948,
															"end": 3954,
															"name": "PUSH",
															"value": "C"
														},
														{
															"begin": 3948,
															"end": 3954,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 3948,
															"end": 3954,
															"name": "SWAP1"
														},
														{
															"begin": 3948,
															"end": 3954,
															"name": "SLOAD"
														},
														{
															"begin": 3948,
															"end": 3954,
															"name": "SWAP1"
														},
														{
															"begin": 3948,
															"end": 3954,
															"name": "PUSH",
															"value": "100"
														},
														{
															"begin": 3948,
															"end": 3954,
															"name": "EXP"
														},
														{
															"begin": 3948,
															"end": 3954,
															"name": "SWAP1"
														},
														{
															"begin": 3948,
															"end": 3954,
															"name": "DIV"
														},
														{
															"begin": 3948,
															"end": 3954,
															"name": "PUSH",
															"value": "FF"
														},
														{
															"begin": 3948,
															"end": 3954,
															"name": "AND"
														},
														{
															"begin": 3948,
															"end": 3962,
															"name": "ISZERO"
														},
														{
															"begin": 3948,
															"end": 3962,
															"name": "ISZERO"
														},
														{
															"begin": 3948,
															"end": 3962,
															"name": "EQ"
														},
														{
															"begin": 3940,
															"end": 3963,
															"name": "ISZERO"
														},
														{
															"begin": 3940,
															"end": 3963,
															"name": "ISZERO"
														},
														{
															"begin": 3940,
															"end": 3963,
															"name": "PUSH [tag]",
															"value": "123"
														},
														{
															"begin": 3940,
															"end": 3963,
															"name": "JUMPI"
														},
														{
															"begin": 3940,
															"end": 3963,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 3940,
															"end": 3963,
															"name": "DUP1"
														},
														{
															"begin": 3940,
															"end": 3963,
															"name": "REVERT"
														},
														{
															"begin": 3940,
															"end": 3963,
															"name": "tag",
															"value": "123"
														},
														{
															"begin": 3940,
															"end": 3963,
															"name": "JUMPDEST"
														},
														{
															"begin": 4149,
															"end": 4153,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": 4126,
															"end": 4153,
															"name": "ISZERO"
														},
														{
															"begin": 4126,
															"end": 4153,
															"name": "ISZERO"
														},
														{
															"begin": 4126,
															"end": 4133,
															"name": "PUSH",
															"value": "D"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 4134,
															"end": 4144,
															"name": "CALLER"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "AND"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "AND"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "DUP2"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "MSTORE"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "ADD"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "SWAP1"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "DUP2"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "MSTORE"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "ADD"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "KECCAK256"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "SWAP1"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "SLOAD"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "SWAP1"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "PUSH",
															"value": "100"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "EXP"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "SWAP1"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "DIV"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "PUSH",
															"value": "FF"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "AND"
														},
														{
															"begin": 4126,
															"end": 4153,
															"name": "ISZERO"
														},
														{
															"begin": 4126,
															"end": 4153,
															"name": "ISZERO"
														},
														{
															"begin": 4126,
															"end": 4153,
															"name": "EQ"
														},
														{
															"begin": 4118,
															"end": 4154,
															"name": "ISZERO"
														},
														{
															"begin": 4118,
															"end": 4154,
															"name": "ISZERO"
														},
														{
															"begin": 4118,
															"end": 4154,
															"name": "PUSH [tag]",
															"value": "125"
														},
														{
															"begin": 4118,
															"end": 4154,
															"name": "JUMPI"
														},
														{
															"begin": 4118,
															"end": 4154,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 4118,
															"end": 4154,
															"name": "DUP1"
														},
														{
															"begin": 4118,
															"end": 4154,
															"name": "REVERT"
														},
														{
															"begin": 4118,
															"end": 4154,
															"name": "tag",
															"value": "125"
														},
														{
															"begin": 4118,
															"end": 4154,
															"name": "JUMPDEST"
														},
														{
															"begin": 4924,
															"end": 4937,
															"name": "PUSH",
															"value": "4"
														},
														{
															"begin": 4915,
															"end": 4937,
															"name": "PUSH",
															"value": "5"
														},
														{
															"begin": 4915,
															"end": 4937,
															"name": "DUP2"
														},
														{
															"begin": 4915,
															"end": 4937,
															"name": "GT"
														},
														{
															"begin": 4915,
															"end": 4937,
															"name": "ISZERO"
														},
														{
															"begin": 4915,
															"end": 4937,
															"name": "PUSH [tag]",
															"value": "127"
														},
														{
															"begin": 4915,
															"end": 4937,
															"name": "JUMPI"
														},
														{
															"begin": 4915,
															"end": 4937,
															"name": "INVALID"
														},
														{
															"begin": 4915,
															"end": 4937,
															"name": "tag",
															"value": "127"
														},
														{
															"begin": 4915,
															"end": 4937,
															"name": "JUMPDEST"
														},
														{
															"begin": 4915,
															"end": 4920,
															"name": "PUSH",
															"value": "C"
														},
														{
															"begin": 4915,
															"end": 4920,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": 4915,
															"end": 4920,
															"name": "SWAP1"
														},
														{
															"begin": 4915,
															"end": 4920,
															"name": "SLOAD"
														},
														{
															"begin": 4915,
															"end": 4920,
															"name": "SWAP1"
														},
														{
															"begin": 4915,
															"end": 4920,
															"name": "PUSH",
															"value": "100"
														},
														{
															"begin": 4915,
															"end": 4920,
															"name": "EXP"
														},
														{
															"begin": 4915,
															"end": 4920,
															"name": "SWAP1"
														},
														{
															"begin": 4915,
															"end": 4920,
															"name": "DIV"
														},
														{
															"begin": 4915,
															"end": 4920,
															"name": "PUSH",
															"value": "FF"
														},
														{
															"begin": 4915,
															"end": 4920,
															"name": "AND"
														},
														{
															"begin": 4915,
															"end": 4937,
															"name": "PUSH",
															"value": "5"
														},
														{
															"begin": 4915,
															"end": 4937,
															"name": "DUP2"
														},
														{
															"begin": 4915,
															"end": 4937,
															"name": "GT"
														},
														{
															"begin": 4915,
															"end": 4937,
															"name": "ISZERO"
														},
														{
															"begin": 4915,
															"end": 4937,
															"name": "PUSH [tag]",
															"value": "128"
														},
														{
															"begin": 4915,
															"end": 4937,
															"name": "JUMPI"
														},
														{
															"begin": 4915,
															"end": 4937,
															"name": "INVALID"
														},
														{
															"begin": 4915,
															"end": 4937,
															"name": "tag",
															"value": "128"
														},
														{
															"begin": 4915,
															"end": 4937,
															"name": "JUMPDEST"
														},
														{
															"begin": 4915,
															"end": 4937,
															"name": "EQ"
														},
														{
															"begin": 4907,
															"end": 4938,
															"name": "ISZERO"
														},
														{
															"begin": 4907,
															"end": 4938,
															"name": "ISZERO"
														},
														{
															"begin": 4907,
															"end": 4938,
															"name": "PUSH [tag]",
															"value": "129"
														},
														{
															"begin": 4907,
															"end": 4938,
															"name": "JUMPI"
														},
														{
															"begin": 4907,
															"end": 4938,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 4907,
															"end": 4938,
															"name": "DUP1"
														},
														{
															"begin": 4907,
															"end": 4938,
															"name": "REVERT"
														},
														{
															"begin": 4907,
															"end": 4938,
															"name": "tag",
															"value": "129"
														},
														{
															"begin": 4907,
															"end": 4938,
															"name": "JUMPDEST"
														},
														{
															"begin": 15604,
															"end": 15625,
															"name": "PUSH",
															"value": "E"
														},
														{
															"begin": 15604,
															"end": 15637,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 15626,
															"end": 15636,
															"name": "CALLER"
														},
														{
															"begin": 15604,
															"end": 15637,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 15604,
															"end": 15637,
															"name": "AND"
														},
														{
															"begin": 15604,
															"end": 15637,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 15604,
															"end": 15637,
															"name": "AND"
														},
														{
															"begin": 15604,
															"end": 15637,
															"name": "DUP2"
														},
														{
															"begin": 15604,
															"end": 15637,
															"name": "MSTORE"
														},
														{
															"begin": 15604,
															"end": 15637,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 15604,
															"end": 15637,
															"name": "ADD"
														},
														{
															"begin": 15604,
															"end": 15637,
															"name": "SWAP1"
														},
														{
															"begin": 15604,
															"end": 15637,
															"name": "DUP2"
														},
														{
															"begin": 15604,
															"end": 15637,
															"name": "MSTORE"
														},
														{
															"begin": 15604,
															"end": 15637,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 15604,
															"end": 15637,
															"name": "ADD"
														},
														{
															"begin": 15604,
															"end": 15637,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 15604,
															"end": 15637,
															"name": "KECCAK256"
														},
														{
															"begin": 15604,
															"end": 15637,
															"name": "SLOAD"
														},
														{
															"begin": 15588,
															"end": 15592,
															"name": "ADDRESS"
														},
														{
															"begin": 15588,
															"end": 15600,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 15588,
															"end": 15600,
															"name": "AND"
														},
														{
															"begin": 15588,
															"end": 15600,
															"name": "BALANCE"
														},
														{
															"begin": 15588,
															"end": 15637,
															"name": "LT"
														},
														{
															"begin": 15588,
															"end": 15637,
															"name": "ISZERO"
														},
														{
															"begin": 15581,
															"end": 15638,
															"name": "ISZERO"
														},
														{
															"begin": 15581,
															"end": 15638,
															"name": "ISZERO"
														},
														{
															"begin": 15581,
															"end": 15638,
															"name": "PUSH [tag]",
															"value": "131"
														},
														{
															"begin": 15581,
															"end": 15638,
															"name": "JUMPI"
														},
														{
															"begin": 15581,
															"end": 15638,
															"name": "INVALID"
														},
														{
															"begin": 15581,
															"end": 15638,
															"name": "tag",
															"value": "131"
														},
														{
															"begin": 15581,
															"end": 15638,
															"name": "JUMPDEST"
														},
														{
															"begin": 15719,
															"end": 15729,
															"name": "CALLER"
														},
														{
															"begin": 15719,
															"end": 15738,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 15719,
															"end": 15738,
															"name": "AND"
														},
														{
															"begin": 15719,
															"end": 15773,
															"name": "PUSH",
															"value": "8FC"
														},
														{
															"begin": 15739,
															"end": 15760,
															"name": "PUSH",
															"value": "E"
														},
														{
															"begin": 15739,
															"end": 15772,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 15761,
															"end": 15771,
															"name": "CALLER"
														},
														{
															"begin": 15739,
															"end": 15772,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 15739,
															"end": 15772,
															"name": "AND"
														},
														{
															"begin": 15739,
															"end": 15772,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 15739,
															"end": 15772,
															"name": "AND"
														},
														{
															"begin": 15739,
															"end": 15772,
															"name": "DUP2"
														},
														{
															"begin": 15739,
															"end": 15772,
															"name": "MSTORE"
														},
														{
															"begin": 15739,
															"end": 15772,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 15739,
															"end": 15772,
															"name": "ADD"
														},
														{
															"begin": 15739,
															"end": 15772,
															"name": "SWAP1"
														},
														{
															"begin": 15739,
															"end": 15772,
															"name": "DUP2"
														},
														{
															"begin": 15739,
															"end": 15772,
															"name": "MSTORE"
														},
														{
															"begin": 15739,
															"end": 15772,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 15739,
															"end": 15772,
															"name": "ADD"
														},
														{
															"begin": 15739,
															"end": 15772,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 15739,
															"end": 15772,
															"name": "KECCAK256"
														},
														{
															"begin": 15739,
															"end": 15772,
															"name": "SLOAD"
														},
														{
															"begin": 15719,
															"end": 15773,
															"name": "SWAP1"
														},
														{
															"begin": 15719,
															"end": 15773,
															"name": "DUP2"
														},
														{
															"begin": 15719,
															"end": 15773,
															"name": "ISZERO"
														},
														{
															"begin": 15719,
															"end": 15773,
															"name": "MUL"
														},
														{
															"begin": 15719,
															"end": 15773,
															"name": "SWAP1"
														},
														{
															"begin": 15719,
															"end": 15773,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 15719,
															"end": 15773,
															"name": "MLOAD"
														},
														{
															"begin": 15719,
															"end": 15773,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 15719,
															"end": 15773,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 15719,
															"end": 15773,
															"name": "MLOAD"
														},
														{
															"begin": 15719,
															"end": 15773,
															"name": "DUP1"
														},
														{
															"begin": 15719,
															"end": 15773,
															"name": "DUP4"
														},
														{
															"begin": 15719,
															"end": 15773,
															"name": "SUB"
														},
														{
															"begin": 15719,
															"end": 15773,
															"name": "DUP2"
														},
														{
															"begin": 15719,
															"end": 15773,
															"name": "DUP6"
														},
														{
															"begin": 15719,
															"end": 15773,
															"name": "DUP9"
														},
														{
															"begin": 15719,
															"end": 15773,
															"name": "DUP9"
														},
														{
															"begin": 15719,
															"end": 15773,
															"name": "CALL"
														},
														{
															"begin": 15719,
															"end": 15773,
															"name": "SWAP4"
														},
														{
															"begin": 15719,
															"end": 15773,
															"name": "POP"
														},
														{
															"begin": 15719,
															"end": 15773,
															"name": "POP"
														},
														{
															"begin": 15719,
															"end": 15773,
															"name": "POP"
														},
														{
															"begin": 15719,
															"end": 15773,
															"name": "POP"
														},
														{
															"begin": 15719,
															"end": 15773,
															"name": "ISZERO"
														},
														{
															"begin": 15719,
															"end": 15773,
															"name": "ISZERO"
														},
														{
															"begin": 15719,
															"end": 15773,
															"name": "PUSH [tag]",
															"value": "132"
														},
														{
															"begin": 15719,
															"end": 15773,
															"name": "JUMPI"
														},
														{
															"begin": 15719,
															"end": 15773,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 15719,
															"end": 15773,
															"name": "DUP1"
														},
														{
															"begin": 15719,
															"end": 15773,
															"name": "REVERT"
														},
														{
															"begin": 15719,
															"end": 15773,
															"name": "tag",
															"value": "132"
														},
														{
															"begin": 15719,
															"end": 15773,
															"name": "JUMPDEST"
														},
														{
															"begin": 15891,
															"end": 15906,
															"name": "TIMESTAMP"
														},
														{
															"begin": 15856,
															"end": 15877,
															"name": "PUSH",
															"value": "E"
														},
														{
															"begin": 15856,
															"end": 15889,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 15878,
															"end": 15888,
															"name": "CALLER"
														},
														{
															"begin": 15856,
															"end": 15889,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 15856,
															"end": 15889,
															"name": "AND"
														},
														{
															"begin": 15856,
															"end": 15889,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 15856,
															"end": 15889,
															"name": "AND"
														},
														{
															"begin": 15856,
															"end": 15889,
															"name": "DUP2"
														},
														{
															"begin": 15856,
															"end": 15889,
															"name": "MSTORE"
														},
														{
															"begin": 15856,
															"end": 15889,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 15856,
															"end": 15889,
															"name": "ADD"
														},
														{
															"begin": 15856,
															"end": 15889,
															"name": "SWAP1"
														},
														{
															"begin": 15856,
															"end": 15889,
															"name": "DUP2"
														},
														{
															"begin": 15856,
															"end": 15889,
															"name": "MSTORE"
														},
														{
															"begin": 15856,
															"end": 15889,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 15856,
															"end": 15889,
															"name": "ADD"
														},
														{
															"begin": 15856,
															"end": 15889,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 15856,
															"end": 15889,
															"name": "KECCAK256"
														},
														{
															"begin": 15856,
															"end": 15889,
															"name": "SLOAD"
														},
														{
															"begin": 15844,
															"end": 15854,
															"name": "CALLER"
														},
														{
															"begin": 15826,
															"end": 15907,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 15826,
															"end": 15907,
															"name": "AND"
														},
														{
															"begin": 15826,
															"end": 15907,
															"name": "PUSH",
															"value": "71E252E33F19F0223F47F27D00910548D26488B9B55CB5B410B75E273152F8D6"
														},
														{
															"begin": 15826,
															"end": 15907,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 15826,
															"end": 15907,
															"name": "MLOAD"
														},
														{
															"begin": 15826,
															"end": 15907,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 15826,
															"end": 15907,
															"name": "MLOAD"
														},
														{
															"begin": 15826,
															"end": 15907,
															"name": "DUP1"
														},
														{
															"begin": 15826,
															"end": 15907,
															"name": "SWAP2"
														},
														{
															"begin": 15826,
															"end": 15907,
															"name": "SUB"
														},
														{
															"begin": 15826,
															"end": 15907,
															"name": "SWAP1"
														},
														{
															"begin": 15826,
															"end": 15907,
															"name": "LOG4"
														},
														{
															"begin": 15994,
															"end": 15995,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 15978,
															"end": 15982,
															"name": "ADDRESS"
														},
														{
															"begin": 15978,
															"end": 15990,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 15978,
															"end": 15990,
															"name": "AND"
														},
														{
															"begin": 15978,
															"end": 15990,
															"name": "BALANCE"
														},
														{
															"begin": 15978,
															"end": 15995,
															"name": "EQ"
														},
														{
															"begin": 15974,
															"end": 16409,
															"name": "ISZERO"
														},
														{
															"begin": 15974,
															"end": 16409,
															"name": "PUSH [tag]",
															"value": "133"
														},
														{
															"begin": 15974,
															"end": 16409,
															"name": "JUMPI"
														},
														{
															"begin": 16070,
															"end": 16075,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 16061,
															"end": 16067,
															"name": "PUSH",
															"value": "C"
														},
														{
															"begin": 16061,
															"end": 16067,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 16061,
															"end": 16075,
															"name": "PUSH",
															"value": "100"
														},
														{
															"begin": 16061,
															"end": 16075,
															"name": "EXP"
														},
														{
															"begin": 16061,
															"end": 16075,
															"name": "DUP2"
														},
														{
															"begin": 16061,
															"end": 16075,
															"name": "SLOAD"
														},
														{
															"begin": 16061,
															"end": 16075,
															"name": "DUP2"
														},
														{
															"begin": 16061,
															"end": 16075,
															"name": "PUSH",
															"value": "FF"
														},
														{
															"begin": 16061,
															"end": 16075,
															"name": "MUL"
														},
														{
															"begin": 16061,
															"end": 16075,
															"name": "NOT"
														},
														{
															"begin": 16061,
															"end": 16075,
															"name": "AND"
														},
														{
															"begin": 16061,
															"end": 16075,
															"name": "SWAP1"
														},
														{
															"begin": 16061,
															"end": 16075,
															"name": "DUP4"
														},
														{
															"begin": 16061,
															"end": 16075,
															"name": "ISZERO"
														},
														{
															"begin": 16061,
															"end": 16075,
															"name": "ISZERO"
														},
														{
															"begin": 16061,
															"end": 16075,
															"name": "MUL"
														},
														{
															"begin": 16061,
															"end": 16075,
															"name": "OR"
														},
														{
															"begin": 16061,
															"end": 16075,
															"name": "SWAP1"
														},
														{
															"begin": 16061,
															"end": 16075,
															"name": "SSTORE"
														},
														{
															"begin": 16061,
															"end": 16075,
															"name": "POP"
														},
														{
															"begin": 16170,
															"end": 16185,
															"name": "TIMESTAMP"
														},
														{
															"begin": 16162,
															"end": 16168,
															"name": "PUSH",
															"value": "C"
														},
														{
															"begin": 16162,
															"end": 16168,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 16162,
															"end": 16168,
															"name": "SWAP1"
														},
														{
															"begin": 16162,
															"end": 16168,
															"name": "SLOAD"
														},
														{
															"begin": 16162,
															"end": 16168,
															"name": "SWAP1"
														},
														{
															"begin": 16162,
															"end": 16168,
															"name": "PUSH",
															"value": "100"
														},
														{
															"begin": 16162,
															"end": 16168,
															"name": "EXP"
														},
														{
															"begin": 16162,
															"end": 16168,
															"name": "SWAP1"
														},
														{
															"begin": 16162,
															"end": 16168,
															"name": "DIV"
														},
														{
															"begin": 16162,
															"end": 16168,
															"name": "PUSH",
															"value": "FF"
														},
														{
															"begin": 16162,
															"end": 16168,
															"name": "AND"
														},
														{
															"begin": 16134,
															"end": 16186,
															"name": "ISZERO"
														},
														{
															"begin": 16134,
															"end": 16186,
															"name": "ISZERO"
														},
														{
															"begin": 16134,
															"end": 16186,
															"name": "PUSH",
															"value": "160914EA27C60AA29A5F3A69D74E6069869DE36E38939DE1E0A66B921D8623D2"
														},
														{
															"begin": 16134,
															"end": 16186,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 16134,
															"end": 16186,
															"name": "MLOAD"
														},
														{
															"begin": 16134,
															"end": 16186,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 16134,
															"end": 16186,
															"name": "MLOAD"
														},
														{
															"begin": 16134,
															"end": 16186,
															"name": "DUP1"
														},
														{
															"begin": 16134,
															"end": 16186,
															"name": "SWAP2"
														},
														{
															"begin": 16134,
															"end": 16186,
															"name": "SUB"
														},
														{
															"begin": 16134,
															"end": 16186,
															"name": "SWAP1"
														},
														{
															"begin": 16134,
															"end": 16186,
															"name": "LOG3"
														},
														{
															"begin": 16288,
															"end": 16301,
															"name": "PUSH",
															"value": "3"
														},
														{
															"begin": 16280,
															"end": 16285,
															"name": "PUSH",
															"value": "C"
														},
														{
															"begin": 16280,
															"end": 16285,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": 16280,
															"end": 16301,
															"name": "PUSH",
															"value": "100"
														},
														{
															"begin": 16280,
															"end": 16301,
															"name": "EXP"
														},
														{
															"begin": 16280,
															"end": 16301,
															"name": "DUP2"
														},
														{
															"begin": 16280,
															"end": 16301,
															"name": "SLOAD"
														},
														{
															"begin": 16280,
															"end": 16301,
															"name": "DUP2"
														},
														{
															"begin": 16280,
															"end": 16301,
															"name": "PUSH",
															"value": "FF"
														},
														{
															"begin": 16280,
															"end": 16301,
															"name": "MUL"
														},
														{
															"begin": 16280,
															"end": 16301,
															"name": "NOT"
														},
														{
															"begin": 16280,
															"end": 16301,
															"name": "AND"
														},
														{
															"begin": 16280,
															"end": 16301,
															"name": "SWAP1"
														},
														{
															"begin": 16280,
															"end": 16301,
															"name": "DUP4"
														},
														{
															"begin": 16280,
															"end": 16301,
															"name": "PUSH",
															"value": "5"
														},
														{
															"begin": 16280,
															"end": 16301,
															"name": "DUP2"
														},
														{
															"begin": 16280,
															"end": 16301,
															"name": "GT"
														},
														{
															"begin": 16280,
															"end": 16301,
															"name": "ISZERO"
														},
														{
															"begin": 16280,
															"end": 16301,
															"name": "PUSH [tag]",
															"value": "134"
														},
														{
															"begin": 16280,
															"end": 16301,
															"name": "JUMPI"
														},
														{
															"begin": 16280,
															"end": 16301,
															"name": "INVALID"
														},
														{
															"begin": 16280,
															"end": 16301,
															"name": "tag",
															"value": "134"
														},
														{
															"begin": 16280,
															"end": 16301,
															"name": "JUMPDEST"
														},
														{
															"begin": 16280,
															"end": 16301,
															"name": "MUL"
														},
														{
															"begin": 16280,
															"end": 16301,
															"name": "OR"
														},
														{
															"begin": 16280,
															"end": 16301,
															"name": "SWAP1"
														},
														{
															"begin": 16280,
															"end": 16301,
															"name": "SSTORE"
														},
														{
															"begin": 16280,
															"end": 16301,
															"name": "POP"
														},
														{
															"begin": 16381,
															"end": 16396,
															"name": "TIMESTAMP"
														},
														{
															"begin": 16374,
															"end": 16379,
															"name": "PUSH",
															"value": "C"
														},
														{
															"begin": 16374,
															"end": 16379,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": 16374,
															"end": 16379,
															"name": "SWAP1"
														},
														{
															"begin": 16374,
															"end": 16379,
															"name": "SLOAD"
														},
														{
															"begin": 16374,
															"end": 16379,
															"name": "SWAP1"
														},
														{
															"begin": 16374,
															"end": 16379,
															"name": "PUSH",
															"value": "100"
														},
														{
															"begin": 16374,
															"end": 16379,
															"name": "EXP"
														},
														{
															"begin": 16374,
															"end": 16379,
															"name": "SWAP1"
														},
														{
															"begin": 16374,
															"end": 16379,
															"name": "DIV"
														},
														{
															"begin": 16374,
															"end": 16379,
															"name": "PUSH",
															"value": "FF"
														},
														{
															"begin": 16374,
															"end": 16379,
															"name": "AND"
														},
														{
															"begin": 16352,
															"end": 16397,
															"name": "PUSH",
															"value": "5"
														},
														{
															"begin": 16352,
															"end": 16397,
															"name": "DUP2"
														},
														{
															"begin": 16352,
															"end": 16397,
															"name": "GT"
														},
														{
															"begin": 16352,
															"end": 16397,
															"name": "ISZERO"
														},
														{
															"begin": 16352,
															"end": 16397,
															"name": "PUSH [tag]",
															"value": "135"
														},
														{
															"begin": 16352,
															"end": 16397,
															"name": "JUMPI"
														},
														{
															"begin": 16352,
															"end": 16397,
															"name": "INVALID"
														},
														{
															"begin": 16352,
															"end": 16397,
															"name": "tag",
															"value": "135"
														},
														{
															"begin": 16352,
															"end": 16397,
															"name": "JUMPDEST"
														},
														{
															"begin": 16352,
															"end": 16397,
															"name": "PUSH",
															"value": "AAAE373901E745122C2E0925AD006227969C6CD190B7D5EA2FB7FDBD1D955B35"
														},
														{
															"begin": 16352,
															"end": 16397,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 16352,
															"end": 16397,
															"name": "MLOAD"
														},
														{
															"begin": 16352,
															"end": 16397,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 16352,
															"end": 16397,
															"name": "MLOAD"
														},
														{
															"begin": 16352,
															"end": 16397,
															"name": "DUP1"
														},
														{
															"begin": 16352,
															"end": 16397,
															"name": "SWAP2"
														},
														{
															"begin": 16352,
															"end": 16397,
															"name": "SUB"
														},
														{
															"begin": 16352,
															"end": 16397,
															"name": "SWAP1"
														},
														{
															"begin": 16352,
															"end": 16397,
															"name": "LOG3"
														},
														{
															"begin": 15974,
															"end": 16409,
															"name": "tag",
															"value": "133"
														},
														{
															"begin": 15974,
															"end": 16409,
															"name": "JUMPDEST"
														},
														{
															"begin": 15462,
															"end": 16416,
															"name": "JUMP",
															"value": "[out]"
														},
														{
															"begin": 151,
															"end": 225,
															"name": "tag",
															"value": "42"
														},
														{
															"begin": 151,
															"end": 225,
															"name": "JUMPDEST"
														},
														{
															"begin": 232,
															"end": 237,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 232,
															"end": 237,
															"name": "DUP1"
														},
														{
															"begin": 232,
															"end": 237,
															"name": "SWAP1"
														},
														{
															"begin": 232,
															"end": 237,
															"name": "SLOAD"
														},
														{
															"begin": 232,
															"end": 237,
															"name": "SWAP1"
														},
														{
															"begin": 232,
															"end": 237,
															"name": "PUSH",
															"value": "100"
														},
														{
															"begin": 232,
															"end": 237,
															"name": "EXP"
														},
														{
															"begin": 232,
															"end": 237,
															"name": "SWAP1"
														},
														{
															"begin": 232,
															"end": 237,
															"name": "DIV"
														},
														{
															"begin": 232,
															"end": 237,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 232,
															"end": 237,
															"name": "AND"
														},
														{
															"begin": 218,
															"end": 237,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 218,
															"end": 237,
															"name": "AND"
														},
														{
															"begin": 218,
															"end": 228,
															"name": "CALLER"
														},
														{
															"begin": 218,
															"end": 237,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 218,
															"end": 237,
															"name": "AND"
														},
														{
															"begin": 218,
															"end": 237,
															"name": "EQ"
														},
														{
															"begin": 210,
															"end": 238,
															"name": "ISZERO"
														},
														{
															"begin": 210,
															"end": 238,
															"name": "ISZERO"
														},
														{
															"begin": 210,
															"end": 238,
															"name": "PUSH [tag]",
															"value": "137"
														},
														{
															"begin": 210,
															"end": 238,
															"name": "JUMPI"
														},
														{
															"begin": 210,
															"end": 238,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 210,
															"end": 238,
															"name": "DUP1"
														},
														{
															"begin": 210,
															"end": 238,
															"name": "REVERT"
														},
														{
															"begin": 210,
															"end": 238,
															"name": "tag",
															"value": "137"
														},
														{
															"begin": 210,
															"end": 238,
															"name": "JUMPDEST"
														},
														{
															"begin": 211,
															"end": 216,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 211,
															"end": 216,
															"name": "DUP1"
														},
														{
															"begin": 211,
															"end": 216,
															"name": "SWAP1"
														},
														{
															"begin": 211,
															"end": 216,
															"name": "SLOAD"
														},
														{
															"begin": 211,
															"end": 216,
															"name": "SWAP1"
														},
														{
															"begin": 211,
															"end": 216,
															"name": "PUSH",
															"value": "100"
														},
														{
															"begin": 211,
															"end": 216,
															"name": "EXP"
														},
														{
															"begin": 211,
															"end": 216,
															"name": "SWAP1"
														},
														{
															"begin": 211,
															"end": 216,
															"name": "DIV"
														},
														{
															"begin": 211,
															"end": 216,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 211,
															"end": 216,
															"name": "AND"
														},
														{
															"begin": 198,
															"end": 217,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 198,
															"end": 217,
															"name": "AND"
														},
														{
															"begin": 198,
															"end": 217,
															"name": "SELFDESTRUCT"
														},
														{
															"begin": 54,
															"end": 74,
															"name": "tag",
															"value": "45"
														},
														{
															"begin": 54,
															"end": 74,
															"name": "JUMPDEST"
														},
														{
															"begin": 54,
															"end": 74,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 54,
															"end": 74,
															"name": "DUP1"
														},
														{
															"begin": 54,
															"end": 74,
															"name": "SWAP1"
														},
														{
															"begin": 54,
															"end": 74,
															"name": "SLOAD"
														},
														{
															"begin": 54,
															"end": 74,
															"name": "SWAP1"
														},
														{
															"begin": 54,
															"end": 74,
															"name": "PUSH",
															"value": "100"
														},
														{
															"begin": 54,
															"end": 74,
															"name": "EXP"
														},
														{
															"begin": 54,
															"end": 74,
															"name": "SWAP1"
														},
														{
															"begin": 54,
															"end": 74,
															"name": "DIV"
														},
														{
															"begin": 54,
															"end": 74,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 54,
															"end": 74,
															"name": "AND"
														},
														{
															"begin": 54,
															"end": 74,
															"name": "DUP2"
														},
														{
															"begin": 54,
															"end": 74,
															"name": "JUMP",
															"value": "[out]"
														},
														{
															"begin": 16494,
															"end": 17099,
															"name": "tag",
															"value": "48"
														},
														{
															"begin": 16494,
															"end": 17099,
															"name": "JUMPDEST"
														},
														{
															"begin": 16551,
															"end": 16555,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 3958,
															"end": 3962,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": 3948,
															"end": 3962,
															"name": "ISZERO"
														},
														{
															"begin": 3948,
															"end": 3962,
															"name": "ISZERO"
														},
														{
															"begin": 3948,
															"end": 3954,
															"name": "PUSH",
															"value": "C"
														},
														{
															"begin": 3948,
															"end": 3954,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 3948,
															"end": 3954,
															"name": "SWAP1"
														},
														{
															"begin": 3948,
															"end": 3954,
															"name": "SLOAD"
														},
														{
															"begin": 3948,
															"end": 3954,
															"name": "SWAP1"
														},
														{
															"begin": 3948,
															"end": 3954,
															"name": "PUSH",
															"value": "100"
														},
														{
															"begin": 3948,
															"end": 3954,
															"name": "EXP"
														},
														{
															"begin": 3948,
															"end": 3954,
															"name": "SWAP1"
														},
														{
															"begin": 3948,
															"end": 3954,
															"name": "DIV"
														},
														{
															"begin": 3948,
															"end": 3954,
															"name": "PUSH",
															"value": "FF"
														},
														{
															"begin": 3948,
															"end": 3954,
															"name": "AND"
														},
														{
															"begin": 3948,
															"end": 3962,
															"name": "ISZERO"
														},
														{
															"begin": 3948,
															"end": 3962,
															"name": "ISZERO"
														},
														{
															"begin": 3948,
															"end": 3962,
															"name": "EQ"
														},
														{
															"begin": 3940,
															"end": 3963,
															"name": "ISZERO"
														},
														{
															"begin": 3940,
															"end": 3963,
															"name": "ISZERO"
														},
														{
															"begin": 3940,
															"end": 3963,
															"name": "PUSH [tag]",
															"value": "140"
														},
														{
															"begin": 3940,
															"end": 3963,
															"name": "JUMPI"
														},
														{
															"begin": 3940,
															"end": 3963,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 3940,
															"end": 3963,
															"name": "DUP1"
														},
														{
															"begin": 3940,
															"end": 3963,
															"name": "REVERT"
														},
														{
															"begin": 3940,
															"end": 3963,
															"name": "tag",
															"value": "140"
														},
														{
															"begin": 3940,
															"end": 3963,
															"name": "JUMPDEST"
														},
														{
															"begin": 4149,
															"end": 4153,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": 4126,
															"end": 4153,
															"name": "ISZERO"
														},
														{
															"begin": 4126,
															"end": 4153,
															"name": "ISZERO"
														},
														{
															"begin": 4126,
															"end": 4133,
															"name": "PUSH",
															"value": "D"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 4134,
															"end": 4144,
															"name": "CALLER"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "AND"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "AND"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "DUP2"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "MSTORE"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "ADD"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "SWAP1"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "DUP2"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "MSTORE"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "ADD"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "KECCAK256"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "SWAP1"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "SLOAD"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "SWAP1"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "PUSH",
															"value": "100"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "EXP"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "SWAP1"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "DIV"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "PUSH",
															"value": "FF"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "AND"
														},
														{
															"begin": 4126,
															"end": 4153,
															"name": "ISZERO"
														},
														{
															"begin": 4126,
															"end": 4153,
															"name": "ISZERO"
														},
														{
															"begin": 4126,
															"end": 4153,
															"name": "EQ"
														},
														{
															"begin": 4118,
															"end": 4154,
															"name": "ISZERO"
														},
														{
															"begin": 4118,
															"end": 4154,
															"name": "ISZERO"
														},
														{
															"begin": 4118,
															"end": 4154,
															"name": "PUSH [tag]",
															"value": "142"
														},
														{
															"begin": 4118,
															"end": 4154,
															"name": "JUMPI"
														},
														{
															"begin": 4118,
															"end": 4154,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 4118,
															"end": 4154,
															"name": "DUP1"
														},
														{
															"begin": 4118,
															"end": 4154,
															"name": "REVERT"
														},
														{
															"begin": 4118,
															"end": 4154,
															"name": "tag",
															"value": "142"
														},
														{
															"begin": 4118,
															"end": 4154,
															"name": "JUMPDEST"
														},
														{
															"begin": 16646,
															"end": 16651,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 16619,
															"end": 16651,
															"name": "ISZERO"
														},
														{
															"begin": 16619,
															"end": 16651,
															"name": "ISZERO"
														},
														{
															"begin": 16619,
															"end": 16630,
															"name": "PUSH",
															"value": "14"
														},
														{
															"begin": 16619,
															"end": 16642,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 16631,
															"end": 16641,
															"name": "CALLER"
														},
														{
															"begin": 16619,
															"end": 16642,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 16619,
															"end": 16642,
															"name": "AND"
														},
														{
															"begin": 16619,
															"end": 16642,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 16619,
															"end": 16642,
															"name": "AND"
														},
														{
															"begin": 16619,
															"end": 16642,
															"name": "DUP2"
														},
														{
															"begin": 16619,
															"end": 16642,
															"name": "MSTORE"
														},
														{
															"begin": 16619,
															"end": 16642,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 16619,
															"end": 16642,
															"name": "ADD"
														},
														{
															"begin": 16619,
															"end": 16642,
															"name": "SWAP1"
														},
														{
															"begin": 16619,
															"end": 16642,
															"name": "DUP2"
														},
														{
															"begin": 16619,
															"end": 16642,
															"name": "MSTORE"
														},
														{
															"begin": 16619,
															"end": 16642,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 16619,
															"end": 16642,
															"name": "ADD"
														},
														{
															"begin": 16619,
															"end": 16642,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 16619,
															"end": 16642,
															"name": "KECCAK256"
														},
														{
															"begin": 16619,
															"end": 16642,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 16619,
															"end": 16642,
															"name": "SWAP1"
														},
														{
															"begin": 16619,
															"end": 16642,
															"name": "SLOAD"
														},
														{
															"begin": 16619,
															"end": 16642,
															"name": "SWAP1"
														},
														{
															"begin": 16619,
															"end": 16642,
															"name": "PUSH",
															"value": "100"
														},
														{
															"begin": 16619,
															"end": 16642,
															"name": "EXP"
														},
														{
															"begin": 16619,
															"end": 16642,
															"name": "SWAP1"
														},
														{
															"begin": 16619,
															"end": 16642,
															"name": "DIV"
														},
														{
															"begin": 16619,
															"end": 16642,
															"name": "PUSH",
															"value": "FF"
														},
														{
															"begin": 16619,
															"end": 16642,
															"name": "AND"
														},
														{
															"begin": 16619,
															"end": 16651,
															"name": "ISZERO"
														},
														{
															"begin": 16619,
															"end": 16651,
															"name": "ISZERO"
														},
														{
															"begin": 16619,
															"end": 16651,
															"name": "EQ"
														},
														{
															"begin": 16611,
															"end": 16652,
															"name": "ISZERO"
														},
														{
															"begin": 16611,
															"end": 16652,
															"name": "ISZERO"
														},
														{
															"begin": 16611,
															"end": 16652,
															"name": "PUSH [tag]",
															"value": "144"
														},
														{
															"begin": 16611,
															"end": 16652,
															"name": "JUMPI"
														},
														{
															"begin": 16611,
															"end": 16652,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 16611,
															"end": 16652,
															"name": "DUP1"
														},
														{
															"begin": 16611,
															"end": 16652,
															"name": "REVERT"
														},
														{
															"begin": 16611,
															"end": 16652,
															"name": "tag",
															"value": "144"
														},
														{
															"begin": 16611,
															"end": 16652,
															"name": "JUMPDEST"
														},
														{
															"begin": 16705,
															"end": 16715,
															"name": "PUSH",
															"value": "13"
														},
														{
															"begin": 16705,
															"end": 16715,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 16705,
															"end": 16717,
															"name": "DUP2"
														},
														{
															"begin": 16705,
															"end": 16717,
															"name": "SLOAD"
														},
														{
															"begin": 16705,
															"end": 16717,
															"name": "DUP1"
														},
														{
															"begin": 16705,
															"end": 16717,
															"name": "SWAP3"
														},
														{
															"begin": 16705,
															"end": 16717,
															"name": "SWAP2"
														},
														{
															"begin": 16705,
															"end": 16717,
															"name": "SWAP1"
														},
														{
															"begin": 16705,
															"end": 16717,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": 16705,
															"end": 16717,
															"name": "ADD"
														},
														{
															"begin": 16705,
															"end": 16717,
															"name": "SWAP2"
														},
														{
															"begin": 16705,
															"end": 16717,
															"name": "SWAP1"
														},
														{
															"begin": 16705,
															"end": 16717,
															"name": "POP"
														},
														{
															"begin": 16705,
															"end": 16717,
															"name": "SSTORE"
														},
														{
															"begin": 16705,
															"end": 16717,
															"name": "POP"
														},
														{
															"begin": 16796,
															"end": 16800,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": 16769,
															"end": 16800,
															"name": "ISZERO"
														},
														{
															"begin": 16769,
															"end": 16800,
															"name": "ISZERO"
														},
														{
															"begin": 16769,
															"end": 16780,
															"name": "PUSH",
															"value": "14"
														},
														{
															"begin": 16769,
															"end": 16792,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 16781,
															"end": 16791,
															"name": "CALLER"
														},
														{
															"begin": 16769,
															"end": 16792,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 16769,
															"end": 16792,
															"name": "AND"
														},
														{
															"begin": 16769,
															"end": 16792,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 16769,
															"end": 16792,
															"name": "AND"
														},
														{
															"begin": 16769,
															"end": 16792,
															"name": "DUP2"
														},
														{
															"begin": 16769,
															"end": 16792,
															"name": "MSTORE"
														},
														{
															"begin": 16769,
															"end": 16792,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 16769,
															"end": 16792,
															"name": "ADD"
														},
														{
															"begin": 16769,
															"end": 16792,
															"name": "SWAP1"
														},
														{
															"begin": 16769,
															"end": 16792,
															"name": "DUP2"
														},
														{
															"begin": 16769,
															"end": 16792,
															"name": "MSTORE"
														},
														{
															"begin": 16769,
															"end": 16792,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 16769,
															"end": 16792,
															"name": "ADD"
														},
														{
															"begin": 16769,
															"end": 16792,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 16769,
															"end": 16792,
															"name": "KECCAK256"
														},
														{
															"begin": 16769,
															"end": 16792,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 16769,
															"end": 16792,
															"name": "SWAP1"
														},
														{
															"begin": 16769,
															"end": 16792,
															"name": "SLOAD"
														},
														{
															"begin": 16769,
															"end": 16792,
															"name": "SWAP1"
														},
														{
															"begin": 16769,
															"end": 16792,
															"name": "PUSH",
															"value": "100"
														},
														{
															"begin": 16769,
															"end": 16792,
															"name": "EXP"
														},
														{
															"begin": 16769,
															"end": 16792,
															"name": "SWAP1"
														},
														{
															"begin": 16769,
															"end": 16792,
															"name": "POP"
														},
														{
															"begin": 16769,
															"end": 16792,
															"name": "POP"
														},
														{
															"begin": 16769,
															"end": 16800,
															"name": "POP"
														},
														{
															"begin": 16886,
															"end": 16901,
															"name": "TIMESTAMP"
														},
														{
															"begin": 16874,
															"end": 16884,
															"name": "CALLER"
														},
														{
															"begin": 16852,
															"end": 16902,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 16852,
															"end": 16902,
															"name": "AND"
														},
														{
															"begin": 16852,
															"end": 16902,
															"name": "PUSH",
															"value": "1DB613004119DDE2A638B639FBA9960C0E6064EE7C2D06F300E41C78920ED6DC"
														},
														{
															"begin": 16852,
															"end": 16902,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 16852,
															"end": 16902,
															"name": "MLOAD"
														},
														{
															"begin": 16852,
															"end": 16902,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 16852,
															"end": 16902,
															"name": "MLOAD"
														},
														{
															"begin": 16852,
															"end": 16902,
															"name": "DUP1"
														},
														{
															"begin": 16852,
															"end": 16902,
															"name": "SWAP2"
														},
														{
															"begin": 16852,
															"end": 16902,
															"name": "SUB"
														},
														{
															"begin": 16852,
															"end": 16902,
															"name": "SWAP1"
														},
														{
															"begin": 16852,
															"end": 16902,
															"name": "LOG3"
														},
														{
															"begin": 16978,
															"end": 16988,
															"name": "PUSH",
															"value": "13"
														},
														{
															"begin": 16978,
															"end": 16988,
															"name": "SLOAD"
														},
														{
															"begin": 16962,
															"end": 16974,
															"name": "PUSH",
															"value": "F"
														},
														{
															"begin": 16962,
															"end": 16974,
															"name": "SLOAD"
														},
														{
															"begin": 16962,
															"end": 16988,
															"name": "EQ"
														},
														{
															"begin": 16958,
															"end": 17070,
															"name": "ISZERO"
														},
														{
															"begin": 16958,
															"end": 17070,
															"name": "PUSH [tag]",
															"value": "145"
														},
														{
															"begin": 16958,
															"end": 17070,
															"name": "JUMPI"
														},
														{
															"begin": 17051,
															"end": 17058,
															"name": "PUSH [tag]",
															"value": "146"
														},
														{
															"begin": 17051,
															"end": 17056,
															"name": "PUSH [tag]",
															"value": "147"
														},
														{
															"begin": 17051,
															"end": 17058,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 17051,
															"end": 17058,
															"name": "tag",
															"value": "146"
														},
														{
															"begin": 17051,
															"end": 17058,
															"name": "JUMPDEST"
														},
														{
															"begin": 17044,
															"end": 17058,
															"name": "SWAP1"
														},
														{
															"begin": 17044,
															"end": 17058,
															"name": "POP"
														},
														{
															"begin": 17044,
															"end": 17058,
															"name": "PUSH [tag]",
															"value": "143"
														},
														{
															"begin": 17044,
															"end": 17058,
															"name": "JUMP"
														},
														{
															"begin": 16958,
															"end": 17070,
															"name": "tag",
															"value": "145"
														},
														{
															"begin": 16958,
															"end": 17070,
															"name": "JUMPDEST"
														},
														{
															"begin": 17087,
															"end": 17091,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": 17080,
															"end": 17091,
															"name": "SWAP1"
														},
														{
															"begin": 17080,
															"end": 17091,
															"name": "POP"
														},
														{
															"begin": 4165,
															"end": 4166,
															"name": "tag",
															"value": "143"
														},
														{
															"begin": 4165,
															"end": 4166,
															"name": "JUMPDEST"
														},
														{
															"begin": 16494,
															"end": 17099,
															"name": "SWAP1"
														},
														{
															"begin": 16494,
															"end": 17099,
															"name": "JUMP",
															"value": "[out]"
														},
														{
															"begin": 7072,
															"end": 8788,
															"name": "tag",
															"value": "50"
														},
														{
															"begin": 7072,
															"end": 8788,
															"name": "JUMPDEST"
														},
														{
															"begin": 7213,
															"end": 7228,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 4395,
															"end": 4411,
															"name": "DUP1"
														},
														{
															"begin": 4386,
															"end": 4411,
															"name": "PUSH",
															"value": "5"
														},
														{
															"begin": 4386,
															"end": 4411,
															"name": "DUP2"
														},
														{
															"begin": 4386,
															"end": 4411,
															"name": "GT"
														},
														{
															"begin": 4386,
															"end": 4411,
															"name": "ISZERO"
														},
														{
															"begin": 4386,
															"end": 4411,
															"name": "PUSH [tag]",
															"value": "149"
														},
														{
															"begin": 4386,
															"end": 4411,
															"name": "JUMPI"
														},
														{
															"begin": 4386,
															"end": 4411,
															"name": "INVALID"
														},
														{
															"begin": 4386,
															"end": 4411,
															"name": "tag",
															"value": "149"
														},
														{
															"begin": 4386,
															"end": 4411,
															"name": "JUMPDEST"
														},
														{
															"begin": 4386,
															"end": 4391,
															"name": "PUSH",
															"value": "C"
														},
														{
															"begin": 4386,
															"end": 4391,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": 4386,
															"end": 4391,
															"name": "SWAP1"
														},
														{
															"begin": 4386,
															"end": 4391,
															"name": "SLOAD"
														},
														{
															"begin": 4386,
															"end": 4391,
															"name": "SWAP1"
														},
														{
															"begin": 4386,
															"end": 4391,
															"name": "PUSH",
															"value": "100"
														},
														{
															"begin": 4386,
															"end": 4391,
															"name": "EXP"
														},
														{
															"begin": 4386,
															"end": 4391,
															"name": "SWAP1"
														},
														{
															"begin": 4386,
															"end": 4391,
															"name": "DIV"
														},
														{
															"begin": 4386,
															"end": 4391,
															"name": "PUSH",
															"value": "FF"
														},
														{
															"begin": 4386,
															"end": 4391,
															"name": "AND"
														},
														{
															"begin": 4386,
															"end": 4411,
															"name": "PUSH",
															"value": "5"
														},
														{
															"begin": 4386,
															"end": 4411,
															"name": "DUP2"
														},
														{
															"begin": 4386,
															"end": 4411,
															"name": "GT"
														},
														{
															"begin": 4386,
															"end": 4411,
															"name": "ISZERO"
														},
														{
															"begin": 4386,
															"end": 4411,
															"name": "PUSH [tag]",
															"value": "150"
														},
														{
															"begin": 4386,
															"end": 4411,
															"name": "JUMPI"
														},
														{
															"begin": 4386,
															"end": 4411,
															"name": "INVALID"
														},
														{
															"begin": 4386,
															"end": 4411,
															"name": "tag",
															"value": "150"
														},
														{
															"begin": 4386,
															"end": 4411,
															"name": "JUMPDEST"
														},
														{
															"begin": 4386,
															"end": 4411,
															"name": "EQ"
														},
														{
															"begin": 4378,
															"end": 4412,
															"name": "ISZERO"
														},
														{
															"begin": 4378,
															"end": 4412,
															"name": "ISZERO"
														},
														{
															"begin": 4378,
															"end": 4412,
															"name": "PUSH [tag]",
															"value": "151"
														},
														{
															"begin": 4378,
															"end": 4412,
															"name": "JUMPI"
														},
														{
															"begin": 4378,
															"end": 4412,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 4378,
															"end": 4412,
															"name": "DUP1"
														},
														{
															"begin": 4378,
															"end": 4412,
															"name": "REVERT"
														},
														{
															"begin": 4378,
															"end": 4412,
															"name": "tag",
															"value": "151"
														},
														{
															"begin": 4378,
															"end": 4412,
															"name": "JUMPDEST"
														},
														{
															"begin": 7231,
															"end": 7232,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 7213,
															"end": 7232,
															"name": "SWAP1"
														},
														{
															"begin": 7213,
															"end": 7232,
															"name": "POP"
														},
														{
															"begin": 7336,
															"end": 7351,
															"name": "PUSH",
															"value": "2"
														},
														{
															"begin": 7336,
															"end": 7351,
															"name": "SLOAD"
														},
														{
															"begin": 7320,
															"end": 7324,
															"name": "ADDRESS"
														},
														{
															"begin": 7320,
															"end": 7332,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 7320,
															"end": 7332,
															"name": "AND"
														},
														{
															"begin": 7320,
															"end": 7332,
															"name": "BALANCE"
														},
														{
															"begin": 7320,
															"end": 7351,
															"name": "LT"
														},
														{
															"begin": 7320,
															"end": 7351,
															"name": "ISZERO"
														},
														{
															"begin": 7316,
															"end": 8247,
															"name": "ISZERO"
														},
														{
															"begin": 7316,
															"end": 8247,
															"name": "PUSH [tag]",
															"value": "153"
														},
														{
															"begin": 7316,
															"end": 8247,
															"name": "JUMPI"
														},
														{
															"begin": 7450,
															"end": 7483,
															"name": "PUSH [tag]",
															"value": "154"
														},
														{
															"begin": 7467,
															"end": 7482,
															"name": "PUSH",
															"value": "2"
														},
														{
															"begin": 7467,
															"end": 7482,
															"name": "SLOAD"
														},
														{
															"begin": 7450,
															"end": 7454,
															"name": "ADDRESS"
														},
														{
															"begin": 7450,
															"end": 7462,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 7450,
															"end": 7462,
															"name": "AND"
														},
														{
															"begin": 7450,
															"end": 7462,
															"name": "BALANCE"
														},
														{
															"begin": 7450,
															"end": 7466,
															"name": "PUSH [tag]",
															"value": "96"
														},
														{
															"begin": 7450,
															"end": 7466,
															"name": "SWAP1"
														},
														{
															"begin": 7450,
															"end": 7483,
															"name": "SWAP2"
														},
														{
															"begin": 7450,
															"end": 7483,
															"name": "SWAP1"
														},
														{
															"begin": 7450,
															"end": 7483,
															"name": "PUSH",
															"value": "FFFFFFFF"
														},
														{
															"begin": 7450,
															"end": 7483,
															"name": "AND"
														},
														{
															"begin": 7450,
															"end": 7483,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 7450,
															"end": 7483,
															"name": "tag",
															"value": "154"
														},
														{
															"begin": 7450,
															"end": 7483,
															"name": "JUMPDEST"
														},
														{
															"begin": 7437,
															"end": 7483,
															"name": "SWAP1"
														},
														{
															"begin": 7437,
															"end": 7483,
															"name": "POP"
														},
														{
															"begin": 7566,
															"end": 7594,
															"name": "PUSH [tag]",
															"value": "155"
														},
														{
															"begin": 7583,
															"end": 7593,
															"name": "DUP2"
														},
														{
															"begin": 7566,
															"end": 7570,
															"name": "ADDRESS"
														},
														{
															"begin": 7566,
															"end": 7578,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 7566,
															"end": 7578,
															"name": "AND"
														},
														{
															"begin": 7566,
															"end": 7578,
															"name": "BALANCE"
														},
														{
															"begin": 7566,
															"end": 7582,
															"name": "PUSH [tag]",
															"value": "96"
														},
														{
															"begin": 7566,
															"end": 7582,
															"name": "SWAP1"
														},
														{
															"begin": 7566,
															"end": 7594,
															"name": "SWAP2"
														},
														{
															"begin": 7566,
															"end": 7594,
															"name": "SWAP1"
														},
														{
															"begin": 7566,
															"end": 7594,
															"name": "PUSH",
															"value": "FFFFFFFF"
														},
														{
															"begin": 7566,
															"end": 7594,
															"name": "AND"
														},
														{
															"begin": 7566,
															"end": 7594,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 7566,
															"end": 7594,
															"name": "tag",
															"value": "155"
														},
														{
															"begin": 7566,
															"end": 7594,
															"name": "JUMPDEST"
														},
														{
															"begin": 7547,
															"end": 7562,
															"name": "PUSH",
															"value": "2"
														},
														{
															"begin": 7547,
															"end": 7562,
															"name": "SLOAD"
														},
														{
															"begin": 7547,
															"end": 7594,
															"name": "EQ"
														},
														{
															"begin": 7540,
															"end": 7595,
															"name": "ISZERO"
														},
														{
															"begin": 7540,
															"end": 7595,
															"name": "ISZERO"
														},
														{
															"begin": 7540,
															"end": 7595,
															"name": "PUSH [tag]",
															"value": "156"
														},
														{
															"begin": 7540,
															"end": 7595,
															"name": "JUMPI"
														},
														{
															"begin": 7540,
															"end": 7595,
															"name": "INVALID"
														},
														{
															"begin": 7540,
															"end": 7595,
															"name": "tag",
															"value": "156"
														},
														{
															"begin": 7540,
															"end": 7595,
															"name": "JUMPDEST"
														},
														{
															"begin": 7690,
															"end": 7699,
															"name": "CALLVALUE"
														},
														{
															"begin": 7676,
															"end": 7686,
															"name": "DUP2"
														},
														{
															"begin": 7676,
															"end": 7699,
															"name": "GT"
														},
														{
															"begin": 7676,
															"end": 7699,
															"name": "ISZERO"
														},
														{
															"begin": 7669,
															"end": 7700,
															"name": "ISZERO"
														},
														{
															"begin": 7669,
															"end": 7700,
															"name": "ISZERO"
														},
														{
															"begin": 7669,
															"end": 7700,
															"name": "PUSH [tag]",
															"value": "157"
														},
														{
															"begin": 7669,
															"end": 7700,
															"name": "JUMPI"
														},
														{
															"begin": 7669,
															"end": 7700,
															"name": "INVALID"
														},
														{
															"begin": 7669,
															"end": 7700,
															"name": "tag",
															"value": "157"
														},
														{
															"begin": 7669,
															"end": 7700,
															"name": "JUMPDEST"
														},
														{
															"begin": 7794,
															"end": 7795,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 7781,
															"end": 7791,
															"name": "DUP2"
														},
														{
															"begin": 7781,
															"end": 7795,
															"name": "GT"
														},
														{
															"begin": 7777,
															"end": 8047,
															"name": "ISZERO"
														},
														{
															"begin": 7777,
															"end": 8047,
															"name": "PUSH [tag]",
															"value": "158"
														},
														{
															"begin": 7777,
															"end": 8047,
															"name": "JUMPI"
														},
														{
															"begin": 7874,
															"end": 7884,
															"name": "CALLER"
														},
														{
															"begin": 7874,
															"end": 7893,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 7874,
															"end": 7893,
															"name": "AND"
														},
														{
															"begin": 7874,
															"end": 7905,
															"name": "PUSH",
															"value": "8FC"
														},
														{
															"begin": 7894,
															"end": 7904,
															"name": "DUP3"
														},
														{
															"begin": 7874,
															"end": 7905,
															"name": "SWAP1"
														},
														{
															"begin": 7874,
															"end": 7905,
															"name": "DUP2"
														},
														{
															"begin": 7874,
															"end": 7905,
															"name": "ISZERO"
														},
														{
															"begin": 7874,
															"end": 7905,
															"name": "MUL"
														},
														{
															"begin": 7874,
															"end": 7905,
															"name": "SWAP1"
														},
														{
															"begin": 7874,
															"end": 7905,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 7874,
															"end": 7905,
															"name": "MLOAD"
														},
														{
															"begin": 7874,
															"end": 7905,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 7874,
															"end": 7905,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 7874,
															"end": 7905,
															"name": "MLOAD"
														},
														{
															"begin": 7874,
															"end": 7905,
															"name": "DUP1"
														},
														{
															"begin": 7874,
															"end": 7905,
															"name": "DUP4"
														},
														{
															"begin": 7874,
															"end": 7905,
															"name": "SUB"
														},
														{
															"begin": 7874,
															"end": 7905,
															"name": "DUP2"
														},
														{
															"begin": 7874,
															"end": 7905,
															"name": "DUP6"
														},
														{
															"begin": 7874,
															"end": 7905,
															"name": "DUP9"
														},
														{
															"begin": 7874,
															"end": 7905,
															"name": "DUP9"
														},
														{
															"begin": 7874,
															"end": 7905,
															"name": "CALL"
														},
														{
															"begin": 7874,
															"end": 7905,
															"name": "SWAP4"
														},
														{
															"begin": 7874,
															"end": 7905,
															"name": "POP"
														},
														{
															"begin": 7874,
															"end": 7905,
															"name": "POP"
														},
														{
															"begin": 7874,
															"end": 7905,
															"name": "POP"
														},
														{
															"begin": 7874,
															"end": 7905,
															"name": "POP"
														},
														{
															"begin": 7874,
															"end": 7905,
															"name": "ISZERO"
														},
														{
															"begin": 7874,
															"end": 7905,
															"name": "ISZERO"
														},
														{
															"begin": 7874,
															"end": 7905,
															"name": "PUSH [tag]",
															"value": "159"
														},
														{
															"begin": 7874,
															"end": 7905,
															"name": "JUMPI"
														},
														{
															"begin": 7874,
															"end": 7905,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 7874,
															"end": 7905,
															"name": "DUP1"
														},
														{
															"begin": 7874,
															"end": 7905,
															"name": "REVERT"
														},
														{
															"begin": 7874,
															"end": 7905,
															"name": "tag",
															"value": "159"
														},
														{
															"begin": 7874,
															"end": 7905,
															"name": "JUMPDEST"
														},
														{
															"begin": 8015,
															"end": 8030,
															"name": "TIMESTAMP"
														},
														{
															"begin": 8003,
															"end": 8013,
															"name": "DUP2"
														},
														{
															"begin": 7991,
															"end": 8001,
															"name": "CALLER"
														},
														{
															"begin": 7967,
															"end": 8031,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 7967,
															"end": 8031,
															"name": "AND"
														},
														{
															"begin": 7967,
															"end": 8031,
															"name": "PUSH",
															"value": "566803F6E271B911C84F87631BCD310D6A6510BF8882577A96FC76975703E431"
														},
														{
															"begin": 7967,
															"end": 8031,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 7967,
															"end": 8031,
															"name": "MLOAD"
														},
														{
															"begin": 7967,
															"end": 8031,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 7967,
															"end": 8031,
															"name": "MLOAD"
														},
														{
															"begin": 7967,
															"end": 8031,
															"name": "DUP1"
														},
														{
															"begin": 7967,
															"end": 8031,
															"name": "SWAP2"
														},
														{
															"begin": 7967,
															"end": 8031,
															"name": "SUB"
														},
														{
															"begin": 7967,
															"end": 8031,
															"name": "SWAP1"
														},
														{
															"begin": 7967,
															"end": 8031,
															"name": "LOG4"
														},
														{
															"begin": 7777,
															"end": 8047,
															"name": "tag",
															"value": "158"
														},
														{
															"begin": 7777,
															"end": 8047,
															"name": "JUMPDEST"
														},
														{
															"begin": 8124,
															"end": 8139,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": 8116,
															"end": 8121,
															"name": "PUSH",
															"value": "C"
														},
														{
															"begin": 8116,
															"end": 8121,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": 8116,
															"end": 8139,
															"name": "PUSH",
															"value": "100"
														},
														{
															"begin": 8116,
															"end": 8139,
															"name": "EXP"
														},
														{
															"begin": 8116,
															"end": 8139,
															"name": "DUP2"
														},
														{
															"begin": 8116,
															"end": 8139,
															"name": "SLOAD"
														},
														{
															"begin": 8116,
															"end": 8139,
															"name": "DUP2"
														},
														{
															"begin": 8116,
															"end": 8139,
															"name": "PUSH",
															"value": "FF"
														},
														{
															"begin": 8116,
															"end": 8139,
															"name": "MUL"
														},
														{
															"begin": 8116,
															"end": 8139,
															"name": "NOT"
														},
														{
															"begin": 8116,
															"end": 8139,
															"name": "AND"
														},
														{
															"begin": 8116,
															"end": 8139,
															"name": "SWAP1"
														},
														{
															"begin": 8116,
															"end": 8139,
															"name": "DUP4"
														},
														{
															"begin": 8116,
															"end": 8139,
															"name": "PUSH",
															"value": "5"
														},
														{
															"begin": 8116,
															"end": 8139,
															"name": "DUP2"
														},
														{
															"begin": 8116,
															"end": 8139,
															"name": "GT"
														},
														{
															"begin": 8116,
															"end": 8139,
															"name": "ISZERO"
														},
														{
															"begin": 8116,
															"end": 8139,
															"name": "PUSH [tag]",
															"value": "160"
														},
														{
															"begin": 8116,
															"end": 8139,
															"name": "JUMPI"
														},
														{
															"begin": 8116,
															"end": 8139,
															"name": "INVALID"
														},
														{
															"begin": 8116,
															"end": 8139,
															"name": "tag",
															"value": "160"
														},
														{
															"begin": 8116,
															"end": 8139,
															"name": "JUMPDEST"
														},
														{
															"begin": 8116,
															"end": 8139,
															"name": "MUL"
														},
														{
															"begin": 8116,
															"end": 8139,
															"name": "OR"
														},
														{
															"begin": 8116,
															"end": 8139,
															"name": "SWAP1"
														},
														{
															"begin": 8116,
															"end": 8139,
															"name": "SSTORE"
														},
														{
															"begin": 8116,
															"end": 8139,
															"name": "POP"
														},
														{
															"begin": 8219,
															"end": 8234,
															"name": "TIMESTAMP"
														},
														{
															"begin": 8212,
															"end": 8217,
															"name": "PUSH",
															"value": "C"
														},
														{
															"begin": 8212,
															"end": 8217,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": 8212,
															"end": 8217,
															"name": "SWAP1"
														},
														{
															"begin": 8212,
															"end": 8217,
															"name": "SLOAD"
														},
														{
															"begin": 8212,
															"end": 8217,
															"name": "SWAP1"
														},
														{
															"begin": 8212,
															"end": 8217,
															"name": "PUSH",
															"value": "100"
														},
														{
															"begin": 8212,
															"end": 8217,
															"name": "EXP"
														},
														{
															"begin": 8212,
															"end": 8217,
															"name": "SWAP1"
														},
														{
															"begin": 8212,
															"end": 8217,
															"name": "DIV"
														},
														{
															"begin": 8212,
															"end": 8217,
															"name": "PUSH",
															"value": "FF"
														},
														{
															"begin": 8212,
															"end": 8217,
															"name": "AND"
														},
														{
															"begin": 8190,
															"end": 8235,
															"name": "PUSH",
															"value": "5"
														},
														{
															"begin": 8190,
															"end": 8235,
															"name": "DUP2"
														},
														{
															"begin": 8190,
															"end": 8235,
															"name": "GT"
														},
														{
															"begin": 8190,
															"end": 8235,
															"name": "ISZERO"
														},
														{
															"begin": 8190,
															"end": 8235,
															"name": "PUSH [tag]",
															"value": "161"
														},
														{
															"begin": 8190,
															"end": 8235,
															"name": "JUMPI"
														},
														{
															"begin": 8190,
															"end": 8235,
															"name": "INVALID"
														},
														{
															"begin": 8190,
															"end": 8235,
															"name": "tag",
															"value": "161"
														},
														{
															"begin": 8190,
															"end": 8235,
															"name": "JUMPDEST"
														},
														{
															"begin": 8190,
															"end": 8235,
															"name": "PUSH",
															"value": "AAAE373901E745122C2E0925AD006227969C6CD190B7D5EA2FB7FDBD1D955B35"
														},
														{
															"begin": 8190,
															"end": 8235,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 8190,
															"end": 8235,
															"name": "MLOAD"
														},
														{
															"begin": 8190,
															"end": 8235,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 8190,
															"end": 8235,
															"name": "MLOAD"
														},
														{
															"begin": 8190,
															"end": 8235,
															"name": "DUP1"
														},
														{
															"begin": 8190,
															"end": 8235,
															"name": "SWAP2"
														},
														{
															"begin": 8190,
															"end": 8235,
															"name": "SUB"
														},
														{
															"begin": 8190,
															"end": 8235,
															"name": "SWAP1"
														},
														{
															"begin": 8190,
															"end": 8235,
															"name": "LOG3"
														},
														{
															"begin": 7316,
															"end": 8247,
															"name": "tag",
															"value": "153"
														},
														{
															"begin": 7316,
															"end": 8247,
															"name": "JUMPDEST"
														},
														{
															"begin": 8408,
															"end": 8412,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": 8386,
															"end": 8393,
															"name": "PUSH",
															"value": "D"
														},
														{
															"begin": 8386,
															"end": 8405,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 8394,
															"end": 8404,
															"name": "CALLER"
														},
														{
															"begin": 8386,
															"end": 8405,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 8386,
															"end": 8405,
															"name": "AND"
														},
														{
															"begin": 8386,
															"end": 8405,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 8386,
															"end": 8405,
															"name": "AND"
														},
														{
															"begin": 8386,
															"end": 8405,
															"name": "DUP2"
														},
														{
															"begin": 8386,
															"end": 8405,
															"name": "MSTORE"
														},
														{
															"begin": 8386,
															"end": 8405,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 8386,
															"end": 8405,
															"name": "ADD"
														},
														{
															"begin": 8386,
															"end": 8405,
															"name": "SWAP1"
														},
														{
															"begin": 8386,
															"end": 8405,
															"name": "DUP2"
														},
														{
															"begin": 8386,
															"end": 8405,
															"name": "MSTORE"
														},
														{
															"begin": 8386,
															"end": 8405,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 8386,
															"end": 8405,
															"name": "ADD"
														},
														{
															"begin": 8386,
															"end": 8405,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 8386,
															"end": 8405,
															"name": "KECCAK256"
														},
														{
															"begin": 8386,
															"end": 8405,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 8386,
															"end": 8412,
															"name": "PUSH",
															"value": "100"
														},
														{
															"begin": 8386,
															"end": 8412,
															"name": "EXP"
														},
														{
															"begin": 8386,
															"end": 8412,
															"name": "DUP2"
														},
														{
															"begin": 8386,
															"end": 8412,
															"name": "SLOAD"
														},
														{
															"begin": 8386,
															"end": 8412,
															"name": "DUP2"
														},
														{
															"begin": 8386,
															"end": 8412,
															"name": "PUSH",
															"value": "FF"
														},
														{
															"begin": 8386,
															"end": 8412,
															"name": "MUL"
														},
														{
															"begin": 8386,
															"end": 8412,
															"name": "NOT"
														},
														{
															"begin": 8386,
															"end": 8412,
															"name": "AND"
														},
														{
															"begin": 8386,
															"end": 8412,
															"name": "SWAP1"
														},
														{
															"begin": 8386,
															"end": 8412,
															"name": "DUP4"
														},
														{
															"begin": 8386,
															"end": 8412,
															"name": "ISZERO"
														},
														{
															"begin": 8386,
															"end": 8412,
															"name": "ISZERO"
														},
														{
															"begin": 8386,
															"end": 8412,
															"name": "MUL"
														},
														{
															"begin": 8386,
															"end": 8412,
															"name": "OR"
														},
														{
															"begin": 8386,
															"end": 8412,
															"name": "SWAP1"
														},
														{
															"begin": 8386,
															"end": 8412,
															"name": "SSTORE"
														},
														{
															"begin": 8386,
															"end": 8412,
															"name": "POP"
														},
														{
															"begin": 8466,
															"end": 8478,
															"name": "PUSH",
															"value": "F"
														},
														{
															"begin": 8466,
															"end": 8478,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 8466,
															"end": 8480,
															"name": "DUP2"
														},
														{
															"begin": 8466,
															"end": 8480,
															"name": "SLOAD"
														},
														{
															"begin": 8466,
															"end": 8480,
															"name": "DUP1"
														},
														{
															"begin": 8466,
															"end": 8480,
															"name": "SWAP3"
														},
														{
															"begin": 8466,
															"end": 8480,
															"name": "SWAP2"
														},
														{
															"begin": 8466,
															"end": 8480,
															"name": "SWAP1"
														},
														{
															"begin": 8466,
															"end": 8480,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": 8466,
															"end": 8480,
															"name": "ADD"
														},
														{
															"begin": 8466,
															"end": 8480,
															"name": "SWAP2"
														},
														{
															"begin": 8466,
															"end": 8480,
															"name": "SWAP1"
														},
														{
															"begin": 8466,
															"end": 8480,
															"name": "POP"
														},
														{
															"begin": 8466,
															"end": 8480,
															"name": "SSTORE"
														},
														{
															"begin": 8466,
															"end": 8480,
															"name": "POP"
														},
														{
															"begin": 8588,
															"end": 8652,
															"name": "PUSH [tag]",
															"value": "162"
														},
														{
															"begin": 8626,
															"end": 8651,
															"name": "PUSH [tag]",
															"value": "163"
														},
														{
															"begin": 8640,
															"end": 8650,
															"name": "DUP3"
														},
														{
															"begin": 8626,
															"end": 8635,
															"name": "CALLVALUE"
														},
														{
															"begin": 8626,
															"end": 8639,
															"name": "PUSH [tag]",
															"value": "96"
														},
														{
															"begin": 8626,
															"end": 8639,
															"name": "SWAP1"
														},
														{
															"begin": 8626,
															"end": 8651,
															"name": "SWAP2"
														},
														{
															"begin": 8626,
															"end": 8651,
															"name": "SWAP1"
														},
														{
															"begin": 8626,
															"end": 8651,
															"name": "PUSH",
															"value": "FFFFFFFF"
														},
														{
															"begin": 8626,
															"end": 8651,
															"name": "AND"
														},
														{
															"begin": 8626,
															"end": 8651,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 8626,
															"end": 8651,
															"name": "tag",
															"value": "163"
														},
														{
															"begin": 8626,
															"end": 8651,
															"name": "JUMPDEST"
														},
														{
															"begin": 8588,
															"end": 8609,
															"name": "PUSH",
															"value": "E"
														},
														{
															"begin": 8588,
															"end": 8621,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 8610,
															"end": 8620,
															"name": "CALLER"
														},
														{
															"begin": 8588,
															"end": 8621,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 8588,
															"end": 8621,
															"name": "AND"
														},
														{
															"begin": 8588,
															"end": 8621,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 8588,
															"end": 8621,
															"name": "AND"
														},
														{
															"begin": 8588,
															"end": 8621,
															"name": "DUP2"
														},
														{
															"begin": 8588,
															"end": 8621,
															"name": "MSTORE"
														},
														{
															"begin": 8588,
															"end": 8621,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 8588,
															"end": 8621,
															"name": "ADD"
														},
														{
															"begin": 8588,
															"end": 8621,
															"name": "SWAP1"
														},
														{
															"begin": 8588,
															"end": 8621,
															"name": "DUP2"
														},
														{
															"begin": 8588,
															"end": 8621,
															"name": "MSTORE"
														},
														{
															"begin": 8588,
															"end": 8621,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 8588,
															"end": 8621,
															"name": "ADD"
														},
														{
															"begin": 8588,
															"end": 8621,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 8588,
															"end": 8621,
															"name": "KECCAK256"
														},
														{
															"begin": 8588,
															"end": 8621,
															"name": "SLOAD"
														},
														{
															"begin": 8588,
															"end": 8625,
															"name": "PUSH [tag]",
															"value": "104"
														},
														{
															"begin": 8588,
															"end": 8625,
															"name": "SWAP1"
														},
														{
															"begin": 8588,
															"end": 8652,
															"name": "SWAP2"
														},
														{
															"begin": 8588,
															"end": 8652,
															"name": "SWAP1"
														},
														{
															"begin": 8588,
															"end": 8652,
															"name": "PUSH",
															"value": "FFFFFFFF"
														},
														{
															"begin": 8588,
															"end": 8652,
															"name": "AND"
														},
														{
															"begin": 8588,
															"end": 8652,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 8588,
															"end": 8652,
															"name": "tag",
															"value": "162"
														},
														{
															"begin": 8588,
															"end": 8652,
															"name": "JUMPDEST"
														},
														{
															"begin": 8552,
															"end": 8573,
															"name": "PUSH",
															"value": "E"
														},
														{
															"begin": 8552,
															"end": 8585,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 8574,
															"end": 8584,
															"name": "CALLER"
														},
														{
															"begin": 8552,
															"end": 8585,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 8552,
															"end": 8585,
															"name": "AND"
														},
														{
															"begin": 8552,
															"end": 8585,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 8552,
															"end": 8585,
															"name": "AND"
														},
														{
															"begin": 8552,
															"end": 8585,
															"name": "DUP2"
														},
														{
															"begin": 8552,
															"end": 8585,
															"name": "MSTORE"
														},
														{
															"begin": 8552,
															"end": 8585,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 8552,
															"end": 8585,
															"name": "ADD"
														},
														{
															"begin": 8552,
															"end": 8585,
															"name": "SWAP1"
														},
														{
															"begin": 8552,
															"end": 8585,
															"name": "DUP2"
														},
														{
															"begin": 8552,
															"end": 8585,
															"name": "MSTORE"
														},
														{
															"begin": 8552,
															"end": 8585,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 8552,
															"end": 8585,
															"name": "ADD"
														},
														{
															"begin": 8552,
															"end": 8585,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 8552,
															"end": 8585,
															"name": "KECCAK256"
														},
														{
															"begin": 8552,
															"end": 8652,
															"name": "DUP2"
														},
														{
															"begin": 8552,
															"end": 8652,
															"name": "SWAP1"
														},
														{
															"begin": 8552,
															"end": 8652,
															"name": "SSTORE"
														},
														{
															"begin": 8552,
															"end": 8652,
															"name": "POP"
														},
														{
															"begin": 8764,
															"end": 8779,
															"name": "TIMESTAMP"
														},
														{
															"begin": 8737,
															"end": 8762,
															"name": "PUSH [tag]",
															"value": "164"
														},
														{
															"begin": 8751,
															"end": 8761,
															"name": "DUP3"
														},
														{
															"begin": 8737,
															"end": 8746,
															"name": "CALLVALUE"
														},
														{
															"begin": 8737,
															"end": 8750,
															"name": "PUSH [tag]",
															"value": "96"
														},
														{
															"begin": 8737,
															"end": 8750,
															"name": "SWAP1"
														},
														{
															"begin": 8737,
															"end": 8762,
															"name": "SWAP2"
														},
														{
															"begin": 8737,
															"end": 8762,
															"name": "SWAP1"
														},
														{
															"begin": 8737,
															"end": 8762,
															"name": "PUSH",
															"value": "FFFFFFFF"
														},
														{
															"begin": 8737,
															"end": 8762,
															"name": "AND"
														},
														{
															"begin": 8737,
															"end": 8762,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 8737,
															"end": 8762,
															"name": "tag",
															"value": "164"
														},
														{
															"begin": 8737,
															"end": 8762,
															"name": "JUMPDEST"
														},
														{
															"begin": 8725,
															"end": 8735,
															"name": "CALLER"
														},
														{
															"begin": 8705,
															"end": 8780,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 8705,
															"end": 8780,
															"name": "AND"
														},
														{
															"begin": 8705,
															"end": 8780,
															"name": "PUSH",
															"value": "1B0969CE7F5B05C5E0969329A05CDBD7E2E2F6CEE33BA26FD6E6BBCFF82312CD"
														},
														{
															"begin": 8705,
															"end": 8780,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 8705,
															"end": 8780,
															"name": "MLOAD"
														},
														{
															"begin": 8705,
															"end": 8780,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 8705,
															"end": 8780,
															"name": "MLOAD"
														},
														{
															"begin": 8705,
															"end": 8780,
															"name": "DUP1"
														},
														{
															"begin": 8705,
															"end": 8780,
															"name": "SWAP2"
														},
														{
															"begin": 8705,
															"end": 8780,
															"name": "SUB"
														},
														{
															"begin": 8705,
															"end": 8780,
															"name": "SWAP1"
														},
														{
															"begin": 8705,
															"end": 8780,
															"name": "LOG4"
														},
														{
															"begin": 7072,
															"end": 8788,
															"name": "POP"
														},
														{
															"begin": 7072,
															"end": 8788,
															"name": "JUMP",
															"value": "[out]"
														},
														{
															"begin": 12478,
															"end": 13696,
															"name": "tag",
															"value": "53"
														},
														{
															"begin": 12478,
															"end": 13696,
															"name": "JUMPDEST"
														},
														{
															"begin": 12769,
															"end": 12792,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 3958,
															"end": 3962,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": 3948,
															"end": 3962,
															"name": "ISZERO"
														},
														{
															"begin": 3948,
															"end": 3962,
															"name": "ISZERO"
														},
														{
															"begin": 3948,
															"end": 3954,
															"name": "PUSH",
															"value": "C"
														},
														{
															"begin": 3948,
															"end": 3954,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 3948,
															"end": 3954,
															"name": "SWAP1"
														},
														{
															"begin": 3948,
															"end": 3954,
															"name": "SLOAD"
														},
														{
															"begin": 3948,
															"end": 3954,
															"name": "SWAP1"
														},
														{
															"begin": 3948,
															"end": 3954,
															"name": "PUSH",
															"value": "100"
														},
														{
															"begin": 3948,
															"end": 3954,
															"name": "EXP"
														},
														{
															"begin": 3948,
															"end": 3954,
															"name": "SWAP1"
														},
														{
															"begin": 3948,
															"end": 3954,
															"name": "DIV"
														},
														{
															"begin": 3948,
															"end": 3954,
															"name": "PUSH",
															"value": "FF"
														},
														{
															"begin": 3948,
															"end": 3954,
															"name": "AND"
														},
														{
															"begin": 3948,
															"end": 3962,
															"name": "ISZERO"
														},
														{
															"begin": 3948,
															"end": 3962,
															"name": "ISZERO"
														},
														{
															"begin": 3948,
															"end": 3962,
															"name": "EQ"
														},
														{
															"begin": 3940,
															"end": 3963,
															"name": "ISZERO"
														},
														{
															"begin": 3940,
															"end": 3963,
															"name": "ISZERO"
														},
														{
															"begin": 3940,
															"end": 3963,
															"name": "PUSH [tag]",
															"value": "166"
														},
														{
															"begin": 3940,
															"end": 3963,
															"name": "JUMPI"
														},
														{
															"begin": 3940,
															"end": 3963,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 3940,
															"end": 3963,
															"name": "DUP1"
														},
														{
															"begin": 3940,
															"end": 3963,
															"name": "REVERT"
														},
														{
															"begin": 3940,
															"end": 3963,
															"name": "tag",
															"value": "166"
														},
														{
															"begin": 3940,
															"end": 3963,
															"name": "JUMPDEST"
														},
														{
															"begin": 4149,
															"end": 4153,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": 4126,
															"end": 4153,
															"name": "ISZERO"
														},
														{
															"begin": 4126,
															"end": 4153,
															"name": "ISZERO"
														},
														{
															"begin": 4126,
															"end": 4133,
															"name": "PUSH",
															"value": "D"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 4134,
															"end": 4144,
															"name": "CALLER"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "AND"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "AND"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "DUP2"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "MSTORE"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "ADD"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "SWAP1"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "DUP2"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "MSTORE"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "ADD"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "KECCAK256"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "SWAP1"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "SLOAD"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "SWAP1"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "PUSH",
															"value": "100"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "EXP"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "SWAP1"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "DIV"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "PUSH",
															"value": "FF"
														},
														{
															"begin": 4126,
															"end": 4145,
															"name": "AND"
														},
														{
															"begin": 4126,
															"end": 4153,
															"name": "ISZERO"
														},
														{
															"begin": 4126,
															"end": 4153,
															"name": "ISZERO"
														},
														{
															"begin": 4126,
															"end": 4153,
															"name": "EQ"
														},
														{
															"begin": 4118,
															"end": 4154,
															"name": "ISZERO"
														},
														{
															"begin": 4118,
															"end": 4154,
															"name": "ISZERO"
														},
														{
															"begin": 4118,
															"end": 4154,
															"name": "PUSH [tag]",
															"value": "168"
														},
														{
															"begin": 4118,
															"end": 4154,
															"name": "JUMPI"
														},
														{
															"begin": 4118,
															"end": 4154,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 4118,
															"end": 4154,
															"name": "DUP1"
														},
														{
															"begin": 4118,
															"end": 4154,
															"name": "REVERT"
														},
														{
															"begin": 4118,
															"end": 4154,
															"name": "tag",
															"value": "168"
														},
														{
															"begin": 4118,
															"end": 4154,
															"name": "JUMPDEST"
														},
														{
															"begin": 4239,
															"end": 4260,
															"name": "PUSH",
															"value": "2"
														},
														{
															"begin": 4230,
															"end": 4260,
															"name": "PUSH",
															"value": "5"
														},
														{
															"begin": 4230,
															"end": 4260,
															"name": "DUP2"
														},
														{
															"begin": 4230,
															"end": 4260,
															"name": "GT"
														},
														{
															"begin": 4230,
															"end": 4260,
															"name": "ISZERO"
														},
														{
															"begin": 4230,
															"end": 4260,
															"name": "PUSH [tag]",
															"value": "170"
														},
														{
															"begin": 4230,
															"end": 4260,
															"name": "JUMPI"
														},
														{
															"begin": 4230,
															"end": 4260,
															"name": "INVALID"
														},
														{
															"begin": 4230,
															"end": 4260,
															"name": "tag",
															"value": "170"
														},
														{
															"begin": 4230,
															"end": 4260,
															"name": "JUMPDEST"
														},
														{
															"begin": 4230,
															"end": 4235,
															"name": "PUSH",
															"value": "C"
														},
														{
															"begin": 4230,
															"end": 4235,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": 4230,
															"end": 4235,
															"name": "SWAP1"
														},
														{
															"begin": 4230,
															"end": 4235,
															"name": "SLOAD"
														},
														{
															"begin": 4230,
															"end": 4235,
															"name": "SWAP1"
														},
														{
															"begin": 4230,
															"end": 4235,
															"name": "PUSH",
															"value": "100"
														},
														{
															"begin": 4230,
															"end": 4235,
															"name": "EXP"
														},
														{
															"begin": 4230,
															"end": 4235,
															"name": "SWAP1"
														},
														{
															"begin": 4230,
															"end": 4235,
															"name": "DIV"
														},
														{
															"begin": 4230,
															"end": 4235,
															"name": "PUSH",
															"value": "FF"
														},
														{
															"begin": 4230,
															"end": 4235,
															"name": "AND"
														},
														{
															"begin": 4230,
															"end": 4260,
															"name": "PUSH",
															"value": "5"
														},
														{
															"begin": 4230,
															"end": 4260,
															"name": "DUP2"
														},
														{
															"begin": 4230,
															"end": 4260,
															"name": "GT"
														},
														{
															"begin": 4230,
															"end": 4260,
															"name": "ISZERO"
														},
														{
															"begin": 4230,
															"end": 4260,
															"name": "PUSH [tag]",
															"value": "171"
														},
														{
															"begin": 4230,
															"end": 4260,
															"name": "JUMPI"
														},
														{
															"begin": 4230,
															"end": 4260,
															"name": "INVALID"
														},
														{
															"begin": 4230,
															"end": 4260,
															"name": "tag",
															"value": "171"
														},
														{
															"begin": 4230,
															"end": 4260,
															"name": "JUMPDEST"
														},
														{
															"begin": 4230,
															"end": 4260,
															"name": "EQ"
														},
														{
															"begin": 4222,
															"end": 4261,
															"name": "ISZERO"
														},
														{
															"begin": 4222,
															"end": 4261,
															"name": "ISZERO"
														},
														{
															"begin": 4222,
															"end": 4261,
															"name": "PUSH [tag]",
															"value": "172"
														},
														{
															"begin": 4222,
															"end": 4261,
															"name": "JUMPI"
														},
														{
															"begin": 4222,
															"end": 4261,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 4222,
															"end": 4261,
															"name": "DUP1"
														},
														{
															"begin": 4222,
															"end": 4261,
															"name": "REVERT"
														},
														{
															"begin": 4222,
															"end": 4261,
															"name": "tag",
															"value": "172"
														},
														{
															"begin": 4222,
															"end": 4261,
															"name": "JUMPDEST"
														},
														{
															"begin": 4316,
															"end": 4317,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 4280,
															"end": 4301,
															"name": "PUSH",
															"value": "E"
														},
														{
															"begin": 4280,
															"end": 4313,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 4302,
															"end": 4312,
															"name": "CALLER"
														},
														{
															"begin": 4280,
															"end": 4313,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 4280,
															"end": 4313,
															"name": "AND"
														},
														{
															"begin": 4280,
															"end": 4313,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 4280,
															"end": 4313,
															"name": "AND"
														},
														{
															"begin": 4280,
															"end": 4313,
															"name": "DUP2"
														},
														{
															"begin": 4280,
															"end": 4313,
															"name": "MSTORE"
														},
														{
															"begin": 4280,
															"end": 4313,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 4280,
															"end": 4313,
															"name": "ADD"
														},
														{
															"begin": 4280,
															"end": 4313,
															"name": "SWAP1"
														},
														{
															"begin": 4280,
															"end": 4313,
															"name": "DUP2"
														},
														{
															"begin": 4280,
															"end": 4313,
															"name": "MSTORE"
														},
														{
															"begin": 4280,
															"end": 4313,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 4280,
															"end": 4313,
															"name": "ADD"
														},
														{
															"begin": 4280,
															"end": 4313,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 4280,
															"end": 4313,
															"name": "KECCAK256"
														},
														{
															"begin": 4280,
															"end": 4313,
															"name": "SLOAD"
														},
														{
															"begin": 4280,
															"end": 4317,
															"name": "GT"
														},
														{
															"begin": 4272,
															"end": 4318,
															"name": "ISZERO"
														},
														{
															"begin": 4272,
															"end": 4318,
															"name": "ISZERO"
														},
														{
															"begin": 4272,
															"end": 4318,
															"name": "PUSH [tag]",
															"value": "173"
														},
														{
															"begin": 4272,
															"end": 4318,
															"name": "JUMPI"
														},
														{
															"begin": 4272,
															"end": 4318,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 4272,
															"end": 4318,
															"name": "DUP1"
														},
														{
															"begin": 4272,
															"end": 4318,
															"name": "REVERT"
														},
														{
															"begin": 4272,
															"end": 4318,
															"name": "tag",
															"value": "173"
														},
														{
															"begin": 4272,
															"end": 4318,
															"name": "JUMPDEST"
														},
														{
															"begin": 12810,
															"end": 12822,
															"name": "PUSH",
															"value": "F"
														},
														{
															"begin": 12810,
															"end": 12822,
															"name": "SLOAD"
														},
														{
															"begin": 12795,
															"end": 12807,
															"name": "PUSH",
															"value": "3"
														},
														{
															"begin": 12795,
															"end": 12807,
															"name": "SLOAD"
														},
														{
															"begin": 12795,
															"end": 12822,
															"name": "DUP2"
														},
														{
															"begin": 12795,
															"end": 12822,
															"name": "ISZERO"
														},
														{
															"begin": 12795,
															"end": 12822,
															"name": "ISZERO"
														},
														{
															"begin": 12795,
															"end": 12822,
															"name": "PUSH [tag]",
															"value": "175"
														},
														{
															"begin": 12795,
															"end": 12822,
															"name": "JUMPI"
														},
														{
															"begin": 12795,
															"end": 12822,
															"name": "INVALID"
														},
														{
															"begin": 12795,
															"end": 12822,
															"name": "tag",
															"value": "175"
														},
														{
															"begin": 12795,
															"end": 12822,
															"name": "JUMPDEST"
														},
														{
															"begin": 12795,
															"end": 12822,
															"name": "DIV"
														},
														{
															"begin": 12769,
															"end": 12822,
															"name": "SWAP1"
														},
														{
															"begin": 12769,
															"end": 12822,
															"name": "POP"
														},
														{
															"begin": 12928,
															"end": 12946,
															"name": "DUP1"
														},
														{
															"begin": 12912,
															"end": 12916,
															"name": "ADDRESS"
														},
														{
															"begin": 12912,
															"end": 12924,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 12912,
															"end": 12924,
															"name": "AND"
														},
														{
															"begin": 12912,
															"end": 12924,
															"name": "BALANCE"
														},
														{
															"begin": 12912,
															"end": 12946,
															"name": "LT"
														},
														{
															"begin": 12912,
															"end": 12946,
															"name": "ISZERO"
														},
														{
															"begin": 12905,
															"end": 12947,
															"name": "ISZERO"
														},
														{
															"begin": 12905,
															"end": 12947,
															"name": "ISZERO"
														},
														{
															"begin": 12905,
															"end": 12947,
															"name": "PUSH [tag]",
															"value": "176"
														},
														{
															"begin": 12905,
															"end": 12947,
															"name": "JUMPI"
														},
														{
															"begin": 12905,
															"end": 12947,
															"name": "INVALID"
														},
														{
															"begin": 12905,
															"end": 12947,
															"name": "tag",
															"value": "176"
														},
														{
															"begin": 12905,
															"end": 12947,
															"name": "JUMPDEST"
														},
														{
															"begin": 13028,
															"end": 13038,
															"name": "CALLER"
														},
														{
															"begin": 13028,
															"end": 13047,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 13028,
															"end": 13047,
															"name": "AND"
														},
														{
															"begin": 13028,
															"end": 13067,
															"name": "PUSH",
															"value": "8FC"
														},
														{
															"begin": 13048,
															"end": 13066,
															"name": "DUP3"
														},
														{
															"begin": 13028,
															"end": 13067,
															"name": "SWAP1"
														},
														{
															"begin": 13028,
															"end": 13067,
															"name": "DUP2"
														},
														{
															"begin": 13028,
															"end": 13067,
															"name": "ISZERO"
														},
														{
															"begin": 13028,
															"end": 13067,
															"name": "MUL"
														},
														{
															"begin": 13028,
															"end": 13067,
															"name": "SWAP1"
														},
														{
															"begin": 13028,
															"end": 13067,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 13028,
															"end": 13067,
															"name": "MLOAD"
														},
														{
															"begin": 13028,
															"end": 13067,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 13028,
															"end": 13067,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 13028,
															"end": 13067,
															"name": "MLOAD"
														},
														{
															"begin": 13028,
															"end": 13067,
															"name": "DUP1"
														},
														{
															"begin": 13028,
															"end": 13067,
															"name": "DUP4"
														},
														{
															"begin": 13028,
															"end": 13067,
															"name": "SUB"
														},
														{
															"begin": 13028,
															"end": 13067,
															"name": "DUP2"
														},
														{
															"begin": 13028,
															"end": 13067,
															"name": "DUP6"
														},
														{
															"begin": 13028,
															"end": 13067,
															"name": "DUP9"
														},
														{
															"begin": 13028,
															"end": 13067,
															"name": "DUP9"
														},
														{
															"begin": 13028,
															"end": 13067,
															"name": "CALL"
														},
														{
															"begin": 13028,
															"end": 13067,
															"name": "SWAP4"
														},
														{
															"begin": 13028,
															"end": 13067,
															"name": "POP"
														},
														{
															"begin": 13028,
															"end": 13067,
															"name": "POP"
														},
														{
															"begin": 13028,
															"end": 13067,
															"name": "POP"
														},
														{
															"begin": 13028,
															"end": 13067,
															"name": "POP"
														},
														{
															"begin": 13028,
															"end": 13067,
															"name": "ISZERO"
														},
														{
															"begin": 13028,
															"end": 13067,
															"name": "ISZERO"
														},
														{
															"begin": 13028,
															"end": 13067,
															"name": "PUSH [tag]",
															"value": "177"
														},
														{
															"begin": 13028,
															"end": 13067,
															"name": "JUMPI"
														},
														{
															"begin": 13028,
															"end": 13067,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 13028,
															"end": 13067,
															"name": "DUP1"
														},
														{
															"begin": 13028,
															"end": 13067,
															"name": "REVERT"
														},
														{
															"begin": 13028,
															"end": 13067,
															"name": "tag",
															"value": "177"
														},
														{
															"begin": 13028,
															"end": 13067,
															"name": "JUMPDEST"
														},
														{
															"begin": 13172,
															"end": 13187,
															"name": "TIMESTAMP"
														},
														{
															"begin": 13152,
															"end": 13170,
															"name": "DUP2"
														},
														{
															"begin": 13140,
															"end": 13150,
															"name": "CALLER"
														},
														{
															"begin": 13120,
															"end": 13188,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 13120,
															"end": 13188,
															"name": "AND"
														},
														{
															"begin": 13120,
															"end": 13188,
															"name": "PUSH",
															"value": "52F6685DF2F773F854B17DB1D82E2352E222010DAAF8175761F02EF8782C403"
														},
														{
															"begin": 13120,
															"end": 13188,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 13120,
															"end": 13188,
															"name": "MLOAD"
														},
														{
															"begin": 13120,
															"end": 13188,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 13120,
															"end": 13188,
															"name": "MLOAD"
														},
														{
															"begin": 13120,
															"end": 13188,
															"name": "DUP1"
														},
														{
															"begin": 13120,
															"end": 13188,
															"name": "SWAP2"
														},
														{
															"begin": 13120,
															"end": 13188,
															"name": "SUB"
														},
														{
															"begin": 13120,
															"end": 13188,
															"name": "SWAP1"
														},
														{
															"begin": 13120,
															"end": 13188,
															"name": "LOG4"
														},
														{
															"begin": 13275,
															"end": 13276,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 13259,
															"end": 13263,
															"name": "ADDRESS"
														},
														{
															"begin": 13259,
															"end": 13271,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 13259,
															"end": 13271,
															"name": "AND"
														},
														{
															"begin": 13259,
															"end": 13271,
															"name": "BALANCE"
														},
														{
															"begin": 13259,
															"end": 13276,
															"name": "EQ"
														},
														{
															"begin": 13255,
															"end": 13689,
															"name": "ISZERO"
														},
														{
															"begin": 13255,
															"end": 13689,
															"name": "PUSH [tag]",
															"value": "178"
														},
														{
															"begin": 13255,
															"end": 13689,
															"name": "JUMPI"
														},
														{
															"begin": 13351,
															"end": 13356,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 13342,
															"end": 13348,
															"name": "PUSH",
															"value": "C"
														},
														{
															"begin": 13342,
															"end": 13348,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 13342,
															"end": 13356,
															"name": "PUSH",
															"value": "100"
														},
														{
															"begin": 13342,
															"end": 13356,
															"name": "EXP"
														},
														{
															"begin": 13342,
															"end": 13356,
															"name": "DUP2"
														},
														{
															"begin": 13342,
															"end": 13356,
															"name": "SLOAD"
														},
														{
															"begin": 13342,
															"end": 13356,
															"name": "DUP2"
														},
														{
															"begin": 13342,
															"end": 13356,
															"name": "PUSH",
															"value": "FF"
														},
														{
															"begin": 13342,
															"end": 13356,
															"name": "MUL"
														},
														{
															"begin": 13342,
															"end": 13356,
															"name": "NOT"
														},
														{
															"begin": 13342,
															"end": 13356,
															"name": "AND"
														},
														{
															"begin": 13342,
															"end": 13356,
															"name": "SWAP1"
														},
														{
															"begin": 13342,
															"end": 13356,
															"name": "DUP4"
														},
														{
															"begin": 13342,
															"end": 13356,
															"name": "ISZERO"
														},
														{
															"begin": 13342,
															"end": 13356,
															"name": "ISZERO"
														},
														{
															"begin": 13342,
															"end": 13356,
															"name": "MUL"
														},
														{
															"begin": 13342,
															"end": 13356,
															"name": "OR"
														},
														{
															"begin": 13342,
															"end": 13356,
															"name": "SWAP1"
														},
														{
															"begin": 13342,
															"end": 13356,
															"name": "SSTORE"
														},
														{
															"begin": 13342,
															"end": 13356,
															"name": "POP"
														},
														{
															"begin": 13450,
															"end": 13465,
															"name": "TIMESTAMP"
														},
														{
															"begin": 13442,
															"end": 13448,
															"name": "PUSH",
															"value": "C"
														},
														{
															"begin": 13442,
															"end": 13448,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 13442,
															"end": 13448,
															"name": "SWAP1"
														},
														{
															"begin": 13442,
															"end": 13448,
															"name": "SLOAD"
														},
														{
															"begin": 13442,
															"end": 13448,
															"name": "SWAP1"
														},
														{
															"begin": 13442,
															"end": 13448,
															"name": "PUSH",
															"value": "100"
														},
														{
															"begin": 13442,
															"end": 13448,
															"name": "EXP"
														},
														{
															"begin": 13442,
															"end": 13448,
															"name": "SWAP1"
														},
														{
															"begin": 13442,
															"end": 13448,
															"name": "DIV"
														},
														{
															"begin": 13442,
															"end": 13448,
															"name": "PUSH",
															"value": "FF"
														},
														{
															"begin": 13442,
															"end": 13448,
															"name": "AND"
														},
														{
															"begin": 13414,
															"end": 13466,
															"name": "ISZERO"
														},
														{
															"begin": 13414,
															"end": 13466,
															"name": "ISZERO"
														},
														{
															"begin": 13414,
															"end": 13466,
															"name": "PUSH",
															"value": "160914EA27C60AA29A5F3A69D74E6069869DE36E38939DE1E0A66B921D8623D2"
														},
														{
															"begin": 13414,
															"end": 13466,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 13414,
															"end": 13466,
															"name": "MLOAD"
														},
														{
															"begin": 13414,
															"end": 13466,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 13414,
															"end": 13466,
															"name": "MLOAD"
														},
														{
															"begin": 13414,
															"end": 13466,
															"name": "DUP1"
														},
														{
															"begin": 13414,
															"end": 13466,
															"name": "SWAP2"
														},
														{
															"begin": 13414,
															"end": 13466,
															"name": "SUB"
														},
														{
															"begin": 13414,
															"end": 13466,
															"name": "SWAP1"
														},
														{
															"begin": 13414,
															"end": 13466,
															"name": "LOG3"
														},
														{
															"begin": 13568,
															"end": 13581,
															"name": "PUSH",
															"value": "3"
														},
														{
															"begin": 13560,
															"end": 13565,
															"name": "PUSH",
															"value": "C"
														},
														{
															"begin": 13560,
															"end": 13565,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": 13560,
															"end": 13581,
															"name": "PUSH",
															"value": "100"
														},
														{
															"begin": 13560,
															"end": 13581,
															"name": "EXP"
														},
														{
															"begin": 13560,
															"end": 13581,
															"name": "DUP2"
														},
														{
															"begin": 13560,
															"end": 13581,
															"name": "SLOAD"
														},
														{
															"begin": 13560,
															"end": 13581,
															"name": "DUP2"
														},
														{
															"begin": 13560,
															"end": 13581,
															"name": "PUSH",
															"value": "FF"
														},
														{
															"begin": 13560,
															"end": 13581,
															"name": "MUL"
														},
														{
															"begin": 13560,
															"end": 13581,
															"name": "NOT"
														},
														{
															"begin": 13560,
															"end": 13581,
															"name": "AND"
														},
														{
															"begin": 13560,
															"end": 13581,
															"name": "SWAP1"
														},
														{
															"begin": 13560,
															"end": 13581,
															"name": "DUP4"
														},
														{
															"begin": 13560,
															"end": 13581,
															"name": "PUSH",
															"value": "5"
														},
														{
															"begin": 13560,
															"end": 13581,
															"name": "DUP2"
														},
														{
															"begin": 13560,
															"end": 13581,
															"name": "GT"
														},
														{
															"begin": 13560,
															"end": 13581,
															"name": "ISZERO"
														},
														{
															"begin": 13560,
															"end": 13581,
															"name": "PUSH [tag]",
															"value": "179"
														},
														{
															"begin": 13560,
															"end": 13581,
															"name": "JUMPI"
														},
														{
															"begin": 13560,
															"end": 13581,
															"name": "INVALID"
														},
														{
															"begin": 13560,
															"end": 13581,
															"name": "tag",
															"value": "179"
														},
														{
															"begin": 13560,
															"end": 13581,
															"name": "JUMPDEST"
														},
														{
															"begin": 13560,
															"end": 13581,
															"name": "MUL"
														},
														{
															"begin": 13560,
															"end": 13581,
															"name": "OR"
														},
														{
															"begin": 13560,
															"end": 13581,
															"name": "SWAP1"
														},
														{
															"begin": 13560,
															"end": 13581,
															"name": "SSTORE"
														},
														{
															"begin": 13560,
															"end": 13581,
															"name": "POP"
														},
														{
															"begin": 13661,
															"end": 13676,
															"name": "TIMESTAMP"
														},
														{
															"begin": 13654,
															"end": 13659,
															"name": "PUSH",
															"value": "C"
														},
														{
															"begin": 13654,
															"end": 13659,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": 13654,
															"end": 13659,
															"name": "SWAP1"
														},
														{
															"begin": 13654,
															"end": 13659,
															"name": "SLOAD"
														},
														{
															"begin": 13654,
															"end": 13659,
															"name": "SWAP1"
														},
														{
															"begin": 13654,
															"end": 13659,
															"name": "PUSH",
															"value": "100"
														},
														{
															"begin": 13654,
															"end": 13659,
															"name": "EXP"
														},
														{
															"begin": 13654,
															"end": 13659,
															"name": "SWAP1"
														},
														{
															"begin": 13654,
															"end": 13659,
															"name": "DIV"
														},
														{
															"begin": 13654,
															"end": 13659,
															"name": "PUSH",
															"value": "FF"
														},
														{
															"begin": 13654,
															"end": 13659,
															"name": "AND"
														},
														{
															"begin": 13632,
															"end": 13677,
															"name": "PUSH",
															"value": "5"
														},
														{
															"begin": 13632,
															"end": 13677,
															"name": "DUP2"
														},
														{
															"begin": 13632,
															"end": 13677,
															"name": "GT"
														},
														{
															"begin": 13632,
															"end": 13677,
															"name": "ISZERO"
														},
														{
															"begin": 13632,
															"end": 13677,
															"name": "PUSH [tag]",
															"value": "180"
														},
														{
															"begin": 13632,
															"end": 13677,
															"name": "JUMPI"
														},
														{
															"begin": 13632,
															"end": 13677,
															"name": "INVALID"
														},
														{
															"begin": 13632,
															"end": 13677,
															"name": "tag",
															"value": "180"
														},
														{
															"begin": 13632,
															"end": 13677,
															"name": "JUMPDEST"
														},
														{
															"begin": 13632,
															"end": 13677,
															"name": "PUSH",
															"value": "AAAE373901E745122C2E0925AD006227969C6CD190B7D5EA2FB7FDBD1D955B35"
														},
														{
															"begin": 13632,
															"end": 13677,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 13632,
															"end": 13677,
															"name": "MLOAD"
														},
														{
															"begin": 13632,
															"end": 13677,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 13632,
															"end": 13677,
															"name": "MLOAD"
														},
														{
															"begin": 13632,
															"end": 13677,
															"name": "DUP1"
														},
														{
															"begin": 13632,
															"end": 13677,
															"name": "SWAP2"
														},
														{
															"begin": 13632,
															"end": 13677,
															"name": "SUB"
														},
														{
															"begin": 13632,
															"end": 13677,
															"name": "SWAP1"
														},
														{
															"begin": 13632,
															"end": 13677,
															"name": "LOG3"
														},
														{
															"begin": 13255,
															"end": 13689,
															"name": "tag",
															"value": "178"
														},
														{
															"begin": 13255,
															"end": 13689,
															"name": "JUMPDEST"
														},
														{
															"begin": 12478,
															"end": 13696,
															"name": "POP"
														},
														{
															"begin": 12478,
															"end": 13696,
															"name": "JUMP",
															"value": "[out]"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "tag",
															"value": "56"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "JUMPDEST"
														},
														{
															"begin": 14105,
															"end": 14112,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 14114,
															"end": 14121,
															"name": "DUP1"
														},
														{
															"begin": 14123,
															"end": 14127,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 14129,
															"end": 14133,
															"name": "DUP1"
														},
														{
															"begin": 14135,
															"end": 14139,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 14141,
															"end": 14145,
															"name": "DUP1"
														},
														{
															"begin": 14147,
															"end": 14151,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 14153,
															"end": 14157,
															"name": "DUP1"
														},
														{
															"begin": 14159,
															"end": 14164,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 14166,
															"end": 14170,
															"name": "DUP1"
														},
														{
															"begin": 14172,
															"end": 14176,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 14207,
															"end": 14215,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": 14207,
															"end": 14215,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 14207,
															"end": 14215,
															"name": "SWAP1"
														},
														{
															"begin": 14207,
															"end": 14215,
															"name": "SLOAD"
														},
														{
															"begin": 14207,
															"end": 14215,
															"name": "SWAP1"
														},
														{
															"begin": 14207,
															"end": 14215,
															"name": "PUSH",
															"value": "100"
														},
														{
															"begin": 14207,
															"end": 14215,
															"name": "EXP"
														},
														{
															"begin": 14207,
															"end": 14215,
															"name": "SWAP1"
														},
														{
															"begin": 14207,
															"end": 14215,
															"name": "DIV"
														},
														{
															"begin": 14207,
															"end": 14215,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 14207,
															"end": 14215,
															"name": "AND"
														},
														{
															"begin": 14226,
															"end": 14237,
															"name": "PUSH",
															"value": "B"
														},
														{
															"begin": 14226,
															"end": 14237,
															"name": "SLOAD"
														},
														{
															"begin": 14248,
															"end": 14263,
															"name": "PUSH",
															"value": "2"
														},
														{
															"begin": 14248,
															"end": 14263,
															"name": "SLOAD"
														},
														{
															"begin": 14274,
															"end": 14293,
															"name": "PUSH",
															"value": "6"
														},
														{
															"begin": 14274,
															"end": 14293,
															"name": "SLOAD"
														},
														{
															"begin": 14304,
															"end": 14324,
															"name": "PUSH",
															"value": "8"
														},
														{
															"begin": 14304,
															"end": 14324,
															"name": "SLOAD"
														},
														{
															"begin": 14335,
															"end": 14354,
															"name": "PUSH",
															"value": "7"
														},
														{
															"begin": 14335,
															"end": 14354,
															"name": "SLOAD"
														},
														{
															"begin": 14365,
															"end": 14373,
															"name": "PUSH",
															"value": "5"
														},
														{
															"begin": 14365,
															"end": 14373,
															"name": "SLOAD"
														},
														{
															"begin": 14384,
															"end": 14396,
															"name": "PUSH",
															"value": "3"
														},
														{
															"begin": 14384,
															"end": 14396,
															"name": "SLOAD"
														},
														{
															"begin": 14407,
															"end": 14412,
															"name": "PUSH",
															"value": "C"
														},
														{
															"begin": 14407,
															"end": 14412,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": 14407,
															"end": 14412,
															"name": "SWAP1"
														},
														{
															"begin": 14407,
															"end": 14412,
															"name": "SLOAD"
														},
														{
															"begin": 14407,
															"end": 14412,
															"name": "SWAP1"
														},
														{
															"begin": 14407,
															"end": 14412,
															"name": "PUSH",
															"value": "100"
														},
														{
															"begin": 14407,
															"end": 14412,
															"name": "EXP"
														},
														{
															"begin": 14407,
															"end": 14412,
															"name": "SWAP1"
														},
														{
															"begin": 14407,
															"end": 14412,
															"name": "DIV"
														},
														{
															"begin": 14407,
															"end": 14412,
															"name": "PUSH",
															"value": "FF"
														},
														{
															"begin": 14407,
															"end": 14412,
															"name": "AND"
														},
														{
															"begin": 14423,
															"end": 14429,
															"name": "PUSH",
															"value": "C"
														},
														{
															"begin": 14423,
															"end": 14429,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 14423,
															"end": 14429,
															"name": "SWAP1"
														},
														{
															"begin": 14423,
															"end": 14429,
															"name": "SLOAD"
														},
														{
															"begin": 14423,
															"end": 14429,
															"name": "SWAP1"
														},
														{
															"begin": 14423,
															"end": 14429,
															"name": "PUSH",
															"value": "100"
														},
														{
															"begin": 14423,
															"end": 14429,
															"name": "EXP"
														},
														{
															"begin": 14423,
															"end": 14429,
															"name": "SWAP1"
														},
														{
															"begin": 14423,
															"end": 14429,
															"name": "DIV"
														},
														{
															"begin": 14423,
															"end": 14429,
															"name": "PUSH",
															"value": "FF"
														},
														{
															"begin": 14423,
															"end": 14429,
															"name": "AND"
														},
														{
															"begin": 14440,
															"end": 14444,
															"name": "ADDRESS"
														},
														{
															"begin": 14440,
															"end": 14452,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 14440,
															"end": 14452,
															"name": "AND"
														},
														{
															"begin": 14440,
															"end": 14452,
															"name": "BALANCE"
														},
														{
															"begin": 14189,
															"end": 14463,
															"name": "SWAP11"
														},
														{
															"begin": 14189,
															"end": 14463,
															"name": "POP"
														},
														{
															"begin": 14189,
															"end": 14463,
															"name": "SWAP11"
														},
														{
															"begin": 14189,
															"end": 14463,
															"name": "POP"
														},
														{
															"begin": 14189,
															"end": 14463,
															"name": "SWAP11"
														},
														{
															"begin": 14189,
															"end": 14463,
															"name": "POP"
														},
														{
															"begin": 14189,
															"end": 14463,
															"name": "SWAP11"
														},
														{
															"begin": 14189,
															"end": 14463,
															"name": "POP"
														},
														{
															"begin": 14189,
															"end": 14463,
															"name": "SWAP11"
														},
														{
															"begin": 14189,
															"end": 14463,
															"name": "POP"
														},
														{
															"begin": 14189,
															"end": 14463,
															"name": "SWAP11"
														},
														{
															"begin": 14189,
															"end": 14463,
															"name": "POP"
														},
														{
															"begin": 14189,
															"end": 14463,
															"name": "SWAP11"
														},
														{
															"begin": 14189,
															"end": 14463,
															"name": "POP"
														},
														{
															"begin": 14189,
															"end": 14463,
															"name": "SWAP11"
														},
														{
															"begin": 14189,
															"end": 14463,
															"name": "POP"
														},
														{
															"begin": 14189,
															"end": 14463,
															"name": "SWAP11"
														},
														{
															"begin": 14189,
															"end": 14463,
															"name": "POP"
														},
														{
															"begin": 14189,
															"end": 14463,
															"name": "SWAP11"
														},
														{
															"begin": 14189,
															"end": 14463,
															"name": "POP"
														},
														{
															"begin": 14189,
															"end": 14463,
															"name": "SWAP11"
														},
														{
															"begin": 14189,
															"end": 14463,
															"name": "POP"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "SWAP1"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "SWAP2"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "SWAP3"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "SWAP4"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "SWAP5"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "SWAP6"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "SWAP7"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "SWAP8"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "SWAP9"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "SWAP10"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "SWAP11"
														},
														{
															"begin": 14059,
															"end": 14471,
															"name": "JUMP",
															"value": "[out]"
														},
														{
															"begin": 237,
															"end": 341,
															"name": "tag",
															"value": "60"
														},
														{
															"begin": 237,
															"end": 341,
															"name": "JUMPDEST"
														},
														{
															"begin": 232,
															"end": 237,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 232,
															"end": 237,
															"name": "DUP1"
														},
														{
															"begin": 232,
															"end": 237,
															"name": "SWAP1"
														},
														{
															"begin": 232,
															"end": 237,
															"name": "SLOAD"
														},
														{
															"begin": 232,
															"end": 237,
															"name": "SWAP1"
														},
														{
															"begin": 232,
															"end": 237,
															"name": "PUSH",
															"value": "100"
														},
														{
															"begin": 232,
															"end": 237,
															"name": "EXP"
														},
														{
															"begin": 232,
															"end": 237,
															"name": "SWAP1"
														},
														{
															"begin": 232,
															"end": 237,
															"name": "DIV"
														},
														{
															"begin": 232,
															"end": 237,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 232,
															"end": 237,
															"name": "AND"
														},
														{
															"begin": 218,
															"end": 237,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 218,
															"end": 237,
															"name": "AND"
														},
														{
															"begin": 218,
															"end": 228,
															"name": "CALLER"
														},
														{
															"begin": 218,
															"end": 237,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 218,
															"end": 237,
															"name": "AND"
														},
														{
															"begin": 218,
															"end": 237,
															"name": "EQ"
														},
														{
															"begin": 210,
															"end": 238,
															"name": "ISZERO"
														},
														{
															"begin": 210,
															"end": 238,
															"name": "ISZERO"
														},
														{
															"begin": 210,
															"end": 238,
															"name": "PUSH [tag]",
															"value": "183"
														},
														{
															"begin": 210,
															"end": 238,
															"name": "JUMPI"
														},
														{
															"begin": 210,
															"end": 238,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 210,
															"end": 238,
															"name": "DUP1"
														},
														{
															"begin": 210,
															"end": 238,
															"name": "REVERT"
														},
														{
															"begin": 210,
															"end": 238,
															"name": "tag",
															"value": "183"
														},
														{
															"begin": 210,
															"end": 238,
															"name": "JUMPDEST"
														},
														{
															"begin": 322,
															"end": 332,
															"name": "DUP1"
														},
														{
															"begin": 309,
															"end": 333,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 309,
															"end": 333,
															"name": "AND"
														},
														{
															"begin": 309,
															"end": 333,
															"name": "SELFDESTRUCT"
														},
														{
															"begin": 481,
															"end": 604,
															"name": "tag",
															"value": "96"
														},
														{
															"begin": 481,
															"end": 604,
															"name": "JUMPDEST"
														},
														{
															"begin": 539,
															"end": 546,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 571,
															"end": 572,
															"name": "DUP3"
														},
														{
															"begin": 566,
															"end": 567,
															"name": "DUP3"
														},
														{
															"begin": 566,
															"end": 572,
															"name": "GT"
														},
														{
															"begin": 566,
															"end": 572,
															"name": "ISZERO"
														},
														{
															"begin": 559,
															"end": 573,
															"name": "ISZERO"
														},
														{
															"begin": 559,
															"end": 573,
															"name": "ISZERO"
														},
														{
															"begin": 559,
															"end": 573,
															"name": "PUSH [tag]",
															"value": "186"
														},
														{
															"begin": 559,
															"end": 573,
															"name": "JUMPI"
														},
														{
															"begin": 559,
															"end": 573,
															"name": "INVALID"
														},
														{
															"begin": 559,
															"end": 573,
															"name": "tag",
															"value": "186"
														},
														{
															"begin": 559,
															"end": 573,
															"name": "JUMPDEST"
														},
														{
															"begin": 595,
															"end": 596,
															"name": "DUP2"
														},
														{
															"begin": 591,
															"end": 592,
															"name": "DUP4"
														},
														{
															"begin": 591,
															"end": 596,
															"name": "SUB"
														},
														{
															"begin": 584,
															"end": 596,
															"name": "SWAP1"
														},
														{
															"begin": 584,
															"end": 596,
															"name": "POP"
														},
														{
															"begin": 481,
															"end": 604,
															"name": "SWAP3"
														},
														{
															"begin": 481,
															"end": 604,
															"name": "SWAP2"
														},
														{
															"begin": 481,
															"end": 604,
															"name": "POP"
														},
														{
															"begin": 481,
															"end": 604,
															"name": "POP"
														},
														{
															"begin": 481,
															"end": 604,
															"name": "JUMP",
															"value": "[out]"
														},
														{
															"begin": 622,
															"end": 769,
															"name": "tag",
															"value": "104"
														},
														{
															"begin": 622,
															"end": 769,
															"name": "JUMPDEST"
														},
														{
															"begin": 680,
															"end": 687,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 700,
															"end": 709,
															"name": "DUP1"
														},
														{
															"begin": 716,
															"end": 717,
															"name": "DUP3"
														},
														{
															"begin": 712,
															"end": 713,
															"name": "DUP5"
														},
														{
															"begin": 712,
															"end": 717,
															"name": "ADD"
														},
														{
															"begin": 700,
															"end": 717,
															"name": "SWAP1"
														},
														{
															"begin": 700,
															"end": 717,
															"name": "POP"
														},
														{
															"begin": 740,
															"end": 741,
															"name": "DUP4"
														},
														{
															"begin": 735,
															"end": 736,
															"name": "DUP2"
														},
														{
															"begin": 735,
															"end": 741,
															"name": "LT"
														},
														{
															"begin": 735,
															"end": 741,
															"name": "ISZERO"
														},
														{
															"begin": 728,
															"end": 742,
															"name": "ISZERO"
														},
														{
															"begin": 728,
															"end": 742,
															"name": "ISZERO"
														},
														{
															"begin": 728,
															"end": 742,
															"name": "PUSH [tag]",
															"value": "188"
														},
														{
															"begin": 728,
															"end": 742,
															"name": "JUMPI"
														},
														{
															"begin": 728,
															"end": 742,
															"name": "INVALID"
														},
														{
															"begin": 728,
															"end": 742,
															"name": "tag",
															"value": "188"
														},
														{
															"begin": 728,
															"end": 742,
															"name": "JUMPDEST"
														},
														{
															"begin": 760,
															"end": 761,
															"name": "DUP1"
														},
														{
															"begin": 753,
															"end": 761,
															"name": "SWAP2"
														},
														{
															"begin": 753,
															"end": 761,
															"name": "POP"
														},
														{
															"begin": 622,
															"end": 769,
															"name": "POP"
														},
														{
															"begin": 622,
															"end": 769,
															"name": "SWAP3"
														},
														{
															"begin": 622,
															"end": 769,
															"name": "SWAP2"
														},
														{
															"begin": 622,
															"end": 769,
															"name": "POP"
														},
														{
															"begin": 622,
															"end": 769,
															"name": "POP"
														},
														{
															"begin": 622,
															"end": 769,
															"name": "JUMP",
															"value": "[out]"
														},
														{
															"begin": 15208,
															"end": 15406,
															"name": "tag",
															"value": "121"
														},
														{
															"begin": 15208,
															"end": 15406,
															"name": "JUMPDEST"
														},
														{
															"begin": 15295,
															"end": 15308,
															"name": "PUSH",
															"value": "4"
														},
														{
															"begin": 15287,
															"end": 15292,
															"name": "PUSH",
															"value": "C"
														},
														{
															"begin": 15287,
															"end": 15292,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": 15287,
															"end": 15308,
															"name": "PUSH",
															"value": "100"
														},
														{
															"begin": 15287,
															"end": 15308,
															"name": "EXP"
														},
														{
															"begin": 15287,
															"end": 15308,
															"name": "DUP2"
														},
														{
															"begin": 15287,
															"end": 15308,
															"name": "SLOAD"
														},
														{
															"begin": 15287,
															"end": 15308,
															"name": "DUP2"
														},
														{
															"begin": 15287,
															"end": 15308,
															"name": "PUSH",
															"value": "FF"
														},
														{
															"begin": 15287,
															"end": 15308,
															"name": "MUL"
														},
														{
															"begin": 15287,
															"end": 15308,
															"name": "NOT"
														},
														{
															"begin": 15287,
															"end": 15308,
															"name": "AND"
														},
														{
															"begin": 15287,
															"end": 15308,
															"name": "SWAP1"
														},
														{
															"begin": 15287,
															"end": 15308,
															"name": "DUP4"
														},
														{
															"begin": 15287,
															"end": 15308,
															"name": "PUSH",
															"value": "5"
														},
														{
															"begin": 15287,
															"end": 15308,
															"name": "DUP2"
														},
														{
															"begin": 15287,
															"end": 15308,
															"name": "GT"
														},
														{
															"begin": 15287,
															"end": 15308,
															"name": "ISZERO"
														},
														{
															"begin": 15287,
															"end": 15308,
															"name": "PUSH [tag]",
															"value": "190"
														},
														{
															"begin": 15287,
															"end": 15308,
															"name": "JUMPI"
														},
														{
															"begin": 15287,
															"end": 15308,
															"name": "INVALID"
														},
														{
															"begin": 15287,
															"end": 15308,
															"name": "tag",
															"value": "190"
														},
														{
															"begin": 15287,
															"end": 15308,
															"name": "JUMPDEST"
														},
														{
															"begin": 15287,
															"end": 15308,
															"name": "MUL"
														},
														{
															"begin": 15287,
															"end": 15308,
															"name": "OR"
														},
														{
															"begin": 15287,
															"end": 15308,
															"name": "SWAP1"
														},
														{
															"begin": 15287,
															"end": 15308,
															"name": "SSTORE"
														},
														{
															"begin": 15287,
															"end": 15308,
															"name": "POP"
														},
														{
															"begin": 15382,
															"end": 15397,
															"name": "TIMESTAMP"
														},
														{
															"begin": 15375,
															"end": 15380,
															"name": "PUSH",
															"value": "C"
														},
														{
															"begin": 15375,
															"end": 15380,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": 15375,
															"end": 15380,
															"name": "SWAP1"
														},
														{
															"begin": 15375,
															"end": 15380,
															"name": "SLOAD"
														},
														{
															"begin": 15375,
															"end": 15380,
															"name": "SWAP1"
														},
														{
															"begin": 15375,
															"end": 15380,
															"name": "PUSH",
															"value": "100"
														},
														{
															"begin": 15375,
															"end": 15380,
															"name": "EXP"
														},
														{
															"begin": 15375,
															"end": 15380,
															"name": "SWAP1"
														},
														{
															"begin": 15375,
															"end": 15380,
															"name": "DIV"
														},
														{
															"begin": 15375,
															"end": 15380,
															"name": "PUSH",
															"value": "FF"
														},
														{
															"begin": 15375,
															"end": 15380,
															"name": "AND"
														},
														{
															"begin": 15353,
															"end": 15398,
															"name": "PUSH",
															"value": "5"
														},
														{
															"begin": 15353,
															"end": 15398,
															"name": "DUP2"
														},
														{
															"begin": 15353,
															"end": 15398,
															"name": "GT"
														},
														{
															"begin": 15353,
															"end": 15398,
															"name": "ISZERO"
														},
														{
															"begin": 15353,
															"end": 15398,
															"name": "PUSH [tag]",
															"value": "191"
														},
														{
															"begin": 15353,
															"end": 15398,
															"name": "JUMPI"
														},
														{
															"begin": 15353,
															"end": 15398,
															"name": "INVALID"
														},
														{
															"begin": 15353,
															"end": 15398,
															"name": "tag",
															"value": "191"
														},
														{
															"begin": 15353,
															"end": 15398,
															"name": "JUMPDEST"
														},
														{
															"begin": 15353,
															"end": 15398,
															"name": "PUSH",
															"value": "AAAE373901E745122C2E0925AD006227969C6CD190B7D5EA2FB7FDBD1D955B35"
														},
														{
															"begin": 15353,
															"end": 15398,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 15353,
															"end": 15398,
															"name": "MLOAD"
														},
														{
															"begin": 15353,
															"end": 15398,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 15353,
															"end": 15398,
															"name": "MLOAD"
														},
														{
															"begin": 15353,
															"end": 15398,
															"name": "DUP1"
														},
														{
															"begin": 15353,
															"end": 15398,
															"name": "SWAP2"
														},
														{
															"begin": 15353,
															"end": 15398,
															"name": "SUB"
														},
														{
															"begin": 15353,
															"end": 15398,
															"name": "SWAP1"
														},
														{
															"begin": 15353,
															"end": 15398,
															"name": "LOG3"
														},
														{
															"begin": 15208,
															"end": 15406,
															"name": "JUMP",
															"value": "[out]"
														},
														{
															"begin": 17234,
															"end": 17611,
															"name": "tag",
															"value": "147"
														},
														{
															"begin": 17234,
															"end": 17611,
															"name": "JUMPDEST"
														},
														{
															"begin": 17269,
															"end": 17273,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 17360,
															"end": 17382,
															"name": "DUP1"
														},
														{
															"begin": 17385,
															"end": 17390,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 17385,
															"end": 17390,
															"name": "DUP1"
														},
														{
															"begin": 17385,
															"end": 17390,
															"name": "SWAP1"
														},
														{
															"begin": 17385,
															"end": 17390,
															"name": "SLOAD"
														},
														{
															"begin": 17385,
															"end": 17390,
															"name": "SWAP1"
														},
														{
															"begin": 17385,
															"end": 17390,
															"name": "PUSH",
															"value": "100"
														},
														{
															"begin": 17385,
															"end": 17390,
															"name": "EXP"
														},
														{
															"begin": 17385,
															"end": 17390,
															"name": "SWAP1"
														},
														{
															"begin": 17385,
															"end": 17390,
															"name": "DIV"
														},
														{
															"begin": 17385,
															"end": 17390,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 17385,
															"end": 17390,
															"name": "AND"
														},
														{
															"begin": 17385,
															"end": 17395,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 17385,
															"end": 17395,
															"name": "AND"
														},
														{
															"begin": 17403,
															"end": 17439,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 17403,
															"end": 17439,
															"name": "MLOAD"
														},
														{
															"begin": 17403,
															"end": 17439,
															"name": "DUP1"
														},
														{
															"begin": 17403,
															"end": 17439,
															"name": "DUP1"
														},
														{
															"begin": 17403,
															"end": 17439,
															"name": "PUSH",
															"value": "7365744672617564537461747573286164647265737329000000000000000000"
														},
														{
															"begin": 17403,
															"end": 17439,
															"name": "DUP2"
														},
														{
															"begin": 17403,
															"end": 17439,
															"name": "MSTORE"
														},
														{
															"begin": 17403,
															"end": 17439,
															"name": "POP"
														},
														{
															"begin": 17403,
															"end": 17439,
															"name": "PUSH",
															"value": "17"
														},
														{
															"begin": 17403,
															"end": 17439,
															"name": "ADD"
														},
														{
															"begin": 17403,
															"end": 17439,
															"name": "SWAP1"
														},
														{
															"begin": 17403,
															"end": 17439,
															"name": "POP"
														},
														{
															"begin": 17403,
															"end": 17439,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 17403,
															"end": 17439,
															"name": "MLOAD"
														},
														{
															"begin": 17403,
															"end": 17439,
															"name": "DUP1"
														},
														{
															"begin": 17403,
															"end": 17439,
															"name": "SWAP2"
														},
														{
															"begin": 17403,
															"end": 17439,
															"name": "SUB"
														},
														{
															"begin": 17403,
															"end": 17439,
															"name": "SWAP1"
														},
														{
															"begin": 17403,
															"end": 17439,
															"name": "KECCAK256"
														},
														{
															"begin": 17385,
															"end": 17451,
															"name": "PUSH",
															"value": "100000000000000000000000000000000000000000000000000000000"
														},
														{
															"begin": 17385,
															"end": 17451,
															"name": "SWAP1"
														},
														{
															"begin": 17385,
															"end": 17451,
															"name": "DIV"
														},
														{
															"begin": 17442,
															"end": 17450,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": 17442,
															"end": 17450,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 17442,
															"end": 17450,
															"name": "SWAP1"
														},
														{
															"begin": 17442,
															"end": 17450,
															"name": "SLOAD"
														},
														{
															"begin": 17442,
															"end": 17450,
															"name": "SWAP1"
														},
														{
															"begin": 17442,
															"end": 17450,
															"name": "PUSH",
															"value": "100"
														},
														{
															"begin": 17442,
															"end": 17450,
															"name": "EXP"
														},
														{
															"begin": 17442,
															"end": 17450,
															"name": "SWAP1"
														},
														{
															"begin": 17442,
															"end": 17450,
															"name": "DIV"
														},
														{
															"begin": 17442,
															"end": 17450,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 17442,
															"end": 17450,
															"name": "AND"
														},
														{
															"begin": 17385,
															"end": 17451,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 17385,
															"end": 17451,
															"name": "MLOAD"
														},
														{
															"begin": 17385,
															"end": 17451,
															"name": "DUP3"
														},
														{
															"begin": 17385,
															"end": 17451,
															"name": "PUSH",
															"value": "FFFFFFFF"
														},
														{
															"begin": 17385,
															"end": 17451,
															"name": "AND"
														},
														{
															"begin": 17385,
															"end": 17451,
															"name": "PUSH",
															"value": "100000000000000000000000000000000000000000000000000000000"
														},
														{
															"begin": 17385,
															"end": 17451,
															"name": "MUL"
														},
														{
															"begin": 17385,
															"end": 17451,
															"name": "DUP2"
														},
														{
															"begin": 17385,
															"end": 17451,
															"name": "MSTORE"
														},
														{
															"begin": 17385,
															"end": 17451,
															"name": "PUSH",
															"value": "4"
														},
														{
															"begin": 17385,
															"end": 17451,
															"name": "ADD"
														},
														{
															"begin": 17385,
															"end": 17451,
															"name": "DUP1"
														},
														{
															"begin": 17385,
															"end": 17451,
															"name": "DUP3"
														},
														{
															"begin": 17385,
															"end": 17451,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 17385,
															"end": 17451,
															"name": "AND"
														},
														{
															"begin": 17385,
															"end": 17451,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 17385,
															"end": 17451,
															"name": "AND"
														},
														{
															"begin": 17385,
															"end": 17451,
															"name": "DUP2"
														},
														{
															"begin": 17385,
															"end": 17451,
															"name": "MSTORE"
														},
														{
															"begin": 17385,
															"end": 17451,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 17385,
															"end": 17451,
															"name": "ADD"
														},
														{
															"begin": 17385,
															"end": 17451,
															"name": "SWAP2"
														},
														{
															"begin": 17385,
															"end": 17451,
															"name": "POP"
														},
														{
															"begin": 17385,
															"end": 17451,
															"name": "POP"
														},
														{
															"begin": 17385,
															"end": 17451,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 17385,
															"end": 17451,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 17385,
															"end": 17451,
															"name": "MLOAD"
														},
														{
															"begin": 17385,
															"end": 17451,
															"name": "DUP1"
														},
														{
															"begin": 17385,
															"end": 17451,
															"name": "DUP4"
														},
														{
															"begin": 17385,
															"end": 17451,
															"name": "SUB"
														},
														{
															"begin": 17385,
															"end": 17451,
															"name": "DUP2"
														},
														{
															"begin": 17385,
															"end": 17451,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 17385,
															"end": 17451,
															"name": "DUP8"
														},
														{
															"begin": 17385,
															"end": 17451,
															"name": "PUSH",
															"value": "646E"
														},
														{
															"begin": 17385,
															"end": 17451,
															"name": "GAS"
														},
														{
															"begin": 17385,
															"end": 17451,
															"name": "SUB"
														},
														{
															"begin": 17385,
															"end": 17451,
															"name": "CALL"
														},
														{
															"begin": 17385,
															"end": 17451,
															"name": "SWAP3"
														},
														{
															"begin": 17385,
															"end": 17451,
															"name": "POP"
														},
														{
															"begin": 17385,
															"end": 17451,
															"name": "POP"
														},
														{
															"begin": 17385,
															"end": 17451,
															"name": "POP"
														},
														{
															"begin": 17360,
															"end": 17451,
															"name": "SWAP1"
														},
														{
															"begin": 17360,
															"end": 17451,
															"name": "POP"
														},
														{
															"begin": 17550,
															"end": 17565,
															"name": "TIMESTAMP"
														},
														{
															"begin": 17531,
															"end": 17548,
															"name": "DUP2"
														},
														{
															"begin": 17502,
															"end": 17566,
															"name": "ISZERO"
														},
														{
															"begin": 17502,
															"end": 17566,
															"name": "ISZERO"
														},
														{
															"begin": 17521,
															"end": 17529,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": 17521,
															"end": 17529,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 17521,
															"end": 17529,
															"name": "SWAP1"
														},
														{
															"begin": 17521,
															"end": 17529,
															"name": "SLOAD"
														},
														{
															"begin": 17521,
															"end": 17529,
															"name": "SWAP1"
														},
														{
															"begin": 17521,
															"end": 17529,
															"name": "PUSH",
															"value": "100"
														},
														{
															"begin": 17521,
															"end": 17529,
															"name": "EXP"
														},
														{
															"begin": 17521,
															"end": 17529,
															"name": "SWAP1"
														},
														{
															"begin": 17521,
															"end": 17529,
															"name": "DIV"
														},
														{
															"begin": 17521,
															"end": 17529,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 17521,
															"end": 17529,
															"name": "AND"
														},
														{
															"begin": 17502,
															"end": 17566,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 17502,
															"end": 17566,
															"name": "AND"
														},
														{
															"begin": 17502,
															"end": 17566,
															"name": "PUSH",
															"value": "C1BB1D1E99D1E8D2705BA85717226A3FD9A86E4DE2284B00DFE6F33538D5249F"
														},
														{
															"begin": 17502,
															"end": 17566,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 17502,
															"end": 17566,
															"name": "MLOAD"
														},
														{
															"begin": 17502,
															"end": 17566,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 17502,
															"end": 17566,
															"name": "MLOAD"
														},
														{
															"begin": 17502,
															"end": 17566,
															"name": "DUP1"
														},
														{
															"begin": 17502,
															"end": 17566,
															"name": "SWAP2"
														},
														{
															"begin": 17502,
															"end": 17566,
															"name": "SUB"
														},
														{
															"begin": 17502,
															"end": 17566,
															"name": "SWAP1"
														},
														{
															"begin": 17502,
															"end": 17566,
															"name": "LOG4"
														},
														{
															"begin": 17586,
															"end": 17603,
															"name": "DUP1"
														},
														{
															"begin": 17579,
															"end": 17603,
															"name": "SWAP2"
														},
														{
															"begin": 17579,
															"end": 17603,
															"name": "POP"
														},
														{
															"begin": 17234,
															"end": 17611,
															"name": "POP"
														},
														{
															"begin": 17234,
															"end": 17611,
															"name": "SWAP1"
														},
														{
															"begin": 17234,
															"end": 17611,
															"name": "JUMP",
															"value": "[out]"
														},
														{
															"begin": 270,
															"end": 463,
															"name": "tag",
															"value": "193"
														},
														{
															"begin": 270,
															"end": 463,
															"name": "JUMPDEST"
														},
														{
															"begin": 328,
															"end": 335,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 419,
															"end": 428,
															"name": "DUP1"
														},
														{
															"begin": 435,
															"end": 436,
															"name": "DUP3"
														},
														{
															"begin": 431,
															"end": 432,
															"name": "DUP5"
														},
														{
															"begin": 431,
															"end": 436,
															"name": "DUP2"
														},
														{
															"begin": 431,
															"end": 436,
															"name": "ISZERO"
														},
														{
															"begin": 431,
															"end": 436,
															"name": "ISZERO"
														},
														{
															"begin": 431,
															"end": 436,
															"name": "PUSH [tag]",
															"value": "195"
														},
														{
															"begin": 431,
															"end": 436,
															"name": "JUMPI"
														},
														{
															"begin": 431,
															"end": 436,
															"name": "INVALID"
														},
														{
															"begin": 431,
															"end": 436,
															"name": "tag",
															"value": "195"
														},
														{
															"begin": 431,
															"end": 436,
															"name": "JUMPDEST"
														},
														{
															"begin": 431,
															"end": 436,
															"name": "DIV"
														},
														{
															"begin": 419,
															"end": 436,
															"name": "SWAP1"
														},
														{
															"begin": 419,
															"end": 436,
															"name": "POP"
														},
														{
															"begin": 454,
															"end": 455,
															"name": "DUP1"
														},
														{
															"begin": 447,
															"end": 455,
															"name": "SWAP2"
														},
														{
															"begin": 447,
															"end": 455,
															"name": "POP"
														},
														{
															"begin": 270,
															"end": 463,
															"name": "POP"
														},
														{
															"begin": 270,
															"end": 463,
															"name": "SWAP3"
														},
														{
															"begin": 270,
															"end": 463,
															"name": "SWAP2"
														},
														{
															"begin": 270,
															"end": 463,
															"name": "POP"
														},
														{
															"begin": 270,
															"end": 463,
															"name": "POP"
														},
														{
															"begin": 270,
															"end": 463,
															"name": "JUMP",
															"value": "[out]"
														}
													]
												}
											}
										}
									}
								}
							}
						},
						"methodIdentifiers": {
							"applyForCredit(uint256,uint256,uint256,bytes32)": "ebb5d8ed",
							"changeCreditState(address)": "59658c48",
							"changeCreditState(address,uint8)": "fa838e54",
							"credits(uint256)": "036a1c22",
							"destroy()": "83197ef0",
							"destroyAndSend(address)": "f5074f41",
							"getCredits()": "823a71af",
							"getUserCredits()": "2092cb33",
							"owner()": "8da5cb5b",
							"setFraudStatus(address)": "bb9e4247",
							"users(address)": "a87430ba"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.18+commit.9cf6e910\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"credits\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getUserCredits\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_credit\",\"type\":\"address\"}],\"name\":\"changeCreditState\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCredits\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"destroy\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"users\",\"outputs\":[{\"name\":\"credited\",\"type\":\"bool\"},{\"name\":\"activeCredit\",\"type\":\"address\"},{\"name\":\"fraudStatus\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_borrower\",\"type\":\"address\"}],\"name\":\"setFraudStatus\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"requestedAmount\",\"type\":\"uint256\"},{\"name\":\"repaymentsCount\",\"type\":\"uint256\"},{\"name\":\"interest\",\"type\":\"uint256\"},{\"name\":\"creditDescription\",\"type\":\"bytes32\"}],\"name\":\"applyForCredit\",\"outputs\":[{\"name\":\"_credit\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_recipient\",\"type\":\"address\"}],\"name\":\"destroyAndSend\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_credit\",\"type\":\"address\"},{\"name\":\"state\",\"type\":\"uint8\"}],\"name\":\"changeCreditState\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_borrower\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"LogCreditCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"state\",\"type\":\"uint8\"},{\"indexed\":true,\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"LogCreditStateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"active\",\"type\":\"bool\"},{\"indexed\":true,\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"LogCreditActiveChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"fraudStatus\",\"type\":\"bool\"},{\"indexed\":false,\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"LogUserSetFraud\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_currentOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"LogOwnershipTransfered\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"smart-contracts/contracts/PeerToPeerLending.sol\":\"PeerToPeerLending\"},\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"smart-contracts/contracts/Credit.sol\":{\"keccak256\":\"0xc55e74cf7d1e2bedba7aa9b31e4ceaf373e02a87ba927117ed717270463fa49b\",\"urls\":[\"bzzr://40590874c4b8a0c87b6d75548cc5f2e6f7a38798d4f994f03f93da39cac19d31\"]},\"smart-contracts/contracts/PeerToPeerLending.sol\":{\"keccak256\":\"0xf964bab57e6201be9cff1fff3275594205d6eb443f8cfe73602a30befbc43b97\",\"urls\":[\"bzzr://c1d6be7dbad3b599bf481b445eade0f92411c0e98e8cddba00a46e3e5c7e0f79\"]},\"smart-contracts/contracts/common/Destructible.sol\":{\"keccak256\":\"0x6bca3c39c4d48228e82a513b1647f6f0a64b18c9b3c6e16fe3413711656eda7d\",\"urls\":[\"bzzr://42ca9998600eeb5d9e5266df144db191509b03b58dd43fafbf03ec60f1a522a8\"]},\"smart-contracts/contracts/common/Ownable.sol\":{\"keccak256\":\"0xfffa53788eb7e34abd06c6b9b0b6346eb7069a7bd88a69e0ad1ebc9cca2e2919\",\"urls\":[\"bzzr://dea0861e0acf65dd49668bb6c94911b884f475e785b2ee9fa15d5de12627bc3a\"]},\"smart-contracts/contracts/common/SafeMath.sol\":{\"keccak256\":\"0x583337e75e9e16e04f784c01d4509cc8f7b36025b34e20cddc644dba8f39a7c2\",\"urls\":[\"bzzr://9ac10c82bfac80571ebaf5679b607b105ea7529035f07757e8595ba38191c548\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"smart-contracts/contracts/common/Destructible.sol": {
				"Destructible": {
					"abi": [
						{
							"constant": false,
							"inputs": [],
							"name": "destroy",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_recipient",
									"type": "address"
								}
							],
							"name": "destroyAndSend",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"payable": true,
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "_currentOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "_newOwner",
									"type": "address"
								}
							],
							"name": "LogOwnershipTransfered",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"smart-contracts/contracts/common/Destructible.sol\":55:344  contract Destructible is Ownable {\r... */\n  mstore(0x40, 0x60)\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"smart-contracts/contracts/common/Destructible.sol\":55:344  contract Destructible is Ownable {\r... */\n      mstore(0x40, 0x60)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x83197ef0\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xf5074f41\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"smart-contracts/contracts/common/Destructible.sol\":151:225  function destroy() public onlyOwner {\r... */\n    tag_2:\n      jumpi(tag_5, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_5:\n      tag_6\n      jump(tag_7)\n    tag_6:\n      stop\n        /* \"smart-contracts/contracts/common/Ownable.sol\":54:74  address public owner */\n    tag_3:\n      jumpi(tag_8, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_8:\n      tag_9\n      jump(tag_10)\n    tag_9:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"smart-contracts/contracts/common/Destructible.sol\":237:341  function destroyAndSend(address _recipient) public onlyOwner {\r... */\n    tag_4:\n      jumpi(tag_11, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_11:\n      tag_12\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_13)\n    tag_12:\n      stop\n        /* \"smart-contracts/contracts/common/Destructible.sol\":151:225  function destroy() public onlyOwner {\r... */\n    tag_7:\n        /* \"smart-contracts/contracts/common/Ownable.sol\":232:237  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"smart-contracts/contracts/common/Ownable.sol\":218:237  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"smart-contracts/contracts/common/Ownable.sol\":218:228  msg.sender */\n      caller\n        /* \"smart-contracts/contracts/common/Ownable.sol\":218:237  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"smart-contracts/contracts/common/Ownable.sol\":210:238  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_15\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_15:\n        /* \"smart-contracts/contracts/common/Destructible.sol\":211:216  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"smart-contracts/contracts/common/Destructible.sol\":198:217  selfdestruct(owner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      selfdestruct\n        /* \"smart-contracts/contracts/common/Ownable.sol\":54:74  address public owner */\n    tag_10:\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"smart-contracts/contracts/common/Destructible.sol\":237:341  function destroyAndSend(address _recipient) public onlyOwner {\r... */\n    tag_13:\n        /* \"smart-contracts/contracts/common/Ownable.sol\":232:237  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"smart-contracts/contracts/common/Ownable.sol\":218:237  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"smart-contracts/contracts/common/Ownable.sol\":218:228  msg.sender */\n      caller\n        /* \"smart-contracts/contracts/common/Ownable.sol\":218:237  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"smart-contracts/contracts/common/Ownable.sol\":210:238  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_18\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_18:\n        /* \"smart-contracts/contracts/common/Destructible.sol\":322:332  _recipient */\n      dup1\n        /* \"smart-contracts/contracts/common/Destructible.sol\":309:333  selfdestruct(_recipient) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      selfdestruct\n\n    auxdata: 0xa165627a7a723058209b306ccf0690861a9c063f349f16157fd341b9ddde5b2e86be99cf943c20f8e70029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6060604052610259806100136000396000f300606060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806383197ef01461005c5780638da5cb5b14610071578063f5074f41146100c6575b600080fd5b341561006757600080fd5b61006f6100ff565b005b341561007c57600080fd5b610084610194565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156100d157600080fd5b6100fd600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506101b9565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561015a57600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561021457600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16ff00a165627a7a723058209b306ccf0690861a9c063f349f16157fd341b9ddde5b2e86be99cf943c20f8e70029",
							"opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE PUSH2 0x259 DUP1 PUSH2 0x13 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x83197EF0 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x71 JUMPI DUP1 PUSH4 0xF5074F41 EQ PUSH2 0xC6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0x67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F PUSH2 0xFF JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x84 PUSH2 0x194 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0xD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFD PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1B9 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x15A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x214 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 SWAP12 ADDRESS PUSH13 0xCF0690861A9C063F349F16157F 0xd3 COINBASE 0xb9 0xdd 0xde JUMPDEST 0x2e DUP7 0xbe SWAP10 0xcf SWAP5 EXTCODECOPY KECCAK256 0xf8 0xe7 STOP 0x29 ",
							"sourceMap": "55:289:2:-;;;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "606060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806383197ef01461005c5780638da5cb5b14610071578063f5074f41146100c6575b600080fd5b341561006757600080fd5b61006f6100ff565b005b341561007c57600080fd5b610084610194565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156100d157600080fd5b6100fd600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506101b9565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561015a57600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561021457600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16ff00a165627a7a723058209b306ccf0690861a9c063f349f16157fd341b9ddde5b2e86be99cf943c20f8e70029",
							"opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x83197EF0 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x71 JUMPI DUP1 PUSH4 0xF5074F41 EQ PUSH2 0xC6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0x67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F PUSH2 0xFF JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x84 PUSH2 0x194 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0xD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFD PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1B9 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x15A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x214 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 SWAP12 ADDRESS PUSH13 0xCF0690861A9C063F349F16157F 0xd3 COINBASE 0xb9 0xdd 0xde JUMPDEST 0x2e DUP7 0xbe SWAP10 0xcf SWAP5 EXTCODECOPY KECCAK256 0xf8 0xe7 STOP 0x29 ",
							"sourceMap": "55:289:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;151:74;;;;;;;;;;;;;;54:20:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;237:104:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;151:74;232:5:3;;;;;;;;;;;218:19;;:10;:19;;;210:28;;;;;;;;211:5:2;;;;;;;;;;;198:19;;;54:20:3;;;;;;;;;;;;;:::o;237:104:2:-;232:5:3;;;;;;;;;;;218:19;;:10;:19;;;210:28;;;;;;;;322:10:2;309:24;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "120200",
								"executionCost": "141",
								"totalCost": "120341"
							},
							"external": {
								"destroy()": "30640",
								"destroyAndSend(address)": "30488",
								"owner()": "456"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 55,
									"end": 344,
									"name": "PUSH",
									"value": "60"
								},
								{
									"begin": 55,
									"end": 344,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 55,
									"end": 344,
									"name": "MSTORE"
								},
								{
									"begin": 55,
									"end": 344,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 55,
									"end": 344,
									"name": "DUP1"
								},
								{
									"begin": 55,
									"end": 344,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 55,
									"end": 344,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 55,
									"end": 344,
									"name": "CODECOPY"
								},
								{
									"begin": 55,
									"end": 344,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 55,
									"end": 344,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a723058209b306ccf0690861a9c063f349f16157fd341b9ddde5b2e86be99cf943c20f8e70029",
									".code": [
										{
											"begin": 55,
											"end": 344,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 55,
											"end": 344,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 55,
											"end": 344,
											"name": "MSTORE"
										},
										{
											"begin": 55,
											"end": 344,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 55,
											"end": 344,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 55,
											"end": 344,
											"name": "LT"
										},
										{
											"begin": 55,
											"end": 344,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 55,
											"end": 344,
											"name": "JUMPI"
										},
										{
											"begin": 55,
											"end": 344,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 55,
											"end": 344,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 55,
											"end": 344,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 55,
											"end": 344,
											"name": "SWAP1"
										},
										{
											"begin": 55,
											"end": 344,
											"name": "DIV"
										},
										{
											"begin": 55,
											"end": 344,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 55,
											"end": 344,
											"name": "AND"
										},
										{
											"begin": 55,
											"end": 344,
											"name": "DUP1"
										},
										{
											"begin": 55,
											"end": 344,
											"name": "PUSH",
											"value": "83197EF0"
										},
										{
											"begin": 55,
											"end": 344,
											"name": "EQ"
										},
										{
											"begin": 55,
											"end": 344,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 55,
											"end": 344,
											"name": "JUMPI"
										},
										{
											"begin": 55,
											"end": 344,
											"name": "DUP1"
										},
										{
											"begin": 55,
											"end": 344,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 55,
											"end": 344,
											"name": "EQ"
										},
										{
											"begin": 55,
											"end": 344,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 55,
											"end": 344,
											"name": "JUMPI"
										},
										{
											"begin": 55,
											"end": 344,
											"name": "DUP1"
										},
										{
											"begin": 55,
											"end": 344,
											"name": "PUSH",
											"value": "F5074F41"
										},
										{
											"begin": 55,
											"end": 344,
											"name": "EQ"
										},
										{
											"begin": 55,
											"end": 344,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 55,
											"end": 344,
											"name": "JUMPI"
										},
										{
											"begin": 55,
											"end": 344,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 55,
											"end": 344,
											"name": "JUMPDEST"
										},
										{
											"begin": 55,
											"end": 344,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 55,
											"end": 344,
											"name": "DUP1"
										},
										{
											"begin": 55,
											"end": 344,
											"name": "REVERT"
										},
										{
											"begin": 151,
											"end": 225,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 151,
											"end": 225,
											"name": "JUMPDEST"
										},
										{
											"begin": 151,
											"end": 225,
											"name": "CALLVALUE"
										},
										{
											"begin": 151,
											"end": 225,
											"name": "ISZERO"
										},
										{
											"begin": 151,
											"end": 225,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 151,
											"end": 225,
											"name": "JUMPI"
										},
										{
											"begin": 151,
											"end": 225,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 151,
											"end": 225,
											"name": "DUP1"
										},
										{
											"begin": 151,
											"end": 225,
											"name": "REVERT"
										},
										{
											"begin": 151,
											"end": 225,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 151,
											"end": 225,
											"name": "JUMPDEST"
										},
										{
											"begin": 151,
											"end": 225,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 151,
											"end": 225,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 151,
											"end": 225,
											"name": "JUMP"
										},
										{
											"begin": 151,
											"end": 225,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 151,
											"end": 225,
											"name": "JUMPDEST"
										},
										{
											"begin": 151,
											"end": 225,
											"name": "STOP"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "JUMPDEST"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "CALLVALUE"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "ISZERO"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "JUMPI"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "DUP1"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "REVERT"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "JUMPDEST"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "JUMP"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "JUMPDEST"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "MLOAD"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "DUP1"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "DUP3"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "AND"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "AND"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "DUP2"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "MSTORE"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "ADD"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "SWAP2"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "POP"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "POP"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "MLOAD"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "DUP1"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "SWAP2"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "SUB"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "SWAP1"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "RETURN"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "JUMPDEST"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "CALLVALUE"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "ISZERO"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "JUMPI"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "DUP1"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "REVERT"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "JUMPDEST"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "DUP1"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "DUP1"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "AND"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "SWAP1"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "ADD"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "SWAP1"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "SWAP2"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "SWAP1"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "POP"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "POP"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "JUMP"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "JUMPDEST"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "STOP"
										},
										{
											"begin": 151,
											"end": 225,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 151,
											"end": 225,
											"name": "JUMPDEST"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "DUP1"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "SWAP1"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "SLOAD"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "SWAP1"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "EXP"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "SWAP1"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "DIV"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "AND"
										},
										{
											"begin": 218,
											"end": 237,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 218,
											"end": 237,
											"name": "AND"
										},
										{
											"begin": 218,
											"end": 228,
											"name": "CALLER"
										},
										{
											"begin": 218,
											"end": 237,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 218,
											"end": 237,
											"name": "AND"
										},
										{
											"begin": 218,
											"end": 237,
											"name": "EQ"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "ISZERO"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "ISZERO"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "JUMPI"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "DUP1"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "REVERT"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "JUMPDEST"
										},
										{
											"begin": 211,
											"end": 216,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 211,
											"end": 216,
											"name": "DUP1"
										},
										{
											"begin": 211,
											"end": 216,
											"name": "SWAP1"
										},
										{
											"begin": 211,
											"end": 216,
											"name": "SLOAD"
										},
										{
											"begin": 211,
											"end": 216,
											"name": "SWAP1"
										},
										{
											"begin": 211,
											"end": 216,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 211,
											"end": 216,
											"name": "EXP"
										},
										{
											"begin": 211,
											"end": 216,
											"name": "SWAP1"
										},
										{
											"begin": 211,
											"end": 216,
											"name": "DIV"
										},
										{
											"begin": 211,
											"end": 216,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 211,
											"end": 216,
											"name": "AND"
										},
										{
											"begin": 198,
											"end": 217,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 198,
											"end": 217,
											"name": "AND"
										},
										{
											"begin": 198,
											"end": 217,
											"name": "SELFDESTRUCT"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "JUMPDEST"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "DUP1"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "SWAP1"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "SLOAD"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "SWAP1"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "EXP"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "SWAP1"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "DIV"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "AND"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "DUP2"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "JUMPDEST"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "DUP1"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "SWAP1"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "SLOAD"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "SWAP1"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "EXP"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "SWAP1"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "DIV"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "AND"
										},
										{
											"begin": 218,
											"end": 237,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 218,
											"end": 237,
											"name": "AND"
										},
										{
											"begin": 218,
											"end": 228,
											"name": "CALLER"
										},
										{
											"begin": 218,
											"end": 237,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 218,
											"end": 237,
											"name": "AND"
										},
										{
											"begin": 218,
											"end": 237,
											"name": "EQ"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "ISZERO"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "ISZERO"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "JUMPI"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "DUP1"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "REVERT"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "JUMPDEST"
										},
										{
											"begin": 322,
											"end": 332,
											"name": "DUP1"
										},
										{
											"begin": 309,
											"end": 333,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 309,
											"end": 333,
											"name": "AND"
										},
										{
											"begin": 309,
											"end": 333,
											"name": "SELFDESTRUCT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"destroy()": "83197ef0",
							"destroyAndSend(address)": "f5074f41",
							"owner()": "8da5cb5b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.18+commit.9cf6e910\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[],\"name\":\"destroy\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_recipient\",\"type\":\"address\"}],\"name\":\"destroyAndSend\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_currentOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"LogOwnershipTransfered\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"smart-contracts/contracts/common/Destructible.sol\":\"Destructible\"},\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"smart-contracts/contracts/common/Destructible.sol\":{\"keccak256\":\"0x6bca3c39c4d48228e82a513b1647f6f0a64b18c9b3c6e16fe3413711656eda7d\",\"urls\":[\"bzzr://42ca9998600eeb5d9e5266df144db191509b03b58dd43fafbf03ec60f1a522a8\"]},\"smart-contracts/contracts/common/Ownable.sol\":{\"keccak256\":\"0xfffa53788eb7e34abd06c6b9b0b6346eb7069a7bd88a69e0ad1ebc9cca2e2919\",\"urls\":[\"bzzr://dea0861e0acf65dd49668bb6c94911b884f475e785b2ee9fa15d5de12627bc3a\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"smart-contracts/contracts/common/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "_currentOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "_newOwner",
									"type": "address"
								}
							],
							"name": "LogOwnershipTransfered",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"smart-contracts/contracts/common/Ownable.sol\":30:535  contract Ownable {\r... */\n  mstore(0x40, 0x60)\n  jumpi(tag_1, iszero(callvalue))\n  0x0\n  dup1\n  revert\ntag_1:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"smart-contracts/contracts/common/Ownable.sol\":30:535  contract Ownable {\r... */\n      mstore(0x40, 0x60)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x8da5cb5b\n      eq\n      tag_2\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"smart-contracts/contracts/common/Ownable.sol\":54:74  address public owner */\n    tag_2:\n      jumpi(tag_3, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_3:\n      tag_4\n      jump(tag_5)\n    tag_4:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_5:\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n\n    auxdata: 0xa165627a7a72305820db6d904709b365fb36fbbc4606bc5b661d7bdfe574aa0b58cdb051e0294a1b3f0029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6060604052341561000f57600080fd5b60e78061001d6000396000f300606060405260043610603f576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680638da5cb5b146044575b600080fd5b3415604e57600080fd5b60546096565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16815600a165627a7a72305820db6d904709b365fb36fbbc4606bc5b661d7bdfe574aa0b58cdb051e0294a1b3f0029",
							"opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE CALLVALUE ISZERO PUSH2 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xE7 DUP1 PUSH2 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x3F JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x8DA5CB5B EQ PUSH1 0x44 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH1 0x4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x54 PUSH1 0x96 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xdb PUSH14 0x904709B365FB36FBBC4606BC5B66 0x1d PUSH28 0xDFE574AA0B58CDB051E0294A1B3F0029000000000000000000000000 ",
							"sourceMap": "30:505:3:-;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "606060405260043610603f576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680638da5cb5b146044575b600080fd5b3415604e57600080fd5b60546096565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16815600a165627a7a72305820db6d904709b365fb36fbbc4606bc5b661d7bdfe574aa0b58cdb051e0294a1b3f0029",
							"opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x3F JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x8DA5CB5B EQ PUSH1 0x44 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH1 0x4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x54 PUSH1 0x96 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xdb PUSH14 0x904709B365FB36FBBC4606BC5B66 0x1d PUSH28 0xDFE574AA0B58CDB051E0294A1B3F0029000000000000000000000000 ",
							"sourceMap": "30:505:3:-;;;;;;;;;;;;;;;;;;;;;;;;54:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "46200",
								"executionCost": "94",
								"totalCost": "46294"
							},
							"external": {
								"owner()": "434"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 30,
									"end": 535,
									"name": "PUSH",
									"value": "60"
								},
								{
									"begin": 30,
									"end": 535,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 30,
									"end": 535,
									"name": "MSTORE"
								},
								{
									"begin": 30,
									"end": 535,
									"name": "CALLVALUE"
								},
								{
									"begin": 30,
									"end": 535,
									"name": "ISZERO"
								},
								{
									"begin": 30,
									"end": 535,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 30,
									"end": 535,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 535,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 30,
									"end": 535,
									"name": "DUP1"
								},
								{
									"begin": 30,
									"end": 535,
									"name": "REVERT"
								},
								{
									"begin": 30,
									"end": 535,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 30,
									"end": 535,
									"name": "JUMPDEST"
								},
								{
									"begin": 30,
									"end": 535,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 30,
									"end": 535,
									"name": "DUP1"
								},
								{
									"begin": 30,
									"end": 535,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 30,
									"end": 535,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 30,
									"end": 535,
									"name": "CODECOPY"
								},
								{
									"begin": 30,
									"end": 535,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 30,
									"end": 535,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a72305820db6d904709b365fb36fbbc4606bc5b661d7bdfe574aa0b58cdb051e0294a1b3f0029",
									".code": [
										{
											"begin": 30,
											"end": 535,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 30,
											"end": 535,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 30,
											"end": 535,
											"name": "MSTORE"
										},
										{
											"begin": 30,
											"end": 535,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 30,
											"end": 535,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 30,
											"end": 535,
											"name": "LT"
										},
										{
											"begin": 30,
											"end": 535,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 30,
											"end": 535,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 535,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 30,
											"end": 535,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 30,
											"end": 535,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 30,
											"end": 535,
											"name": "SWAP1"
										},
										{
											"begin": 30,
											"end": 535,
											"name": "DIV"
										},
										{
											"begin": 30,
											"end": 535,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 30,
											"end": 535,
											"name": "AND"
										},
										{
											"begin": 30,
											"end": 535,
											"name": "DUP1"
										},
										{
											"begin": 30,
											"end": 535,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 30,
											"end": 535,
											"name": "EQ"
										},
										{
											"begin": 30,
											"end": 535,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 30,
											"end": 535,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 535,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 30,
											"end": 535,
											"name": "JUMPDEST"
										},
										{
											"begin": 30,
											"end": 535,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 30,
											"end": 535,
											"name": "DUP1"
										},
										{
											"begin": 30,
											"end": 535,
											"name": "REVERT"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "JUMPDEST"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "CALLVALUE"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "ISZERO"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "JUMPI"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "DUP1"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "REVERT"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "JUMPDEST"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "JUMP"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "JUMPDEST"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "MLOAD"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "DUP1"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "DUP3"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "AND"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "AND"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "DUP2"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "MSTORE"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "ADD"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "SWAP2"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "POP"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "POP"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "MLOAD"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "DUP1"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "SWAP2"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "SUB"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "SWAP1"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "RETURN"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "JUMPDEST"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "DUP1"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "SWAP1"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "SLOAD"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "SWAP1"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "EXP"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "SWAP1"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "DIV"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "AND"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "DUP2"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"owner()": "8da5cb5b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.18+commit.9cf6e910\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_currentOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"LogOwnershipTransfered\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"smart-contracts/contracts/common/Ownable.sol\":\"Ownable\"},\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"smart-contracts/contracts/common/Ownable.sol\":{\"keccak256\":\"0xfffa53788eb7e34abd06c6b9b0b6346eb7069a7bd88a69e0ad1ebc9cca2e2919\",\"urls\":[\"bzzr://dea0861e0acf65dd49668bb6c94911b884f475e785b2ee9fa15d5de12627bc3a\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"smart-contracts/contracts/common/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"smart-contracts/contracts/common/SafeMath.sol\":30:772  library SafeMath {\r... */\n  mstore(0x40, 0x60)\n  jumpi(tag_1, iszero(callvalue))\n  0x0\n  dup1\n  revert\ntag_1:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"smart-contracts/contracts/common/SafeMath.sol\":30:772  library SafeMath {\r... */\n      mstore(0x40, 0x60)\n      0x0\n      dup1\n      revert\n\n    auxdata: 0xa165627a7a7230582053eb3d720bdf5e6fcad1140f5fe8bf4e3fcaee3657a75da8189f660ecc0c6d3d0029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60606040523415600e57600080fd5b603580601b6000396000f3006060604052600080fd00a165627a7a7230582053eb3d720bdf5e6fcad1140f5fe8bf4e3fcaee3657a75da8189f660ecc0c6d3d0029",
							"opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE CALLVALUE ISZERO PUSH1 0xE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x35 DUP1 PUSH1 0x1B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 MSTORE8 0xeb RETURNDATASIZE PUSH19 0xBDF5E6FCAD1140F5FE8BF4E3FCAEE3657A75D 0xa8 XOR SWAP16 PUSH7 0xECC0C6D3D0029 ",
							"sourceMap": "30:742:4:-;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6060604052600080fd00a165627a7a7230582053eb3d720bdf5e6fcad1140f5fe8bf4e3fcaee3657a75da8189f660ecc0c6d3d0029",
							"opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 MSTORE8 0xeb RETURNDATASIZE PUSH19 0xBDF5E6FCAD1140F5FE8BF4E3FCAEE3657A75D 0xa8 XOR SWAP16 PUSH7 0xECC0C6D3D0029 ",
							"sourceMap": "30:742:4:-;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "10600",
								"executionCost": "61",
								"totalCost": "10661"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 30,
									"end": 772,
									"name": "PUSH",
									"value": "60"
								},
								{
									"begin": 30,
									"end": 772,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 30,
									"end": 772,
									"name": "MSTORE"
								},
								{
									"begin": 30,
									"end": 772,
									"name": "CALLVALUE"
								},
								{
									"begin": 30,
									"end": 772,
									"name": "ISZERO"
								},
								{
									"begin": 30,
									"end": 772,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 30,
									"end": 772,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 772,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 30,
									"end": 772,
									"name": "DUP1"
								},
								{
									"begin": 30,
									"end": 772,
									"name": "REVERT"
								},
								{
									"begin": 30,
									"end": 772,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 30,
									"end": 772,
									"name": "JUMPDEST"
								},
								{
									"begin": 30,
									"end": 772,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 30,
									"end": 772,
									"name": "DUP1"
								},
								{
									"begin": 30,
									"end": 772,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 30,
									"end": 772,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 30,
									"end": 772,
									"name": "CODECOPY"
								},
								{
									"begin": 30,
									"end": 772,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 30,
									"end": 772,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a7230582053eb3d720bdf5e6fcad1140f5fe8bf4e3fcaee3657a75da8189f660ecc0c6d3d0029",
									".code": [
										{
											"begin": 30,
											"end": 772,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 30,
											"end": 772,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 30,
											"end": 772,
											"name": "MSTORE"
										},
										{
											"begin": 30,
											"end": 772,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 30,
											"end": 772,
											"name": "DUP1"
										},
										{
											"begin": 30,
											"end": 772,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.18+commit.9cf6e910\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"smart-contracts/contracts/common/SafeMath.sol\":\"SafeMath\"},\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"smart-contracts/contracts/common/SafeMath.sol\":{\"keccak256\":\"0x583337e75e9e16e04f784c01d4509cc8f7b36025b34e20cddc644dba8f39a7c2\",\"urls\":[\"bzzr://9ac10c82bfac80571ebaf5679b607b105ea7529035f07757e8595ba38191c548\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"smart-contracts/contracts/Credit.sol": {
				"ast": {
					"absolutePath": "smart-contracts/contracts/Credit.sol",
					"exportedSymbols": {
						"Credit": [
							995
						]
					},
					"id": 996,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:0"
						},
						{
							"absolutePath": "smart-contracts/contracts/common/SafeMath.sol",
							"file": "./common/SafeMath.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 996,
							"sourceUnit": 1415,
							"src": "28:31:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "smart-contracts/contracts/common/Destructible.sol",
							"file": "./common/Destructible.sol",
							"id": 3,
							"nodeType": "ImportDirective",
							"scope": 996,
							"sourceUnit": 1295,
							"src": "61:35:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": [],
									"baseName": {
										"contractScope": null,
										"id": 4,
										"name": "Destructible",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1294,
										"src": "208:12:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Destructible_$1294",
											"typeString": "contract Destructible"
										}
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "208:12:0"
								}
							],
							"contractDependencies": [
								1294,
								1316
							],
							"contractKind": "contract",
							"documentation": "@title Credit contract.\r\nInherits the Ownable and Destructible contracts.\r",
							"fullyImplemented": true,
							"id": 995,
							"linearizedBaseContracts": [
								995,
								1294,
								1316
							],
							"name": "Credit",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 8,
									"libraryName": {
										"contractScope": null,
										"id": 6,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1414,
										"src": "316:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$1414",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "310:24:0",
									"typeName": {
										"id": 7,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "329:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 10,
									"name": "borrower",
									"nodeType": "VariableDeclaration",
									"scope": 995,
									"src": "441:16:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 9,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "441:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 12,
									"name": "requestedAmount",
									"nodeType": "VariableDeclaration",
									"scope": 995,
									"src": "514:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 11,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "514:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 14,
									"name": "returnAmount",
									"nodeType": "VariableDeclaration",
									"scope": 995,
									"src": "622:17:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 13,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "622:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 16,
									"name": "repaidAmount",
									"nodeType": "VariableDeclaration",
									"scope": 995,
									"src": "681:17:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 15,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "681:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 18,
									"name": "interest",
									"nodeType": "VariableDeclaration",
									"scope": 995,
									"src": "732:13:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 17,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "732:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 20,
									"name": "requestedRepayments",
									"nodeType": "VariableDeclaration",
									"scope": 995,
									"src": "806:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 19,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "806:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 22,
									"name": "remainingRepayments",
									"nodeType": "VariableDeclaration",
									"scope": 995,
									"src": "881:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 21,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "881:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 24,
									"name": "repaymentInstallment",
									"nodeType": "VariableDeclaration",
									"scope": 995,
									"src": "962:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 23,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "962:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 26,
									"name": "requestedDate",
									"nodeType": "VariableDeclaration",
									"scope": 995,
									"src": "1038:18:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 25,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1038:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 28,
									"name": "lastRepaymentDate",
									"nodeType": "VariableDeclaration",
									"scope": 995,
									"src": "1111:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 27,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1111:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 30,
									"name": "description",
									"nodeType": "VariableDeclaration",
									"scope": 995,
									"src": "1177:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 29,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1177:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 32,
									"name": "active",
									"nodeType": "VariableDeclaration",
									"scope": 995,
									"src": "1241:11:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 31,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1241:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"canonicalName": "Credit.State",
									"id": 39,
									"members": [
										{
											"id": 33,
											"name": "investment",
											"nodeType": "EnumValue",
											"src": "1709:10:0"
										},
										{
											"id": 34,
											"name": "repayment",
											"nodeType": "EnumValue",
											"src": "1721:9:0"
										},
										{
											"id": 35,
											"name": "interestReturns",
											"nodeType": "EnumValue",
											"src": "1732:15:0"
										},
										{
											"id": 36,
											"name": "expired",
											"nodeType": "EnumValue",
											"src": "1749:7:0"
										},
										{
											"id": 37,
											"name": "revoked",
											"nodeType": "EnumValue",
											"src": "1758:7:0"
										},
										{
											"id": 38,
											"name": "fraud",
											"nodeType": "EnumValue",
											"src": "1767:5:0"
										}
									],
									"name": "State",
									"nodeType": "EnumDefinition",
									"src": "1696:78:0"
								},
								{
									"constant": false,
									"id": 41,
									"name": "state",
									"nodeType": "VariableDeclaration",
									"scope": 995,
									"src": "1780:11:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_enum$_State_$39",
										"typeString": "enum Credit.State"
									},
									"typeName": {
										"contractScope": null,
										"id": 40,
										"name": "State",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 39,
										"src": "1780:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_State_$39",
											"typeString": "enum Credit.State"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 45,
									"name": "lenders",
									"nodeType": "VariableDeclaration",
									"scope": 995,
									"src": "1845:39:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 44,
										"keyType": {
											"id": 42,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1853:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1845:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 43,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "1864:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 49,
									"name": "lendersInvestedAmount",
									"nodeType": "VariableDeclaration",
									"scope": 995,
									"src": "1945:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 48,
										"keyType": {
											"id": 46,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1953:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1945:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 47,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "1964:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 51,
									"name": "lendersCount",
									"nodeType": "VariableDeclaration",
									"scope": 995,
									"src": "2063:17:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 50,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "2063:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 53,
									"name": "revokeVotes",
									"nodeType": "VariableDeclaration",
									"scope": 995,
									"src": "2117:16:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 52,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "2117:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 57,
									"name": "revokeVoters",
									"nodeType": "VariableDeclaration",
									"scope": 995,
									"src": "2165:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 56,
										"keyType": {
											"id": 54,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2173:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2165:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 55,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "2184:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 59,
									"name": "revokeTimeNeeded",
									"nodeType": "VariableDeclaration",
									"scope": 995,
									"src": "2310:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 58,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "2310:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 61,
									"name": "fraudVotes",
									"nodeType": "VariableDeclaration",
									"scope": 995,
									"src": "2368:15:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 60,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "2368:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 65,
									"name": "fraudVoters",
									"nodeType": "VariableDeclaration",
									"scope": 995,
									"src": "2415:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 64,
										"keyType": {
											"id": 62,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2423:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2415:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 63,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "2434:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"id": 71,
									"name": "LogCreditInitialized",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"indexed": true,
												"name": "_address",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "2525:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2525:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"indexed": true,
												"name": "timestamp",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "2551:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 68,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2551:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2524:50:0"
									},
									"src": "2498:77:0"
								},
								{
									"anonymous": false,
									"id": 77,
									"name": "LogCreditStateChanged",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"indexed": true,
												"name": "state",
												"nodeType": "VariableDeclaration",
												"scope": 77,
												"src": "2609:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_State_$39",
													"typeString": "enum Credit.State"
												},
												"typeName": {
													"contractScope": null,
													"id": 72,
													"name": "State",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 39,
													"src": "2609:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_State_$39",
														"typeString": "enum Credit.State"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"indexed": true,
												"name": "timestamp",
												"nodeType": "VariableDeclaration",
												"scope": 77,
												"src": "2630:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 74,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2630:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2608:45:0"
									},
									"src": "2581:73:0"
								},
								{
									"anonymous": false,
									"id": 83,
									"name": "LogCreditStateActiveChanged",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"indexed": true,
												"name": "active",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "2694:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 78,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2694:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 81,
												"indexed": true,
												"name": "timestamp",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "2715:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 80,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2715:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2693:45:0"
									},
									"src": "2660:79:0"
								},
								{
									"anonymous": false,
									"id": 91,
									"name": "LogBorrowerWithdrawal",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"indexed": true,
												"name": "_address",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2775:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2775:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 87,
												"indexed": true,
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2801:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 86,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2801:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"indexed": true,
												"name": "timestamp",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2823:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 88,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2823:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2774:72:0"
									},
									"src": "2747:100:0"
								},
								{
									"anonymous": false,
									"id": 99,
									"name": "LogBorrowerRepaymentInstallment",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"indexed": true,
												"name": "_address",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "2891:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2891:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"indexed": true,
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "2917:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2917:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"indexed": true,
												"name": "timestamp",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "2939:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2939:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2890:72:0"
									},
									"src": "2853:110:0"
								},
								{
									"anonymous": false,
									"id": 105,
									"name": "LogBorrowerRepaymentFinished",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"indexed": true,
												"name": "_address",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "3004:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3004:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 103,
												"indexed": true,
												"name": "timestamp",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "3030:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 102,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3030:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3003:50:0"
									},
									"src": "2969:85:0"
								},
								{
									"anonymous": false,
									"id": 113,
									"name": "LogBorrowerChangeReturned",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"indexed": true,
												"name": "_address",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "3092:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3092:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"indexed": true,
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "3118:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 108,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3118:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 111,
												"indexed": true,
												"name": "timestamp",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "3140:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 110,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3140:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3091:72:0"
									},
									"src": "3060:104:0"
								},
								{
									"anonymous": false,
									"id": 121,
									"name": "LogBorrowerIsFraud",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"indexed": true,
												"name": "_address",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "3195:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3195:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"indexed": true,
												"name": "fraudStatus",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "3221:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 116,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3221:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 119,
												"indexed": true,
												"name": "timestamp",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "3247:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 118,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3247:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3194:76:0"
									},
									"src": "3170:101:0"
								},
								{
									"anonymous": false,
									"id": 129,
									"name": "LogLenderInvestment",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"indexed": true,
												"name": "_address",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "3305:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3305:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 125,
												"indexed": true,
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "3331:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 124,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3331:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 127,
												"indexed": true,
												"name": "timestamp",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "3353:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 126,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3353:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3304:72:0"
									},
									"src": "3279:98:0"
								},
								{
									"anonymous": false,
									"id": 137,
									"name": "LogLenderWithdrawal",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"indexed": true,
												"name": "_address",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "3409:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 130,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3409:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"indexed": true,
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "3435:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3435:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 135,
												"indexed": true,
												"name": "timestamp",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "3457:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3457:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3408:72:0"
									},
									"src": "3383:98:0"
								},
								{
									"anonymous": false,
									"id": 145,
									"name": "LogLenderChangeReturned",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"indexed": true,
												"name": "_address",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "3517:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3517:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 141,
												"indexed": true,
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "3543:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 140,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3543:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 143,
												"indexed": true,
												"name": "timestamp",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "3565:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 142,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3565:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3516:72:0"
									},
									"src": "3487:102:0"
								},
								{
									"anonymous": false,
									"id": 151,
									"name": "LogLenderVoteForRevoking",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"indexed": true,
												"name": "_address",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "3626:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3626:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 149,
												"indexed": true,
												"name": "timestamp",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "3652:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 148,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3652:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3625:50:0"
									},
									"src": "3595:81:0"
								},
								{
									"anonymous": false,
									"id": 157,
									"name": "LogLenderVoteForFraud",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"indexed": true,
												"name": "_address",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "3710:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3710:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"indexed": true,
												"name": "timestamp",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "3736:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3736:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3709:50:0"
									},
									"src": "3682:78:0"
								},
								{
									"anonymous": false,
									"id": 165,
									"name": "LogLenderRefunded",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"indexed": true,
												"name": "_address",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "3790:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3790:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 161,
												"indexed": true,
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "3816:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 160,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3816:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"indexed": true,
												"name": "timestamp",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "3838:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3838:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3789:72:0"
									},
									"src": "3766:96:0"
								},
								{
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "3929:54:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 170,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 168,
																"name": "active",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 32,
																"src": "3948:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "74727565",
																"id": 169,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3958:4:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "3948:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 167,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1429,
														"src": "3940:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3940:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 172,
												"nodeType": "ExpressionStatement",
												"src": "3940:23:0"
											},
											{
												"id": 173,
												"nodeType": "PlaceholderStatement",
												"src": "3974:1:0"
											}
										]
									},
									"id": 175,
									"name": "isActive",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3926:2:0"
									},
									"src": "3909:74:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 185,
										"nodeType": "Block",
										"src": "4015:62:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 181,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 178,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1426,
																	"src": "4034:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "4034:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 180,
																"name": "borrower",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "4048:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4034:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 177,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1429,
														"src": "4026:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4026:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 183,
												"nodeType": "ExpressionStatement",
												"src": "4026:31:0"
											},
											{
												"id": 184,
												"nodeType": "PlaceholderStatement",
												"src": "4068:1:0"
											}
										]
									},
									"id": 186,
									"name": "onlyBorrower",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4012:2:0"
									},
									"src": "3991:86:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 198,
										"nodeType": "Block",
										"src": "4107:67:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 189,
																	"name": "lenders",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 45,
																	"src": "4126:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 192,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 190,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1426,
																		"src": "4134:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 191,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "4134:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4126:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "74727565",
																"id": 193,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4149:4:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "4126:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 188,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1429,
														"src": "4118:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4118:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 196,
												"nodeType": "ExpressionStatement",
												"src": "4118:36:0"
											},
											{
												"id": 197,
												"nodeType": "PlaceholderStatement",
												"src": "4165:1:0"
											}
										]
									},
									"id": 199,
									"name": "onlyLender",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4104:2:0"
									},
									"src": "4085:89:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 218,
										"nodeType": "Block",
										"src": "4211:127:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_enum$_State_$39",
																"typeString": "enum Credit.State"
															},
															"id": 205,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 202,
																"name": "state",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 41,
																"src": "4230:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_State_$39",
																	"typeString": "enum Credit.State"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 203,
																	"name": "State",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 39,
																	"src": "4239:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_State_$39_$",
																		"typeString": "type(enum Credit.State)"
																	}
																},
																"id": 204,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "interestReturns",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "4239:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_State_$39",
																	"typeString": "enum Credit.State"
																}
															},
															"src": "4230:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 201,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1429,
														"src": "4222:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4222:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 207,
												"nodeType": "ExpressionStatement",
												"src": "4222:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 214,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 209,
																	"name": "lendersInvestedAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 49,
																	"src": "4280:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 212,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 210,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1426,
																		"src": "4302:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 211,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "4302:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4280:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 213,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4316:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4280:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 208,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1429,
														"src": "4272:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4272:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 216,
												"nodeType": "ExpressionStatement",
												"src": "4272:46:0"
											},
											{
												"id": 217,
												"nodeType": "PlaceholderStatement",
												"src": "4329:1:0"
											}
										]
									},
									"id": 219,
									"name": "canAskForInterest",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4208:2:0"
									},
									"src": "4182:156:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 229,
										"nodeType": "Block",
										"src": "4367:65:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_enum$_State_$39",
																"typeString": "enum Credit.State"
															},
															"id": 225,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 222,
																"name": "state",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 41,
																"src": "4386:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_State_$39",
																	"typeString": "enum Credit.State"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 223,
																	"name": "State",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 39,
																	"src": "4395:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_State_$39_$",
																		"typeString": "type(enum Credit.State)"
																	}
																},
																"id": 224,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "investment",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "4395:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_State_$39",
																	"typeString": "enum Credit.State"
																}
															},
															"src": "4386:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 221,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1429,
														"src": "4378:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4378:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 227,
												"nodeType": "ExpressionStatement",
												"src": "4378:34:0"
											},
											{
												"id": 228,
												"nodeType": "PlaceholderStatement",
												"src": "4423:1:0"
											}
										]
									},
									"id": 230,
									"name": "canInvest",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4364:2:0"
									},
									"src": "4346:86:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 240,
										"nodeType": "Block",
										"src": "4460:64:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_enum$_State_$39",
																"typeString": "enum Credit.State"
															},
															"id": 236,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 233,
																"name": "state",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 41,
																"src": "4479:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_State_$39",
																	"typeString": "enum Credit.State"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 234,
																	"name": "State",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 39,
																	"src": "4488:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_State_$39_$",
																		"typeString": "type(enum Credit.State)"
																	}
																},
																"id": 235,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "repayment",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "4488:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_State_$39",
																	"typeString": "enum Credit.State"
																}
															},
															"src": "4479:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 232,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1429,
														"src": "4471:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4471:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 238,
												"nodeType": "ExpressionStatement",
												"src": "4471:33:0"
											},
											{
												"id": 239,
												"nodeType": "PlaceholderStatement",
												"src": "4515:1:0"
											}
										]
									},
									"id": 241,
									"name": "canRepay",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4457:2:0"
									},
									"src": "4440:84:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 251,
										"nodeType": "Block",
										"src": "4555:71:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 247,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 244,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1443,
																	"src": "4574:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Credit_$995",
																		"typeString": "contract Credit"
																	}
																},
																"id": 245,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "4574:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 246,
																"name": "requestedAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 12,
																"src": "4590:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4574:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 243,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1429,
														"src": "4566:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4566:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 249,
												"nodeType": "ExpressionStatement",
												"src": "4566:40:0"
											},
											{
												"id": 250,
												"nodeType": "PlaceholderStatement",
												"src": "4617:1:0"
											}
										]
									},
									"id": 252,
									"name": "canWithdraw",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4552:2:0"
									},
									"src": "4532:94:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 262,
										"nodeType": "Block",
										"src": "4656:60:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_enum$_State_$39",
																"typeString": "enum Credit.State"
															},
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 255,
																"name": "state",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 41,
																"src": "4675:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_State_$39",
																	"typeString": "enum Credit.State"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 256,
																	"name": "State",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 39,
																	"src": "4684:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_State_$39_$",
																		"typeString": "type(enum Credit.State)"
																	}
																},
																"id": 257,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "fraud",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "4684:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_State_$39",
																	"typeString": "enum Credit.State"
																}
															},
															"src": "4675:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 254,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1429,
														"src": "4667:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4667:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 260,
												"nodeType": "ExpressionStatement",
												"src": "4667:29:0"
											},
											{
												"id": 261,
												"nodeType": "PlaceholderStatement",
												"src": "4707:1:0"
											}
										]
									},
									"id": 263,
									"name": "isNotFraud",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4653:2:0"
									},
									"src": "4634:82:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 280,
										"nodeType": "Block",
										"src": "4747:120:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 269,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 266,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1418,
																	"src": "4766:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 267,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "4766:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 268,
																"name": "revokeTimeNeeded",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 59,
																"src": "4785:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4766:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 265,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1429,
														"src": "4758:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4758:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 271,
												"nodeType": "ExpressionStatement",
												"src": "4758:44:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_enum$_State_$39",
																"typeString": "enum Credit.State"
															},
															"id": 276,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 273,
																"name": "state",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 41,
																"src": "4821:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_State_$39",
																	"typeString": "enum Credit.State"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 274,
																	"name": "State",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 39,
																	"src": "4830:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_State_$39_$",
																		"typeString": "type(enum Credit.State)"
																	}
																},
																"id": 275,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "investment",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "4830:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_State_$39",
																	"typeString": "enum Credit.State"
																}
															},
															"src": "4821:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 272,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1429,
														"src": "4813:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4813:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 278,
												"nodeType": "ExpressionStatement",
												"src": "4813:34:0"
											},
											{
												"id": 279,
												"nodeType": "PlaceholderStatement",
												"src": "4858:1:0"
											}
										]
									},
									"id": 281,
									"name": "isRevokable",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4744:2:0"
									},
									"src": "4724:143:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 291,
										"nodeType": "Block",
										"src": "4896:62:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_enum$_State_$39",
																"typeString": "enum Credit.State"
															},
															"id": 287,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 284,
																"name": "state",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 41,
																"src": "4915:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_State_$39",
																	"typeString": "enum Credit.State"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 285,
																	"name": "State",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 39,
																	"src": "4924:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_State_$39_$",
																		"typeString": "type(enum Credit.State)"
																	}
																},
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "revoked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "4924:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_State_$39",
																	"typeString": "enum Credit.State"
																}
															},
															"src": "4915:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 283,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1429,
														"src": "4907:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4907:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 289,
												"nodeType": "ExpressionStatement",
												"src": "4907:31:0"
											},
											{
												"id": 290,
												"nodeType": "PlaceholderStatement",
												"src": "4949:1:0"
											}
										]
									},
									"id": 292,
									"name": "isRevoked",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4893:2:0"
									},
									"src": "4875:83:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "5299:1428:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 303,
														"name": "borrower",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "5538:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 304,
															"name": "tx",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1436,
															"src": "5549:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_transaction",
																"typeString": "tx"
															}
														},
														"id": 305,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "origin",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "5549:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5538:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 307,
												"nodeType": "ExpressionStatement",
												"src": "5538:20:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 308,
														"name": "interest",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 18,
														"src": "5616:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 309,
														"name": "_interest",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 298,
														"src": "5627:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5616:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 311,
												"nodeType": "ExpressionStatement",
												"src": "5616:20:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 312,
														"name": "requestedAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 12,
														"src": "5687:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 313,
														"name": "_requestedAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "5705:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5687:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 315,
												"nodeType": "ExpressionStatement",
												"src": "5687:34:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 316,
														"name": "requestedRepayments",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "5776:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 317,
														"name": "_requestedRepayments",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 296,
														"src": "5798:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5776:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 319,
												"nodeType": "ExpressionStatement",
												"src": "5776:42:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 320,
														"name": "remainingRepayments",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 22,
														"src": "5954:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 321,
														"name": "_requestedRepayments",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 296,
														"src": "5976:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5954:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 323,
												"nodeType": "ExpressionStatement",
												"src": "5954:42:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 324,
														"name": "returnAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "6179:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 327,
																"name": "interest",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 18,
																"src": "6214:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 325,
																"name": "requestedAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 12,
																"src": "6194:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 326,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1413,
															"src": "6194:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 328,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6194:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6179:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "6179:44:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 331,
														"name": "repaymentInstallment",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "6396:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 334,
																"name": "requestedRepayments",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 20,
																"src": "6436:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 332,
																"name": "returnAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 14,
																"src": "6419:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 333,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1369,
															"src": "6419:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 335,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6419:37:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6396:60:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 337,
												"nodeType": "ExpressionStatement",
												"src": "6396:60:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 338,
														"name": "description",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "6509:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 339,
														"name": "_description",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 300,
														"src": "6523:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "6509:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 341,
												"nodeType": "ExpressionStatement",
												"src": "6509:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 342,
														"name": "requestedDate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "6589:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 343,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1418,
															"src": "6605:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 344,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "6605:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6589:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 346,
												"nodeType": "ExpressionStatement",
												"src": "6589:31:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 348,
															"name": "borrower",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 10,
															"src": "6693:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 349,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1418,
																"src": "6703:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 350,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "6703:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 347,
														"name": "LogCreditInitialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 71,
														"src": "6672:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6672:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 352,
												"nodeType": "ExpressionStatement",
												"src": "6672:47:0"
											}
										]
									},
									"id": 354,
									"implemented": true,
									"isConstructor": true,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "Credit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"name": "_requestedAmount",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "5204:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 293,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5204:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"name": "_requestedRepayments",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "5227:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 295,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5227:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 298,
												"name": "_interest",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "5254:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 297,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5254:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 300,
												"name": "_description",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "5270:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 299,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5270:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5203:88:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5299:0:0"
									},
									"scope": 995,
									"src": "5188:1539:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "6862:38:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 359,
														"name": "this",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1443,
														"src": "6880:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_Credit_$995",
															"typeString": "contract Credit"
														}
													},
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "6880:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 358,
												"id": 361,
												"nodeType": "Return",
												"src": "6873:19:0"
											}
										]
									},
									"id": 363,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "getBalance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6829:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "6853:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 356,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6853:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6852:9:0"
									},
									"scope": 995,
									"src": "6810:90:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 474,
										"nodeType": "Block",
										"src": "7115:1673:0",
										"statements": [
											{
												"assignments": [
													369
												],
												"declarations": [
													{
														"constant": false,
														"id": 369,
														"name": "extraMoney",
														"nodeType": "VariableDeclaration",
														"scope": 475,
														"src": "7213:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 368,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "7213:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 371,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "30",
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7231:1:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7213:19:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 372,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1443,
															"src": "7320:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Credit_$995",
																"typeString": "contract Credit"
															}
														},
														"id": 373,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "7320:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 374,
														"name": "requestedAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 12,
														"src": "7336:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7320:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 434,
												"nodeType": "IfStatement",
												"src": "7316:931:0",
												"trueBody": {
													"id": 433,
													"nodeType": "Block",
													"src": "7353:894:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 382,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 376,
																	"name": "extraMoney",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 369,
																	"src": "7437:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 380,
																			"name": "requestedAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 12,
																			"src": "7467:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 377,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1443,
																				"src": "7450:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Credit_$995",
																					"typeString": "contract Credit"
																				}
																			},
																			"id": 378,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "balance",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "7450:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 379,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1389,
																		"src": "7450:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 381,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7450:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7437:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 383,
															"nodeType": "ExpressionStatement",
															"src": "7437:46:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 391,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 385,
																			"name": "requestedAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 12,
																			"src": "7547:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 389,
																					"name": "extraMoney",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 369,
																					"src": "7583:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"expression": {
																						"argumentTypes": null,
																						"id": 386,
																						"name": "this",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1443,
																						"src": "7566:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_Credit_$995",
																							"typeString": "contract Credit"
																						}
																					},
																					"id": 387,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "balance",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": null,
																					"src": "7566:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 388,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sub",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1389,
																				"src": "7566:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 390,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7566:28:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7547:47:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 384,
																	"name": "assert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1417,
																	"src": "7540:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
																		"typeString": "function (bool) pure"
																	}
																},
																"id": 392,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7540:55:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 393,
															"nodeType": "ExpressionStatement",
															"src": "7540:55:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 398,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 395,
																			"name": "extraMoney",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 369,
																			"src": "7676:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 396,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1426,
																				"src": "7690:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 397,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "value",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "7690:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7676:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 394,
																	"name": "assert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1417,
																	"src": "7669:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
																		"typeString": "function (bool) pure"
																	}
																},
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7669:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 400,
															"nodeType": "ExpressionStatement",
															"src": "7669:31:0"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 403,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 401,
																	"name": "extraMoney",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 369,
																	"src": "7781:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7794:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7781:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 421,
															"nodeType": "IfStatement",
															"src": "7777:270:0",
															"trueBody": {
																"id": 420,
																"nodeType": "Block",
																"src": "7797:250:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 409,
																					"name": "extraMoney",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 369,
																					"src": "7894:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"expression": {
																						"argumentTypes": null,
																						"id": 404,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1426,
																						"src": "7874:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 407,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": null,
																					"src": "7874:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"id": 408,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "transfer",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "7874:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																					"typeString": "function (uint256)"
																				}
																			},
																			"id": 410,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7874:31:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 411,
																		"nodeType": "ExpressionStatement",
																		"src": "7874:31:0"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"expression": {
																						"argumentTypes": null,
																						"id": 413,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1426,
																						"src": "7991:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 414,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": null,
																					"src": "7991:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 415,
																					"name": "extraMoney",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 369,
																					"src": "8003:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"expression": {
																						"argumentTypes": null,
																						"id": 416,
																						"name": "block",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1418,
																						"src": "8015:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_block",
																							"typeString": "block"
																						}
																					},
																					"id": 417,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "timestamp",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": null,
																					"src": "8015:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 412,
																				"name": "LogLenderChangeReturned",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 145,
																				"src": "7967:23:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256)"
																				}
																			},
																			"id": 418,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7967:64:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 419,
																		"nodeType": "ExpressionStatement",
																		"src": "7967:64:0"
																	}
																]
															}
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 425,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 422,
																	"name": "state",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 41,
																	"src": "8116:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_State_$39",
																		"typeString": "enum Credit.State"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 423,
																		"name": "State",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 39,
																		"src": "8124:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_State_$39_$",
																			"typeString": "type(enum Credit.State)"
																		}
																	},
																	"id": 424,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "repayment",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "8124:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_State_$39",
																		"typeString": "enum Credit.State"
																	}
																},
																"src": "8116:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_State_$39",
																	"typeString": "enum Credit.State"
																}
															},
															"id": 426,
															"nodeType": "ExpressionStatement",
															"src": "8116:23:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 428,
																		"name": "state",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 41,
																		"src": "8212:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_State_$39",
																			"typeString": "enum Credit.State"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 429,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1418,
																			"src": "8219:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 430,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "8219:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_enum$_State_$39",
																			"typeString": "enum Credit.State"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 427,
																	"name": "LogCreditStateChanged",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 77,
																	"src": "8190:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_enum$_State_$39_$_t_uint256_$returns$__$",
																		"typeString": "function (enum Credit.State,uint256)"
																	}
																},
																"id": 431,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8190:45:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 432,
															"nodeType": "ExpressionStatement",
															"src": "8190:45:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 435,
															"name": "lenders",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "8386:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 438,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 436,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1426,
																"src": "8394:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 437,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "8394:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8386:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 439,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8408:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "8386:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 441,
												"nodeType": "ExpressionStatement",
												"src": "8386:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "8466:14:0",
													"subExpression": {
														"argumentTypes": null,
														"id": 442,
														"name": "lendersCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 51,
														"src": "8466:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 444,
												"nodeType": "ExpressionStatement",
												"src": "8466:14:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 445,
															"name": "lendersInvestedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 49,
															"src": "8552:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 448,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 446,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1426,
																"src": "8574:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 447,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "8574:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8552:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 457,
																		"name": "extraMoney",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 369,
																		"src": "8640:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 454,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1426,
																			"src": "8626:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 455,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "value",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "8626:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 456,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1389,
																	"src": "8626:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 458,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8626:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 449,
																	"name": "lendersInvestedAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 49,
																	"src": "8588:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 452,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 450,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1426,
																		"src": "8610:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 451,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "8610:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8588:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 453,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1413,
															"src": "8588:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 459,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8588:64:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8552:100:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 461,
												"nodeType": "ExpressionStatement",
												"src": "8552:100:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 463,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1426,
																"src": "8725:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 464,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "8725:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 468,
																	"name": "extraMoney",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 369,
																	"src": "8751:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 465,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1426,
																		"src": "8737:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 466,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "8737:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 467,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1389,
																"src": "8737:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 469,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8737:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 470,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1418,
																"src": "8764:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 471,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "8764:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 462,
														"name": "LogLenderInvestment",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "8705:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8705:75:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 473,
												"nodeType": "ExpressionStatement",
												"src": "8705:75:0"
											}
										]
									},
									"id": 475,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 366,
											"modifierName": {
												"argumentTypes": null,
												"id": 365,
												"name": "canInvest",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 230,
												"src": "7097:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "7097:9:0"
										}
									],
									"name": "invest",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7087:2:0"
									},
									"payable": true,
									"returnParameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7115:0:0"
									},
									"scope": 995,
									"src": "7072:1716:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 606,
										"nodeType": "Block",
										"src": "8951:2357:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 483,
																"name": "remainingRepayments",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "9045:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 484,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9067:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9045:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 482,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1429,
														"src": "9037:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9037:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 487,
												"nodeType": "ExpressionStatement",
												"src": "9037:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 489,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1426,
																	"src": "9167:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 490,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "9167:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 491,
																"name": "repaymentInstallment",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "9180:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9167:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 488,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1429,
														"src": "9159:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9159:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 494,
												"nodeType": "ExpressionStatement",
												"src": "9159:42:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 498,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 496,
																"name": "repaidAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 16,
																"src": "9406:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"id": 497,
																"name": "returnAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 14,
																"src": "9421:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9406:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 495,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1417,
														"src": "9399:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9399:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 500,
												"nodeType": "ExpressionStatement",
												"src": "9399:35:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "--",
													"prefix": false,
													"src": "9495:21:0",
													"subExpression": {
														"argumentTypes": null,
														"id": 501,
														"name": "remainingRepayments",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 22,
														"src": "9495:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 503,
												"nodeType": "ExpressionStatement",
												"src": "9495:21:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 504,
														"name": "lastRepaymentDate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 28,
														"src": "9569:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 505,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1418,
															"src": "9589:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 506,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "9589:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9569:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 508,
												"nodeType": "ExpressionStatement",
												"src": "9569:35:0"
											},
											{
												"assignments": [
													510
												],
												"declarations": [
													{
														"constant": false,
														"id": 510,
														"name": "extraMoney",
														"nodeType": "VariableDeclaration",
														"scope": 607,
														"src": "9704:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 509,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "9704:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 512,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "30",
													"id": 511,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9722:1:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9704:19:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 513,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1426,
															"src": "9931:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 514,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "9931:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"id": 515,
														"name": "repaymentInstallment",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "9943:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9931:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 559,
												"nodeType": "IfStatement",
												"src": "9927:636:0",
												"trueBody": {
													"id": 558,
													"nodeType": "Block",
													"src": "9965:598:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 523,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 517,
																	"name": "extraMoney",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 510,
																	"src": "10055:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 521,
																			"name": "repaymentInstallment",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 24,
																			"src": "10082:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 518,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1426,
																				"src": "10068:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 519,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "value",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "10068:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 520,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1389,
																		"src": "10068:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 522,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10068:35:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10055:48:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 524,
															"nodeType": "ExpressionStatement",
															"src": "10055:48:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 532,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 526,
																			"name": "repaymentInstallment",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 24,
																			"src": "10168:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 530,
																					"name": "extraMoney",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 510,
																					"src": "10206:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"expression": {
																						"argumentTypes": null,
																						"id": 527,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1426,
																						"src": "10192:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 528,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "value",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": null,
																					"src": "10192:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 529,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sub",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1389,
																				"src": "10192:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 531,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10192:25:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "10168:49:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 525,
																	"name": "assert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1417,
																	"src": "10161:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
																		"typeString": "function (bool) pure"
																	}
																},
																"id": 533,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10161:57:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 534,
															"nodeType": "ExpressionStatement",
															"src": "10161:57:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 539,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 536,
																			"name": "extraMoney",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 510,
																			"src": "10280:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 537,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1426,
																				"src": "10294:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 538,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "value",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "10294:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "10280:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 535,
																	"name": "assert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1417,
																	"src": "10273:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
																		"typeString": "function (bool) pure"
																	}
																},
																"id": 540,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10273:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 541,
															"nodeType": "ExpressionStatement",
															"src": "10273:31:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 547,
																		"name": "extraMoney",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 510,
																		"src": "10406:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 542,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1426,
																			"src": "10386:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 545,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "10386:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 546,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "10386:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 548,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10386:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 549,
															"nodeType": "ExpressionStatement",
															"src": "10386:31:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 551,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1426,
																			"src": "10511:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 552,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "10511:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 553,
																		"name": "extraMoney",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 510,
																		"src": "10523:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 554,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1418,
																			"src": "10535:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 555,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "10535:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 550,
																	"name": "LogBorrowerChangeReturned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 113,
																	"src": "10485:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256,uint256)"
																	}
																},
																"id": 556,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10485:66:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 557,
															"nodeType": "ExpressionStatement",
															"src": "10485:66:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 561,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1426,
																"src": "10654:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 562,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "10654:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 566,
																	"name": "extraMoney",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 510,
																	"src": "10680:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 563,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1426,
																		"src": "10666:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 564,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "10666:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1389,
																"src": "10666:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 567,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10666:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 568,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1418,
																"src": "10693:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 569,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "10693:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 560,
														"name": "LogBorrowerRepaymentInstallment",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 99,
														"src": "10622:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10622:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 571,
												"nodeType": "ExpressionStatement",
												"src": "10622:87:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 572,
														"name": "repaidAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 16,
														"src": "10799:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 578,
																		"name": "extraMoney",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 510,
																		"src": "10845:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 575,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1426,
																			"src": "10831:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 576,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "value",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "10831:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 577,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1389,
																	"src": "10831:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 579,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10831:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 573,
																"name": "repaidAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 16,
																"src": "10814:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 574,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1413,
															"src": "10814:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 580,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10814:43:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10799:58:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 582,
												"nodeType": "ExpressionStatement",
												"src": "10799:58:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 583,
														"name": "repaidAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 16,
														"src": "10945:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"id": 584,
														"name": "returnAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "10961:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10945:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 605,
												"nodeType": "IfStatement",
												"src": "10941:360:0",
												"trueBody": {
													"id": 604,
													"nodeType": "Block",
													"src": "10975:326:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 587,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1426,
																			"src": "11056:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 588,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "11056:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 589,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1418,
																			"src": "11068:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 590,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "11068:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 586,
																	"name": "LogBorrowerRepaymentFinished",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 105,
																	"src": "11027:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 591,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11027:57:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 592,
															"nodeType": "ExpressionStatement",
															"src": "11027:57:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 596,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 593,
																	"name": "state",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 41,
																	"src": "11164:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_State_$39",
																		"typeString": "enum Credit.State"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 594,
																		"name": "State",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 39,
																		"src": "11172:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_State_$39_$",
																			"typeString": "type(enum Credit.State)"
																		}
																	},
																	"id": 595,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "interestReturns",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "11172:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_State_$39",
																		"typeString": "enum Credit.State"
																	}
																},
																"src": "11164:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_State_$39",
																	"typeString": "enum Credit.State"
																}
															},
															"id": 597,
															"nodeType": "ExpressionStatement",
															"src": "11164:29:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 599,
																		"name": "state",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 41,
																		"src": "11266:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_State_$39",
																			"typeString": "enum Credit.State"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 600,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1418,
																			"src": "11273:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 601,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "11273:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_enum$_State_$39",
																			"typeString": "enum Credit.State"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 598,
																	"name": "LogCreditStateChanged",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 77,
																	"src": "11244:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_enum$_State_$39_$_t_uint256_$returns$__$",
																		"typeString": "function (enum Credit.State,uint256)"
																	}
																},
																"id": 602,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11244:45:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 603,
															"nodeType": "ExpressionStatement",
															"src": "11244:45:0"
														}
													]
												}
											}
										]
									},
									"id": 607,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 478,
											"modifierName": {
												"argumentTypes": null,
												"id": 477,
												"name": "onlyBorrower",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 186,
												"src": "8921:12:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "8921:12:0"
										},
										{
											"arguments": [],
											"id": 480,
											"modifierName": {
												"argumentTypes": null,
												"id": 479,
												"name": "canRepay",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 241,
												"src": "8934:8:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "8934:8:0"
										}
									],
									"name": "repay",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8911:2:0"
									},
									"payable": true,
									"returnParameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8951:0:0"
									},
									"scope": 995,
									"src": "8897:2411:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 645,
										"nodeType": "Block",
										"src": "11723:420:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 618,
														"name": "state",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "11801:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_State_$39",
															"typeString": "enum Credit.State"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 619,
															"name": "State",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 39,
															"src": "11809:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_State_$39_$",
																"typeString": "type(enum Credit.State)"
															}
														},
														"id": 620,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "repayment",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "11809:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_State_$39",
															"typeString": "enum Credit.State"
														}
													},
													"src": "11801:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_State_$39",
														"typeString": "enum Credit.State"
													}
												},
												"id": 622,
												"nodeType": "ExpressionStatement",
												"src": "11801:23:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 624,
															"name": "state",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 41,
															"src": "11889:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_State_$39",
																"typeString": "enum Credit.State"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 625,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1418,
																"src": "11896:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 626,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "11896:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_State_$39",
																"typeString": "enum Credit.State"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 623,
														"name": "LogCreditStateChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 77,
														"src": "11867:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_enum$_State_$39_$_t_uint256_$returns$__$",
															"typeString": "function (enum Credit.State,uint256)"
														}
													},
													"id": 627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11867:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 628,
												"nodeType": "ExpressionStatement",
												"src": "11867:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 630,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1426,
																"src": "11984:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 631,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "11984:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 632,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1443,
																"src": "11996:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_Credit_$995",
																	"typeString": "contract Credit"
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "11996:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 634,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1418,
																"src": "12010:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 635,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "12010:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "LogBorrowerWithdrawal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 91,
														"src": "11962:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11962:64:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "11962:64:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 641,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1443,
																"src": "12122:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_Credit_$995",
																	"typeString": "contract Credit"
																}
															},
															"id": 642,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "12122:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 638,
															"name": "borrower",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 10,
															"src": "12104:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 640,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "12104:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12104:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 644,
												"nodeType": "ExpressionStatement",
												"src": "12104:31:0"
											}
										]
									},
									"id": 646,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 610,
											"modifierName": {
												"argumentTypes": null,
												"id": 609,
												"name": "isActive",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 175,
												"src": "11678:8:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "11678:8:0"
										},
										{
											"arguments": [],
											"id": 612,
											"modifierName": {
												"argumentTypes": null,
												"id": 611,
												"name": "onlyBorrower",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 186,
												"src": "11687:12:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "11687:12:0"
										},
										{
											"arguments": [],
											"id": 614,
											"modifierName": {
												"argumentTypes": null,
												"id": 613,
												"name": "canWithdraw",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 252,
												"src": "11700:11:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "11700:11:0"
										},
										{
											"arguments": [],
											"id": 616,
											"modifierName": {
												"argumentTypes": null,
												"id": 615,
												"name": "isNotFraud",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 263,
												"src": "11712:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "11712:10:0"
										}
									],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11668:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11723:0:0"
									},
									"scope": 995,
									"src": "11651:492:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 711,
										"nodeType": "Block",
										"src": "12550:1146:0",
										"statements": [
											{
												"assignments": [
													656
												],
												"declarations": [
													{
														"constant": false,
														"id": 656,
														"name": "lenderReturnAmount",
														"nodeType": "VariableDeclaration",
														"scope": 712,
														"src": "12769:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 655,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "12769:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 660,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 657,
														"name": "returnAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "12795:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 658,
														"name": "lendersCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 51,
														"src": "12810:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12795:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12769:53:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 665,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 662,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1443,
																	"src": "12912:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Credit_$995",
																		"typeString": "contract Credit"
																	}
																},
																"id": 663,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "12912:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 664,
																"name": "lenderReturnAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 656,
																"src": "12928:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12912:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 661,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1417,
														"src": "12905:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12905:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 667,
												"nodeType": "ExpressionStatement",
												"src": "12905:42:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 673,
															"name": "lenderReturnAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "13048:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 668,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1426,
																"src": "13028:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 671,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "13028:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 672,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "13028:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13028:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 675,
												"nodeType": "ExpressionStatement",
												"src": "13028:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 677,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1426,
																"src": "13140:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 678,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "13140:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 679,
															"name": "lenderReturnAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "13152:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 680,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1418,
																"src": "13172:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 681,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "13172:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 676,
														"name": "LogLenderWithdrawal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 137,
														"src": "13120:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13120:68:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 683,
												"nodeType": "ExpressionStatement",
												"src": "13120:68:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 684,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1443,
															"src": "13259:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Credit_$995",
																"typeString": "contract Credit"
															}
														},
														"id": 685,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "13259:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 686,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13275:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "13259:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 710,
												"nodeType": "IfStatement",
												"src": "13255:434:0",
												"trueBody": {
													"id": 709,
													"nodeType": "Block",
													"src": "13278:411:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 690,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 688,
																	"name": "active",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "13342:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "66616c7365",
																	"id": 689,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13351:5:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "13342:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 691,
															"nodeType": "ExpressionStatement",
															"src": "13342:14:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 693,
																		"name": "active",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 32,
																		"src": "13442:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 694,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1418,
																			"src": "13450:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 695,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "13450:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 692,
																	"name": "LogCreditStateActiveChanged",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "13414:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bool_$_t_uint256_$returns$__$",
																		"typeString": "function (bool,uint256)"
																	}
																},
																"id": 696,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13414:52:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 697,
															"nodeType": "ExpressionStatement",
															"src": "13414:52:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 701,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 698,
																	"name": "state",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 41,
																	"src": "13560:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_State_$39",
																		"typeString": "enum Credit.State"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 699,
																		"name": "State",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 39,
																		"src": "13568:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_State_$39_$",
																			"typeString": "type(enum Credit.State)"
																		}
																	},
																	"id": 700,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "expired",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "13568:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_State_$39",
																		"typeString": "enum Credit.State"
																	}
																},
																"src": "13560:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_State_$39",
																	"typeString": "enum Credit.State"
																}
															},
															"id": 702,
															"nodeType": "ExpressionStatement",
															"src": "13560:21:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 704,
																		"name": "state",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 41,
																		"src": "13654:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_State_$39",
																			"typeString": "enum Credit.State"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 705,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1418,
																			"src": "13661:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 706,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "13661:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_enum$_State_$39",
																			"typeString": "enum Credit.State"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 703,
																	"name": "LogCreditStateChanged",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 77,
																	"src": "13632:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_enum$_State_$39_$_t_uint256_$returns$__$",
																		"typeString": "function (enum Credit.State,uint256)"
																	}
																},
																"id": 707,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13632:45:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 708,
															"nodeType": "ExpressionStatement",
															"src": "13632:45:0"
														}
													]
												}
											}
										]
									},
									"id": 712,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 649,
											"modifierName": {
												"argumentTypes": null,
												"id": 648,
												"name": "isActive",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 175,
												"src": "12512:8:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "12512:8:0"
										},
										{
											"arguments": [],
											"id": 651,
											"modifierName": {
												"argumentTypes": null,
												"id": 650,
												"name": "onlyLender",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 199,
												"src": "12521:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "12521:10:0"
										},
										{
											"arguments": [],
											"id": 653,
											"modifierName": {
												"argumentTypes": null,
												"id": 652,
												"name": "canAskForInterest",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 219,
												"src": "12532:17:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "12532:17:0"
										}
									],
									"name": "requestInterest",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 647,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12502:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12550:0:0"
									},
									"scope": 995,
									"src": "12478:1218:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 751,
										"nodeType": "Block",
										"src": "14178:293:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"id": 737,
															"name": "borrower",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 10,
															"src": "14207:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 738,
															"name": "description",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "14226:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 739,
															"name": "requestedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 12,
															"src": "14248:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 740,
															"name": "requestedRepayments",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 20,
															"src": "14274:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 741,
															"name": "repaymentInstallment",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 24,
															"src": "14304:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 742,
															"name": "remainingRepayments",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 22,
															"src": "14335:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 743,
															"name": "interest",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "14365:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 744,
															"name": "returnAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 14,
															"src": "14384:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 745,
															"name": "state",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 41,
															"src": "14407:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_State_$39",
																"typeString": "enum Credit.State"
															}
														},
														{
															"argumentTypes": null,
															"id": 746,
															"name": "active",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "14423:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 747,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1443,
																"src": "14440:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_Credit_$995",
																	"typeString": "contract Credit"
																}
															},
															"id": 748,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "14440:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 749,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "14196:267:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_bytes32_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_enum$_State_$39_$_t_bool_$_t_uint256_$",
														"typeString": "tuple(address,bytes32,uint256,uint256,uint256,uint256,uint256,uint256,enum Credit.State,bool,uint256)"
													}
												},
												"functionReturnParameters": 736,
												"id": 750,
												"nodeType": "Return",
												"src": "14189:274:0"
											}
										]
									},
									"id": 752,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "getCreditInfo",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14081:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 715,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "14105:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 714,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14105:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 717,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "14114:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 716,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "14114:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 719,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "14123:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 718,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "14123:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "14129:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 720,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "14129:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "14135:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "14135:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 725,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "14141:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 724,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "14141:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 727,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "14147:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 726,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "14147:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 729,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "14153:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 728,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "14153:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 731,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "14159:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_State_$39",
													"typeString": "enum Credit.State"
												},
												"typeName": {
													"contractScope": null,
													"id": 730,
													"name": "State",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 39,
													"src": "14159:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_State_$39",
														"typeString": "enum Credit.State"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 733,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "14166:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 732,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14166:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 735,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "14172:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 734,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "14172:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14104:73:0"
									},
									"scope": 995,
									"src": "14059:412:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 795,
										"nodeType": "Block",
										"src": "14598:552:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 767,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 762,
																	"name": "revokeVoters",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 57,
																	"src": "14663:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 765,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 763,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1426,
																		"src": "14676:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 764,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "14676:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "14663:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 766,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14691:5:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"src": "14663:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 761,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1429,
														"src": "14655:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14655:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 769,
												"nodeType": "ExpressionStatement",
												"src": "14655:42:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "14749:13:0",
													"subExpression": {
														"argumentTypes": null,
														"id": 770,
														"name": "revokeVotes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 53,
														"src": "14749:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 772,
												"nodeType": "ExpressionStatement",
												"src": "14749:13:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 773,
															"name": "revokeVoters",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 57,
															"src": "14814:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 776,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 774,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1426,
																"src": "14827:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 775,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "14827:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "14814:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 777,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14842:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "14814:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 779,
												"nodeType": "ExpressionStatement",
												"src": "14814:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 781,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1426,
																"src": "14946:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 782,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "14946:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 783,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1418,
																"src": "14958:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 784,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "14958:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 780,
														"name": "LogLenderVoteForRevoking",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 151,
														"src": "14921:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14921:53:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 786,
												"nodeType": "ExpressionStatement",
												"src": "14921:53:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 787,
														"name": "lendersCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 51,
														"src": "15032:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"id": 788,
														"name": "revokeVotes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 53,
														"src": "15048:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15032:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 794,
												"nodeType": "IfStatement",
												"src": "15028:115:0",
												"trueBody": {
													"id": 793,
													"nodeType": "Block",
													"src": "15061:82:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 790,
																	"name": "revoke",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 811,
																	"src": "15123:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 791,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15123:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 792,
															"nodeType": "ExpressionStatement",
															"src": "15123:8:0"
														}
													]
												}
											}
										]
									},
									"id": 796,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 755,
											"modifierName": {
												"argumentTypes": null,
												"id": 754,
												"name": "isActive",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 175,
												"src": "14566:8:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "14566:8:0"
										},
										{
											"arguments": [],
											"id": 757,
											"modifierName": {
												"argumentTypes": null,
												"id": 756,
												"name": "isRevokable",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 281,
												"src": "14575:11:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "14575:11:0"
										},
										{
											"arguments": [],
											"id": 759,
											"modifierName": {
												"argumentTypes": null,
												"id": 758,
												"name": "onlyLender",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 199,
												"src": "14587:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "14587:10:0"
										}
									],
									"name": "revokeVote",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14556:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14598:0:0"
									},
									"scope": 995,
									"src": "14537:613:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 810,
										"nodeType": "Block",
										"src": "15235:171:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 799,
														"name": "state",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "15287:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_State_$39",
															"typeString": "enum Credit.State"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 800,
															"name": "State",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 39,
															"src": "15295:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_State_$39_$",
																"typeString": "type(enum Credit.State)"
															}
														},
														"id": 801,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "revoked",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "15295:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_State_$39",
															"typeString": "enum Credit.State"
														}
													},
													"src": "15287:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_State_$39",
														"typeString": "enum Credit.State"
													}
												},
												"id": 803,
												"nodeType": "ExpressionStatement",
												"src": "15287:21:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 805,
															"name": "state",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 41,
															"src": "15375:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_State_$39",
																"typeString": "enum Credit.State"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 806,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1418,
																"src": "15382:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 807,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "15382:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_State_$39",
																"typeString": "enum Credit.State"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 804,
														"name": "LogCreditStateChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 77,
														"src": "15353:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_enum$_State_$39_$_t_uint256_$returns$__$",
															"typeString": "function (enum Credit.State,uint256)"
														}
													},
													"id": 808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15353:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 809,
												"nodeType": "ExpressionStatement",
												"src": "15353:45:0"
											}
										]
									},
									"id": 811,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "revoke",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15223:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15235:0:0"
									},
									"scope": 995,
									"src": "15208:198:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 879,
										"nodeType": "Block",
										"src": "15517:899:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 827,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 821,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1443,
																	"src": "15588:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Credit_$995",
																		"typeString": "contract Credit"
																	}
																},
																"id": 822,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "15588:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 823,
																	"name": "lendersInvestedAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 49,
																	"src": "15604:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 826,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 824,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1426,
																		"src": "15626:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 825,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "15626:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "15604:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "15588:49:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 820,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1417,
														"src": "15581:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 828,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15581:57:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 829,
												"nodeType": "ExpressionStatement",
												"src": "15581:57:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 835,
																"name": "lendersInvestedAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 49,
																"src": "15739:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 838,
															"indexExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 836,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1426,
																	"src": "15761:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 837,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "15761:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15739:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 830,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1426,
																"src": "15719:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 833,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "15719:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 834,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "15719:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15719:54:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 840,
												"nodeType": "ExpressionStatement",
												"src": "15719:54:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 842,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1426,
																"src": "15844:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 843,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "15844:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 844,
																"name": "lendersInvestedAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 49,
																"src": "15856:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 847,
															"indexExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 845,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1426,
																	"src": "15878:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 846,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "15878:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15856:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 848,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1418,
																"src": "15891:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 849,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "15891:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 841,
														"name": "LogLenderRefunded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "15826:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15826:81:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 851,
												"nodeType": "ExpressionStatement",
												"src": "15826:81:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 855,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 852,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1443,
															"src": "15978:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Credit_$995",
																"typeString": "contract Credit"
															}
														},
														"id": 853,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "15978:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 854,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15994:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "15978:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 878,
												"nodeType": "IfStatement",
												"src": "15974:435:0",
												"trueBody": {
													"id": 877,
													"nodeType": "Block",
													"src": "15997:412:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 858,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 856,
																	"name": "active",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "16061:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "66616c7365",
																	"id": 857,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16070:5:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "16061:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 859,
															"nodeType": "ExpressionStatement",
															"src": "16061:14:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 861,
																		"name": "active",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 32,
																		"src": "16162:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 862,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1418,
																			"src": "16170:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 863,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "16170:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 860,
																	"name": "LogCreditStateActiveChanged",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "16134:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bool_$_t_uint256_$returns$__$",
																		"typeString": "function (bool,uint256)"
																	}
																},
																"id": 864,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16134:52:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 865,
															"nodeType": "ExpressionStatement",
															"src": "16134:52:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 869,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 866,
																	"name": "state",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 41,
																	"src": "16280:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_State_$39",
																		"typeString": "enum Credit.State"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 867,
																		"name": "State",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 39,
																		"src": "16288:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_State_$39_$",
																			"typeString": "type(enum Credit.State)"
																		}
																	},
																	"id": 868,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "expired",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "16288:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_State_$39",
																		"typeString": "enum Credit.State"
																	}
																},
																"src": "16280:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_State_$39",
																	"typeString": "enum Credit.State"
																}
															},
															"id": 870,
															"nodeType": "ExpressionStatement",
															"src": "16280:21:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 872,
																		"name": "state",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 41,
																		"src": "16374:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_State_$39",
																			"typeString": "enum Credit.State"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 873,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1418,
																			"src": "16381:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 874,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "16381:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_enum$_State_$39",
																			"typeString": "enum Credit.State"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 871,
																	"name": "LogCreditStateChanged",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 77,
																	"src": "16352:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_enum$_State_$39_$_t_uint256_$returns$__$",
																		"typeString": "function (enum Credit.State,uint256)"
																	}
																},
																"id": 875,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16352:45:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 876,
															"nodeType": "ExpressionStatement",
															"src": "16352:45:0"
														}
													]
												}
											}
										]
									},
									"id": 880,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 814,
											"modifierName": {
												"argumentTypes": null,
												"id": 813,
												"name": "isActive",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 175,
												"src": "15487:8:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "15487:8:0"
										},
										{
											"arguments": [],
											"id": 816,
											"modifierName": {
												"argumentTypes": null,
												"id": 815,
												"name": "onlyLender",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 199,
												"src": "15496:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "15496:10:0"
										},
										{
											"arguments": [],
											"id": 818,
											"modifierName": {
												"argumentTypes": null,
												"id": 817,
												"name": "isRevoked",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 292,
												"src": "15507:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "15507:9:0"
										}
									],
									"name": "refund",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15477:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15517:0:0"
									},
									"scope": 995,
									"src": "15462:954:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 925,
										"nodeType": "Block",
										"src": "16557:542:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 895,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 890,
																	"name": "fraudVoters",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 65,
																	"src": "16619:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 893,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 891,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1426,
																		"src": "16631:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 892,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "16631:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "16619:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 894,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16646:5:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"src": "16619:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 889,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1429,
														"src": "16611:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16611:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 897,
												"nodeType": "ExpressionStatement",
												"src": "16611:41:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "16705:12:0",
													"subExpression": {
														"argumentTypes": null,
														"id": 898,
														"name": "fraudVotes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 61,
														"src": "16705:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 900,
												"nodeType": "ExpressionStatement",
												"src": "16705:12:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 906,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 901,
															"name": "fraudVoters",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 65,
															"src": "16769:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 904,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 902,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1426,
																"src": "16781:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 903,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "16781:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "16769:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 905,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16796:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "16769:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 907,
												"nodeType": "ExpressionStatement",
												"src": "16769:31:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 909,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1426,
																"src": "16874:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 910,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "16874:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 911,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1418,
																"src": "16886:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 912,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "16886:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 908,
														"name": "LogLenderVoteForFraud",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 157,
														"src": "16852:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16852:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 914,
												"nodeType": "ExpressionStatement",
												"src": "16852:50:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 915,
														"name": "lendersCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 51,
														"src": "16962:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"id": 916,
														"name": "fraudVotes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 61,
														"src": "16978:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16962:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 922,
												"nodeType": "IfStatement",
												"src": "16958:112:0",
												"trueBody": {
													"id": 921,
													"nodeType": "Block",
													"src": "16990:80:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 918,
																	"name": "fraud",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 953,
																	"src": "17051:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bool_$",
																		"typeString": "function () returns (bool)"
																	}
																},
																"id": 919,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17051:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"functionReturnParameters": 888,
															"id": 920,
															"nodeType": "Return",
															"src": "17044:14:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 923,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "17087:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 888,
												"id": 924,
												"nodeType": "Return",
												"src": "17080:11:0"
											}
										]
									},
									"id": 926,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 883,
											"modifierName": {
												"argumentTypes": null,
												"id": 882,
												"name": "isActive",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 175,
												"src": "16522:8:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "16522:8:0"
										},
										{
											"arguments": [],
											"id": 885,
											"modifierName": {
												"argumentTypes": null,
												"id": 884,
												"name": "onlyLender",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 199,
												"src": "16531:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "16531:10:0"
										}
									],
									"name": "fraudVote",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 881,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16512:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 887,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "16551:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 886,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16551:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16550:6:0"
									},
									"scope": 995,
									"src": "16494:605:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 952,
										"nodeType": "Block",
										"src": "17275:336:0",
										"statements": [
											{
												"assignments": [
													932
												],
												"declarations": [
													{
														"constant": false,
														"id": 932,
														"name": "fraudStatusResult",
														"nodeType": "VariableDeclaration",
														"scope": 953,
														"src": "17360:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 931,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "17360:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 942,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "7365744672617564537461747573286164647265737329",
																			"id": 937,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "17413:25:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_bb9e4247a9737512c22376911ad76d2ccb7492c06067f8baea333b4b5fcfe910",
																				"typeString": "literal_string \"setFraudStatus(address)\""
																			},
																			"value": "setFraudStatus(address)"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_bb9e4247a9737512c22376911ad76d2ccb7492c06067f8baea333b4b5fcfe910",
																				"typeString": "literal_string \"setFraudStatus(address)\""
																			}
																		],
																		"id": 936,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1420,
																		"src": "17403:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
																			"typeString": "function () pure returns (bytes32)"
																		}
																	},
																	"id": 938,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "17403:36:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 935,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "17396:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes4_$",
																	"typeString": "type(bytes4)"
																},
																"typeName": "bytes4"
															},
															"id": 939,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17396:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														{
															"argumentTypes": null,
															"id": 940,
															"name": "borrower",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 10,
															"src": "17442:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 933,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1298,
															"src": "17385:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 934,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "17385:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$__$returns$_t_bool_$",
															"typeString": "function () payable returns (bool)"
														}
													},
													"id": 941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17385:66:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17360:91:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 944,
															"name": "borrower",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 10,
															"src": "17521:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 945,
															"name": "fraudStatusResult",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 932,
															"src": "17531:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 946,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1418,
																"src": "17550:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 947,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "17550:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 943,
														"name": "LogBorrowerIsFraud",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 121,
														"src": "17502:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$_t_uint256_$returns$__$",
															"typeString": "function (address,bool,uint256)"
														}
													},
													"id": 948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17502:64:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 949,
												"nodeType": "ExpressionStatement",
												"src": "17502:64:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 950,
													"name": "fraudStatusResult",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 932,
													"src": "17586:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 930,
												"id": 951,
												"nodeType": "Return",
												"src": "17579:24:0"
											}
										]
									},
									"id": 953,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "fraud",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 927,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17248:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 929,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "17269:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 928,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17269:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17268:6:0"
									},
									"scope": 995,
									"src": "17234:377:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 972,
										"nodeType": "Block",
										"src": "17868:121:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 964,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 962,
														"name": "state",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "17879:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_State_$39",
															"typeString": "enum Credit.State"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 963,
														"name": "_state",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 955,
														"src": "17887:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_State_$39",
															"typeString": "enum Credit.State"
														}
													},
													"src": "17879:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_State_$39",
														"typeString": "enum Credit.State"
													}
												},
												"id": 965,
												"nodeType": "ExpressionStatement",
												"src": "17879:14:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 967,
															"name": "state",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 41,
															"src": "17958:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_State_$39",
																"typeString": "enum Credit.State"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 968,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1418,
																"src": "17965:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 969,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "17965:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_State_$39",
																"typeString": "enum Credit.State"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 966,
														"name": "LogCreditStateChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 77,
														"src": "17936:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_enum$_State_$39_$_t_uint256_$returns$__$",
															"typeString": "function (enum Credit.State,uint256)"
														}
													},
													"id": 970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17936:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 971,
												"nodeType": "ExpressionStatement",
												"src": "17936:45:0"
											}
										]
									},
									"id": 973,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 958,
											"modifierName": {
												"argumentTypes": null,
												"id": 957,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1315,
												"src": "17843:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "17843:9:0"
										}
									],
									"name": "changeState",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 955,
												"name": "_state",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "17820:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_State_$39",
													"typeString": "enum Credit.State"
												},
												"typeName": {
													"contractScope": null,
													"id": 954,
													"name": "State",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 39,
													"src": "17820:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_State_$39",
														"typeString": "enum Credit.State"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17819:14:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 960,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "17862:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 959,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "17862:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17861:6:0"
									},
									"scope": 995,
									"src": "17799:190:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 993,
										"nodeType": "Block",
										"src": "18236:164:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 983,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 980,
														"name": "active",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 32,
														"src": "18247:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 982,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "18256:7:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 981,
															"name": "active",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "18257:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "18247:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 984,
												"nodeType": "ExpressionStatement",
												"src": "18247:16:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 986,
															"name": "active",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "18342:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 987,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1418,
																"src": "18350:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 988,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "18350:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 985,
														"name": "LogCreditStateActiveChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 83,
														"src": "18314:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bool_$_t_uint256_$returns$__$",
															"typeString": "function (bool,uint256)"
														}
													},
													"id": 989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18314:52:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 990,
												"nodeType": "ExpressionStatement",
												"src": "18314:52:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 991,
													"name": "active",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 32,
													"src": "18386:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 979,
												"id": 992,
												"nodeType": "Return",
												"src": "18379:13:0"
											}
										]
									},
									"id": 994,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 976,
											"modifierName": {
												"argumentTypes": null,
												"id": 975,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1315,
												"src": "18211:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "18211:9:0"
										}
									],
									"name": "toggleActive",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18199:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 978,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "18230:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 977,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "18230:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "18229:6:0"
									},
									"scope": 995,
									"src": "18178:222:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 996,
							"src": "189:18216:0"
						}
					],
					"src": "0:18405:0"
				},
				"id": 0,
				"legacyAST": {
					"attributes": {
						"absolutePath": "smart-contracts/contracts/Credit.sol",
						"exportedSymbols": {
							"Credit": [
								995
							]
						}
					},
					"children": [
						{
							"attributes": {
								"literals": [
									"solidity",
									"^",
									"0.4",
									".18"
								]
							},
							"id": 1,
							"name": "PragmaDirective",
							"src": "0:24:0"
						},
						{
							"attributes": {
								"SourceUnit": 1415,
								"absolutePath": "smart-contracts/contracts/common/SafeMath.sol",
								"file": "./common/SafeMath.sol",
								"scope": 996,
								"symbolAliases": [
									null
								],
								"unitAlias": ""
							},
							"id": 2,
							"name": "ImportDirective",
							"src": "28:31:0"
						},
						{
							"attributes": {
								"SourceUnit": 1295,
								"absolutePath": "smart-contracts/contracts/common/Destructible.sol",
								"file": "./common/Destructible.sol",
								"scope": 996,
								"symbolAliases": [
									null
								],
								"unitAlias": ""
							},
							"id": 3,
							"name": "ImportDirective",
							"src": "61:35:0"
						},
						{
							"attributes": {
								"contractDependencies": [
									1294,
									1316
								],
								"contractKind": "contract",
								"documentation": "@title Credit contract.\r\nInherits the Ownable and Destructible contracts.\r",
								"fullyImplemented": true,
								"linearizedBaseContracts": [
									995,
									1294,
									1316
								],
								"name": "Credit",
								"scope": 996
							},
							"children": [
								{
									"attributes": {
										"arguments": [
											null
										]
									},
									"children": [
										{
											"attributes": {
												"contractScope": null,
												"name": "Destructible",
												"referencedDeclaration": 1294,
												"type": "contract Destructible"
											},
											"id": 4,
											"name": "UserDefinedTypeName",
											"src": "208:12:0"
										}
									],
									"id": 5,
									"name": "InheritanceSpecifier",
									"src": "208:12:0"
								},
								{
									"children": [
										{
											"attributes": {
												"contractScope": null,
												"name": "SafeMath",
												"referencedDeclaration": 1414,
												"type": "library SafeMath"
											},
											"id": 6,
											"name": "UserDefinedTypeName",
											"src": "316:8:0"
										},
										{
											"attributes": {
												"name": "uint",
												"type": "uint256"
											},
											"id": 7,
											"name": "ElementaryTypeName",
											"src": "329:4:0"
										}
									],
									"id": 8,
									"name": "UsingForDirective",
									"src": "310:24:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "borrower",
										"scope": 995,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "address",
										"value": null,
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"name": "address",
												"type": "address"
											},
											"id": 9,
											"name": "ElementaryTypeName",
											"src": "441:7:0"
										}
									],
									"id": 10,
									"name": "VariableDeclaration",
									"src": "441:16:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "requestedAmount",
										"scope": 995,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "uint256",
										"value": null,
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"name": "uint",
												"type": "uint256"
											},
											"id": 11,
											"name": "ElementaryTypeName",
											"src": "514:4:0"
										}
									],
									"id": 12,
									"name": "VariableDeclaration",
									"src": "514:20:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "returnAmount",
										"scope": 995,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "uint256",
										"value": null,
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"name": "uint",
												"type": "uint256"
											},
											"id": 13,
											"name": "ElementaryTypeName",
											"src": "622:4:0"
										}
									],
									"id": 14,
									"name": "VariableDeclaration",
									"src": "622:17:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "repaidAmount",
										"scope": 995,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "uint256",
										"value": null,
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"name": "uint",
												"type": "uint256"
											},
											"id": 15,
											"name": "ElementaryTypeName",
											"src": "681:4:0"
										}
									],
									"id": 16,
									"name": "VariableDeclaration",
									"src": "681:17:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "interest",
										"scope": 995,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "uint256",
										"value": null,
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"name": "uint",
												"type": "uint256"
											},
											"id": 17,
											"name": "ElementaryTypeName",
											"src": "732:4:0"
										}
									],
									"id": 18,
									"name": "VariableDeclaration",
									"src": "732:13:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "requestedRepayments",
										"scope": 995,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "uint256",
										"value": null,
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"name": "uint",
												"type": "uint256"
											},
											"id": 19,
											"name": "ElementaryTypeName",
											"src": "806:4:0"
										}
									],
									"id": 20,
									"name": "VariableDeclaration",
									"src": "806:24:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "remainingRepayments",
										"scope": 995,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "uint256",
										"value": null,
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"name": "uint",
												"type": "uint256"
											},
											"id": 21,
											"name": "ElementaryTypeName",
											"src": "881:4:0"
										}
									],
									"id": 22,
									"name": "VariableDeclaration",
									"src": "881:24:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "repaymentInstallment",
										"scope": 995,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "uint256",
										"value": null,
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"name": "uint",
												"type": "uint256"
											},
											"id": 23,
											"name": "ElementaryTypeName",
											"src": "962:4:0"
										}
									],
									"id": 24,
									"name": "VariableDeclaration",
									"src": "962:25:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "requestedDate",
										"scope": 995,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "uint256",
										"value": null,
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"name": "uint",
												"type": "uint256"
											},
											"id": 25,
											"name": "ElementaryTypeName",
											"src": "1038:4:0"
										}
									],
									"id": 26,
									"name": "VariableDeclaration",
									"src": "1038:18:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "lastRepaymentDate",
										"scope": 995,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "uint256",
										"value": null,
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"name": "uint",
												"type": "uint256"
											},
											"id": 27,
											"name": "ElementaryTypeName",
											"src": "1111:4:0"
										}
									],
									"id": 28,
									"name": "VariableDeclaration",
									"src": "1111:22:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "description",
										"scope": 995,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "bytes32",
										"value": null,
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"name": "bytes32",
												"type": "bytes32"
											},
											"id": 29,
											"name": "ElementaryTypeName",
											"src": "1177:7:0"
										}
									],
									"id": 30,
									"name": "VariableDeclaration",
									"src": "1177:19:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "active",
										"scope": 995,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "bool",
										"value": null,
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"name": "bool",
												"type": "bool"
											},
											"id": 31,
											"name": "ElementaryTypeName",
											"src": "1241:4:0"
										}
									],
									"id": 32,
									"name": "VariableDeclaration",
									"src": "1241:11:0"
								},
								{
									"attributes": {
										"canonicalName": "Credit.State",
										"name": "State"
									},
									"children": [
										{
											"attributes": {
												"name": "investment"
											},
											"id": 33,
											"name": "EnumValue",
											"src": "1709:10:0"
										},
										{
											"attributes": {
												"name": "repayment"
											},
											"id": 34,
											"name": "EnumValue",
											"src": "1721:9:0"
										},
										{
											"attributes": {
												"name": "interestReturns"
											},
											"id": 35,
											"name": "EnumValue",
											"src": "1732:15:0"
										},
										{
											"attributes": {
												"name": "expired"
											},
											"id": 36,
											"name": "EnumValue",
											"src": "1749:7:0"
										},
										{
											"attributes": {
												"name": "revoked"
											},
											"id": 37,
											"name": "EnumValue",
											"src": "1758:7:0"
										},
										{
											"attributes": {
												"name": "fraud"
											},
											"id": 38,
											"name": "EnumValue",
											"src": "1767:5:0"
										}
									],
									"id": 39,
									"name": "EnumDefinition",
									"src": "1696:78:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "state",
										"scope": 995,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "enum Credit.State",
										"value": null,
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"contractScope": null,
												"name": "State",
												"referencedDeclaration": 39,
												"type": "enum Credit.State"
											},
											"id": 40,
											"name": "UserDefinedTypeName",
											"src": "1780:5:0"
										}
									],
									"id": 41,
									"name": "VariableDeclaration",
									"src": "1780:11:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "lenders",
										"scope": 995,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "mapping(address => bool)",
										"value": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"type": "mapping(address => bool)"
											},
											"children": [
												{
													"attributes": {
														"name": "address",
														"type": "address"
													},
													"id": 42,
													"name": "ElementaryTypeName",
													"src": "1853:7:0"
												},
												{
													"attributes": {
														"name": "bool",
														"type": "bool"
													},
													"id": 43,
													"name": "ElementaryTypeName",
													"src": "1864:4:0"
												}
											],
											"id": 44,
											"name": "Mapping",
											"src": "1845:24:0"
										}
									],
									"id": 45,
									"name": "VariableDeclaration",
									"src": "1845:39:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "lendersInvestedAmount",
										"scope": 995,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "mapping(address => uint256)",
										"value": null,
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"type": "mapping(address => uint256)"
											},
											"children": [
												{
													"attributes": {
														"name": "address",
														"type": "address"
													},
													"id": 46,
													"name": "ElementaryTypeName",
													"src": "1953:7:0"
												},
												{
													"attributes": {
														"name": "uint",
														"type": "uint256"
													},
													"id": 47,
													"name": "ElementaryTypeName",
													"src": "1964:4:0"
												}
											],
											"id": 48,
											"name": "Mapping",
											"src": "1945:24:0"
										}
									],
									"id": 49,
									"name": "VariableDeclaration",
									"src": "1945:46:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "lendersCount",
										"scope": 995,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "uint256",
										"value": null,
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"name": "uint",
												"type": "uint256"
											},
											"id": 50,
											"name": "ElementaryTypeName",
											"src": "2063:4:0"
										}
									],
									"id": 51,
									"name": "VariableDeclaration",
									"src": "2063:17:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "revokeVotes",
										"scope": 995,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "uint256",
										"value": null,
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"name": "uint",
												"type": "uint256"
											},
											"id": 52,
											"name": "ElementaryTypeName",
											"src": "2117:4:0"
										}
									],
									"id": 53,
									"name": "VariableDeclaration",
									"src": "2117:16:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "revokeVoters",
										"scope": 995,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "mapping(address => bool)",
										"value": null,
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"type": "mapping(address => bool)"
											},
											"children": [
												{
													"attributes": {
														"name": "address",
														"type": "address"
													},
													"id": 54,
													"name": "ElementaryTypeName",
													"src": "2173:7:0"
												},
												{
													"attributes": {
														"name": "bool",
														"type": "bool"
													},
													"id": 55,
													"name": "ElementaryTypeName",
													"src": "2184:4:0"
												}
											],
											"id": 56,
											"name": "Mapping",
											"src": "2165:24:0"
										}
									],
									"id": 57,
									"name": "VariableDeclaration",
									"src": "2165:37:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "revokeTimeNeeded",
										"scope": 995,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "uint256",
										"value": null,
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"name": "uint",
												"type": "uint256"
											},
											"id": 58,
											"name": "ElementaryTypeName",
											"src": "2310:4:0"
										}
									],
									"id": 59,
									"name": "VariableDeclaration",
									"src": "2310:21:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "fraudVotes",
										"scope": 995,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "uint256",
										"value": null,
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"name": "uint",
												"type": "uint256"
											},
											"id": 60,
											"name": "ElementaryTypeName",
											"src": "2368:4:0"
										}
									],
									"id": 61,
									"name": "VariableDeclaration",
									"src": "2368:15:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "fraudVoters",
										"scope": 995,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "mapping(address => bool)",
										"value": null,
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"type": "mapping(address => bool)"
											},
											"children": [
												{
													"attributes": {
														"name": "address",
														"type": "address"
													},
													"id": 62,
													"name": "ElementaryTypeName",
													"src": "2423:7:0"
												},
												{
													"attributes": {
														"name": "bool",
														"type": "bool"
													},
													"id": 63,
													"name": "ElementaryTypeName",
													"src": "2434:4:0"
												}
											],
											"id": 64,
											"name": "Mapping",
											"src": "2415:24:0"
										}
									],
									"id": 65,
									"name": "VariableDeclaration",
									"src": "2415:36:0"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "LogCreditInitialized"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "_address",
														"scope": 71,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 66,
															"name": "ElementaryTypeName",
															"src": "2525:7:0"
														}
													],
													"id": 67,
													"name": "VariableDeclaration",
													"src": "2525:24:0"
												},
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "timestamp",
														"scope": 71,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 68,
															"name": "ElementaryTypeName",
															"src": "2551:4:0"
														}
													],
													"id": 69,
													"name": "VariableDeclaration",
													"src": "2551:22:0"
												}
											],
											"id": 70,
											"name": "ParameterList",
											"src": "2524:50:0"
										}
									],
									"id": 71,
									"name": "EventDefinition",
									"src": "2498:77:0"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "LogCreditStateChanged"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "state",
														"scope": 77,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "enum Credit.State",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"contractScope": null,
																"name": "State",
																"referencedDeclaration": 39,
																"type": "enum Credit.State"
															},
															"id": 72,
															"name": "UserDefinedTypeName",
															"src": "2609:5:0"
														}
													],
													"id": 73,
													"name": "VariableDeclaration",
													"src": "2609:19:0"
												},
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "timestamp",
														"scope": 77,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 74,
															"name": "ElementaryTypeName",
															"src": "2630:4:0"
														}
													],
													"id": 75,
													"name": "VariableDeclaration",
													"src": "2630:22:0"
												}
											],
											"id": 76,
											"name": "ParameterList",
											"src": "2608:45:0"
										}
									],
									"id": 77,
									"name": "EventDefinition",
									"src": "2581:73:0"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "LogCreditStateActiveChanged"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "active",
														"scope": 83,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "bool",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "bool",
																"type": "bool"
															},
															"id": 78,
															"name": "ElementaryTypeName",
															"src": "2694:4:0"
														}
													],
													"id": 79,
													"name": "VariableDeclaration",
													"src": "2694:19:0"
												},
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "timestamp",
														"scope": 83,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 80,
															"name": "ElementaryTypeName",
															"src": "2715:4:0"
														}
													],
													"id": 81,
													"name": "VariableDeclaration",
													"src": "2715:22:0"
												}
											],
											"id": 82,
											"name": "ParameterList",
											"src": "2693:45:0"
										}
									],
									"id": 83,
									"name": "EventDefinition",
									"src": "2660:79:0"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "LogBorrowerWithdrawal"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "_address",
														"scope": 91,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 84,
															"name": "ElementaryTypeName",
															"src": "2775:7:0"
														}
													],
													"id": 85,
													"name": "VariableDeclaration",
													"src": "2775:24:0"
												},
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "_amount",
														"scope": 91,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 86,
															"name": "ElementaryTypeName",
															"src": "2801:4:0"
														}
													],
													"id": 87,
													"name": "VariableDeclaration",
													"src": "2801:20:0"
												},
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "timestamp",
														"scope": 91,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 88,
															"name": "ElementaryTypeName",
															"src": "2823:4:0"
														}
													],
													"id": 89,
													"name": "VariableDeclaration",
													"src": "2823:22:0"
												}
											],
											"id": 90,
											"name": "ParameterList",
											"src": "2774:72:0"
										}
									],
									"id": 91,
									"name": "EventDefinition",
									"src": "2747:100:0"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "LogBorrowerRepaymentInstallment"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "_address",
														"scope": 99,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 92,
															"name": "ElementaryTypeName",
															"src": "2891:7:0"
														}
													],
													"id": 93,
													"name": "VariableDeclaration",
													"src": "2891:24:0"
												},
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "_amount",
														"scope": 99,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 94,
															"name": "ElementaryTypeName",
															"src": "2917:4:0"
														}
													],
													"id": 95,
													"name": "VariableDeclaration",
													"src": "2917:20:0"
												},
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "timestamp",
														"scope": 99,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 96,
															"name": "ElementaryTypeName",
															"src": "2939:4:0"
														}
													],
													"id": 97,
													"name": "VariableDeclaration",
													"src": "2939:22:0"
												}
											],
											"id": 98,
											"name": "ParameterList",
											"src": "2890:72:0"
										}
									],
									"id": 99,
									"name": "EventDefinition",
									"src": "2853:110:0"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "LogBorrowerRepaymentFinished"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "_address",
														"scope": 105,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 100,
															"name": "ElementaryTypeName",
															"src": "3004:7:0"
														}
													],
													"id": 101,
													"name": "VariableDeclaration",
													"src": "3004:24:0"
												},
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "timestamp",
														"scope": 105,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 102,
															"name": "ElementaryTypeName",
															"src": "3030:4:0"
														}
													],
													"id": 103,
													"name": "VariableDeclaration",
													"src": "3030:22:0"
												}
											],
											"id": 104,
											"name": "ParameterList",
											"src": "3003:50:0"
										}
									],
									"id": 105,
									"name": "EventDefinition",
									"src": "2969:85:0"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "LogBorrowerChangeReturned"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "_address",
														"scope": 113,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 106,
															"name": "ElementaryTypeName",
															"src": "3092:7:0"
														}
													],
													"id": 107,
													"name": "VariableDeclaration",
													"src": "3092:24:0"
												},
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "_amount",
														"scope": 113,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 108,
															"name": "ElementaryTypeName",
															"src": "3118:4:0"
														}
													],
													"id": 109,
													"name": "VariableDeclaration",
													"src": "3118:20:0"
												},
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "timestamp",
														"scope": 113,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 110,
															"name": "ElementaryTypeName",
															"src": "3140:4:0"
														}
													],
													"id": 111,
													"name": "VariableDeclaration",
													"src": "3140:22:0"
												}
											],
											"id": 112,
											"name": "ParameterList",
											"src": "3091:72:0"
										}
									],
									"id": 113,
									"name": "EventDefinition",
									"src": "3060:104:0"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "LogBorrowerIsFraud"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "_address",
														"scope": 121,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 114,
															"name": "ElementaryTypeName",
															"src": "3195:7:0"
														}
													],
													"id": 115,
													"name": "VariableDeclaration",
													"src": "3195:24:0"
												},
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "fraudStatus",
														"scope": 121,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "bool",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "bool",
																"type": "bool"
															},
															"id": 116,
															"name": "ElementaryTypeName",
															"src": "3221:4:0"
														}
													],
													"id": 117,
													"name": "VariableDeclaration",
													"src": "3221:24:0"
												},
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "timestamp",
														"scope": 121,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 118,
															"name": "ElementaryTypeName",
															"src": "3247:4:0"
														}
													],
													"id": 119,
													"name": "VariableDeclaration",
													"src": "3247:22:0"
												}
											],
											"id": 120,
											"name": "ParameterList",
											"src": "3194:76:0"
										}
									],
									"id": 121,
									"name": "EventDefinition",
									"src": "3170:101:0"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "LogLenderInvestment"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "_address",
														"scope": 129,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 122,
															"name": "ElementaryTypeName",
															"src": "3305:7:0"
														}
													],
													"id": 123,
													"name": "VariableDeclaration",
													"src": "3305:24:0"
												},
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "_amount",
														"scope": 129,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 124,
															"name": "ElementaryTypeName",
															"src": "3331:4:0"
														}
													],
													"id": 125,
													"name": "VariableDeclaration",
													"src": "3331:20:0"
												},
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "timestamp",
														"scope": 129,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 126,
															"name": "ElementaryTypeName",
															"src": "3353:4:0"
														}
													],
													"id": 127,
													"name": "VariableDeclaration",
													"src": "3353:22:0"
												}
											],
											"id": 128,
											"name": "ParameterList",
											"src": "3304:72:0"
										}
									],
									"id": 129,
									"name": "EventDefinition",
									"src": "3279:98:0"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "LogLenderWithdrawal"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "_address",
														"scope": 137,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 130,
															"name": "ElementaryTypeName",
															"src": "3409:7:0"
														}
													],
													"id": 131,
													"name": "VariableDeclaration",
													"src": "3409:24:0"
												},
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "_amount",
														"scope": 137,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 132,
															"name": "ElementaryTypeName",
															"src": "3435:4:0"
														}
													],
													"id": 133,
													"name": "VariableDeclaration",
													"src": "3435:20:0"
												},
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "timestamp",
														"scope": 137,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 134,
															"name": "ElementaryTypeName",
															"src": "3457:4:0"
														}
													],
													"id": 135,
													"name": "VariableDeclaration",
													"src": "3457:22:0"
												}
											],
											"id": 136,
											"name": "ParameterList",
											"src": "3408:72:0"
										}
									],
									"id": 137,
									"name": "EventDefinition",
									"src": "3383:98:0"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "LogLenderChangeReturned"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "_address",
														"scope": 145,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 138,
															"name": "ElementaryTypeName",
															"src": "3517:7:0"
														}
													],
													"id": 139,
													"name": "VariableDeclaration",
													"src": "3517:24:0"
												},
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "_amount",
														"scope": 145,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 140,
															"name": "ElementaryTypeName",
															"src": "3543:4:0"
														}
													],
													"id": 141,
													"name": "VariableDeclaration",
													"src": "3543:20:0"
												},
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "timestamp",
														"scope": 145,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 142,
															"name": "ElementaryTypeName",
															"src": "3565:4:0"
														}
													],
													"id": 143,
													"name": "VariableDeclaration",
													"src": "3565:22:0"
												}
											],
											"id": 144,
											"name": "ParameterList",
											"src": "3516:72:0"
										}
									],
									"id": 145,
									"name": "EventDefinition",
									"src": "3487:102:0"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "LogLenderVoteForRevoking"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "_address",
														"scope": 151,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 146,
															"name": "ElementaryTypeName",
															"src": "3626:7:0"
														}
													],
													"id": 147,
													"name": "VariableDeclaration",
													"src": "3626:24:0"
												},
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "timestamp",
														"scope": 151,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 148,
															"name": "ElementaryTypeName",
															"src": "3652:4:0"
														}
													],
													"id": 149,
													"name": "VariableDeclaration",
													"src": "3652:22:0"
												}
											],
											"id": 150,
											"name": "ParameterList",
											"src": "3625:50:0"
										}
									],
									"id": 151,
									"name": "EventDefinition",
									"src": "3595:81:0"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "LogLenderVoteForFraud"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "_address",
														"scope": 157,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 152,
															"name": "ElementaryTypeName",
															"src": "3710:7:0"
														}
													],
													"id": 153,
													"name": "VariableDeclaration",
													"src": "3710:24:0"
												},
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "timestamp",
														"scope": 157,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 154,
															"name": "ElementaryTypeName",
															"src": "3736:4:0"
														}
													],
													"id": 155,
													"name": "VariableDeclaration",
													"src": "3736:22:0"
												}
											],
											"id": 156,
											"name": "ParameterList",
											"src": "3709:50:0"
										}
									],
									"id": 157,
									"name": "EventDefinition",
									"src": "3682:78:0"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "LogLenderRefunded"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "_address",
														"scope": 165,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 158,
															"name": "ElementaryTypeName",
															"src": "3790:7:0"
														}
													],
													"id": 159,
													"name": "VariableDeclaration",
													"src": "3790:24:0"
												},
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "_amount",
														"scope": 165,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 160,
															"name": "ElementaryTypeName",
															"src": "3816:4:0"
														}
													],
													"id": 161,
													"name": "VariableDeclaration",
													"src": "3816:20:0"
												},
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "timestamp",
														"scope": 165,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 162,
															"name": "ElementaryTypeName",
															"src": "3838:4:0"
														}
													],
													"id": 163,
													"name": "VariableDeclaration",
													"src": "3838:22:0"
												}
											],
											"id": 164,
											"name": "ParameterList",
											"src": "3789:72:0"
										}
									],
									"id": 165,
									"name": "EventDefinition",
									"src": "3766:96:0"
								},
								{
									"attributes": {
										"name": "isActive",
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 166,
											"name": "ParameterList",
											"src": "3926:2:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1429,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 167,
																	"name": "Identifier",
																	"src": "3940:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "==",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 32,
																				"type": "bool",
																				"value": "active"
																			},
																			"id": 168,
																			"name": "Identifier",
																			"src": "3948:6:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"hexvalue": "74727565",
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"subdenomination": null,
																				"token": "bool",
																				"type": "bool",
																				"value": "true"
																			},
																			"id": 169,
																			"name": "Literal",
																			"src": "3958:4:0"
																		}
																	],
																	"id": 170,
																	"name": "BinaryOperation",
																	"src": "3948:14:0"
																}
															],
															"id": 171,
															"name": "FunctionCall",
															"src": "3940:23:0"
														}
													],
													"id": 172,
													"name": "ExpressionStatement",
													"src": "3940:23:0"
												},
												{
													"id": 173,
													"name": "PlaceholderStatement",
													"src": "3974:1:0"
												}
											],
											"id": 174,
											"name": "Block",
											"src": "3929:54:0"
										}
									],
									"id": 175,
									"name": "ModifierDefinition",
									"src": "3909:74:0"
								},
								{
									"attributes": {
										"name": "onlyBorrower",
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 176,
											"name": "ParameterList",
											"src": "4012:2:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1429,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 177,
																	"name": "Identifier",
																	"src": "4026:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "==",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"member_name": "sender",
																				"referencedDeclaration": null,
																				"type": "address"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 1426,
																						"type": "msg",
																						"value": "msg"
																					},
																					"id": 178,
																					"name": "Identifier",
																					"src": "4034:3:0"
																				}
																			],
																			"id": 179,
																			"name": "MemberAccess",
																			"src": "4034:10:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 10,
																				"type": "address",
																				"value": "borrower"
																			},
																			"id": 180,
																			"name": "Identifier",
																			"src": "4048:8:0"
																		}
																	],
																	"id": 181,
																	"name": "BinaryOperation",
																	"src": "4034:22:0"
																}
															],
															"id": 182,
															"name": "FunctionCall",
															"src": "4026:31:0"
														}
													],
													"id": 183,
													"name": "ExpressionStatement",
													"src": "4026:31:0"
												},
												{
													"id": 184,
													"name": "PlaceholderStatement",
													"src": "4068:1:0"
												}
											],
											"id": 185,
											"name": "Block",
											"src": "4015:62:0"
										}
									],
									"id": 186,
									"name": "ModifierDefinition",
									"src": "3991:86:0"
								},
								{
									"attributes": {
										"name": "onlyLender",
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 187,
											"name": "ParameterList",
											"src": "4104:2:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1429,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 188,
																	"name": "Identifier",
																	"src": "4118:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "==",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"type": "bool"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 45,
																						"type": "mapping(address => bool)",
																						"value": "lenders"
																					},
																					"id": 189,
																					"name": "Identifier",
																					"src": "4126:7:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "sender",
																						"referencedDeclaration": null,
																						"type": "address"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1426,
																								"type": "msg",
																								"value": "msg"
																							},
																							"id": 190,
																							"name": "Identifier",
																							"src": "4134:3:0"
																						}
																					],
																					"id": 191,
																					"name": "MemberAccess",
																					"src": "4134:10:0"
																				}
																			],
																			"id": 192,
																			"name": "IndexAccess",
																			"src": "4126:19:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"hexvalue": "74727565",
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"subdenomination": null,
																				"token": "bool",
																				"type": "bool",
																				"value": "true"
																			},
																			"id": 193,
																			"name": "Literal",
																			"src": "4149:4:0"
																		}
																	],
																	"id": 194,
																	"name": "BinaryOperation",
																	"src": "4126:27:0"
																}
															],
															"id": 195,
															"name": "FunctionCall",
															"src": "4118:36:0"
														}
													],
													"id": 196,
													"name": "ExpressionStatement",
													"src": "4118:36:0"
												},
												{
													"id": 197,
													"name": "PlaceholderStatement",
													"src": "4165:1:0"
												}
											],
											"id": 198,
											"name": "Block",
											"src": "4107:67:0"
										}
									],
									"id": 199,
									"name": "ModifierDefinition",
									"src": "4085:89:0"
								},
								{
									"attributes": {
										"name": "canAskForInterest",
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 200,
											"name": "ParameterList",
											"src": "4208:2:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1429,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 201,
																	"name": "Identifier",
																	"src": "4222:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_enum$_State_$39",
																			"typeString": "enum Credit.State"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "==",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 41,
																				"type": "enum Credit.State",
																				"value": "state"
																			},
																			"id": 202,
																			"name": "Identifier",
																			"src": "4230:5:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"member_name": "interestReturns",
																				"referencedDeclaration": null,
																				"type": "enum Credit.State"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 39,
																						"type": "type(enum Credit.State)",
																						"value": "State"
																					},
																					"id": 203,
																					"name": "Identifier",
																					"src": "4239:5:0"
																				}
																			],
																			"id": 204,
																			"name": "MemberAccess",
																			"src": "4239:21:0"
																		}
																	],
																	"id": 205,
																	"name": "BinaryOperation",
																	"src": "4230:30:0"
																}
															],
															"id": 206,
															"name": "FunctionCall",
															"src": "4222:39:0"
														}
													],
													"id": 207,
													"name": "ExpressionStatement",
													"src": "4222:39:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1429,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 208,
																	"name": "Identifier",
																	"src": "4272:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": ">",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 49,
																						"type": "mapping(address => uint256)",
																						"value": "lendersInvestedAmount"
																					},
																					"id": 209,
																					"name": "Identifier",
																					"src": "4280:21:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "sender",
																						"referencedDeclaration": null,
																						"type": "address"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1426,
																								"type": "msg",
																								"value": "msg"
																							},
																							"id": 210,
																							"name": "Identifier",
																							"src": "4302:3:0"
																						}
																					],
																					"id": 211,
																					"name": "MemberAccess",
																					"src": "4302:10:0"
																				}
																			],
																			"id": 212,
																			"name": "IndexAccess",
																			"src": "4280:33:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"hexvalue": "30",
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"subdenomination": null,
																				"token": "number",
																				"type": "int_const 0",
																				"value": "0"
																			},
																			"id": 213,
																			"name": "Literal",
																			"src": "4316:1:0"
																		}
																	],
																	"id": 214,
																	"name": "BinaryOperation",
																	"src": "4280:37:0"
																}
															],
															"id": 215,
															"name": "FunctionCall",
															"src": "4272:46:0"
														}
													],
													"id": 216,
													"name": "ExpressionStatement",
													"src": "4272:46:0"
												},
												{
													"id": 217,
													"name": "PlaceholderStatement",
													"src": "4329:1:0"
												}
											],
											"id": 218,
											"name": "Block",
											"src": "4211:127:0"
										}
									],
									"id": 219,
									"name": "ModifierDefinition",
									"src": "4182:156:0"
								},
								{
									"attributes": {
										"name": "canInvest",
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 220,
											"name": "ParameterList",
											"src": "4364:2:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1429,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 221,
																	"name": "Identifier",
																	"src": "4378:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_enum$_State_$39",
																			"typeString": "enum Credit.State"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "==",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 41,
																				"type": "enum Credit.State",
																				"value": "state"
																			},
																			"id": 222,
																			"name": "Identifier",
																			"src": "4386:5:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"member_name": "investment",
																				"referencedDeclaration": null,
																				"type": "enum Credit.State"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 39,
																						"type": "type(enum Credit.State)",
																						"value": "State"
																					},
																					"id": 223,
																					"name": "Identifier",
																					"src": "4395:5:0"
																				}
																			],
																			"id": 224,
																			"name": "MemberAccess",
																			"src": "4395:16:0"
																		}
																	],
																	"id": 225,
																	"name": "BinaryOperation",
																	"src": "4386:25:0"
																}
															],
															"id": 226,
															"name": "FunctionCall",
															"src": "4378:34:0"
														}
													],
													"id": 227,
													"name": "ExpressionStatement",
													"src": "4378:34:0"
												},
												{
													"id": 228,
													"name": "PlaceholderStatement",
													"src": "4423:1:0"
												}
											],
											"id": 229,
											"name": "Block",
											"src": "4367:65:0"
										}
									],
									"id": 230,
									"name": "ModifierDefinition",
									"src": "4346:86:0"
								},
								{
									"attributes": {
										"name": "canRepay",
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 231,
											"name": "ParameterList",
											"src": "4457:2:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1429,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 232,
																	"name": "Identifier",
																	"src": "4471:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_enum$_State_$39",
																			"typeString": "enum Credit.State"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "==",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 41,
																				"type": "enum Credit.State",
																				"value": "state"
																			},
																			"id": 233,
																			"name": "Identifier",
																			"src": "4479:5:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"member_name": "repayment",
																				"referencedDeclaration": null,
																				"type": "enum Credit.State"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 39,
																						"type": "type(enum Credit.State)",
																						"value": "State"
																					},
																					"id": 234,
																					"name": "Identifier",
																					"src": "4488:5:0"
																				}
																			],
																			"id": 235,
																			"name": "MemberAccess",
																			"src": "4488:15:0"
																		}
																	],
																	"id": 236,
																	"name": "BinaryOperation",
																	"src": "4479:24:0"
																}
															],
															"id": 237,
															"name": "FunctionCall",
															"src": "4471:33:0"
														}
													],
													"id": 238,
													"name": "ExpressionStatement",
													"src": "4471:33:0"
												},
												{
													"id": 239,
													"name": "PlaceholderStatement",
													"src": "4515:1:0"
												}
											],
											"id": 240,
											"name": "Block",
											"src": "4460:64:0"
										}
									],
									"id": 241,
									"name": "ModifierDefinition",
									"src": "4440:84:0"
								},
								{
									"attributes": {
										"name": "canWithdraw",
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 242,
											"name": "ParameterList",
											"src": "4552:2:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1429,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 243,
																	"name": "Identifier",
																	"src": "4566:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": ">=",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"member_name": "balance",
																				"referencedDeclaration": null,
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 1443,
																						"type": "contract Credit",
																						"value": "this"
																					},
																					"id": 244,
																					"name": "Identifier",
																					"src": "4574:4:0"
																				}
																			],
																			"id": 245,
																			"name": "MemberAccess",
																			"src": "4574:12:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 12,
																				"type": "uint256",
																				"value": "requestedAmount"
																			},
																			"id": 246,
																			"name": "Identifier",
																			"src": "4590:15:0"
																		}
																	],
																	"id": 247,
																	"name": "BinaryOperation",
																	"src": "4574:31:0"
																}
															],
															"id": 248,
															"name": "FunctionCall",
															"src": "4566:40:0"
														}
													],
													"id": 249,
													"name": "ExpressionStatement",
													"src": "4566:40:0"
												},
												{
													"id": 250,
													"name": "PlaceholderStatement",
													"src": "4617:1:0"
												}
											],
											"id": 251,
											"name": "Block",
											"src": "4555:71:0"
										}
									],
									"id": 252,
									"name": "ModifierDefinition",
									"src": "4532:94:0"
								},
								{
									"attributes": {
										"name": "isNotFraud",
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 253,
											"name": "ParameterList",
											"src": "4653:2:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1429,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 254,
																	"name": "Identifier",
																	"src": "4667:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_enum$_State_$39",
																			"typeString": "enum Credit.State"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "!=",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 41,
																				"type": "enum Credit.State",
																				"value": "state"
																			},
																			"id": 255,
																			"name": "Identifier",
																			"src": "4675:5:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"member_name": "fraud",
																				"referencedDeclaration": null,
																				"type": "enum Credit.State"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 39,
																						"type": "type(enum Credit.State)",
																						"value": "State"
																					},
																					"id": 256,
																					"name": "Identifier",
																					"src": "4684:5:0"
																				}
																			],
																			"id": 257,
																			"name": "MemberAccess",
																			"src": "4684:11:0"
																		}
																	],
																	"id": 258,
																	"name": "BinaryOperation",
																	"src": "4675:20:0"
																}
															],
															"id": 259,
															"name": "FunctionCall",
															"src": "4667:29:0"
														}
													],
													"id": 260,
													"name": "ExpressionStatement",
													"src": "4667:29:0"
												},
												{
													"id": 261,
													"name": "PlaceholderStatement",
													"src": "4707:1:0"
												}
											],
											"id": 262,
											"name": "Block",
											"src": "4656:60:0"
										}
									],
									"id": 263,
									"name": "ModifierDefinition",
									"src": "4634:82:0"
								},
								{
									"attributes": {
										"name": "isRevokable",
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 264,
											"name": "ParameterList",
											"src": "4744:2:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1429,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 265,
																	"name": "Identifier",
																	"src": "4758:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": ">=",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"member_name": "timestamp",
																				"referencedDeclaration": null,
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 1418,
																						"type": "block",
																						"value": "block"
																					},
																					"id": 266,
																					"name": "Identifier",
																					"src": "4766:5:0"
																				}
																			],
																			"id": 267,
																			"name": "MemberAccess",
																			"src": "4766:15:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 59,
																				"type": "uint256",
																				"value": "revokeTimeNeeded"
																			},
																			"id": 268,
																			"name": "Identifier",
																			"src": "4785:16:0"
																		}
																	],
																	"id": 269,
																	"name": "BinaryOperation",
																	"src": "4766:35:0"
																}
															],
															"id": 270,
															"name": "FunctionCall",
															"src": "4758:44:0"
														}
													],
													"id": 271,
													"name": "ExpressionStatement",
													"src": "4758:44:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1429,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 272,
																	"name": "Identifier",
																	"src": "4813:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_enum$_State_$39",
																			"typeString": "enum Credit.State"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "==",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 41,
																				"type": "enum Credit.State",
																				"value": "state"
																			},
																			"id": 273,
																			"name": "Identifier",
																			"src": "4821:5:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"member_name": "investment",
																				"referencedDeclaration": null,
																				"type": "enum Credit.State"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 39,
																						"type": "type(enum Credit.State)",
																						"value": "State"
																					},
																					"id": 274,
																					"name": "Identifier",
																					"src": "4830:5:0"
																				}
																			],
																			"id": 275,
																			"name": "MemberAccess",
																			"src": "4830:16:0"
																		}
																	],
																	"id": 276,
																	"name": "BinaryOperation",
																	"src": "4821:25:0"
																}
															],
															"id": 277,
															"name": "FunctionCall",
															"src": "4813:34:0"
														}
													],
													"id": 278,
													"name": "ExpressionStatement",
													"src": "4813:34:0"
												},
												{
													"id": 279,
													"name": "PlaceholderStatement",
													"src": "4858:1:0"
												}
											],
											"id": 280,
											"name": "Block",
											"src": "4747:120:0"
										}
									],
									"id": 281,
									"name": "ModifierDefinition",
									"src": "4724:143:0"
								},
								{
									"attributes": {
										"name": "isRevoked",
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 282,
											"name": "ParameterList",
											"src": "4893:2:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1429,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 283,
																	"name": "Identifier",
																	"src": "4907:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_enum$_State_$39",
																			"typeString": "enum Credit.State"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "==",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 41,
																				"type": "enum Credit.State",
																				"value": "state"
																			},
																			"id": 284,
																			"name": "Identifier",
																			"src": "4915:5:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"member_name": "revoked",
																				"referencedDeclaration": null,
																				"type": "enum Credit.State"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 39,
																						"type": "type(enum Credit.State)",
																						"value": "State"
																					},
																					"id": 285,
																					"name": "Identifier",
																					"src": "4924:5:0"
																				}
																			],
																			"id": 286,
																			"name": "MemberAccess",
																			"src": "4924:13:0"
																		}
																	],
																	"id": 287,
																	"name": "BinaryOperation",
																	"src": "4915:22:0"
																}
															],
															"id": 288,
															"name": "FunctionCall",
															"src": "4907:31:0"
														}
													],
													"id": 289,
													"name": "ExpressionStatement",
													"src": "4907:31:0"
												},
												{
													"id": 290,
													"name": "PlaceholderStatement",
													"src": "4949:1:0"
												}
											],
											"id": 291,
											"name": "Block",
											"src": "4896:62:0"
										}
									],
									"id": 292,
									"name": "ModifierDefinition",
									"src": "4875:83:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": true,
										"modifiers": [
											null
										],
										"name": "Credit",
										"payable": false,
										"scope": 995,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_requestedAmount",
														"scope": 354,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 293,
															"name": "ElementaryTypeName",
															"src": "5204:4:0"
														}
													],
													"id": 294,
													"name": "VariableDeclaration",
													"src": "5204:21:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "_requestedRepayments",
														"scope": 354,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 295,
															"name": "ElementaryTypeName",
															"src": "5227:4:0"
														}
													],
													"id": 296,
													"name": "VariableDeclaration",
													"src": "5227:25:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "_interest",
														"scope": 354,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 297,
															"name": "ElementaryTypeName",
															"src": "5254:4:0"
														}
													],
													"id": 298,
													"name": "VariableDeclaration",
													"src": "5254:14:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "_description",
														"scope": 354,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "bytes32",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "bytes32",
																"type": "bytes32"
															},
															"id": 299,
															"name": "ElementaryTypeName",
															"src": "5270:7:0"
														}
													],
													"id": 300,
													"name": "VariableDeclaration",
													"src": "5270:20:0"
												}
											],
											"id": 301,
											"name": "ParameterList",
											"src": "5203:88:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 302,
											"name": "ParameterList",
											"src": "5299:0:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "address"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 10,
																		"type": "address",
																		"value": "borrower"
																	},
																	"id": 303,
																	"name": "Identifier",
																	"src": "5538:8:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "origin",
																		"referencedDeclaration": null,
																		"type": "address"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1436,
																				"type": "tx",
																				"value": "tx"
																			},
																			"id": 304,
																			"name": "Identifier",
																			"src": "5549:2:0"
																		}
																	],
																	"id": 305,
																	"name": "MemberAccess",
																	"src": "5549:9:0"
																}
															],
															"id": 306,
															"name": "Assignment",
															"src": "5538:20:0"
														}
													],
													"id": 307,
													"name": "ExpressionStatement",
													"src": "5538:20:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 18,
																		"type": "uint256",
																		"value": "interest"
																	},
																	"id": 308,
																	"name": "Identifier",
																	"src": "5616:8:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 298,
																		"type": "uint256",
																		"value": "_interest"
																	},
																	"id": 309,
																	"name": "Identifier",
																	"src": "5627:9:0"
																}
															],
															"id": 310,
															"name": "Assignment",
															"src": "5616:20:0"
														}
													],
													"id": 311,
													"name": "ExpressionStatement",
													"src": "5616:20:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 12,
																		"type": "uint256",
																		"value": "requestedAmount"
																	},
																	"id": 312,
																	"name": "Identifier",
																	"src": "5687:15:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 294,
																		"type": "uint256",
																		"value": "_requestedAmount"
																	},
																	"id": 313,
																	"name": "Identifier",
																	"src": "5705:16:0"
																}
															],
															"id": 314,
															"name": "Assignment",
															"src": "5687:34:0"
														}
													],
													"id": 315,
													"name": "ExpressionStatement",
													"src": "5687:34:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 20,
																		"type": "uint256",
																		"value": "requestedRepayments"
																	},
																	"id": 316,
																	"name": "Identifier",
																	"src": "5776:19:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 296,
																		"type": "uint256",
																		"value": "_requestedRepayments"
																	},
																	"id": 317,
																	"name": "Identifier",
																	"src": "5798:20:0"
																}
															],
															"id": 318,
															"name": "Assignment",
															"src": "5776:42:0"
														}
													],
													"id": 319,
													"name": "ExpressionStatement",
													"src": "5776:42:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 22,
																		"type": "uint256",
																		"value": "remainingRepayments"
																	},
																	"id": 320,
																	"name": "Identifier",
																	"src": "5954:19:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 296,
																		"type": "uint256",
																		"value": "_requestedRepayments"
																	},
																	"id": 321,
																	"name": "Identifier",
																	"src": "5976:20:0"
																}
															],
															"id": 322,
															"name": "Assignment",
															"src": "5954:42:0"
														}
													],
													"id": 323,
													"name": "ExpressionStatement",
													"src": "5954:42:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 14,
																		"type": "uint256",
																		"value": "returnAmount"
																	},
																	"id": 324,
																	"name": "Identifier",
																	"src": "6179:12:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"isStructConstructorCall": false,
																		"lValueRequested": false,
																		"names": [
																			null
																		],
																		"type": "uint256",
																		"type_conversion": false
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"member_name": "add",
																				"referencedDeclaration": 1413,
																				"type": "function (uint256,uint256) pure returns (uint256)"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 12,
																						"type": "uint256",
																						"value": "requestedAmount"
																					},
																					"id": 325,
																					"name": "Identifier",
																					"src": "6194:15:0"
																				}
																			],
																			"id": 326,
																			"name": "MemberAccess",
																			"src": "6194:19:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 18,
																				"type": "uint256",
																				"value": "interest"
																			},
																			"id": 327,
																			"name": "Identifier",
																			"src": "6214:8:0"
																		}
																	],
																	"id": 328,
																	"name": "FunctionCall",
																	"src": "6194:29:0"
																}
															],
															"id": 329,
															"name": "Assignment",
															"src": "6179:44:0"
														}
													],
													"id": 330,
													"name": "ExpressionStatement",
													"src": "6179:44:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 24,
																		"type": "uint256",
																		"value": "repaymentInstallment"
																	},
																	"id": 331,
																	"name": "Identifier",
																	"src": "6396:20:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"isStructConstructorCall": false,
																		"lValueRequested": false,
																		"names": [
																			null
																		],
																		"type": "uint256",
																		"type_conversion": false
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"member_name": "div",
																				"referencedDeclaration": 1369,
																				"type": "function (uint256,uint256) pure returns (uint256)"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 14,
																						"type": "uint256",
																						"value": "returnAmount"
																					},
																					"id": 332,
																					"name": "Identifier",
																					"src": "6419:12:0"
																				}
																			],
																			"id": 333,
																			"name": "MemberAccess",
																			"src": "6419:16:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 20,
																				"type": "uint256",
																				"value": "requestedRepayments"
																			},
																			"id": 334,
																			"name": "Identifier",
																			"src": "6436:19:0"
																		}
																	],
																	"id": 335,
																	"name": "FunctionCall",
																	"src": "6419:37:0"
																}
															],
															"id": 336,
															"name": "Assignment",
															"src": "6396:60:0"
														}
													],
													"id": 337,
													"name": "ExpressionStatement",
													"src": "6396:60:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "bytes32"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 30,
																		"type": "bytes32",
																		"value": "description"
																	},
																	"id": 338,
																	"name": "Identifier",
																	"src": "6509:11:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 300,
																		"type": "bytes32",
																		"value": "_description"
																	},
																	"id": 339,
																	"name": "Identifier",
																	"src": "6523:12:0"
																}
															],
															"id": 340,
															"name": "Assignment",
															"src": "6509:26:0"
														}
													],
													"id": 341,
													"name": "ExpressionStatement",
													"src": "6509:26:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 26,
																		"type": "uint256",
																		"value": "requestedDate"
																	},
																	"id": 342,
																	"name": "Identifier",
																	"src": "6589:13:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "timestamp",
																		"referencedDeclaration": null,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1418,
																				"type": "block",
																				"value": "block"
																			},
																			"id": 343,
																			"name": "Identifier",
																			"src": "6605:5:0"
																		}
																	],
																	"id": 344,
																	"name": "MemberAccess",
																	"src": "6605:15:0"
																}
															],
															"id": 345,
															"name": "Assignment",
															"src": "6589:31:0"
														}
													],
													"id": 346,
													"name": "ExpressionStatement",
													"src": "6589:31:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 71,
																		"type": "function (address,uint256)",
																		"value": "LogCreditInitialized"
																	},
																	"id": 347,
																	"name": "Identifier",
																	"src": "6672:20:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 10,
																		"type": "address",
																		"value": "borrower"
																	},
																	"id": 348,
																	"name": "Identifier",
																	"src": "6693:8:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "timestamp",
																		"referencedDeclaration": null,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1418,
																				"type": "block",
																				"value": "block"
																			},
																			"id": 349,
																			"name": "Identifier",
																			"src": "6703:5:0"
																		}
																	],
																	"id": 350,
																	"name": "MemberAccess",
																	"src": "6703:15:0"
																}
															],
															"id": 351,
															"name": "FunctionCall",
															"src": "6672:47:0"
														}
													],
													"id": 352,
													"name": "ExpressionStatement",
													"src": "6672:47:0"
												}
											],
											"id": 353,
											"name": "Block",
											"src": "5299:1428:0"
										}
									],
									"id": 354,
									"name": "FunctionDefinition",
									"src": "5188:1539:0"
								},
								{
									"attributes": {
										"constant": true,
										"implemented": true,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "getBalance",
										"payable": false,
										"scope": 995,
										"stateMutability": "view",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 355,
											"name": "ParameterList",
											"src": "6829:2:0"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 363,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 356,
															"name": "ElementaryTypeName",
															"src": "6853:7:0"
														}
													],
													"id": 357,
													"name": "VariableDeclaration",
													"src": "6853:7:0"
												}
											],
											"id": 358,
											"name": "ParameterList",
											"src": "6852:9:0"
										},
										{
											"children": [
												{
													"attributes": {
														"functionReturnParameters": 358
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"member_name": "balance",
																"referencedDeclaration": null,
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1443,
																		"type": "contract Credit",
																		"value": "this"
																	},
																	"id": 359,
																	"name": "Identifier",
																	"src": "6880:4:0"
																}
															],
															"id": 360,
															"name": "MemberAccess",
															"src": "6880:12:0"
														}
													],
													"id": 361,
													"name": "Return",
													"src": "6873:19:0"
												}
											],
											"id": 362,
											"name": "Block",
											"src": "6862:38:0"
										}
									],
									"id": 363,
									"name": "FunctionDefinition",
									"src": "6810:90:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "invest",
										"payable": true,
										"scope": 995,
										"stateMutability": "payable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 364,
											"name": "ParameterList",
											"src": "7087:2:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 367,
											"name": "ParameterList",
											"src": "7115:0:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 230,
														"type": "modifier ()",
														"value": "canInvest"
													},
													"id": 365,
													"name": "Identifier",
													"src": "7097:9:0"
												}
											],
											"id": 366,
											"name": "ModifierInvocation",
											"src": "7097:9:0"
										},
										{
											"children": [
												{
													"attributes": {
														"assignments": [
															369
														]
													},
													"children": [
														{
															"attributes": {
																"constant": false,
																"name": "extraMoney",
																"scope": 475,
																"stateVariable": false,
																"storageLocation": "default",
																"type": "uint256",
																"value": null,
																"visibility": "internal"
															},
															"children": [
																{
																	"attributes": {
																		"name": "uint",
																		"type": "uint256"
																	},
																	"id": 368,
																	"name": "ElementaryTypeName",
																	"src": "7213:4:0"
																}
															],
															"id": 369,
															"name": "VariableDeclaration",
															"src": "7213:15:0"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"hexvalue": "30",
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"subdenomination": null,
																"token": "number",
																"type": "int_const 0",
																"value": "0"
															},
															"id": 370,
															"name": "Literal",
															"src": "7231:1:0"
														}
													],
													"id": 371,
													"name": "VariableDeclarationStatement",
													"src": "7213:19:0"
												},
												{
													"attributes": {
														"falseBody": null
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": ">=",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "balance",
																		"referencedDeclaration": null,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1443,
																				"type": "contract Credit",
																				"value": "this"
																			},
																			"id": 372,
																			"name": "Identifier",
																			"src": "7320:4:0"
																		}
																	],
																	"id": 373,
																	"name": "MemberAccess",
																	"src": "7320:12:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 12,
																		"type": "uint256",
																		"value": "requestedAmount"
																	},
																	"id": 374,
																	"name": "Identifier",
																	"src": "7336:15:0"
																}
															],
															"id": 375,
															"name": "BinaryOperation",
															"src": "7320:31:0"
														},
														{
															"children": [
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"operator": "=",
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 369,
																						"type": "uint256",
																						"value": "extraMoney"
																					},
																					"id": 376,
																					"name": "Identifier",
																					"src": "7437:10:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"isStructConstructorCall": false,
																						"lValueRequested": false,
																						"names": [
																							null
																						],
																						"type": "uint256",
																						"type_conversion": false
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"member_name": "sub",
																								"referencedDeclaration": 1389,
																								"type": "function (uint256,uint256) pure returns (uint256)"
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"member_name": "balance",
																										"referencedDeclaration": null,
																										"type": "uint256"
																									},
																									"children": [
																										{
																											"attributes": {
																												"argumentTypes": null,
																												"overloadedDeclarations": [
																													null
																												],
																												"referencedDeclaration": 1443,
																												"type": "contract Credit",
																												"value": "this"
																											},
																											"id": 377,
																											"name": "Identifier",
																											"src": "7450:4:0"
																										}
																									],
																									"id": 378,
																									"name": "MemberAccess",
																									"src": "7450:12:0"
																								}
																							],
																							"id": 379,
																							"name": "MemberAccess",
																							"src": "7450:16:0"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 12,
																								"type": "uint256",
																								"value": "requestedAmount"
																							},
																							"id": 380,
																							"name": "Identifier",
																							"src": "7467:15:0"
																						}
																					],
																					"id": 381,
																					"name": "FunctionCall",
																					"src": "7450:33:0"
																				}
																			],
																			"id": 382,
																			"name": "Assignment",
																			"src": "7437:46:0"
																		}
																	],
																	"id": 383,
																	"name": "ExpressionStatement",
																	"src": "7437:46:0"
																},
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "tuple()",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						],
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 1417,
																						"type": "function (bool) pure",
																						"value": "assert"
																					},
																					"id": 384,
																					"name": "Identifier",
																					"src": "7540:6:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"operator": "==",
																						"type": "bool"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 12,
																								"type": "uint256",
																								"value": "requestedAmount"
																							},
																							"id": 385,
																							"name": "Identifier",
																							"src": "7547:15:0"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"isStructConstructorCall": false,
																								"lValueRequested": false,
																								"names": [
																									null
																								],
																								"type": "uint256",
																								"type_conversion": false
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										],
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"member_name": "sub",
																										"referencedDeclaration": 1389,
																										"type": "function (uint256,uint256) pure returns (uint256)"
																									},
																									"children": [
																										{
																											"attributes": {
																												"argumentTypes": null,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"lValueRequested": false,
																												"member_name": "balance",
																												"referencedDeclaration": null,
																												"type": "uint256"
																											},
																											"children": [
																												{
																													"attributes": {
																														"argumentTypes": null,
																														"overloadedDeclarations": [
																															null
																														],
																														"referencedDeclaration": 1443,
																														"type": "contract Credit",
																														"value": "this"
																													},
																													"id": 386,
																													"name": "Identifier",
																													"src": "7566:4:0"
																												}
																											],
																											"id": 387,
																											"name": "MemberAccess",
																											"src": "7566:12:0"
																										}
																									],
																									"id": 388,
																									"name": "MemberAccess",
																									"src": "7566:16:0"
																								},
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 369,
																										"type": "uint256",
																										"value": "extraMoney"
																									},
																									"id": 389,
																									"name": "Identifier",
																									"src": "7583:10:0"
																								}
																							],
																							"id": 390,
																							"name": "FunctionCall",
																							"src": "7566:28:0"
																						}
																					],
																					"id": 391,
																					"name": "BinaryOperation",
																					"src": "7547:47:0"
																				}
																			],
																			"id": 392,
																			"name": "FunctionCall",
																			"src": "7540:55:0"
																		}
																	],
																	"id": 393,
																	"name": "ExpressionStatement",
																	"src": "7540:55:0"
																},
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "tuple()",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						],
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 1417,
																						"type": "function (bool) pure",
																						"value": "assert"
																					},
																					"id": 394,
																					"name": "Identifier",
																					"src": "7669:6:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"operator": "<=",
																						"type": "bool"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 369,
																								"type": "uint256",
																								"value": "extraMoney"
																							},
																							"id": 395,
																							"name": "Identifier",
																							"src": "7676:10:0"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"member_name": "value",
																								"referencedDeclaration": null,
																								"type": "uint256"
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 1426,
																										"type": "msg",
																										"value": "msg"
																									},
																									"id": 396,
																									"name": "Identifier",
																									"src": "7690:3:0"
																								}
																							],
																							"id": 397,
																							"name": "MemberAccess",
																							"src": "7690:9:0"
																						}
																					],
																					"id": 398,
																					"name": "BinaryOperation",
																					"src": "7676:23:0"
																				}
																			],
																			"id": 399,
																			"name": "FunctionCall",
																			"src": "7669:31:0"
																		}
																	],
																	"id": 400,
																	"name": "ExpressionStatement",
																	"src": "7669:31:0"
																},
																{
																	"attributes": {
																		"falseBody": null
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"operator": ">",
																				"type": "bool"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 369,
																						"type": "uint256",
																						"value": "extraMoney"
																					},
																					"id": 401,
																					"name": "Identifier",
																					"src": "7781:10:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"hexvalue": "30",
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"subdenomination": null,
																						"token": "number",
																						"type": "int_const 0",
																						"value": "0"
																					},
																					"id": 402,
																					"name": "Literal",
																					"src": "7794:1:0"
																				}
																			],
																			"id": 403,
																			"name": "BinaryOperation",
																			"src": "7781:14:0"
																		},
																		{
																			"children": [
																				{
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"isStructConstructorCall": false,
																								"lValueRequested": false,
																								"names": [
																									null
																								],
																								"type": "tuple()",
																								"type_conversion": false
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										],
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"member_name": "transfer",
																										"referencedDeclaration": null,
																										"type": "function (uint256)"
																									},
																									"children": [
																										{
																											"attributes": {
																												"argumentTypes": null,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"lValueRequested": false,
																												"member_name": "sender",
																												"referencedDeclaration": null,
																												"type": "address"
																											},
																											"children": [
																												{
																													"attributes": {
																														"argumentTypes": null,
																														"overloadedDeclarations": [
																															null
																														],
																														"referencedDeclaration": 1426,
																														"type": "msg",
																														"value": "msg"
																													},
																													"id": 404,
																													"name": "Identifier",
																													"src": "7874:3:0"
																												}
																											],
																											"id": 407,
																											"name": "MemberAccess",
																											"src": "7874:10:0"
																										}
																									],
																									"id": 408,
																									"name": "MemberAccess",
																									"src": "7874:19:0"
																								},
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 369,
																										"type": "uint256",
																										"value": "extraMoney"
																									},
																									"id": 409,
																									"name": "Identifier",
																									"src": "7894:10:0"
																								}
																							],
																							"id": 410,
																							"name": "FunctionCall",
																							"src": "7874:31:0"
																						}
																					],
																					"id": 411,
																					"name": "ExpressionStatement",
																					"src": "7874:31:0"
																				},
																				{
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"isStructConstructorCall": false,
																								"lValueRequested": false,
																								"names": [
																									null
																								],
																								"type": "tuple()",
																								"type_conversion": false
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_address",
																												"typeString": "address"
																											},
																											{
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											},
																											{
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										],
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 145,
																										"type": "function (address,uint256,uint256)",
																										"value": "LogLenderChangeReturned"
																									},
																									"id": 412,
																									"name": "Identifier",
																									"src": "7967:23:0"
																								},
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"member_name": "sender",
																										"referencedDeclaration": null,
																										"type": "address"
																									},
																									"children": [
																										{
																											"attributes": {
																												"argumentTypes": null,
																												"overloadedDeclarations": [
																													null
																												],
																												"referencedDeclaration": 1426,
																												"type": "msg",
																												"value": "msg"
																											},
																											"id": 413,
																											"name": "Identifier",
																											"src": "7991:3:0"
																										}
																									],
																									"id": 414,
																									"name": "MemberAccess",
																									"src": "7991:10:0"
																								},
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 369,
																										"type": "uint256",
																										"value": "extraMoney"
																									},
																									"id": 415,
																									"name": "Identifier",
																									"src": "8003:10:0"
																								},
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"member_name": "timestamp",
																										"referencedDeclaration": null,
																										"type": "uint256"
																									},
																									"children": [
																										{
																											"attributes": {
																												"argumentTypes": null,
																												"overloadedDeclarations": [
																													null
																												],
																												"referencedDeclaration": 1418,
																												"type": "block",
																												"value": "block"
																											},
																											"id": 416,
																											"name": "Identifier",
																											"src": "8015:5:0"
																										}
																									],
																									"id": 417,
																									"name": "MemberAccess",
																									"src": "8015:15:0"
																								}
																							],
																							"id": 418,
																							"name": "FunctionCall",
																							"src": "7967:64:0"
																						}
																					],
																					"id": 419,
																					"name": "ExpressionStatement",
																					"src": "7967:64:0"
																				}
																			],
																			"id": 420,
																			"name": "Block",
																			"src": "7797:250:0"
																		}
																	],
																	"id": 421,
																	"name": "IfStatement",
																	"src": "7777:270:0"
																},
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"operator": "=",
																				"type": "enum Credit.State"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 41,
																						"type": "enum Credit.State",
																						"value": "state"
																					},
																					"id": 422,
																					"name": "Identifier",
																					"src": "8116:5:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"member_name": "repayment",
																						"referencedDeclaration": null,
																						"type": "enum Credit.State"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 39,
																								"type": "type(enum Credit.State)",
																								"value": "State"
																							},
																							"id": 423,
																							"name": "Identifier",
																							"src": "8124:5:0"
																						}
																					],
																					"id": 424,
																					"name": "MemberAccess",
																					"src": "8124:15:0"
																				}
																			],
																			"id": 425,
																			"name": "Assignment",
																			"src": "8116:23:0"
																		}
																	],
																	"id": 426,
																	"name": "ExpressionStatement",
																	"src": "8116:23:0"
																},
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "tuple()",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_enum$_State_$39",
																								"typeString": "enum Credit.State"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 77,
																						"type": "function (enum Credit.State,uint256)",
																						"value": "LogCreditStateChanged"
																					},
																					"id": 427,
																					"name": "Identifier",
																					"src": "8190:21:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 41,
																						"type": "enum Credit.State",
																						"value": "state"
																					},
																					"id": 428,
																					"name": "Identifier",
																					"src": "8212:5:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "timestamp",
																						"referencedDeclaration": null,
																						"type": "uint256"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1418,
																								"type": "block",
																								"value": "block"
																							},
																							"id": 429,
																							"name": "Identifier",
																							"src": "8219:5:0"
																						}
																					],
																					"id": 430,
																					"name": "MemberAccess",
																					"src": "8219:15:0"
																				}
																			],
																			"id": 431,
																			"name": "FunctionCall",
																			"src": "8190:45:0"
																		}
																	],
																	"id": 432,
																	"name": "ExpressionStatement",
																	"src": "8190:45:0"
																}
															],
															"id": 433,
															"name": "Block",
															"src": "7353:894:0"
														}
													],
													"id": 434,
													"name": "IfStatement",
													"src": "7316:931:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 45,
																				"type": "mapping(address => bool)",
																				"value": "lenders"
																			},
																			"id": 435,
																			"name": "Identifier",
																			"src": "8386:7:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"member_name": "sender",
																				"referencedDeclaration": null,
																				"type": "address"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 1426,
																						"type": "msg",
																						"value": "msg"
																					},
																					"id": 436,
																					"name": "Identifier",
																					"src": "8394:3:0"
																				}
																			],
																			"id": 437,
																			"name": "MemberAccess",
																			"src": "8394:10:0"
																		}
																	],
																	"id": 438,
																	"name": "IndexAccess",
																	"src": "8386:19:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "74727565",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "bool",
																		"type": "bool",
																		"value": "true"
																	},
																	"id": 439,
																	"name": "Literal",
																	"src": "8408:4:0"
																}
															],
															"id": 440,
															"name": "Assignment",
															"src": "8386:26:0"
														}
													],
													"id": 441,
													"name": "ExpressionStatement",
													"src": "8386:26:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "++",
																"prefix": false,
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 51,
																		"type": "uint256",
																		"value": "lendersCount"
																	},
																	"id": 442,
																	"name": "Identifier",
																	"src": "8466:12:0"
																}
															],
															"id": 443,
															"name": "UnaryOperation",
															"src": "8466:14:0"
														}
													],
													"id": 444,
													"name": "ExpressionStatement",
													"src": "8466:14:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 49,
																				"type": "mapping(address => uint256)",
																				"value": "lendersInvestedAmount"
																			},
																			"id": 445,
																			"name": "Identifier",
																			"src": "8552:21:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"member_name": "sender",
																				"referencedDeclaration": null,
																				"type": "address"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 1426,
																						"type": "msg",
																						"value": "msg"
																					},
																					"id": 446,
																					"name": "Identifier",
																					"src": "8574:3:0"
																				}
																			],
																			"id": 447,
																			"name": "MemberAccess",
																			"src": "8574:10:0"
																		}
																	],
																	"id": 448,
																	"name": "IndexAccess",
																	"src": "8552:33:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"isStructConstructorCall": false,
																		"lValueRequested": false,
																		"names": [
																			null
																		],
																		"type": "uint256",
																		"type_conversion": false
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"member_name": "add",
																				"referencedDeclaration": 1413,
																				"type": "function (uint256,uint256) pure returns (uint256)"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"type": "uint256"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 49,
																								"type": "mapping(address => uint256)",
																								"value": "lendersInvestedAmount"
																							},
																							"id": 449,
																							"name": "Identifier",
																							"src": "8588:21:0"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"member_name": "sender",
																								"referencedDeclaration": null,
																								"type": "address"
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 1426,
																										"type": "msg",
																										"value": "msg"
																									},
																									"id": 450,
																									"name": "Identifier",
																									"src": "8610:3:0"
																								}
																							],
																							"id": 451,
																							"name": "MemberAccess",
																							"src": "8610:10:0"
																						}
																					],
																					"id": 452,
																					"name": "IndexAccess",
																					"src": "8588:33:0"
																				}
																			],
																			"id": 453,
																			"name": "MemberAccess",
																			"src": "8588:37:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "uint256",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "sub",
																						"referencedDeclaration": 1389,
																						"type": "function (uint256,uint256) pure returns (uint256)"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"member_name": "value",
																								"referencedDeclaration": null,
																								"type": "uint256"
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 1426,
																										"type": "msg",
																										"value": "msg"
																									},
																									"id": 454,
																									"name": "Identifier",
																									"src": "8626:3:0"
																								}
																							],
																							"id": 455,
																							"name": "MemberAccess",
																							"src": "8626:9:0"
																						}
																					],
																					"id": 456,
																					"name": "MemberAccess",
																					"src": "8626:13:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 369,
																						"type": "uint256",
																						"value": "extraMoney"
																					},
																					"id": 457,
																					"name": "Identifier",
																					"src": "8640:10:0"
																				}
																			],
																			"id": 458,
																			"name": "FunctionCall",
																			"src": "8626:25:0"
																		}
																	],
																	"id": 459,
																	"name": "FunctionCall",
																	"src": "8588:64:0"
																}
															],
															"id": 460,
															"name": "Assignment",
															"src": "8552:100:0"
														}
													],
													"id": 461,
													"name": "ExpressionStatement",
													"src": "8552:100:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 129,
																		"type": "function (address,uint256,uint256)",
																		"value": "LogLenderInvestment"
																	},
																	"id": 462,
																	"name": "Identifier",
																	"src": "8705:19:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "sender",
																		"referencedDeclaration": null,
																		"type": "address"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1426,
																				"type": "msg",
																				"value": "msg"
																			},
																			"id": 463,
																			"name": "Identifier",
																			"src": "8725:3:0"
																		}
																	],
																	"id": 464,
																	"name": "MemberAccess",
																	"src": "8725:10:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"isStructConstructorCall": false,
																		"lValueRequested": false,
																		"names": [
																			null
																		],
																		"type": "uint256",
																		"type_conversion": false
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"member_name": "sub",
																				"referencedDeclaration": 1389,
																				"type": "function (uint256,uint256) pure returns (uint256)"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "value",
																						"referencedDeclaration": null,
																						"type": "uint256"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1426,
																								"type": "msg",
																								"value": "msg"
																							},
																							"id": 465,
																							"name": "Identifier",
																							"src": "8737:3:0"
																						}
																					],
																					"id": 466,
																					"name": "MemberAccess",
																					"src": "8737:9:0"
																				}
																			],
																			"id": 467,
																			"name": "MemberAccess",
																			"src": "8737:13:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 369,
																				"type": "uint256",
																				"value": "extraMoney"
																			},
																			"id": 468,
																			"name": "Identifier",
																			"src": "8751:10:0"
																		}
																	],
																	"id": 469,
																	"name": "FunctionCall",
																	"src": "8737:25:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "timestamp",
																		"referencedDeclaration": null,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1418,
																				"type": "block",
																				"value": "block"
																			},
																			"id": 470,
																			"name": "Identifier",
																			"src": "8764:5:0"
																		}
																	],
																	"id": 471,
																	"name": "MemberAccess",
																	"src": "8764:15:0"
																}
															],
															"id": 472,
															"name": "FunctionCall",
															"src": "8705:75:0"
														}
													],
													"id": 473,
													"name": "ExpressionStatement",
													"src": "8705:75:0"
												}
											],
											"id": 474,
											"name": "Block",
											"src": "7115:1673:0"
										}
									],
									"id": 475,
									"name": "FunctionDefinition",
									"src": "7072:1716:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "repay",
										"payable": true,
										"scope": 995,
										"stateMutability": "payable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 476,
											"name": "ParameterList",
											"src": "8911:2:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 481,
											"name": "ParameterList",
											"src": "8951:0:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 186,
														"type": "modifier ()",
														"value": "onlyBorrower"
													},
													"id": 477,
													"name": "Identifier",
													"src": "8921:12:0"
												}
											],
											"id": 478,
											"name": "ModifierInvocation",
											"src": "8921:12:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 241,
														"type": "modifier ()",
														"value": "canRepay"
													},
													"id": 479,
													"name": "Identifier",
													"src": "8934:8:0"
												}
											],
											"id": 480,
											"name": "ModifierInvocation",
											"src": "8934:8:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1429,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 482,
																	"name": "Identifier",
																	"src": "9037:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": ">",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 22,
																				"type": "uint256",
																				"value": "remainingRepayments"
																			},
																			"id": 483,
																			"name": "Identifier",
																			"src": "9045:19:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"hexvalue": "30",
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"subdenomination": null,
																				"token": "number",
																				"type": "int_const 0",
																				"value": "0"
																			},
																			"id": 484,
																			"name": "Literal",
																			"src": "9067:1:0"
																		}
																	],
																	"id": 485,
																	"name": "BinaryOperation",
																	"src": "9045:23:0"
																}
															],
															"id": 486,
															"name": "FunctionCall",
															"src": "9037:32:0"
														}
													],
													"id": 487,
													"name": "ExpressionStatement",
													"src": "9037:32:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1429,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 488,
																	"name": "Identifier",
																	"src": "9159:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": ">=",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"member_name": "value",
																				"referencedDeclaration": null,
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 1426,
																						"type": "msg",
																						"value": "msg"
																					},
																					"id": 489,
																					"name": "Identifier",
																					"src": "9167:3:0"
																				}
																			],
																			"id": 490,
																			"name": "MemberAccess",
																			"src": "9167:9:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 24,
																				"type": "uint256",
																				"value": "repaymentInstallment"
																			},
																			"id": 491,
																			"name": "Identifier",
																			"src": "9180:20:0"
																		}
																	],
																	"id": 492,
																	"name": "BinaryOperation",
																	"src": "9167:33:0"
																}
															],
															"id": 493,
															"name": "FunctionCall",
															"src": "9159:42:0"
														}
													],
													"id": 494,
													"name": "ExpressionStatement",
													"src": "9159:42:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1417,
																		"type": "function (bool) pure",
																		"value": "assert"
																	},
																	"id": 495,
																	"name": "Identifier",
																	"src": "9399:6:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "<",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 16,
																				"type": "uint256",
																				"value": "repaidAmount"
																			},
																			"id": 496,
																			"name": "Identifier",
																			"src": "9406:12:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 14,
																				"type": "uint256",
																				"value": "returnAmount"
																			},
																			"id": 497,
																			"name": "Identifier",
																			"src": "9421:12:0"
																		}
																	],
																	"id": 498,
																	"name": "BinaryOperation",
																	"src": "9406:27:0"
																}
															],
															"id": 499,
															"name": "FunctionCall",
															"src": "9399:35:0"
														}
													],
													"id": 500,
													"name": "ExpressionStatement",
													"src": "9399:35:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "--",
																"prefix": false,
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 22,
																		"type": "uint256",
																		"value": "remainingRepayments"
																	},
																	"id": 501,
																	"name": "Identifier",
																	"src": "9495:19:0"
																}
															],
															"id": 502,
															"name": "UnaryOperation",
															"src": "9495:21:0"
														}
													],
													"id": 503,
													"name": "ExpressionStatement",
													"src": "9495:21:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 28,
																		"type": "uint256",
																		"value": "lastRepaymentDate"
																	},
																	"id": 504,
																	"name": "Identifier",
																	"src": "9569:17:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "timestamp",
																		"referencedDeclaration": null,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1418,
																				"type": "block",
																				"value": "block"
																			},
																			"id": 505,
																			"name": "Identifier",
																			"src": "9589:5:0"
																		}
																	],
																	"id": 506,
																	"name": "MemberAccess",
																	"src": "9589:15:0"
																}
															],
															"id": 507,
															"name": "Assignment",
															"src": "9569:35:0"
														}
													],
													"id": 508,
													"name": "ExpressionStatement",
													"src": "9569:35:0"
												},
												{
													"attributes": {
														"assignments": [
															510
														]
													},
													"children": [
														{
															"attributes": {
																"constant": false,
																"name": "extraMoney",
																"scope": 607,
																"stateVariable": false,
																"storageLocation": "default",
																"type": "uint256",
																"value": null,
																"visibility": "internal"
															},
															"children": [
																{
																	"attributes": {
																		"name": "uint",
																		"type": "uint256"
																	},
																	"id": 509,
																	"name": "ElementaryTypeName",
																	"src": "9704:4:0"
																}
															],
															"id": 510,
															"name": "VariableDeclaration",
															"src": "9704:15:0"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"hexvalue": "30",
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"subdenomination": null,
																"token": "number",
																"type": "int_const 0",
																"value": "0"
															},
															"id": 511,
															"name": "Literal",
															"src": "9722:1:0"
														}
													],
													"id": 512,
													"name": "VariableDeclarationStatement",
													"src": "9704:19:0"
												},
												{
													"attributes": {
														"falseBody": null
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": ">",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "value",
																		"referencedDeclaration": null,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1426,
																				"type": "msg",
																				"value": "msg"
																			},
																			"id": 513,
																			"name": "Identifier",
																			"src": "9931:3:0"
																		}
																	],
																	"id": 514,
																	"name": "MemberAccess",
																	"src": "9931:9:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 24,
																		"type": "uint256",
																		"value": "repaymentInstallment"
																	},
																	"id": 515,
																	"name": "Identifier",
																	"src": "9943:20:0"
																}
															],
															"id": 516,
															"name": "BinaryOperation",
															"src": "9931:32:0"
														},
														{
															"children": [
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"operator": "=",
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 510,
																						"type": "uint256",
																						"value": "extraMoney"
																					},
																					"id": 517,
																					"name": "Identifier",
																					"src": "10055:10:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"isStructConstructorCall": false,
																						"lValueRequested": false,
																						"names": [
																							null
																						],
																						"type": "uint256",
																						"type_conversion": false
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"member_name": "sub",
																								"referencedDeclaration": 1389,
																								"type": "function (uint256,uint256) pure returns (uint256)"
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"member_name": "value",
																										"referencedDeclaration": null,
																										"type": "uint256"
																									},
																									"children": [
																										{
																											"attributes": {
																												"argumentTypes": null,
																												"overloadedDeclarations": [
																													null
																												],
																												"referencedDeclaration": 1426,
																												"type": "msg",
																												"value": "msg"
																											},
																											"id": 518,
																											"name": "Identifier",
																											"src": "10068:3:0"
																										}
																									],
																									"id": 519,
																									"name": "MemberAccess",
																									"src": "10068:9:0"
																								}
																							],
																							"id": 520,
																							"name": "MemberAccess",
																							"src": "10068:13:0"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 24,
																								"type": "uint256",
																								"value": "repaymentInstallment"
																							},
																							"id": 521,
																							"name": "Identifier",
																							"src": "10082:20:0"
																						}
																					],
																					"id": 522,
																					"name": "FunctionCall",
																					"src": "10068:35:0"
																				}
																			],
																			"id": 523,
																			"name": "Assignment",
																			"src": "10055:48:0"
																		}
																	],
																	"id": 524,
																	"name": "ExpressionStatement",
																	"src": "10055:48:0"
																},
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "tuple()",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						],
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 1417,
																						"type": "function (bool) pure",
																						"value": "assert"
																					},
																					"id": 525,
																					"name": "Identifier",
																					"src": "10161:6:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"operator": "==",
																						"type": "bool"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 24,
																								"type": "uint256",
																								"value": "repaymentInstallment"
																							},
																							"id": 526,
																							"name": "Identifier",
																							"src": "10168:20:0"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"isStructConstructorCall": false,
																								"lValueRequested": false,
																								"names": [
																									null
																								],
																								"type": "uint256",
																								"type_conversion": false
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										],
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"member_name": "sub",
																										"referencedDeclaration": 1389,
																										"type": "function (uint256,uint256) pure returns (uint256)"
																									},
																									"children": [
																										{
																											"attributes": {
																												"argumentTypes": null,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"lValueRequested": false,
																												"member_name": "value",
																												"referencedDeclaration": null,
																												"type": "uint256"
																											},
																											"children": [
																												{
																													"attributes": {
																														"argumentTypes": null,
																														"overloadedDeclarations": [
																															null
																														],
																														"referencedDeclaration": 1426,
																														"type": "msg",
																														"value": "msg"
																													},
																													"id": 527,
																													"name": "Identifier",
																													"src": "10192:3:0"
																												}
																											],
																											"id": 528,
																											"name": "MemberAccess",
																											"src": "10192:9:0"
																										}
																									],
																									"id": 529,
																									"name": "MemberAccess",
																									"src": "10192:13:0"
																								},
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 510,
																										"type": "uint256",
																										"value": "extraMoney"
																									},
																									"id": 530,
																									"name": "Identifier",
																									"src": "10206:10:0"
																								}
																							],
																							"id": 531,
																							"name": "FunctionCall",
																							"src": "10192:25:0"
																						}
																					],
																					"id": 532,
																					"name": "BinaryOperation",
																					"src": "10168:49:0"
																				}
																			],
																			"id": 533,
																			"name": "FunctionCall",
																			"src": "10161:57:0"
																		}
																	],
																	"id": 534,
																	"name": "ExpressionStatement",
																	"src": "10161:57:0"
																},
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "tuple()",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						],
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 1417,
																						"type": "function (bool) pure",
																						"value": "assert"
																					},
																					"id": 535,
																					"name": "Identifier",
																					"src": "10273:6:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"operator": "<=",
																						"type": "bool"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 510,
																								"type": "uint256",
																								"value": "extraMoney"
																							},
																							"id": 536,
																							"name": "Identifier",
																							"src": "10280:10:0"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"member_name": "value",
																								"referencedDeclaration": null,
																								"type": "uint256"
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 1426,
																										"type": "msg",
																										"value": "msg"
																									},
																									"id": 537,
																									"name": "Identifier",
																									"src": "10294:3:0"
																								}
																							],
																							"id": 538,
																							"name": "MemberAccess",
																							"src": "10294:9:0"
																						}
																					],
																					"id": 539,
																					"name": "BinaryOperation",
																					"src": "10280:23:0"
																				}
																			],
																			"id": 540,
																			"name": "FunctionCall",
																			"src": "10273:31:0"
																		}
																	],
																	"id": 541,
																	"name": "ExpressionStatement",
																	"src": "10273:31:0"
																},
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "tuple()",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "transfer",
																						"referencedDeclaration": null,
																						"type": "function (uint256)"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"member_name": "sender",
																								"referencedDeclaration": null,
																								"type": "address"
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 1426,
																										"type": "msg",
																										"value": "msg"
																									},
																									"id": 542,
																									"name": "Identifier",
																									"src": "10386:3:0"
																								}
																							],
																							"id": 545,
																							"name": "MemberAccess",
																							"src": "10386:10:0"
																						}
																					],
																					"id": 546,
																					"name": "MemberAccess",
																					"src": "10386:19:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 510,
																						"type": "uint256",
																						"value": "extraMoney"
																					},
																					"id": 547,
																					"name": "Identifier",
																					"src": "10406:10:0"
																				}
																			],
																			"id": 548,
																			"name": "FunctionCall",
																			"src": "10386:31:0"
																		}
																	],
																	"id": 549,
																	"name": "ExpressionStatement",
																	"src": "10386:31:0"
																},
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "tuple()",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 113,
																						"type": "function (address,uint256,uint256)",
																						"value": "LogBorrowerChangeReturned"
																					},
																					"id": 550,
																					"name": "Identifier",
																					"src": "10485:25:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "sender",
																						"referencedDeclaration": null,
																						"type": "address"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1426,
																								"type": "msg",
																								"value": "msg"
																							},
																							"id": 551,
																							"name": "Identifier",
																							"src": "10511:3:0"
																						}
																					],
																					"id": 552,
																					"name": "MemberAccess",
																					"src": "10511:10:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 510,
																						"type": "uint256",
																						"value": "extraMoney"
																					},
																					"id": 553,
																					"name": "Identifier",
																					"src": "10523:10:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "timestamp",
																						"referencedDeclaration": null,
																						"type": "uint256"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1418,
																								"type": "block",
																								"value": "block"
																							},
																							"id": 554,
																							"name": "Identifier",
																							"src": "10535:5:0"
																						}
																					],
																					"id": 555,
																					"name": "MemberAccess",
																					"src": "10535:15:0"
																				}
																			],
																			"id": 556,
																			"name": "FunctionCall",
																			"src": "10485:66:0"
																		}
																	],
																	"id": 557,
																	"name": "ExpressionStatement",
																	"src": "10485:66:0"
																}
															],
															"id": 558,
															"name": "Block",
															"src": "9965:598:0"
														}
													],
													"id": 559,
													"name": "IfStatement",
													"src": "9927:636:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 99,
																		"type": "function (address,uint256,uint256)",
																		"value": "LogBorrowerRepaymentInstallment"
																	},
																	"id": 560,
																	"name": "Identifier",
																	"src": "10622:31:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "sender",
																		"referencedDeclaration": null,
																		"type": "address"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1426,
																				"type": "msg",
																				"value": "msg"
																			},
																			"id": 561,
																			"name": "Identifier",
																			"src": "10654:3:0"
																		}
																	],
																	"id": 562,
																	"name": "MemberAccess",
																	"src": "10654:10:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"isStructConstructorCall": false,
																		"lValueRequested": false,
																		"names": [
																			null
																		],
																		"type": "uint256",
																		"type_conversion": false
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"member_name": "sub",
																				"referencedDeclaration": 1389,
																				"type": "function (uint256,uint256) pure returns (uint256)"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "value",
																						"referencedDeclaration": null,
																						"type": "uint256"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1426,
																								"type": "msg",
																								"value": "msg"
																							},
																							"id": 563,
																							"name": "Identifier",
																							"src": "10666:3:0"
																						}
																					],
																					"id": 564,
																					"name": "MemberAccess",
																					"src": "10666:9:0"
																				}
																			],
																			"id": 565,
																			"name": "MemberAccess",
																			"src": "10666:13:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 510,
																				"type": "uint256",
																				"value": "extraMoney"
																			},
																			"id": 566,
																			"name": "Identifier",
																			"src": "10680:10:0"
																		}
																	],
																	"id": 567,
																	"name": "FunctionCall",
																	"src": "10666:25:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "timestamp",
																		"referencedDeclaration": null,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1418,
																				"type": "block",
																				"value": "block"
																			},
																			"id": 568,
																			"name": "Identifier",
																			"src": "10693:5:0"
																		}
																	],
																	"id": 569,
																	"name": "MemberAccess",
																	"src": "10693:15:0"
																}
															],
															"id": 570,
															"name": "FunctionCall",
															"src": "10622:87:0"
														}
													],
													"id": 571,
													"name": "ExpressionStatement",
													"src": "10622:87:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 16,
																		"type": "uint256",
																		"value": "repaidAmount"
																	},
																	"id": 572,
																	"name": "Identifier",
																	"src": "10799:12:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"isStructConstructorCall": false,
																		"lValueRequested": false,
																		"names": [
																			null
																		],
																		"type": "uint256",
																		"type_conversion": false
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"member_name": "add",
																				"referencedDeclaration": 1413,
																				"type": "function (uint256,uint256) pure returns (uint256)"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 16,
																						"type": "uint256",
																						"value": "repaidAmount"
																					},
																					"id": 573,
																					"name": "Identifier",
																					"src": "10814:12:0"
																				}
																			],
																			"id": 574,
																			"name": "MemberAccess",
																			"src": "10814:16:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "uint256",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "sub",
																						"referencedDeclaration": 1389,
																						"type": "function (uint256,uint256) pure returns (uint256)"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"member_name": "value",
																								"referencedDeclaration": null,
																								"type": "uint256"
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 1426,
																										"type": "msg",
																										"value": "msg"
																									},
																									"id": 575,
																									"name": "Identifier",
																									"src": "10831:3:0"
																								}
																							],
																							"id": 576,
																							"name": "MemberAccess",
																							"src": "10831:9:0"
																						}
																					],
																					"id": 577,
																					"name": "MemberAccess",
																					"src": "10831:13:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 510,
																						"type": "uint256",
																						"value": "extraMoney"
																					},
																					"id": 578,
																					"name": "Identifier",
																					"src": "10845:10:0"
																				}
																			],
																			"id": 579,
																			"name": "FunctionCall",
																			"src": "10831:25:0"
																		}
																	],
																	"id": 580,
																	"name": "FunctionCall",
																	"src": "10814:43:0"
																}
															],
															"id": 581,
															"name": "Assignment",
															"src": "10799:58:0"
														}
													],
													"id": 582,
													"name": "ExpressionStatement",
													"src": "10799:58:0"
												},
												{
													"attributes": {
														"falseBody": null
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "==",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 16,
																		"type": "uint256",
																		"value": "repaidAmount"
																	},
																	"id": 583,
																	"name": "Identifier",
																	"src": "10945:12:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 14,
																		"type": "uint256",
																		"value": "returnAmount"
																	},
																	"id": 584,
																	"name": "Identifier",
																	"src": "10961:12:0"
																}
															],
															"id": 585,
															"name": "BinaryOperation",
															"src": "10945:28:0"
														},
														{
															"children": [
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "tuple()",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 105,
																						"type": "function (address,uint256)",
																						"value": "LogBorrowerRepaymentFinished"
																					},
																					"id": 586,
																					"name": "Identifier",
																					"src": "11027:28:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "sender",
																						"referencedDeclaration": null,
																						"type": "address"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1426,
																								"type": "msg",
																								"value": "msg"
																							},
																							"id": 587,
																							"name": "Identifier",
																							"src": "11056:3:0"
																						}
																					],
																					"id": 588,
																					"name": "MemberAccess",
																					"src": "11056:10:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "timestamp",
																						"referencedDeclaration": null,
																						"type": "uint256"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1418,
																								"type": "block",
																								"value": "block"
																							},
																							"id": 589,
																							"name": "Identifier",
																							"src": "11068:5:0"
																						}
																					],
																					"id": 590,
																					"name": "MemberAccess",
																					"src": "11068:15:0"
																				}
																			],
																			"id": 591,
																			"name": "FunctionCall",
																			"src": "11027:57:0"
																		}
																	],
																	"id": 592,
																	"name": "ExpressionStatement",
																	"src": "11027:57:0"
																},
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"operator": "=",
																				"type": "enum Credit.State"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 41,
																						"type": "enum Credit.State",
																						"value": "state"
																					},
																					"id": 593,
																					"name": "Identifier",
																					"src": "11164:5:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"member_name": "interestReturns",
																						"referencedDeclaration": null,
																						"type": "enum Credit.State"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 39,
																								"type": "type(enum Credit.State)",
																								"value": "State"
																							},
																							"id": 594,
																							"name": "Identifier",
																							"src": "11172:5:0"
																						}
																					],
																					"id": 595,
																					"name": "MemberAccess",
																					"src": "11172:21:0"
																				}
																			],
																			"id": 596,
																			"name": "Assignment",
																			"src": "11164:29:0"
																		}
																	],
																	"id": 597,
																	"name": "ExpressionStatement",
																	"src": "11164:29:0"
																},
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "tuple()",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_enum$_State_$39",
																								"typeString": "enum Credit.State"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 77,
																						"type": "function (enum Credit.State,uint256)",
																						"value": "LogCreditStateChanged"
																					},
																					"id": 598,
																					"name": "Identifier",
																					"src": "11244:21:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 41,
																						"type": "enum Credit.State",
																						"value": "state"
																					},
																					"id": 599,
																					"name": "Identifier",
																					"src": "11266:5:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "timestamp",
																						"referencedDeclaration": null,
																						"type": "uint256"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1418,
																								"type": "block",
																								"value": "block"
																							},
																							"id": 600,
																							"name": "Identifier",
																							"src": "11273:5:0"
																						}
																					],
																					"id": 601,
																					"name": "MemberAccess",
																					"src": "11273:15:0"
																				}
																			],
																			"id": 602,
																			"name": "FunctionCall",
																			"src": "11244:45:0"
																		}
																	],
																	"id": 603,
																	"name": "ExpressionStatement",
																	"src": "11244:45:0"
																}
															],
															"id": 604,
															"name": "Block",
															"src": "10975:326:0"
														}
													],
													"id": 605,
													"name": "IfStatement",
													"src": "10941:360:0"
												}
											],
											"id": 606,
											"name": "Block",
											"src": "8951:2357:0"
										}
									],
									"id": 607,
									"name": "FunctionDefinition",
									"src": "8897:2411:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "withdraw",
										"payable": false,
										"scope": 995,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 608,
											"name": "ParameterList",
											"src": "11668:2:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 617,
											"name": "ParameterList",
											"src": "11723:0:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 175,
														"type": "modifier ()",
														"value": "isActive"
													},
													"id": 609,
													"name": "Identifier",
													"src": "11678:8:0"
												}
											],
											"id": 610,
											"name": "ModifierInvocation",
											"src": "11678:8:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 186,
														"type": "modifier ()",
														"value": "onlyBorrower"
													},
													"id": 611,
													"name": "Identifier",
													"src": "11687:12:0"
												}
											],
											"id": 612,
											"name": "ModifierInvocation",
											"src": "11687:12:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 252,
														"type": "modifier ()",
														"value": "canWithdraw"
													},
													"id": 613,
													"name": "Identifier",
													"src": "11700:11:0"
												}
											],
											"id": 614,
											"name": "ModifierInvocation",
											"src": "11700:11:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 263,
														"type": "modifier ()",
														"value": "isNotFraud"
													},
													"id": 615,
													"name": "Identifier",
													"src": "11712:10:0"
												}
											],
											"id": 616,
											"name": "ModifierInvocation",
											"src": "11712:10:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "enum Credit.State"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 41,
																		"type": "enum Credit.State",
																		"value": "state"
																	},
																	"id": 618,
																	"name": "Identifier",
																	"src": "11801:5:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"member_name": "repayment",
																		"referencedDeclaration": null,
																		"type": "enum Credit.State"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 39,
																				"type": "type(enum Credit.State)",
																				"value": "State"
																			},
																			"id": 619,
																			"name": "Identifier",
																			"src": "11809:5:0"
																		}
																	],
																	"id": 620,
																	"name": "MemberAccess",
																	"src": "11809:15:0"
																}
															],
															"id": 621,
															"name": "Assignment",
															"src": "11801:23:0"
														}
													],
													"id": 622,
													"name": "ExpressionStatement",
													"src": "11801:23:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_enum$_State_$39",
																				"typeString": "enum Credit.State"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 77,
																		"type": "function (enum Credit.State,uint256)",
																		"value": "LogCreditStateChanged"
																	},
																	"id": 623,
																	"name": "Identifier",
																	"src": "11867:21:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 41,
																		"type": "enum Credit.State",
																		"value": "state"
																	},
																	"id": 624,
																	"name": "Identifier",
																	"src": "11889:5:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "timestamp",
																		"referencedDeclaration": null,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1418,
																				"type": "block",
																				"value": "block"
																			},
																			"id": 625,
																			"name": "Identifier",
																			"src": "11896:5:0"
																		}
																	],
																	"id": 626,
																	"name": "MemberAccess",
																	"src": "11896:15:0"
																}
															],
															"id": 627,
															"name": "FunctionCall",
															"src": "11867:45:0"
														}
													],
													"id": 628,
													"name": "ExpressionStatement",
													"src": "11867:45:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 91,
																		"type": "function (address,uint256,uint256)",
																		"value": "LogBorrowerWithdrawal"
																	},
																	"id": 629,
																	"name": "Identifier",
																	"src": "11962:21:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "sender",
																		"referencedDeclaration": null,
																		"type": "address"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1426,
																				"type": "msg",
																				"value": "msg"
																			},
																			"id": 630,
																			"name": "Identifier",
																			"src": "11984:3:0"
																		}
																	],
																	"id": 631,
																	"name": "MemberAccess",
																	"src": "11984:10:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "balance",
																		"referencedDeclaration": null,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1443,
																				"type": "contract Credit",
																				"value": "this"
																			},
																			"id": 632,
																			"name": "Identifier",
																			"src": "11996:4:0"
																		}
																	],
																	"id": 633,
																	"name": "MemberAccess",
																	"src": "11996:12:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "timestamp",
																		"referencedDeclaration": null,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1418,
																				"type": "block",
																				"value": "block"
																			},
																			"id": 634,
																			"name": "Identifier",
																			"src": "12010:5:0"
																		}
																	],
																	"id": 635,
																	"name": "MemberAccess",
																	"src": "12010:15:0"
																}
															],
															"id": 636,
															"name": "FunctionCall",
															"src": "11962:64:0"
														}
													],
													"id": 637,
													"name": "ExpressionStatement",
													"src": "11962:64:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "transfer",
																		"referencedDeclaration": null,
																		"type": "function (uint256)"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 10,
																				"type": "address",
																				"value": "borrower"
																			},
																			"id": 638,
																			"name": "Identifier",
																			"src": "12104:8:0"
																		}
																	],
																	"id": 640,
																	"name": "MemberAccess",
																	"src": "12104:17:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "balance",
																		"referencedDeclaration": null,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1443,
																				"type": "contract Credit",
																				"value": "this"
																			},
																			"id": 641,
																			"name": "Identifier",
																			"src": "12122:4:0"
																		}
																	],
																	"id": 642,
																	"name": "MemberAccess",
																	"src": "12122:12:0"
																}
															],
															"id": 643,
															"name": "FunctionCall",
															"src": "12104:31:0"
														}
													],
													"id": 644,
													"name": "ExpressionStatement",
													"src": "12104:31:0"
												}
											],
											"id": 645,
											"name": "Block",
											"src": "11723:420:0"
										}
									],
									"id": 646,
									"name": "FunctionDefinition",
									"src": "11651:492:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "requestInterest",
										"payable": false,
										"scope": 995,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 647,
											"name": "ParameterList",
											"src": "12502:2:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 654,
											"name": "ParameterList",
											"src": "12550:0:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 175,
														"type": "modifier ()",
														"value": "isActive"
													},
													"id": 648,
													"name": "Identifier",
													"src": "12512:8:0"
												}
											],
											"id": 649,
											"name": "ModifierInvocation",
											"src": "12512:8:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 199,
														"type": "modifier ()",
														"value": "onlyLender"
													},
													"id": 650,
													"name": "Identifier",
													"src": "12521:10:0"
												}
											],
											"id": 651,
											"name": "ModifierInvocation",
											"src": "12521:10:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 219,
														"type": "modifier ()",
														"value": "canAskForInterest"
													},
													"id": 652,
													"name": "Identifier",
													"src": "12532:17:0"
												}
											],
											"id": 653,
											"name": "ModifierInvocation",
											"src": "12532:17:0"
										},
										{
											"children": [
												{
													"attributes": {
														"assignments": [
															656
														]
													},
													"children": [
														{
															"attributes": {
																"constant": false,
																"name": "lenderReturnAmount",
																"scope": 712,
																"stateVariable": false,
																"storageLocation": "default",
																"type": "uint256",
																"value": null,
																"visibility": "internal"
															},
															"children": [
																{
																	"attributes": {
																		"name": "uint",
																		"type": "uint256"
																	},
																	"id": 655,
																	"name": "ElementaryTypeName",
																	"src": "12769:4:0"
																}
															],
															"id": 656,
															"name": "VariableDeclaration",
															"src": "12769:23:0"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "/",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 14,
																		"type": "uint256",
																		"value": "returnAmount"
																	},
																	"id": 657,
																	"name": "Identifier",
																	"src": "12795:12:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 51,
																		"type": "uint256",
																		"value": "lendersCount"
																	},
																	"id": 658,
																	"name": "Identifier",
																	"src": "12810:12:0"
																}
															],
															"id": 659,
															"name": "BinaryOperation",
															"src": "12795:27:0"
														}
													],
													"id": 660,
													"name": "VariableDeclarationStatement",
													"src": "12769:53:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1417,
																		"type": "function (bool) pure",
																		"value": "assert"
																	},
																	"id": 661,
																	"name": "Identifier",
																	"src": "12905:6:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": ">=",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"member_name": "balance",
																				"referencedDeclaration": null,
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 1443,
																						"type": "contract Credit",
																						"value": "this"
																					},
																					"id": 662,
																					"name": "Identifier",
																					"src": "12912:4:0"
																				}
																			],
																			"id": 663,
																			"name": "MemberAccess",
																			"src": "12912:12:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 656,
																				"type": "uint256",
																				"value": "lenderReturnAmount"
																			},
																			"id": 664,
																			"name": "Identifier",
																			"src": "12928:18:0"
																		}
																	],
																	"id": 665,
																	"name": "BinaryOperation",
																	"src": "12912:34:0"
																}
															],
															"id": 666,
															"name": "FunctionCall",
															"src": "12905:42:0"
														}
													],
													"id": 667,
													"name": "ExpressionStatement",
													"src": "12905:42:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "transfer",
																		"referencedDeclaration": null,
																		"type": "function (uint256)"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"member_name": "sender",
																				"referencedDeclaration": null,
																				"type": "address"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 1426,
																						"type": "msg",
																						"value": "msg"
																					},
																					"id": 668,
																					"name": "Identifier",
																					"src": "13028:3:0"
																				}
																			],
																			"id": 671,
																			"name": "MemberAccess",
																			"src": "13028:10:0"
																		}
																	],
																	"id": 672,
																	"name": "MemberAccess",
																	"src": "13028:19:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 656,
																		"type": "uint256",
																		"value": "lenderReturnAmount"
																	},
																	"id": 673,
																	"name": "Identifier",
																	"src": "13048:18:0"
																}
															],
															"id": 674,
															"name": "FunctionCall",
															"src": "13028:39:0"
														}
													],
													"id": 675,
													"name": "ExpressionStatement",
													"src": "13028:39:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 137,
																		"type": "function (address,uint256,uint256)",
																		"value": "LogLenderWithdrawal"
																	},
																	"id": 676,
																	"name": "Identifier",
																	"src": "13120:19:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "sender",
																		"referencedDeclaration": null,
																		"type": "address"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1426,
																				"type": "msg",
																				"value": "msg"
																			},
																			"id": 677,
																			"name": "Identifier",
																			"src": "13140:3:0"
																		}
																	],
																	"id": 678,
																	"name": "MemberAccess",
																	"src": "13140:10:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 656,
																		"type": "uint256",
																		"value": "lenderReturnAmount"
																	},
																	"id": 679,
																	"name": "Identifier",
																	"src": "13152:18:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "timestamp",
																		"referencedDeclaration": null,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1418,
																				"type": "block",
																				"value": "block"
																			},
																			"id": 680,
																			"name": "Identifier",
																			"src": "13172:5:0"
																		}
																	],
																	"id": 681,
																	"name": "MemberAccess",
																	"src": "13172:15:0"
																}
															],
															"id": 682,
															"name": "FunctionCall",
															"src": "13120:68:0"
														}
													],
													"id": 683,
													"name": "ExpressionStatement",
													"src": "13120:68:0"
												},
												{
													"attributes": {
														"falseBody": null
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "==",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "balance",
																		"referencedDeclaration": null,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1443,
																				"type": "contract Credit",
																				"value": "this"
																			},
																			"id": 684,
																			"name": "Identifier",
																			"src": "13259:4:0"
																		}
																	],
																	"id": 685,
																	"name": "MemberAccess",
																	"src": "13259:12:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "30",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "number",
																		"type": "int_const 0",
																		"value": "0"
																	},
																	"id": 686,
																	"name": "Literal",
																	"src": "13275:1:0"
																}
															],
															"id": 687,
															"name": "BinaryOperation",
															"src": "13259:17:0"
														},
														{
															"children": [
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"operator": "=",
																				"type": "bool"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 32,
																						"type": "bool",
																						"value": "active"
																					},
																					"id": 688,
																					"name": "Identifier",
																					"src": "13342:6:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"hexvalue": "66616c7365",
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"subdenomination": null,
																						"token": "bool",
																						"type": "bool",
																						"value": "false"
																					},
																					"id": 689,
																					"name": "Literal",
																					"src": "13351:5:0"
																				}
																			],
																			"id": 690,
																			"name": "Assignment",
																			"src": "13342:14:0"
																		}
																	],
																	"id": 691,
																	"name": "ExpressionStatement",
																	"src": "13342:14:0"
																},
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "tuple()",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 83,
																						"type": "function (bool,uint256)",
																						"value": "LogCreditStateActiveChanged"
																					},
																					"id": 692,
																					"name": "Identifier",
																					"src": "13414:27:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 32,
																						"type": "bool",
																						"value": "active"
																					},
																					"id": 693,
																					"name": "Identifier",
																					"src": "13442:6:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "timestamp",
																						"referencedDeclaration": null,
																						"type": "uint256"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1418,
																								"type": "block",
																								"value": "block"
																							},
																							"id": 694,
																							"name": "Identifier",
																							"src": "13450:5:0"
																						}
																					],
																					"id": 695,
																					"name": "MemberAccess",
																					"src": "13450:15:0"
																				}
																			],
																			"id": 696,
																			"name": "FunctionCall",
																			"src": "13414:52:0"
																		}
																	],
																	"id": 697,
																	"name": "ExpressionStatement",
																	"src": "13414:52:0"
																},
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"operator": "=",
																				"type": "enum Credit.State"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 41,
																						"type": "enum Credit.State",
																						"value": "state"
																					},
																					"id": 698,
																					"name": "Identifier",
																					"src": "13560:5:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"member_name": "expired",
																						"referencedDeclaration": null,
																						"type": "enum Credit.State"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 39,
																								"type": "type(enum Credit.State)",
																								"value": "State"
																							},
																							"id": 699,
																							"name": "Identifier",
																							"src": "13568:5:0"
																						}
																					],
																					"id": 700,
																					"name": "MemberAccess",
																					"src": "13568:13:0"
																				}
																			],
																			"id": 701,
																			"name": "Assignment",
																			"src": "13560:21:0"
																		}
																	],
																	"id": 702,
																	"name": "ExpressionStatement",
																	"src": "13560:21:0"
																},
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "tuple()",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_enum$_State_$39",
																								"typeString": "enum Credit.State"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 77,
																						"type": "function (enum Credit.State,uint256)",
																						"value": "LogCreditStateChanged"
																					},
																					"id": 703,
																					"name": "Identifier",
																					"src": "13632:21:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 41,
																						"type": "enum Credit.State",
																						"value": "state"
																					},
																					"id": 704,
																					"name": "Identifier",
																					"src": "13654:5:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "timestamp",
																						"referencedDeclaration": null,
																						"type": "uint256"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1418,
																								"type": "block",
																								"value": "block"
																							},
																							"id": 705,
																							"name": "Identifier",
																							"src": "13661:5:0"
																						}
																					],
																					"id": 706,
																					"name": "MemberAccess",
																					"src": "13661:15:0"
																				}
																			],
																			"id": 707,
																			"name": "FunctionCall",
																			"src": "13632:45:0"
																		}
																	],
																	"id": 708,
																	"name": "ExpressionStatement",
																	"src": "13632:45:0"
																}
															],
															"id": 709,
															"name": "Block",
															"src": "13278:411:0"
														}
													],
													"id": 710,
													"name": "IfStatement",
													"src": "13255:434:0"
												}
											],
											"id": 711,
											"name": "Block",
											"src": "12550:1146:0"
										}
									],
									"id": 712,
									"name": "FunctionDefinition",
									"src": "12478:1218:0"
								},
								{
									"attributes": {
										"constant": true,
										"implemented": true,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "getCreditInfo",
										"payable": false,
										"scope": 995,
										"stateMutability": "view",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 713,
											"name": "ParameterList",
											"src": "14081:2:0"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 752,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 714,
															"name": "ElementaryTypeName",
															"src": "14105:7:0"
														}
													],
													"id": 715,
													"name": "VariableDeclaration",
													"src": "14105:7:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 752,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "bytes32",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "bytes32",
																"type": "bytes32"
															},
															"id": 716,
															"name": "ElementaryTypeName",
															"src": "14114:7:0"
														}
													],
													"id": 717,
													"name": "VariableDeclaration",
													"src": "14114:7:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 752,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 718,
															"name": "ElementaryTypeName",
															"src": "14123:4:0"
														}
													],
													"id": 719,
													"name": "VariableDeclaration",
													"src": "14123:4:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 752,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 720,
															"name": "ElementaryTypeName",
															"src": "14129:4:0"
														}
													],
													"id": 721,
													"name": "VariableDeclaration",
													"src": "14129:4:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 752,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 722,
															"name": "ElementaryTypeName",
															"src": "14135:4:0"
														}
													],
													"id": 723,
													"name": "VariableDeclaration",
													"src": "14135:4:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 752,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 724,
															"name": "ElementaryTypeName",
															"src": "14141:4:0"
														}
													],
													"id": 725,
													"name": "VariableDeclaration",
													"src": "14141:4:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 752,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 726,
															"name": "ElementaryTypeName",
															"src": "14147:4:0"
														}
													],
													"id": 727,
													"name": "VariableDeclaration",
													"src": "14147:4:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 752,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 728,
															"name": "ElementaryTypeName",
															"src": "14153:4:0"
														}
													],
													"id": 729,
													"name": "VariableDeclaration",
													"src": "14153:4:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 752,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "enum Credit.State",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"contractScope": null,
																"name": "State",
																"referencedDeclaration": 39,
																"type": "enum Credit.State"
															},
															"id": 730,
															"name": "UserDefinedTypeName",
															"src": "14159:5:0"
														}
													],
													"id": 731,
													"name": "VariableDeclaration",
													"src": "14159:5:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 752,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "bool",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "bool",
																"type": "bool"
															},
															"id": 732,
															"name": "ElementaryTypeName",
															"src": "14166:4:0"
														}
													],
													"id": 733,
													"name": "VariableDeclaration",
													"src": "14166:4:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 752,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 734,
															"name": "ElementaryTypeName",
															"src": "14172:4:0"
														}
													],
													"id": 735,
													"name": "VariableDeclaration",
													"src": "14172:4:0"
												}
											],
											"id": 736,
											"name": "ParameterList",
											"src": "14104:73:0"
										},
										{
											"children": [
												{
													"attributes": {
														"functionReturnParameters": 736
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"type": "tuple(address,bytes32,uint256,uint256,uint256,uint256,uint256,uint256,enum Credit.State,bool,uint256)"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 10,
																		"type": "address",
																		"value": "borrower"
																	},
																	"id": 737,
																	"name": "Identifier",
																	"src": "14207:8:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 30,
																		"type": "bytes32",
																		"value": "description"
																	},
																	"id": 738,
																	"name": "Identifier",
																	"src": "14226:11:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 12,
																		"type": "uint256",
																		"value": "requestedAmount"
																	},
																	"id": 739,
																	"name": "Identifier",
																	"src": "14248:15:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 20,
																		"type": "uint256",
																		"value": "requestedRepayments"
																	},
																	"id": 740,
																	"name": "Identifier",
																	"src": "14274:19:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 24,
																		"type": "uint256",
																		"value": "repaymentInstallment"
																	},
																	"id": 741,
																	"name": "Identifier",
																	"src": "14304:20:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 22,
																		"type": "uint256",
																		"value": "remainingRepayments"
																	},
																	"id": 742,
																	"name": "Identifier",
																	"src": "14335:19:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 18,
																		"type": "uint256",
																		"value": "interest"
																	},
																	"id": 743,
																	"name": "Identifier",
																	"src": "14365:8:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 14,
																		"type": "uint256",
																		"value": "returnAmount"
																	},
																	"id": 744,
																	"name": "Identifier",
																	"src": "14384:12:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 41,
																		"type": "enum Credit.State",
																		"value": "state"
																	},
																	"id": 745,
																	"name": "Identifier",
																	"src": "14407:5:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 32,
																		"type": "bool",
																		"value": "active"
																	},
																	"id": 746,
																	"name": "Identifier",
																	"src": "14423:6:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "balance",
																		"referencedDeclaration": null,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1443,
																				"type": "contract Credit",
																				"value": "this"
																			},
																			"id": 747,
																			"name": "Identifier",
																			"src": "14440:4:0"
																		}
																	],
																	"id": 748,
																	"name": "MemberAccess",
																	"src": "14440:12:0"
																}
															],
															"id": 749,
															"name": "TupleExpression",
															"src": "14196:267:0"
														}
													],
													"id": 750,
													"name": "Return",
													"src": "14189:274:0"
												}
											],
											"id": 751,
											"name": "Block",
											"src": "14178:293:0"
										}
									],
									"id": 752,
									"name": "FunctionDefinition",
									"src": "14059:412:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "revokeVote",
										"payable": false,
										"scope": 995,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 753,
											"name": "ParameterList",
											"src": "14556:2:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 760,
											"name": "ParameterList",
											"src": "14598:0:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 175,
														"type": "modifier ()",
														"value": "isActive"
													},
													"id": 754,
													"name": "Identifier",
													"src": "14566:8:0"
												}
											],
											"id": 755,
											"name": "ModifierInvocation",
											"src": "14566:8:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 281,
														"type": "modifier ()",
														"value": "isRevokable"
													},
													"id": 756,
													"name": "Identifier",
													"src": "14575:11:0"
												}
											],
											"id": 757,
											"name": "ModifierInvocation",
											"src": "14575:11:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 199,
														"type": "modifier ()",
														"value": "onlyLender"
													},
													"id": 758,
													"name": "Identifier",
													"src": "14587:10:0"
												}
											],
											"id": 759,
											"name": "ModifierInvocation",
											"src": "14587:10:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1429,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 761,
																	"name": "Identifier",
																	"src": "14655:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "==",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"type": "bool"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 57,
																						"type": "mapping(address => bool)",
																						"value": "revokeVoters"
																					},
																					"id": 762,
																					"name": "Identifier",
																					"src": "14663:12:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "sender",
																						"referencedDeclaration": null,
																						"type": "address"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1426,
																								"type": "msg",
																								"value": "msg"
																							},
																							"id": 763,
																							"name": "Identifier",
																							"src": "14676:3:0"
																						}
																					],
																					"id": 764,
																					"name": "MemberAccess",
																					"src": "14676:10:0"
																				}
																			],
																			"id": 765,
																			"name": "IndexAccess",
																			"src": "14663:24:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"hexvalue": "66616c7365",
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"subdenomination": null,
																				"token": "bool",
																				"type": "bool",
																				"value": "false"
																			},
																			"id": 766,
																			"name": "Literal",
																			"src": "14691:5:0"
																		}
																	],
																	"id": 767,
																	"name": "BinaryOperation",
																	"src": "14663:33:0"
																}
															],
															"id": 768,
															"name": "FunctionCall",
															"src": "14655:42:0"
														}
													],
													"id": 769,
													"name": "ExpressionStatement",
													"src": "14655:42:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "++",
																"prefix": false,
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 53,
																		"type": "uint256",
																		"value": "revokeVotes"
																	},
																	"id": 770,
																	"name": "Identifier",
																	"src": "14749:11:0"
																}
															],
															"id": 771,
															"name": "UnaryOperation",
															"src": "14749:13:0"
														}
													],
													"id": 772,
													"name": "ExpressionStatement",
													"src": "14749:13:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "==",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 57,
																				"type": "mapping(address => bool)",
																				"value": "revokeVoters"
																			},
																			"id": 773,
																			"name": "Identifier",
																			"src": "14814:12:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"member_name": "sender",
																				"referencedDeclaration": null,
																				"type": "address"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 1426,
																						"type": "msg",
																						"value": "msg"
																					},
																					"id": 774,
																					"name": "Identifier",
																					"src": "14827:3:0"
																				}
																			],
																			"id": 775,
																			"name": "MemberAccess",
																			"src": "14827:10:0"
																		}
																	],
																	"id": 776,
																	"name": "IndexAccess",
																	"src": "14814:24:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "74727565",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "bool",
																		"type": "bool",
																		"value": "true"
																	},
																	"id": 777,
																	"name": "Literal",
																	"src": "14842:4:0"
																}
															],
															"id": 778,
															"name": "BinaryOperation",
															"src": "14814:32:0"
														}
													],
													"id": 779,
													"name": "ExpressionStatement",
													"src": "14814:32:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 151,
																		"type": "function (address,uint256)",
																		"value": "LogLenderVoteForRevoking"
																	},
																	"id": 780,
																	"name": "Identifier",
																	"src": "14921:24:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "sender",
																		"referencedDeclaration": null,
																		"type": "address"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1426,
																				"type": "msg",
																				"value": "msg"
																			},
																			"id": 781,
																			"name": "Identifier",
																			"src": "14946:3:0"
																		}
																	],
																	"id": 782,
																	"name": "MemberAccess",
																	"src": "14946:10:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "timestamp",
																		"referencedDeclaration": null,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1418,
																				"type": "block",
																				"value": "block"
																			},
																			"id": 783,
																			"name": "Identifier",
																			"src": "14958:5:0"
																		}
																	],
																	"id": 784,
																	"name": "MemberAccess",
																	"src": "14958:15:0"
																}
															],
															"id": 785,
															"name": "FunctionCall",
															"src": "14921:53:0"
														}
													],
													"id": 786,
													"name": "ExpressionStatement",
													"src": "14921:53:0"
												},
												{
													"attributes": {
														"falseBody": null
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "==",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 51,
																		"type": "uint256",
																		"value": "lendersCount"
																	},
																	"id": 787,
																	"name": "Identifier",
																	"src": "15032:12:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 53,
																		"type": "uint256",
																		"value": "revokeVotes"
																	},
																	"id": 788,
																	"name": "Identifier",
																	"src": "15048:11:0"
																}
															],
															"id": 789,
															"name": "BinaryOperation",
															"src": "15032:27:0"
														},
														{
															"children": [
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"arguments": [
																					null
																				],
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "tuple()",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							null
																						],
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 811,
																						"type": "function ()",
																						"value": "revoke"
																					},
																					"id": 790,
																					"name": "Identifier",
																					"src": "15123:6:0"
																				}
																			],
																			"id": 791,
																			"name": "FunctionCall",
																			"src": "15123:8:0"
																		}
																	],
																	"id": 792,
																	"name": "ExpressionStatement",
																	"src": "15123:8:0"
																}
															],
															"id": 793,
															"name": "Block",
															"src": "15061:82:0"
														}
													],
													"id": 794,
													"name": "IfStatement",
													"src": "15028:115:0"
												}
											],
											"id": 795,
											"name": "Block",
											"src": "14598:552:0"
										}
									],
									"id": 796,
									"name": "FunctionDefinition",
									"src": "14537:613:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "revoke",
										"payable": false,
										"scope": 995,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 797,
											"name": "ParameterList",
											"src": "15223:2:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 798,
											"name": "ParameterList",
											"src": "15235:0:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "enum Credit.State"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 41,
																		"type": "enum Credit.State",
																		"value": "state"
																	},
																	"id": 799,
																	"name": "Identifier",
																	"src": "15287:5:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"member_name": "revoked",
																		"referencedDeclaration": null,
																		"type": "enum Credit.State"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 39,
																				"type": "type(enum Credit.State)",
																				"value": "State"
																			},
																			"id": 800,
																			"name": "Identifier",
																			"src": "15295:5:0"
																		}
																	],
																	"id": 801,
																	"name": "MemberAccess",
																	"src": "15295:13:0"
																}
															],
															"id": 802,
															"name": "Assignment",
															"src": "15287:21:0"
														}
													],
													"id": 803,
													"name": "ExpressionStatement",
													"src": "15287:21:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_enum$_State_$39",
																				"typeString": "enum Credit.State"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 77,
																		"type": "function (enum Credit.State,uint256)",
																		"value": "LogCreditStateChanged"
																	},
																	"id": 804,
																	"name": "Identifier",
																	"src": "15353:21:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 41,
																		"type": "enum Credit.State",
																		"value": "state"
																	},
																	"id": 805,
																	"name": "Identifier",
																	"src": "15375:5:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "timestamp",
																		"referencedDeclaration": null,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1418,
																				"type": "block",
																				"value": "block"
																			},
																			"id": 806,
																			"name": "Identifier",
																			"src": "15382:5:0"
																		}
																	],
																	"id": 807,
																	"name": "MemberAccess",
																	"src": "15382:15:0"
																}
															],
															"id": 808,
															"name": "FunctionCall",
															"src": "15353:45:0"
														}
													],
													"id": 809,
													"name": "ExpressionStatement",
													"src": "15353:45:0"
												}
											],
											"id": 810,
											"name": "Block",
											"src": "15235:171:0"
										}
									],
									"id": 811,
									"name": "FunctionDefinition",
									"src": "15208:198:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "refund",
										"payable": false,
										"scope": 995,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 812,
											"name": "ParameterList",
											"src": "15477:2:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 819,
											"name": "ParameterList",
											"src": "15517:0:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 175,
														"type": "modifier ()",
														"value": "isActive"
													},
													"id": 813,
													"name": "Identifier",
													"src": "15487:8:0"
												}
											],
											"id": 814,
											"name": "ModifierInvocation",
											"src": "15487:8:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 199,
														"type": "modifier ()",
														"value": "onlyLender"
													},
													"id": 815,
													"name": "Identifier",
													"src": "15496:10:0"
												}
											],
											"id": 816,
											"name": "ModifierInvocation",
											"src": "15496:10:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 292,
														"type": "modifier ()",
														"value": "isRevoked"
													},
													"id": 817,
													"name": "Identifier",
													"src": "15507:9:0"
												}
											],
											"id": 818,
											"name": "ModifierInvocation",
											"src": "15507:9:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1417,
																		"type": "function (bool) pure",
																		"value": "assert"
																	},
																	"id": 820,
																	"name": "Identifier",
																	"src": "15581:6:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": ">=",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"member_name": "balance",
																				"referencedDeclaration": null,
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 1443,
																						"type": "contract Credit",
																						"value": "this"
																					},
																					"id": 821,
																					"name": "Identifier",
																					"src": "15588:4:0"
																				}
																			],
																			"id": 822,
																			"name": "MemberAccess",
																			"src": "15588:12:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 49,
																						"type": "mapping(address => uint256)",
																						"value": "lendersInvestedAmount"
																					},
																					"id": 823,
																					"name": "Identifier",
																					"src": "15604:21:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "sender",
																						"referencedDeclaration": null,
																						"type": "address"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1426,
																								"type": "msg",
																								"value": "msg"
																							},
																							"id": 824,
																							"name": "Identifier",
																							"src": "15626:3:0"
																						}
																					],
																					"id": 825,
																					"name": "MemberAccess",
																					"src": "15626:10:0"
																				}
																			],
																			"id": 826,
																			"name": "IndexAccess",
																			"src": "15604:33:0"
																		}
																	],
																	"id": 827,
																	"name": "BinaryOperation",
																	"src": "15588:49:0"
																}
															],
															"id": 828,
															"name": "FunctionCall",
															"src": "15581:57:0"
														}
													],
													"id": 829,
													"name": "ExpressionStatement",
													"src": "15581:57:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "transfer",
																		"referencedDeclaration": null,
																		"type": "function (uint256)"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"member_name": "sender",
																				"referencedDeclaration": null,
																				"type": "address"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 1426,
																						"type": "msg",
																						"value": "msg"
																					},
																					"id": 830,
																					"name": "Identifier",
																					"src": "15719:3:0"
																				}
																			],
																			"id": 833,
																			"name": "MemberAccess",
																			"src": "15719:10:0"
																		}
																	],
																	"id": 834,
																	"name": "MemberAccess",
																	"src": "15719:19:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 49,
																				"type": "mapping(address => uint256)",
																				"value": "lendersInvestedAmount"
																			},
																			"id": 835,
																			"name": "Identifier",
																			"src": "15739:21:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"member_name": "sender",
																				"referencedDeclaration": null,
																				"type": "address"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 1426,
																						"type": "msg",
																						"value": "msg"
																					},
																					"id": 836,
																					"name": "Identifier",
																					"src": "15761:3:0"
																				}
																			],
																			"id": 837,
																			"name": "MemberAccess",
																			"src": "15761:10:0"
																		}
																	],
																	"id": 838,
																	"name": "IndexAccess",
																	"src": "15739:33:0"
																}
															],
															"id": 839,
															"name": "FunctionCall",
															"src": "15719:54:0"
														}
													],
													"id": 840,
													"name": "ExpressionStatement",
													"src": "15719:54:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 165,
																		"type": "function (address,uint256,uint256)",
																		"value": "LogLenderRefunded"
																	},
																	"id": 841,
																	"name": "Identifier",
																	"src": "15826:17:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "sender",
																		"referencedDeclaration": null,
																		"type": "address"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1426,
																				"type": "msg",
																				"value": "msg"
																			},
																			"id": 842,
																			"name": "Identifier",
																			"src": "15844:3:0"
																		}
																	],
																	"id": 843,
																	"name": "MemberAccess",
																	"src": "15844:10:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 49,
																				"type": "mapping(address => uint256)",
																				"value": "lendersInvestedAmount"
																			},
																			"id": 844,
																			"name": "Identifier",
																			"src": "15856:21:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"member_name": "sender",
																				"referencedDeclaration": null,
																				"type": "address"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 1426,
																						"type": "msg",
																						"value": "msg"
																					},
																					"id": 845,
																					"name": "Identifier",
																					"src": "15878:3:0"
																				}
																			],
																			"id": 846,
																			"name": "MemberAccess",
																			"src": "15878:10:0"
																		}
																	],
																	"id": 847,
																	"name": "IndexAccess",
																	"src": "15856:33:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "timestamp",
																		"referencedDeclaration": null,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1418,
																				"type": "block",
																				"value": "block"
																			},
																			"id": 848,
																			"name": "Identifier",
																			"src": "15891:5:0"
																		}
																	],
																	"id": 849,
																	"name": "MemberAccess",
																	"src": "15891:15:0"
																}
															],
															"id": 850,
															"name": "FunctionCall",
															"src": "15826:81:0"
														}
													],
													"id": 851,
													"name": "ExpressionStatement",
													"src": "15826:81:0"
												},
												{
													"attributes": {
														"falseBody": null
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "==",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "balance",
																		"referencedDeclaration": null,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1443,
																				"type": "contract Credit",
																				"value": "this"
																			},
																			"id": 852,
																			"name": "Identifier",
																			"src": "15978:4:0"
																		}
																	],
																	"id": 853,
																	"name": "MemberAccess",
																	"src": "15978:12:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "30",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "number",
																		"type": "int_const 0",
																		"value": "0"
																	},
																	"id": 854,
																	"name": "Literal",
																	"src": "15994:1:0"
																}
															],
															"id": 855,
															"name": "BinaryOperation",
															"src": "15978:17:0"
														},
														{
															"children": [
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"operator": "=",
																				"type": "bool"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 32,
																						"type": "bool",
																						"value": "active"
																					},
																					"id": 856,
																					"name": "Identifier",
																					"src": "16061:6:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"hexvalue": "66616c7365",
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"subdenomination": null,
																						"token": "bool",
																						"type": "bool",
																						"value": "false"
																					},
																					"id": 857,
																					"name": "Literal",
																					"src": "16070:5:0"
																				}
																			],
																			"id": 858,
																			"name": "Assignment",
																			"src": "16061:14:0"
																		}
																	],
																	"id": 859,
																	"name": "ExpressionStatement",
																	"src": "16061:14:0"
																},
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "tuple()",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 83,
																						"type": "function (bool,uint256)",
																						"value": "LogCreditStateActiveChanged"
																					},
																					"id": 860,
																					"name": "Identifier",
																					"src": "16134:27:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 32,
																						"type": "bool",
																						"value": "active"
																					},
																					"id": 861,
																					"name": "Identifier",
																					"src": "16162:6:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "timestamp",
																						"referencedDeclaration": null,
																						"type": "uint256"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1418,
																								"type": "block",
																								"value": "block"
																							},
																							"id": 862,
																							"name": "Identifier",
																							"src": "16170:5:0"
																						}
																					],
																					"id": 863,
																					"name": "MemberAccess",
																					"src": "16170:15:0"
																				}
																			],
																			"id": 864,
																			"name": "FunctionCall",
																			"src": "16134:52:0"
																		}
																	],
																	"id": 865,
																	"name": "ExpressionStatement",
																	"src": "16134:52:0"
																},
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"operator": "=",
																				"type": "enum Credit.State"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 41,
																						"type": "enum Credit.State",
																						"value": "state"
																					},
																					"id": 866,
																					"name": "Identifier",
																					"src": "16280:5:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"member_name": "expired",
																						"referencedDeclaration": null,
																						"type": "enum Credit.State"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 39,
																								"type": "type(enum Credit.State)",
																								"value": "State"
																							},
																							"id": 867,
																							"name": "Identifier",
																							"src": "16288:5:0"
																						}
																					],
																					"id": 868,
																					"name": "MemberAccess",
																					"src": "16288:13:0"
																				}
																			],
																			"id": 869,
																			"name": "Assignment",
																			"src": "16280:21:0"
																		}
																	],
																	"id": 870,
																	"name": "ExpressionStatement",
																	"src": "16280:21:0"
																},
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "tuple()",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_enum$_State_$39",
																								"typeString": "enum Credit.State"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 77,
																						"type": "function (enum Credit.State,uint256)",
																						"value": "LogCreditStateChanged"
																					},
																					"id": 871,
																					"name": "Identifier",
																					"src": "16352:21:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 41,
																						"type": "enum Credit.State",
																						"value": "state"
																					},
																					"id": 872,
																					"name": "Identifier",
																					"src": "16374:5:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "timestamp",
																						"referencedDeclaration": null,
																						"type": "uint256"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1418,
																								"type": "block",
																								"value": "block"
																							},
																							"id": 873,
																							"name": "Identifier",
																							"src": "16381:5:0"
																						}
																					],
																					"id": 874,
																					"name": "MemberAccess",
																					"src": "16381:15:0"
																				}
																			],
																			"id": 875,
																			"name": "FunctionCall",
																			"src": "16352:45:0"
																		}
																	],
																	"id": 876,
																	"name": "ExpressionStatement",
																	"src": "16352:45:0"
																}
															],
															"id": 877,
															"name": "Block",
															"src": "15997:412:0"
														}
													],
													"id": 878,
													"name": "IfStatement",
													"src": "15974:435:0"
												}
											],
											"id": 879,
											"name": "Block",
											"src": "15517:899:0"
										}
									],
									"id": 880,
									"name": "FunctionDefinition",
									"src": "15462:954:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "fraudVote",
										"payable": false,
										"scope": 995,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 881,
											"name": "ParameterList",
											"src": "16512:2:0"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 926,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "bool",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "bool",
																"type": "bool"
															},
															"id": 886,
															"name": "ElementaryTypeName",
															"src": "16551:4:0"
														}
													],
													"id": 887,
													"name": "VariableDeclaration",
													"src": "16551:4:0"
												}
											],
											"id": 888,
											"name": "ParameterList",
											"src": "16550:6:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 175,
														"type": "modifier ()",
														"value": "isActive"
													},
													"id": 882,
													"name": "Identifier",
													"src": "16522:8:0"
												}
											],
											"id": 883,
											"name": "ModifierInvocation",
											"src": "16522:8:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 199,
														"type": "modifier ()",
														"value": "onlyLender"
													},
													"id": 884,
													"name": "Identifier",
													"src": "16531:10:0"
												}
											],
											"id": 885,
											"name": "ModifierInvocation",
											"src": "16531:10:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1429,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 889,
																	"name": "Identifier",
																	"src": "16611:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "==",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"type": "bool"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 65,
																						"type": "mapping(address => bool)",
																						"value": "fraudVoters"
																					},
																					"id": 890,
																					"name": "Identifier",
																					"src": "16619:11:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "sender",
																						"referencedDeclaration": null,
																						"type": "address"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1426,
																								"type": "msg",
																								"value": "msg"
																							},
																							"id": 891,
																							"name": "Identifier",
																							"src": "16631:3:0"
																						}
																					],
																					"id": 892,
																					"name": "MemberAccess",
																					"src": "16631:10:0"
																				}
																			],
																			"id": 893,
																			"name": "IndexAccess",
																			"src": "16619:23:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"hexvalue": "66616c7365",
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"subdenomination": null,
																				"token": "bool",
																				"type": "bool",
																				"value": "false"
																			},
																			"id": 894,
																			"name": "Literal",
																			"src": "16646:5:0"
																		}
																	],
																	"id": 895,
																	"name": "BinaryOperation",
																	"src": "16619:32:0"
																}
															],
															"id": 896,
															"name": "FunctionCall",
															"src": "16611:41:0"
														}
													],
													"id": 897,
													"name": "ExpressionStatement",
													"src": "16611:41:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "++",
																"prefix": false,
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 61,
																		"type": "uint256",
																		"value": "fraudVotes"
																	},
																	"id": 898,
																	"name": "Identifier",
																	"src": "16705:10:0"
																}
															],
															"id": 899,
															"name": "UnaryOperation",
															"src": "16705:12:0"
														}
													],
													"id": 900,
													"name": "ExpressionStatement",
													"src": "16705:12:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "==",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 65,
																				"type": "mapping(address => bool)",
																				"value": "fraudVoters"
																			},
																			"id": 901,
																			"name": "Identifier",
																			"src": "16769:11:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"member_name": "sender",
																				"referencedDeclaration": null,
																				"type": "address"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 1426,
																						"type": "msg",
																						"value": "msg"
																					},
																					"id": 902,
																					"name": "Identifier",
																					"src": "16781:3:0"
																				}
																			],
																			"id": 903,
																			"name": "MemberAccess",
																			"src": "16781:10:0"
																		}
																	],
																	"id": 904,
																	"name": "IndexAccess",
																	"src": "16769:23:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "74727565",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "bool",
																		"type": "bool",
																		"value": "true"
																	},
																	"id": 905,
																	"name": "Literal",
																	"src": "16796:4:0"
																}
															],
															"id": 906,
															"name": "BinaryOperation",
															"src": "16769:31:0"
														}
													],
													"id": 907,
													"name": "ExpressionStatement",
													"src": "16769:31:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 157,
																		"type": "function (address,uint256)",
																		"value": "LogLenderVoteForFraud"
																	},
																	"id": 908,
																	"name": "Identifier",
																	"src": "16852:21:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "sender",
																		"referencedDeclaration": null,
																		"type": "address"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1426,
																				"type": "msg",
																				"value": "msg"
																			},
																			"id": 909,
																			"name": "Identifier",
																			"src": "16874:3:0"
																		}
																	],
																	"id": 910,
																	"name": "MemberAccess",
																	"src": "16874:10:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "timestamp",
																		"referencedDeclaration": null,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1418,
																				"type": "block",
																				"value": "block"
																			},
																			"id": 911,
																			"name": "Identifier",
																			"src": "16886:5:0"
																		}
																	],
																	"id": 912,
																	"name": "MemberAccess",
																	"src": "16886:15:0"
																}
															],
															"id": 913,
															"name": "FunctionCall",
															"src": "16852:50:0"
														}
													],
													"id": 914,
													"name": "ExpressionStatement",
													"src": "16852:50:0"
												},
												{
													"attributes": {
														"falseBody": null
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "==",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 51,
																		"type": "uint256",
																		"value": "lendersCount"
																	},
																	"id": 915,
																	"name": "Identifier",
																	"src": "16962:12:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 61,
																		"type": "uint256",
																		"value": "fraudVotes"
																	},
																	"id": 916,
																	"name": "Identifier",
																	"src": "16978:10:0"
																}
															],
															"id": 917,
															"name": "BinaryOperation",
															"src": "16962:26:0"
														},
														{
															"children": [
																{
																	"attributes": {
																		"functionReturnParameters": 888
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"arguments": [
																					null
																				],
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "bool",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							null
																						],
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 953,
																						"type": "function () returns (bool)",
																						"value": "fraud"
																					},
																					"id": 918,
																					"name": "Identifier",
																					"src": "17051:5:0"
																				}
																			],
																			"id": 919,
																			"name": "FunctionCall",
																			"src": "17051:7:0"
																		}
																	],
																	"id": 920,
																	"name": "Return",
																	"src": "17044:14:0"
																}
															],
															"id": 921,
															"name": "Block",
															"src": "16990:80:0"
														}
													],
													"id": 922,
													"name": "IfStatement",
													"src": "16958:112:0"
												},
												{
													"attributes": {
														"functionReturnParameters": 888
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"hexvalue": "74727565",
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"subdenomination": null,
																"token": "bool",
																"type": "bool",
																"value": "true"
															},
															"id": 923,
															"name": "Literal",
															"src": "17087:4:0"
														}
													],
													"id": 924,
													"name": "Return",
													"src": "17080:11:0"
												}
											],
											"id": 925,
											"name": "Block",
											"src": "16557:542:0"
										}
									],
									"id": 926,
									"name": "FunctionDefinition",
									"src": "16494:605:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "fraud",
										"payable": false,
										"scope": 995,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 927,
											"name": "ParameterList",
											"src": "17248:2:0"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 953,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "bool",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "bool",
																"type": "bool"
															},
															"id": 928,
															"name": "ElementaryTypeName",
															"src": "17269:4:0"
														}
													],
													"id": 929,
													"name": "VariableDeclaration",
													"src": "17269:4:0"
												}
											],
											"id": 930,
											"name": "ParameterList",
											"src": "17268:6:0"
										},
										{
											"children": [
												{
													"attributes": {
														"assignments": [
															932
														]
													},
													"children": [
														{
															"attributes": {
																"constant": false,
																"name": "fraudStatusResult",
																"scope": 953,
																"stateVariable": false,
																"storageLocation": "default",
																"type": "bool",
																"value": null,
																"visibility": "internal"
															},
															"children": [
																{
																	"attributes": {
																		"name": "bool",
																		"type": "bool"
																	},
																	"id": 931,
																	"name": "ElementaryTypeName",
																	"src": "17360:4:0"
																}
															],
															"id": 932,
															"name": "VariableDeclaration",
															"src": "17360:22:0"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "bool",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "call",
																		"referencedDeclaration": null,
																		"type": "function () payable returns (bool)"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1298,
																				"type": "address",
																				"value": "owner"
																			},
																			"id": 933,
																			"name": "Identifier",
																			"src": "17385:5:0"
																		}
																	],
																	"id": 934,
																	"name": "MemberAccess",
																	"src": "17385:10:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"isStructConstructorCall": false,
																		"lValueRequested": false,
																		"names": [
																			null
																		],
																		"type": "bytes4",
																		"type_conversion": true
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"type": "type(bytes4)",
																				"value": "bytes4"
																			},
																			"id": 935,
																			"name": "ElementaryTypeNameExpression",
																			"src": "17396:6:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "bytes32",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_bb9e4247a9737512c22376911ad76d2ccb7492c06067f8baea333b4b5fcfe910",
																								"typeString": "literal_string \"setFraudStatus(address)\""
																							}
																						],
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 1420,
																						"type": "function () pure returns (bytes32)",
																						"value": "keccak256"
																					},
																					"id": 936,
																					"name": "Identifier",
																					"src": "17403:9:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"hexvalue": "7365744672617564537461747573286164647265737329",
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"subdenomination": null,
																						"token": "string",
																						"type": "literal_string \"setFraudStatus(address)\"",
																						"value": "setFraudStatus(address)"
																					},
																					"id": 937,
																					"name": "Literal",
																					"src": "17413:25:0"
																				}
																			],
																			"id": 938,
																			"name": "FunctionCall",
																			"src": "17403:36:0"
																		}
																	],
																	"id": 939,
																	"name": "FunctionCall",
																	"src": "17396:44:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 10,
																		"type": "address",
																		"value": "borrower"
																	},
																	"id": 940,
																	"name": "Identifier",
																	"src": "17442:8:0"
																}
															],
															"id": 941,
															"name": "FunctionCall",
															"src": "17385:66:0"
														}
													],
													"id": 942,
													"name": "VariableDeclarationStatement",
													"src": "17360:91:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 121,
																		"type": "function (address,bool,uint256)",
																		"value": "LogBorrowerIsFraud"
																	},
																	"id": 943,
																	"name": "Identifier",
																	"src": "17502:18:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 10,
																		"type": "address",
																		"value": "borrower"
																	},
																	"id": 944,
																	"name": "Identifier",
																	"src": "17521:8:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 932,
																		"type": "bool",
																		"value": "fraudStatusResult"
																	},
																	"id": 945,
																	"name": "Identifier",
																	"src": "17531:17:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "timestamp",
																		"referencedDeclaration": null,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1418,
																				"type": "block",
																				"value": "block"
																			},
																			"id": 946,
																			"name": "Identifier",
																			"src": "17550:5:0"
																		}
																	],
																	"id": 947,
																	"name": "MemberAccess",
																	"src": "17550:15:0"
																}
															],
															"id": 948,
															"name": "FunctionCall",
															"src": "17502:64:0"
														}
													],
													"id": 949,
													"name": "ExpressionStatement",
													"src": "17502:64:0"
												},
												{
													"attributes": {
														"functionReturnParameters": 930
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"overloadedDeclarations": [
																	null
																],
																"referencedDeclaration": 932,
																"type": "bool",
																"value": "fraudStatusResult"
															},
															"id": 950,
															"name": "Identifier",
															"src": "17586:17:0"
														}
													],
													"id": 951,
													"name": "Return",
													"src": "17579:24:0"
												}
											],
											"id": 952,
											"name": "Block",
											"src": "17275:336:0"
										}
									],
									"id": 953,
									"name": "FunctionDefinition",
									"src": "17234:377:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "changeState",
										"payable": false,
										"scope": 995,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "external"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_state",
														"scope": 973,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "enum Credit.State",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"contractScope": null,
																"name": "State",
																"referencedDeclaration": 39,
																"type": "enum Credit.State"
															},
															"id": 954,
															"name": "UserDefinedTypeName",
															"src": "17820:5:0"
														}
													],
													"id": 955,
													"name": "VariableDeclaration",
													"src": "17820:12:0"
												}
											],
											"id": 956,
											"name": "ParameterList",
											"src": "17819:14:0"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 973,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 959,
															"name": "ElementaryTypeName",
															"src": "17862:4:0"
														}
													],
													"id": 960,
													"name": "VariableDeclaration",
													"src": "17862:4:0"
												}
											],
											"id": 961,
											"name": "ParameterList",
											"src": "17861:6:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 1315,
														"type": "modifier ()",
														"value": "onlyOwner"
													},
													"id": 957,
													"name": "Identifier",
													"src": "17843:9:0"
												}
											],
											"id": 958,
											"name": "ModifierInvocation",
											"src": "17843:9:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "enum Credit.State"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 41,
																		"type": "enum Credit.State",
																		"value": "state"
																	},
																	"id": 962,
																	"name": "Identifier",
																	"src": "17879:5:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 955,
																		"type": "enum Credit.State",
																		"value": "_state"
																	},
																	"id": 963,
																	"name": "Identifier",
																	"src": "17887:6:0"
																}
															],
															"id": 964,
															"name": "Assignment",
															"src": "17879:14:0"
														}
													],
													"id": 965,
													"name": "ExpressionStatement",
													"src": "17879:14:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_enum$_State_$39",
																				"typeString": "enum Credit.State"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 77,
																		"type": "function (enum Credit.State,uint256)",
																		"value": "LogCreditStateChanged"
																	},
																	"id": 966,
																	"name": "Identifier",
																	"src": "17936:21:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 41,
																		"type": "enum Credit.State",
																		"value": "state"
																	},
																	"id": 967,
																	"name": "Identifier",
																	"src": "17958:5:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "timestamp",
																		"referencedDeclaration": null,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1418,
																				"type": "block",
																				"value": "block"
																			},
																			"id": 968,
																			"name": "Identifier",
																			"src": "17965:5:0"
																		}
																	],
																	"id": 969,
																	"name": "MemberAccess",
																	"src": "17965:15:0"
																}
															],
															"id": 970,
															"name": "FunctionCall",
															"src": "17936:45:0"
														}
													],
													"id": 971,
													"name": "ExpressionStatement",
													"src": "17936:45:0"
												}
											],
											"id": 972,
											"name": "Block",
											"src": "17868:121:0"
										}
									],
									"id": 973,
									"name": "FunctionDefinition",
									"src": "17799:190:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "toggleActive",
										"payable": false,
										"scope": 995,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "external"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 974,
											"name": "ParameterList",
											"src": "18199:2:0"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 994,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "bool",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "bool",
																"type": "bool"
															},
															"id": 977,
															"name": "ElementaryTypeName",
															"src": "18230:4:0"
														}
													],
													"id": 978,
													"name": "VariableDeclaration",
													"src": "18230:4:0"
												}
											],
											"id": 979,
											"name": "ParameterList",
											"src": "18229:6:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 1315,
														"type": "modifier ()",
														"value": "onlyOwner"
													},
													"id": 975,
													"name": "Identifier",
													"src": "18211:9:0"
												}
											],
											"id": 976,
											"name": "ModifierInvocation",
											"src": "18211:9:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 32,
																		"type": "bool",
																		"value": "active"
																	},
																	"id": 980,
																	"name": "Identifier",
																	"src": "18247:6:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "!",
																		"prefix": true,
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 32,
																				"type": "bool",
																				"value": "active"
																			},
																			"id": 981,
																			"name": "Identifier",
																			"src": "18257:6:0"
																		}
																	],
																	"id": 982,
																	"name": "UnaryOperation",
																	"src": "18256:7:0"
																}
															],
															"id": 983,
															"name": "Assignment",
															"src": "18247:16:0"
														}
													],
													"id": 984,
													"name": "ExpressionStatement",
													"src": "18247:16:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 83,
																		"type": "function (bool,uint256)",
																		"value": "LogCreditStateActiveChanged"
																	},
																	"id": 985,
																	"name": "Identifier",
																	"src": "18314:27:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 32,
																		"type": "bool",
																		"value": "active"
																	},
																	"id": 986,
																	"name": "Identifier",
																	"src": "18342:6:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "timestamp",
																		"referencedDeclaration": null,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1418,
																				"type": "block",
																				"value": "block"
																			},
																			"id": 987,
																			"name": "Identifier",
																			"src": "18350:5:0"
																		}
																	],
																	"id": 988,
																	"name": "MemberAccess",
																	"src": "18350:15:0"
																}
															],
															"id": 989,
															"name": "FunctionCall",
															"src": "18314:52:0"
														}
													],
													"id": 990,
													"name": "ExpressionStatement",
													"src": "18314:52:0"
												},
												{
													"attributes": {
														"functionReturnParameters": 979
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"overloadedDeclarations": [
																	null
																],
																"referencedDeclaration": 32,
																"type": "bool",
																"value": "active"
															},
															"id": 991,
															"name": "Identifier",
															"src": "18386:6:0"
														}
													],
													"id": 992,
													"name": "Return",
													"src": "18379:13:0"
												}
											],
											"id": 993,
											"name": "Block",
											"src": "18236:164:0"
										}
									],
									"id": 994,
									"name": "FunctionDefinition",
									"src": "18178:222:0"
								}
							],
							"id": 995,
							"name": "ContractDefinition",
							"src": "189:18216:0"
						}
					],
					"id": 996,
					"name": "SourceUnit",
					"src": "0:18405:0"
				}
			},
			"smart-contracts/contracts/PeerToPeerLending.sol": {
				"ast": {
					"absolutePath": "smart-contracts/contracts/PeerToPeerLending.sol",
					"exportedSymbols": {
						"PeerToPeerLending": [
							1262
						]
					},
					"id": 1263,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 997,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:1"
						},
						{
							"absolutePath": "smart-contracts/contracts/common/SafeMath.sol",
							"file": "./common/SafeMath.sol",
							"id": 998,
							"nodeType": "ImportDirective",
							"scope": 1263,
							"sourceUnit": 1415,
							"src": "28:31:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "smart-contracts/contracts/common/Destructible.sol",
							"file": "./common/Destructible.sol",
							"id": 999,
							"nodeType": "ImportDirective",
							"scope": 1263,
							"sourceUnit": 1295,
							"src": "61:35:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "smart-contracts/contracts/Credit.sol",
							"file": "./Credit.sol",
							"id": 1000,
							"nodeType": "ImportDirective",
							"scope": 1263,
							"sourceUnit": 996,
							"src": "98:22:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": [],
									"baseName": {
										"contractScope": null,
										"id": 1001,
										"name": "Destructible",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1294,
										"src": "154:12:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Destructible_$1294",
											"typeString": "contract Destructible"
										}
									},
									"id": 1002,
									"nodeType": "InheritanceSpecifier",
									"src": "154:12:1"
								}
							],
							"contractDependencies": [
								1294,
								1316,
								995
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1262,
							"linearizedBaseContracts": [
								1262,
								1294,
								1316
							],
							"name": "PeerToPeerLending",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1005,
									"libraryName": {
										"contractScope": null,
										"id": 1003,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1414,
										"src": "236:8:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$1414",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "230:24:1",
									"typeName": {
										"id": 1004,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "249:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"canonicalName": "PeerToPeerLending.User",
									"id": 1015,
									"members": [
										{
											"constant": false,
											"id": 1007,
											"name": "credited",
											"nodeType": "VariableDeclaration",
											"scope": 1015,
											"src": "352:13:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1006,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "352:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1009,
											"name": "activeCredit",
											"nodeType": "VariableDeclaration",
											"scope": 1015,
											"src": "423:20:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1008,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "423:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1011,
											"name": "fraudStatus",
											"nodeType": "VariableDeclaration",
											"scope": 1015,
											"src": "501:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1010,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "501:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1014,
											"name": "allCredits",
											"nodeType": "VariableDeclaration",
											"scope": 1015,
											"src": "560:20:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
												"typeString": "address[] storage pointer"
											},
											"typeName": {
												"baseType": {
													"id": 1012,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "560:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1013,
												"length": null,
												"nodeType": "ArrayTypeName",
												"src": "560:9:1",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
													"typeString": "address[] storage pointer"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "User",
									"nodeType": "StructDefinition",
									"scope": 1262,
									"src": "285:303:1",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1019,
									"name": "users",
									"nodeType": "VariableDeclaration",
									"scope": 1262,
									"src": "637:37:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$1015_storage_$",
										"typeString": "mapping(address => struct PeerToPeerLending.User storage ref)"
									},
									"typeName": {
										"id": 1018,
										"keyType": {
											"id": 1016,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "645:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "637:24:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$1015_storage_$",
											"typeString": "mapping(address => struct PeerToPeerLending.User storage ref)"
										},
										"valueType": {
											"contractScope": null,
											"id": 1017,
											"name": "User",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 1015,
											"src": "656:4:1",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_User_$1015_storage_ptr",
												"typeString": "struct PeerToPeerLending.User storage pointer"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1022,
									"name": "credits",
									"nodeType": "VariableDeclaration",
									"scope": 1262,
									"src": "722:24:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[] storage ref"
									},
									"typeName": {
										"baseType": {
											"id": 1020,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "722:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 1021,
										"length": null,
										"nodeType": "ArrayTypeName",
										"src": "722:9:1",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[] storage pointer"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 1030,
									"name": "LogCreditCreated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1024,
												"indexed": true,
												"name": "_address",
												"nodeType": "VariableDeclaration",
												"scope": 1030,
												"src": "778:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1023,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1026,
												"indexed": true,
												"name": "_borrower",
												"nodeType": "VariableDeclaration",
												"scope": 1030,
												"src": "804:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1025,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "804:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1028,
												"indexed": true,
												"name": "timestamp",
												"nodeType": "VariableDeclaration",
												"scope": 1030,
												"src": "831:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1027,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "831:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "777:77:1"
									},
									"src": "755:100:1"
								},
								{
									"anonymous": false,
									"id": 1038,
									"name": "LogCreditStateChanged",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1032,
												"indexed": true,
												"name": "_address",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "889:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1031,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1034,
												"indexed": true,
												"name": "state",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "915:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_State_$39",
													"typeString": "enum Credit.State"
												},
												"typeName": {
													"contractScope": null,
													"id": 1033,
													"name": "Credit.State",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 39,
													"src": "915:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_State_$39",
														"typeString": "enum Credit.State"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1036,
												"indexed": true,
												"name": "timestamp",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "943:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1035,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "943:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "888:78:1"
									},
									"src": "861:106:1"
								},
								{
									"anonymous": false,
									"id": 1046,
									"name": "LogCreditActiveChanged",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1040,
												"indexed": true,
												"name": "_address",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "1002:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1039,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1042,
												"indexed": true,
												"name": "active",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "1028:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1041,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1028:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1044,
												"indexed": true,
												"name": "timestamp",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "1049:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1043,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1049:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1001:71:1"
									},
									"src": "973:100:1"
								},
								{
									"anonymous": false,
									"id": 1054,
									"name": "LogUserSetFraud",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1053,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1048,
												"indexed": true,
												"name": "_address",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "1101:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1047,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1101:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1050,
												"indexed": false,
												"name": "fraudStatus",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "1127:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1049,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1127:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1052,
												"indexed": false,
												"name": "timestamp",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "1145:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1051,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1145:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1100:60:1"
									},
									"src": "1079:82:1"
								},
								{
									"body": {
										"id": 1057,
										"nodeType": "Block",
										"src": "1205:10:1",
										"statements": []
									},
									"id": 1058,
									"implemented": true,
									"isConstructor": true,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "PeerToPeerLending",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1195:2:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 1056,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1205:0:1"
									},
									"scope": 1262,
									"src": "1169:46:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1152,
										"nodeType": "Block",
										"src": "1365:1065:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1078,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1072,
																		"name": "users",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1019,
																		"src": "1436:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$1015_storage_$",
																			"typeString": "mapping(address => struct PeerToPeerLending.User storage ref)"
																		}
																	},
																	"id": 1075,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1073,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1426,
																			"src": "1442:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1074,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "1442:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1436:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_User_$1015_storage",
																		"typeString": "struct PeerToPeerLending.User storage ref"
																	}
																},
																"id": 1076,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "credited",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1007,
																"src": "1436:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 1077,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1466:5:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"src": "1436:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1071,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1429,
														"src": "1428:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1079,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1428:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1080,
												"nodeType": "ExpressionStatement",
												"src": "1428:44:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1088,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1082,
																		"name": "users",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1019,
																		"src": "1549:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$1015_storage_$",
																			"typeString": "mapping(address => struct PeerToPeerLending.User storage ref)"
																		}
																	},
																	"id": 1085,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1083,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1426,
																			"src": "1555:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1084,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "1555:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1549:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_User_$1015_storage",
																		"typeString": "struct PeerToPeerLending.User storage ref"
																	}
																},
																"id": 1086,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "fraudStatus",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1011,
																"src": "1549:29:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 1087,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1582:5:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"src": "1549:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1081,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1429,
														"src": "1541:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1541:47:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1090,
												"nodeType": "ExpressionStatement",
												"src": "1541:47:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1098,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1092,
																		"name": "users",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1019,
																		"src": "1667:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$1015_storage_$",
																			"typeString": "mapping(address => struct PeerToPeerLending.User storage ref)"
																		}
																	},
																	"id": 1095,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1093,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1426,
																			"src": "1673:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1094,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "1673:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1667:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_User_$1015_storage",
																		"typeString": "struct PeerToPeerLending.User storage ref"
																	}
																},
																"id": 1096,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "activeCredit",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1009,
																"src": "1667:30:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1097,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1701:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1667:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1091,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1417,
														"src": "1660:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1099,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1660:43:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1100,
												"nodeType": "ExpressionStatement",
												"src": "1660:43:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1101,
																"name": "users",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1019,
																"src": "1780:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$1015_storage_$",
																	"typeString": "mapping(address => struct PeerToPeerLending.User storage ref)"
																}
															},
															"id": 1104,
															"indexExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1102,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1426,
																	"src": "1786:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1103,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1786:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1780:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$1015_storage",
																"typeString": "struct PeerToPeerLending.User storage ref"
															}
														},
														"id": 1105,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "credited",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1007,
														"src": "1780:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 1106,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1809:4:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1780:33:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1108,
												"nodeType": "ExpressionStatement",
												"src": "1780:33:1"
											},
											{
												"assignments": [
													1110
												],
												"declarations": [
													{
														"constant": false,
														"id": 1110,
														"name": "credit",
														"nodeType": "VariableDeclaration",
														"scope": 1153,
														"src": "1894:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_Credit_$995",
															"typeString": "contract Credit"
														},
														"typeName": {
															"contractScope": null,
															"id": 1109,
															"name": "Credit",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 995,
															"src": "1894:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Credit_$995",
																"typeString": "contract Credit"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1118,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1113,
															"name": "requestedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1060,
															"src": "1921:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1114,
															"name": "repaymentsCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1062,
															"src": "1938:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1115,
															"name": "interest",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1064,
															"src": "1955:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1116,
															"name": "creditDescription",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1066,
															"src": "1965:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1112,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1910:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_creation_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$_t_contract$_Credit_$995_$",
															"typeString": "function (uint256,uint256,uint256,bytes32) returns (contract Credit)"
														},
														"typeName": {
															"contractScope": null,
															"id": 1111,
															"name": "Credit",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 995,
															"src": "1914:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Credit_$995",
																"typeString": "contract Credit"
															}
														}
													},
													"id": 1117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1910:73:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Credit_$995",
														"typeString": "contract Credit"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1894:89:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1119,
																"name": "users",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1019,
																"src": "2047:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$1015_storage_$",
																	"typeString": "mapping(address => struct PeerToPeerLending.User storage ref)"
																}
															},
															"id": 1122,
															"indexExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1120,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1426,
																	"src": "2053:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1121,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2053:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2047:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$1015_storage",
																"typeString": "struct PeerToPeerLending.User storage ref"
															}
														},
														"id": 1123,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "activeCredit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1009,
														"src": "2047:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1124,
														"name": "credit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1110,
														"src": "2080:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_Credit_$995",
															"typeString": "contract Credit"
														}
													},
													"src": "2047:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1126,
												"nodeType": "ExpressionStatement",
												"src": "2047:39:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1130,
															"name": "credit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1110,
															"src": "2176:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Credit_$995",
																"typeString": "contract Credit"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_Credit_$995",
																"typeString": "contract Credit"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1127,
															"name": "credits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1022,
															"src": "2163:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1129,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "2163:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) returns (uint256)"
														}
													},
													"id": 1131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1132,
												"nodeType": "ExpressionStatement",
												"src": "2163:20:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1139,
															"name": "credit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1110,
															"src": "2280:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Credit_$995",
																"typeString": "contract Credit"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_Credit_$995",
																"typeString": "contract Credit"
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1133,
																	"name": "users",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1019,
																	"src": "2246:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$1015_storage_$",
																		"typeString": "mapping(address => struct PeerToPeerLending.User storage ref)"
																	}
																},
																"id": 1136,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1134,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1426,
																		"src": "2252:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1135,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "2252:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2246:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$1015_storage",
																	"typeString": "struct PeerToPeerLending.User storage ref"
																}
															},
															"id": 1137,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "allCredits",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1014,
															"src": "2246:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1138,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "2246:33:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) returns (uint256)"
														}
													},
													"id": 1140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2246:41:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1141,
												"nodeType": "ExpressionStatement",
												"src": "2246:41:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1143,
															"name": "credit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1110,
															"src": "2360:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Credit_$995",
																"typeString": "contract Credit"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1144,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1426,
																"src": "2368:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2368:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1146,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1418,
																"src": "2380:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1147,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2380:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_Credit_$995",
																"typeString": "contract Credit"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1142,
														"name": "LogCreditCreated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1030,
														"src": "2343:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2343:53:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1149,
												"nodeType": "ExpressionStatement",
												"src": "2343:53:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1150,
													"name": "credit",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1110,
													"src": "2416:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Credit_$995",
														"typeString": "contract Credit"
													}
												},
												"functionReturnParameters": 1070,
												"id": 1151,
												"nodeType": "Return",
												"src": "2409:13:1"
											}
										]
									},
									"id": 1153,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "applyForCredit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1060,
												"name": "requestedAmount",
												"nodeType": "VariableDeclaration",
												"scope": 1153,
												"src": "1247:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1059,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1247:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1062,
												"name": "repaymentsCount",
												"nodeType": "VariableDeclaration",
												"scope": 1153,
												"src": "1269:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1061,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1269:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1064,
												"name": "interest",
												"nodeType": "VariableDeclaration",
												"scope": 1153,
												"src": "1291:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1063,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1291:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1066,
												"name": "creditDescription",
												"nodeType": "VariableDeclaration",
												"scope": 1153,
												"src": "1306:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1065,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1306:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1246:86:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 1070,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1069,
												"name": "_credit",
												"nodeType": "VariableDeclaration",
												"scope": 1153,
												"src": "1348:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1068,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1348:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1347:17:1"
									},
									"scope": 1262,
									"src": "1223:1207:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1161,
										"nodeType": "Block",
										"src": "2492:33:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1159,
													"name": "credits",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1022,
													"src": "2510:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"functionReturnParameters": 1158,
												"id": 1160,
												"nodeType": "Return",
												"src": "2503:14:1"
											}
										]
									},
									"id": 1162,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "getCredits",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1154,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2457:2:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 1158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1157,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "2481:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[] memory"
												},
												"typeName": {
													"baseType": {
														"id": 1155,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2481:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1156,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "2481:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[] storage pointer"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2480:11:1"
									},
									"scope": 1262,
									"src": "2438:87:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1174,
										"nodeType": "Block",
										"src": "2591:54:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1168,
															"name": "users",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1019,
															"src": "2609:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$1015_storage_$",
																"typeString": "mapping(address => struct PeerToPeerLending.User storage ref)"
															}
														},
														"id": 1171,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1169,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1426,
																"src": "2615:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1170,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2615:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2609:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$1015_storage",
															"typeString": "struct PeerToPeerLending.User storage ref"
														}
													},
													"id": 1172,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "allCredits",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1014,
													"src": "2609:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"functionReturnParameters": 1167,
												"id": 1173,
												"nodeType": "Return",
												"src": "2602:35:1"
											}
										]
									},
									"id": 1175,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "getUserCredits",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2556:2:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 1167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1166,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "2580:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[] memory"
												},
												"typeName": {
													"baseType": {
														"id": 1164,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2580:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1165,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "2580:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[] storage pointer"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2579:11:1"
									},
									"scope": 1262,
									"src": "2533:112:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1204,
										"nodeType": "Block",
										"src": "2720:256:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1182,
																"name": "users",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1019,
																"src": "2769:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$1015_storage_$",
																	"typeString": "mapping(address => struct PeerToPeerLending.User storage ref)"
																}
															},
															"id": 1184,
															"indexExpression": {
																"argumentTypes": null,
																"id": 1183,
																"name": "_borrower",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1177,
																"src": "2775:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2769:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$1015_storage",
																"typeString": "struct PeerToPeerLending.User storage ref"
															}
														},
														"id": 1185,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "fraudStatus",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1011,
														"src": "2769:28:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 1186,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2800:4:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2769:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1188,
												"nodeType": "ExpressionStatement",
												"src": "2769:35:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1190,
															"name": "_borrower",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1177,
															"src": "2863:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1191,
																	"name": "users",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1019,
																	"src": "2874:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$1015_storage_$",
																		"typeString": "mapping(address => struct PeerToPeerLending.User storage ref)"
																	}
																},
																"id": 1193,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1192,
																	"name": "_borrower",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1177,
																	"src": "2880:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2874:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$1015_storage",
																	"typeString": "struct PeerToPeerLending.User storage ref"
																}
															},
															"id": 1194,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "fraudStatus",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1011,
															"src": "2874:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1195,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1418,
																"src": "2904:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1196,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2904:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1189,
														"name": "LogUserSetFraud",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1054,
														"src": "2847:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$_t_uint256_$returns$__$",
															"typeString": "function (address,bool,uint256)"
														}
													},
													"id": 1197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2847:73:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1198,
												"nodeType": "ExpressionStatement",
												"src": "2847:73:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1199,
															"name": "users",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1019,
															"src": "2940:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$1015_storage_$",
																"typeString": "mapping(address => struct PeerToPeerLending.User storage ref)"
															}
														},
														"id": 1201,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1200,
															"name": "_borrower",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1177,
															"src": "2946:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2940:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$1015_storage",
															"typeString": "struct PeerToPeerLending.User storage ref"
														}
													},
													"id": 1202,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "fraudStatus",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1011,
													"src": "2940:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1181,
												"id": 1203,
												"nodeType": "Return",
												"src": "2933:35:1"
											}
										]
									},
									"id": 1205,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "setFraudStatus",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1177,
												"name": "_borrower",
												"nodeType": "VariableDeclaration",
												"scope": 1205,
												"src": "2677:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2676:19:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 1181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1180,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1205,
												"src": "2714:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1179,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2714:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2713:6:1"
									},
									"scope": 1262,
									"src": "2653:323:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1233,
										"nodeType": "Block",
										"src": "3065:228:1",
										"statements": [
											{
												"assignments": [
													1215
												],
												"declarations": [
													{
														"constant": false,
														"id": 1215,
														"name": "credit",
														"nodeType": "VariableDeclaration",
														"scope": 1234,
														"src": "3122:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_Credit_$995",
															"typeString": "contract Credit"
														},
														"typeName": {
															"contractScope": null,
															"id": 1214,
															"name": "Credit",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 995,
															"src": "3122:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Credit_$995",
																"typeString": "contract Credit"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1219,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1217,
															"name": "_credit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1207,
															"src": "3145:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Credit_$995",
																"typeString": "contract Credit"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_Credit_$995",
																"typeString": "contract Credit"
															}
														],
														"id": 1216,
														"name": "Credit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 995,
														"src": "3138:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_Credit_$995_$",
															"typeString": "type(contract Credit)"
														}
													},
													"id": 1218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3138:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Credit_$995",
														"typeString": "contract Credit"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3122:31:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1223,
															"name": "state",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1209,
															"src": "3183:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_State_$39",
																"typeString": "enum Credit.State"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_State_$39",
																"typeString": "enum Credit.State"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1220,
															"name": "credit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1215,
															"src": "3164:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Credit_$995",
																"typeString": "contract Credit"
															}
														},
														"id": 1222,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "changeState",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 973,
														"src": "3164:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_enum$_State_$39_$returns$_t_uint256_$",
															"typeString": "function (enum Credit.State) external returns (uint256)"
														}
													},
													"id": 1224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3164:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1225,
												"nodeType": "ExpressionStatement",
												"src": "3164:25:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1227,
															"name": "credit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1215,
															"src": "3254:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Credit_$995",
																"typeString": "contract Credit"
															}
														},
														{
															"argumentTypes": null,
															"id": 1228,
															"name": "state",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1209,
															"src": "3262:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_State_$39",
																"typeString": "enum Credit.State"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1229,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1418,
																"src": "3269:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1230,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "3269:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_Credit_$995",
																"typeString": "contract Credit"
															},
															{
																"typeIdentifier": "t_enum$_State_$39",
																"typeString": "enum Credit.State"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1226,
														"name": "LogCreditStateChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1038,
														"src": "3232:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_enum$_State_$39_$_t_uint256_$returns$__$",
															"typeString": "function (address,enum Credit.State,uint256)"
														}
													},
													"id": 1231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3232:53:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1232,
												"nodeType": "ExpressionStatement",
												"src": "3232:53:1"
											}
										]
									},
									"id": 1234,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 1212,
											"modifierName": {
												"argumentTypes": null,
												"id": 1211,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1315,
												"src": "3055:9:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "3055:9:1"
										}
									],
									"name": "changeCreditState",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1207,
												"name": "_credit",
												"nodeType": "VariableDeclaration",
												"scope": 1234,
												"src": "3012:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_Credit_$995",
													"typeString": "contract Credit"
												},
												"typeName": {
													"contractScope": null,
													"id": 1206,
													"name": "Credit",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 995,
													"src": "3012:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Credit_$995",
														"typeString": "contract Credit"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1209,
												"name": "state",
												"nodeType": "VariableDeclaration",
												"scope": 1234,
												"src": "3028:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_State_$39",
													"typeString": "enum Credit.State"
												},
												"typeName": {
													"contractScope": null,
													"id": 1208,
													"name": "Credit.State",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 39,
													"src": "3028:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_State_$39",
														"typeString": "enum Credit.State"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3011:36:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 1213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3065:0:1"
									},
									"scope": 1262,
									"src": "2984:309:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1260,
										"nodeType": "Block",
										"src": "3362:248:1",
										"statements": [
											{
												"assignments": [
													1242
												],
												"declarations": [
													{
														"constant": false,
														"id": 1242,
														"name": "credit",
														"nodeType": "VariableDeclaration",
														"scope": 1261,
														"src": "3427:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_Credit_$995",
															"typeString": "contract Credit"
														},
														"typeName": {
															"contractScope": null,
															"id": 1241,
															"name": "Credit",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 995,
															"src": "3427:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Credit_$995",
																"typeString": "contract Credit"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1246,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1244,
															"name": "_credit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1236,
															"src": "3450:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Credit_$995",
																"typeString": "contract Credit"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_Credit_$995",
																"typeString": "contract Credit"
															}
														],
														"id": 1243,
														"name": "Credit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 995,
														"src": "3443:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_Credit_$995_$",
															"typeString": "type(contract Credit)"
														}
													},
													"id": 1245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3443:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Credit_$995",
														"typeString": "contract Credit"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3427:31:1"
											},
											{
												"assignments": [
													1248
												],
												"declarations": [
													{
														"constant": false,
														"id": 1248,
														"name": "active",
														"nodeType": "VariableDeclaration",
														"scope": 1261,
														"src": "3469:11:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1247,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3469:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1252,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"id": 1249,
															"name": "credit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1242,
															"src": "3483:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Credit_$995",
																"typeString": "contract Credit"
															}
														},
														"id": 1250,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "toggleActive",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 994,
														"src": "3483:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$__$returns$_t_bool_$",
															"typeString": "function () external returns (bool)"
														}
													},
													"id": 1251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3483:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3469:35:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1254,
															"name": "credit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1242,
															"src": "3570:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Credit_$995",
																"typeString": "contract Credit"
															}
														},
														{
															"argumentTypes": null,
															"id": 1255,
															"name": "active",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1248,
															"src": "3578:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1256,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1418,
																"src": "3586:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "3586:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_Credit_$995",
																"typeString": "contract Credit"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1253,
														"name": "LogCreditActiveChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1046,
														"src": "3547:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$_t_uint256_$returns$__$",
															"typeString": "function (address,bool,uint256)"
														}
													},
													"id": 1258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3547:55:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1259,
												"nodeType": "ExpressionStatement",
												"src": "3547:55:1"
											}
										]
									},
									"id": 1261,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 1239,
											"modifierName": {
												"argumentTypes": null,
												"id": 1238,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1315,
												"src": "3352:9:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "3352:9:1"
										}
									],
									"name": "changeCreditState",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1236,
												"name": "_credit",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "3329:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_Credit_$995",
													"typeString": "contract Credit"
												},
												"typeName": {
													"contractScope": null,
													"id": 1235,
													"name": "Credit",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 995,
													"src": "3329:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Credit_$995",
														"typeString": "contract Credit"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3328:16:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 1240,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3362:0:1"
									},
									"scope": 1262,
									"src": "3301:309:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 1263,
							"src": "124:3489:1"
						}
					],
					"src": "0:3613:1"
				},
				"id": 1,
				"legacyAST": {
					"attributes": {
						"absolutePath": "smart-contracts/contracts/PeerToPeerLending.sol",
						"exportedSymbols": {
							"PeerToPeerLending": [
								1262
							]
						}
					},
					"children": [
						{
							"attributes": {
								"literals": [
									"solidity",
									"^",
									"0.4",
									".18"
								]
							},
							"id": 997,
							"name": "PragmaDirective",
							"src": "0:24:1"
						},
						{
							"attributes": {
								"SourceUnit": 1415,
								"absolutePath": "smart-contracts/contracts/common/SafeMath.sol",
								"file": "./common/SafeMath.sol",
								"scope": 1263,
								"symbolAliases": [
									null
								],
								"unitAlias": ""
							},
							"id": 998,
							"name": "ImportDirective",
							"src": "28:31:1"
						},
						{
							"attributes": {
								"SourceUnit": 1295,
								"absolutePath": "smart-contracts/contracts/common/Destructible.sol",
								"file": "./common/Destructible.sol",
								"scope": 1263,
								"symbolAliases": [
									null
								],
								"unitAlias": ""
							},
							"id": 999,
							"name": "ImportDirective",
							"src": "61:35:1"
						},
						{
							"attributes": {
								"SourceUnit": 996,
								"absolutePath": "smart-contracts/contracts/Credit.sol",
								"file": "./Credit.sol",
								"scope": 1263,
								"symbolAliases": [
									null
								],
								"unitAlias": ""
							},
							"id": 1000,
							"name": "ImportDirective",
							"src": "98:22:1"
						},
						{
							"attributes": {
								"contractDependencies": [
									1294,
									1316,
									995
								],
								"contractKind": "contract",
								"documentation": null,
								"fullyImplemented": true,
								"linearizedBaseContracts": [
									1262,
									1294,
									1316
								],
								"name": "PeerToPeerLending",
								"scope": 1263
							},
							"children": [
								{
									"attributes": {
										"arguments": [
											null
										]
									},
									"children": [
										{
											"attributes": {
												"contractScope": null,
												"name": "Destructible",
												"referencedDeclaration": 1294,
												"type": "contract Destructible"
											},
											"id": 1001,
											"name": "UserDefinedTypeName",
											"src": "154:12:1"
										}
									],
									"id": 1002,
									"name": "InheritanceSpecifier",
									"src": "154:12:1"
								},
								{
									"children": [
										{
											"attributes": {
												"contractScope": null,
												"name": "SafeMath",
												"referencedDeclaration": 1414,
												"type": "library SafeMath"
											},
											"id": 1003,
											"name": "UserDefinedTypeName",
											"src": "236:8:1"
										},
										{
											"attributes": {
												"name": "uint",
												"type": "uint256"
											},
											"id": 1004,
											"name": "ElementaryTypeName",
											"src": "249:4:1"
										}
									],
									"id": 1005,
									"name": "UsingForDirective",
									"src": "230:24:1"
								},
								{
									"attributes": {
										"canonicalName": "PeerToPeerLending.User",
										"name": "User",
										"scope": 1262,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"constant": false,
												"name": "credited",
												"scope": 1015,
												"stateVariable": false,
												"storageLocation": "default",
												"type": "bool",
												"value": null,
												"visibility": "internal"
											},
											"children": [
												{
													"attributes": {
														"name": "bool",
														"type": "bool"
													},
													"id": 1006,
													"name": "ElementaryTypeName",
													"src": "352:4:1"
												}
											],
											"id": 1007,
											"name": "VariableDeclaration",
											"src": "352:13:1"
										},
										{
											"attributes": {
												"constant": false,
												"name": "activeCredit",
												"scope": 1015,
												"stateVariable": false,
												"storageLocation": "default",
												"type": "address",
												"value": null,
												"visibility": "internal"
											},
											"children": [
												{
													"attributes": {
														"name": "address",
														"type": "address"
													},
													"id": 1008,
													"name": "ElementaryTypeName",
													"src": "423:7:1"
												}
											],
											"id": 1009,
											"name": "VariableDeclaration",
											"src": "423:20:1"
										},
										{
											"attributes": {
												"constant": false,
												"name": "fraudStatus",
												"scope": 1015,
												"stateVariable": false,
												"storageLocation": "default",
												"type": "bool",
												"value": null,
												"visibility": "internal"
											},
											"children": [
												{
													"attributes": {
														"name": "bool",
														"type": "bool"
													},
													"id": 1010,
													"name": "ElementaryTypeName",
													"src": "501:4:1"
												}
											],
											"id": 1011,
											"name": "VariableDeclaration",
											"src": "501:16:1"
										},
										{
											"attributes": {
												"constant": false,
												"name": "allCredits",
												"scope": 1015,
												"stateVariable": false,
												"storageLocation": "default",
												"type": "address[] storage pointer",
												"value": null,
												"visibility": "internal"
											},
											"children": [
												{
													"attributes": {
														"length": null,
														"type": "address[] storage pointer"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 1012,
															"name": "ElementaryTypeName",
															"src": "560:7:1"
														}
													],
													"id": 1013,
													"name": "ArrayTypeName",
													"src": "560:9:1"
												}
											],
											"id": 1014,
											"name": "VariableDeclaration",
											"src": "560:20:1"
										}
									],
									"id": 1015,
									"name": "StructDefinition",
									"src": "285:303:1"
								},
								{
									"attributes": {
										"constant": false,
										"name": "users",
										"scope": 1262,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "mapping(address => struct PeerToPeerLending.User storage ref)",
										"value": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"type": "mapping(address => struct PeerToPeerLending.User storage ref)"
											},
											"children": [
												{
													"attributes": {
														"name": "address",
														"type": "address"
													},
													"id": 1016,
													"name": "ElementaryTypeName",
													"src": "645:7:1"
												},
												{
													"attributes": {
														"contractScope": null,
														"name": "User",
														"referencedDeclaration": 1015,
														"type": "struct PeerToPeerLending.User storage pointer"
													},
													"id": 1017,
													"name": "UserDefinedTypeName",
													"src": "656:4:1"
												}
											],
											"id": 1018,
											"name": "Mapping",
											"src": "637:24:1"
										}
									],
									"id": 1019,
									"name": "VariableDeclaration",
									"src": "637:37:1"
								},
								{
									"attributes": {
										"constant": false,
										"name": "credits",
										"scope": 1262,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "address[] storage ref",
										"value": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"length": null,
												"type": "address[] storage pointer"
											},
											"children": [
												{
													"attributes": {
														"name": "address",
														"type": "address"
													},
													"id": 1020,
													"name": "ElementaryTypeName",
													"src": "722:7:1"
												}
											],
											"id": 1021,
											"name": "ArrayTypeName",
											"src": "722:9:1"
										}
									],
									"id": 1022,
									"name": "VariableDeclaration",
									"src": "722:24:1"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "LogCreditCreated"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "_address",
														"scope": 1030,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 1023,
															"name": "ElementaryTypeName",
															"src": "778:7:1"
														}
													],
													"id": 1024,
													"name": "VariableDeclaration",
													"src": "778:24:1"
												},
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "_borrower",
														"scope": 1030,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 1025,
															"name": "ElementaryTypeName",
															"src": "804:7:1"
														}
													],
													"id": 1026,
													"name": "VariableDeclaration",
													"src": "804:25:1"
												},
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "timestamp",
														"scope": 1030,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 1027,
															"name": "ElementaryTypeName",
															"src": "831:4:1"
														}
													],
													"id": 1028,
													"name": "VariableDeclaration",
													"src": "831:22:1"
												}
											],
											"id": 1029,
											"name": "ParameterList",
											"src": "777:77:1"
										}
									],
									"id": 1030,
									"name": "EventDefinition",
									"src": "755:100:1"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "LogCreditStateChanged"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "_address",
														"scope": 1038,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 1031,
															"name": "ElementaryTypeName",
															"src": "889:7:1"
														}
													],
													"id": 1032,
													"name": "VariableDeclaration",
													"src": "889:24:1"
												},
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "state",
														"scope": 1038,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "enum Credit.State",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"contractScope": null,
																"name": "Credit.State",
																"referencedDeclaration": 39,
																"type": "enum Credit.State"
															},
															"id": 1033,
															"name": "UserDefinedTypeName",
															"src": "915:12:1"
														}
													],
													"id": 1034,
													"name": "VariableDeclaration",
													"src": "915:26:1"
												},
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "timestamp",
														"scope": 1038,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 1035,
															"name": "ElementaryTypeName",
															"src": "943:4:1"
														}
													],
													"id": 1036,
													"name": "VariableDeclaration",
													"src": "943:22:1"
												}
											],
											"id": 1037,
											"name": "ParameterList",
											"src": "888:78:1"
										}
									],
									"id": 1038,
									"name": "EventDefinition",
									"src": "861:106:1"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "LogCreditActiveChanged"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "_address",
														"scope": 1046,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 1039,
															"name": "ElementaryTypeName",
															"src": "1002:7:1"
														}
													],
													"id": 1040,
													"name": "VariableDeclaration",
													"src": "1002:24:1"
												},
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "active",
														"scope": 1046,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "bool",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "bool",
																"type": "bool"
															},
															"id": 1041,
															"name": "ElementaryTypeName",
															"src": "1028:4:1"
														}
													],
													"id": 1042,
													"name": "VariableDeclaration",
													"src": "1028:19:1"
												},
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "timestamp",
														"scope": 1046,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 1043,
															"name": "ElementaryTypeName",
															"src": "1049:4:1"
														}
													],
													"id": 1044,
													"name": "VariableDeclaration",
													"src": "1049:22:1"
												}
											],
											"id": 1045,
											"name": "ParameterList",
											"src": "1001:71:1"
										}
									],
									"id": 1046,
									"name": "EventDefinition",
									"src": "973:100:1"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "LogUserSetFraud"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "_address",
														"scope": 1054,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 1047,
															"name": "ElementaryTypeName",
															"src": "1101:7:1"
														}
													],
													"id": 1048,
													"name": "VariableDeclaration",
													"src": "1101:24:1"
												},
												{
													"attributes": {
														"constant": false,
														"indexed": false,
														"name": "fraudStatus",
														"scope": 1054,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "bool",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "bool",
																"type": "bool"
															},
															"id": 1049,
															"name": "ElementaryTypeName",
															"src": "1127:4:1"
														}
													],
													"id": 1050,
													"name": "VariableDeclaration",
													"src": "1127:16:1"
												},
												{
													"attributes": {
														"constant": false,
														"indexed": false,
														"name": "timestamp",
														"scope": 1054,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 1051,
															"name": "ElementaryTypeName",
															"src": "1145:4:1"
														}
													],
													"id": 1052,
													"name": "VariableDeclaration",
													"src": "1145:14:1"
												}
											],
											"id": 1053,
											"name": "ParameterList",
											"src": "1100:60:1"
										}
									],
									"id": 1054,
									"name": "EventDefinition",
									"src": "1079:82:1"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": true,
										"modifiers": [
											null
										],
										"name": "PeerToPeerLending",
										"payable": false,
										"scope": 1262,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 1055,
											"name": "ParameterList",
											"src": "1195:2:1"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 1056,
											"name": "ParameterList",
											"src": "1205:0:1"
										},
										{
											"attributes": {
												"statements": [
													null
												]
											},
											"children": [],
											"id": 1057,
											"name": "Block",
											"src": "1205:10:1"
										}
									],
									"id": 1058,
									"name": "FunctionDefinition",
									"src": "1169:46:1"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "applyForCredit",
										"payable": false,
										"scope": 1262,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "requestedAmount",
														"scope": 1153,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 1059,
															"name": "ElementaryTypeName",
															"src": "1247:4:1"
														}
													],
													"id": 1060,
													"name": "VariableDeclaration",
													"src": "1247:20:1"
												},
												{
													"attributes": {
														"constant": false,
														"name": "repaymentsCount",
														"scope": 1153,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 1061,
															"name": "ElementaryTypeName",
															"src": "1269:4:1"
														}
													],
													"id": 1062,
													"name": "VariableDeclaration",
													"src": "1269:20:1"
												},
												{
													"attributes": {
														"constant": false,
														"name": "interest",
														"scope": 1153,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 1063,
															"name": "ElementaryTypeName",
															"src": "1291:4:1"
														}
													],
													"id": 1064,
													"name": "VariableDeclaration",
													"src": "1291:13:1"
												},
												{
													"attributes": {
														"constant": false,
														"name": "creditDescription",
														"scope": 1153,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "bytes32",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "bytes32",
																"type": "bytes32"
															},
															"id": 1065,
															"name": "ElementaryTypeName",
															"src": "1306:7:1"
														}
													],
													"id": 1066,
													"name": "VariableDeclaration",
													"src": "1306:25:1"
												}
											],
											"id": 1067,
											"name": "ParameterList",
											"src": "1246:86:1"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_credit",
														"scope": 1153,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 1068,
															"name": "ElementaryTypeName",
															"src": "1348:7:1"
														}
													],
													"id": 1069,
													"name": "VariableDeclaration",
													"src": "1348:15:1"
												}
											],
											"id": 1070,
											"name": "ParameterList",
											"src": "1347:17:1"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1429,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 1071,
																	"name": "Identifier",
																	"src": "1428:7:1"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "==",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"member_name": "credited",
																				"referencedDeclaration": 1007,
																				"type": "bool"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"type": "struct PeerToPeerLending.User storage ref"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1019,
																								"type": "mapping(address => struct PeerToPeerLending.User storage ref)",
																								"value": "users"
																							},
																							"id": 1072,
																							"name": "Identifier",
																							"src": "1436:5:1"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"member_name": "sender",
																								"referencedDeclaration": null,
																								"type": "address"
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 1426,
																										"type": "msg",
																										"value": "msg"
																									},
																									"id": 1073,
																									"name": "Identifier",
																									"src": "1442:3:1"
																								}
																							],
																							"id": 1074,
																							"name": "MemberAccess",
																							"src": "1442:10:1"
																						}
																					],
																					"id": 1075,
																					"name": "IndexAccess",
																					"src": "1436:17:1"
																				}
																			],
																			"id": 1076,
																			"name": "MemberAccess",
																			"src": "1436:26:1"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"hexvalue": "66616c7365",
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"subdenomination": null,
																				"token": "bool",
																				"type": "bool",
																				"value": "false"
																			},
																			"id": 1077,
																			"name": "Literal",
																			"src": "1466:5:1"
																		}
																	],
																	"id": 1078,
																	"name": "BinaryOperation",
																	"src": "1436:35:1"
																}
															],
															"id": 1079,
															"name": "FunctionCall",
															"src": "1428:44:1"
														}
													],
													"id": 1080,
													"name": "ExpressionStatement",
													"src": "1428:44:1"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1429,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 1081,
																	"name": "Identifier",
																	"src": "1541:7:1"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "==",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"member_name": "fraudStatus",
																				"referencedDeclaration": 1011,
																				"type": "bool"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"type": "struct PeerToPeerLending.User storage ref"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1019,
																								"type": "mapping(address => struct PeerToPeerLending.User storage ref)",
																								"value": "users"
																							},
																							"id": 1082,
																							"name": "Identifier",
																							"src": "1549:5:1"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"member_name": "sender",
																								"referencedDeclaration": null,
																								"type": "address"
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 1426,
																										"type": "msg",
																										"value": "msg"
																									},
																									"id": 1083,
																									"name": "Identifier",
																									"src": "1555:3:1"
																								}
																							],
																							"id": 1084,
																							"name": "MemberAccess",
																							"src": "1555:10:1"
																						}
																					],
																					"id": 1085,
																					"name": "IndexAccess",
																					"src": "1549:17:1"
																				}
																			],
																			"id": 1086,
																			"name": "MemberAccess",
																			"src": "1549:29:1"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"hexvalue": "66616c7365",
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"subdenomination": null,
																				"token": "bool",
																				"type": "bool",
																				"value": "false"
																			},
																			"id": 1087,
																			"name": "Literal",
																			"src": "1582:5:1"
																		}
																	],
																	"id": 1088,
																	"name": "BinaryOperation",
																	"src": "1549:38:1"
																}
															],
															"id": 1089,
															"name": "FunctionCall",
															"src": "1541:47:1"
														}
													],
													"id": 1090,
													"name": "ExpressionStatement",
													"src": "1541:47:1"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1417,
																		"type": "function (bool) pure",
																		"value": "assert"
																	},
																	"id": 1091,
																	"name": "Identifier",
																	"src": "1660:6:1"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "==",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"member_name": "activeCredit",
																				"referencedDeclaration": 1009,
																				"type": "address"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"type": "struct PeerToPeerLending.User storage ref"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1019,
																								"type": "mapping(address => struct PeerToPeerLending.User storage ref)",
																								"value": "users"
																							},
																							"id": 1092,
																							"name": "Identifier",
																							"src": "1667:5:1"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"member_name": "sender",
																								"referencedDeclaration": null,
																								"type": "address"
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 1426,
																										"type": "msg",
																										"value": "msg"
																									},
																									"id": 1093,
																									"name": "Identifier",
																									"src": "1673:3:1"
																								}
																							],
																							"id": 1094,
																							"name": "MemberAccess",
																							"src": "1673:10:1"
																						}
																					],
																					"id": 1095,
																					"name": "IndexAccess",
																					"src": "1667:17:1"
																				}
																			],
																			"id": 1096,
																			"name": "MemberAccess",
																			"src": "1667:30:1"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"hexvalue": "30",
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"subdenomination": null,
																				"token": "number",
																				"type": "int_const 0",
																				"value": "0"
																			},
																			"id": 1097,
																			"name": "Literal",
																			"src": "1701:1:1"
																		}
																	],
																	"id": 1098,
																	"name": "BinaryOperation",
																	"src": "1667:35:1"
																}
															],
															"id": 1099,
															"name": "FunctionCall",
															"src": "1660:43:1"
														}
													],
													"id": 1100,
													"name": "ExpressionStatement",
													"src": "1660:43:1"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"member_name": "credited",
																		"referencedDeclaration": 1007,
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"type": "struct PeerToPeerLending.User storage ref"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 1019,
																						"type": "mapping(address => struct PeerToPeerLending.User storage ref)",
																						"value": "users"
																					},
																					"id": 1101,
																					"name": "Identifier",
																					"src": "1780:5:1"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "sender",
																						"referencedDeclaration": null,
																						"type": "address"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1426,
																								"type": "msg",
																								"value": "msg"
																							},
																							"id": 1102,
																							"name": "Identifier",
																							"src": "1786:3:1"
																						}
																					],
																					"id": 1103,
																					"name": "MemberAccess",
																					"src": "1786:10:1"
																				}
																			],
																			"id": 1104,
																			"name": "IndexAccess",
																			"src": "1780:17:1"
																		}
																	],
																	"id": 1105,
																	"name": "MemberAccess",
																	"src": "1780:26:1"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "74727565",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "bool",
																		"type": "bool",
																		"value": "true"
																	},
																	"id": 1106,
																	"name": "Literal",
																	"src": "1809:4:1"
																}
															],
															"id": 1107,
															"name": "Assignment",
															"src": "1780:33:1"
														}
													],
													"id": 1108,
													"name": "ExpressionStatement",
													"src": "1780:33:1"
												},
												{
													"attributes": {
														"assignments": [
															1110
														]
													},
													"children": [
														{
															"attributes": {
																"constant": false,
																"name": "credit",
																"scope": 1153,
																"stateVariable": false,
																"storageLocation": "default",
																"type": "contract Credit",
																"value": null,
																"visibility": "internal"
															},
															"children": [
																{
																	"attributes": {
																		"contractScope": null,
																		"name": "Credit",
																		"referencedDeclaration": 995,
																		"type": "contract Credit"
																	},
																	"id": 1109,
																	"name": "UserDefinedTypeName",
																	"src": "1894:6:1"
																}
															],
															"id": 1110,
															"name": "VariableDeclaration",
															"src": "1894:13:1"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "contract Credit",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		],
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"type": "function (uint256,uint256,uint256,bytes32) returns (contract Credit)"
																	},
																	"children": [
																		{
																			"attributes": {
																				"contractScope": null,
																				"name": "Credit",
																				"referencedDeclaration": 995,
																				"type": "contract Credit"
																			},
																			"id": 1111,
																			"name": "UserDefinedTypeName",
																			"src": "1914:6:1"
																		}
																	],
																	"id": 1112,
																	"name": "NewExpression",
																	"src": "1910:10:1"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1060,
																		"type": "uint256",
																		"value": "requestedAmount"
																	},
																	"id": 1113,
																	"name": "Identifier",
																	"src": "1921:15:1"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1062,
																		"type": "uint256",
																		"value": "repaymentsCount"
																	},
																	"id": 1114,
																	"name": "Identifier",
																	"src": "1938:15:1"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1064,
																		"type": "uint256",
																		"value": "interest"
																	},
																	"id": 1115,
																	"name": "Identifier",
																	"src": "1955:8:1"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1066,
																		"type": "bytes32",
																		"value": "creditDescription"
																	},
																	"id": 1116,
																	"name": "Identifier",
																	"src": "1965:17:1"
																}
															],
															"id": 1117,
															"name": "FunctionCall",
															"src": "1910:73:1"
														}
													],
													"id": 1118,
													"name": "VariableDeclarationStatement",
													"src": "1894:89:1"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "address"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"member_name": "activeCredit",
																		"referencedDeclaration": 1009,
																		"type": "address"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"type": "struct PeerToPeerLending.User storage ref"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 1019,
																						"type": "mapping(address => struct PeerToPeerLending.User storage ref)",
																						"value": "users"
																					},
																					"id": 1119,
																					"name": "Identifier",
																					"src": "2047:5:1"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "sender",
																						"referencedDeclaration": null,
																						"type": "address"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1426,
																								"type": "msg",
																								"value": "msg"
																							},
																							"id": 1120,
																							"name": "Identifier",
																							"src": "2053:3:1"
																						}
																					],
																					"id": 1121,
																					"name": "MemberAccess",
																					"src": "2053:10:1"
																				}
																			],
																			"id": 1122,
																			"name": "IndexAccess",
																			"src": "2047:17:1"
																		}
																	],
																	"id": 1123,
																	"name": "MemberAccess",
																	"src": "2047:30:1"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1110,
																		"type": "contract Credit",
																		"value": "credit"
																	},
																	"id": 1124,
																	"name": "Identifier",
																	"src": "2080:6:1"
																}
															],
															"id": 1125,
															"name": "Assignment",
															"src": "2047:39:1"
														}
													],
													"id": 1126,
													"name": "ExpressionStatement",
													"src": "2047:39:1"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "uint256",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Credit_$995",
																				"typeString": "contract Credit"
																			}
																		],
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "push",
																		"referencedDeclaration": null,
																		"type": "function (address) returns (uint256)"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1022,
																				"type": "address[] storage ref",
																				"value": "credits"
																			},
																			"id": 1127,
																			"name": "Identifier",
																			"src": "2163:7:1"
																		}
																	],
																	"id": 1129,
																	"name": "MemberAccess",
																	"src": "2163:12:1"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1110,
																		"type": "contract Credit",
																		"value": "credit"
																	},
																	"id": 1130,
																	"name": "Identifier",
																	"src": "2176:6:1"
																}
															],
															"id": 1131,
															"name": "FunctionCall",
															"src": "2163:20:1"
														}
													],
													"id": 1132,
													"name": "ExpressionStatement",
													"src": "2163:20:1"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "uint256",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Credit_$995",
																				"typeString": "contract Credit"
																			}
																		],
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "push",
																		"referencedDeclaration": null,
																		"type": "function (address) returns (uint256)"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"member_name": "allCredits",
																				"referencedDeclaration": 1014,
																				"type": "address[] storage ref"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"type": "struct PeerToPeerLending.User storage ref"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1019,
																								"type": "mapping(address => struct PeerToPeerLending.User storage ref)",
																								"value": "users"
																							},
																							"id": 1133,
																							"name": "Identifier",
																							"src": "2246:5:1"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"member_name": "sender",
																								"referencedDeclaration": null,
																								"type": "address"
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 1426,
																										"type": "msg",
																										"value": "msg"
																									},
																									"id": 1134,
																									"name": "Identifier",
																									"src": "2252:3:1"
																								}
																							],
																							"id": 1135,
																							"name": "MemberAccess",
																							"src": "2252:10:1"
																						}
																					],
																					"id": 1136,
																					"name": "IndexAccess",
																					"src": "2246:17:1"
																				}
																			],
																			"id": 1137,
																			"name": "MemberAccess",
																			"src": "2246:28:1"
																		}
																	],
																	"id": 1138,
																	"name": "MemberAccess",
																	"src": "2246:33:1"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1110,
																		"type": "contract Credit",
																		"value": "credit"
																	},
																	"id": 1139,
																	"name": "Identifier",
																	"src": "2280:6:1"
																}
															],
															"id": 1140,
															"name": "FunctionCall",
															"src": "2246:41:1"
														}
													],
													"id": 1141,
													"name": "ExpressionStatement",
													"src": "2246:41:1"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Credit_$995",
																				"typeString": "contract Credit"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1030,
																		"type": "function (address,address,uint256)",
																		"value": "LogCreditCreated"
																	},
																	"id": 1142,
																	"name": "Identifier",
																	"src": "2343:16:1"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1110,
																		"type": "contract Credit",
																		"value": "credit"
																	},
																	"id": 1143,
																	"name": "Identifier",
																	"src": "2360:6:1"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "sender",
																		"referencedDeclaration": null,
																		"type": "address"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1426,
																				"type": "msg",
																				"value": "msg"
																			},
																			"id": 1144,
																			"name": "Identifier",
																			"src": "2368:3:1"
																		}
																	],
																	"id": 1145,
																	"name": "MemberAccess",
																	"src": "2368:10:1"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "timestamp",
																		"referencedDeclaration": null,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1418,
																				"type": "block",
																				"value": "block"
																			},
																			"id": 1146,
																			"name": "Identifier",
																			"src": "2380:5:1"
																		}
																	],
																	"id": 1147,
																	"name": "MemberAccess",
																	"src": "2380:15:1"
																}
															],
															"id": 1148,
															"name": "FunctionCall",
															"src": "2343:53:1"
														}
													],
													"id": 1149,
													"name": "ExpressionStatement",
													"src": "2343:53:1"
												},
												{
													"attributes": {
														"functionReturnParameters": 1070
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"overloadedDeclarations": [
																	null
																],
																"referencedDeclaration": 1110,
																"type": "contract Credit",
																"value": "credit"
															},
															"id": 1150,
															"name": "Identifier",
															"src": "2416:6:1"
														}
													],
													"id": 1151,
													"name": "Return",
													"src": "2409:13:1"
												}
											],
											"id": 1152,
											"name": "Block",
											"src": "1365:1065:1"
										}
									],
									"id": 1153,
									"name": "FunctionDefinition",
									"src": "1223:1207:1"
								},
								{
									"attributes": {
										"constant": true,
										"implemented": true,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "getCredits",
										"payable": false,
										"scope": 1262,
										"stateMutability": "view",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 1154,
											"name": "ParameterList",
											"src": "2457:2:1"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 1162,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address[] memory",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"length": null,
																"type": "address[] storage pointer"
															},
															"children": [
																{
																	"attributes": {
																		"name": "address",
																		"type": "address"
																	},
																	"id": 1155,
																	"name": "ElementaryTypeName",
																	"src": "2481:7:1"
																}
															],
															"id": 1156,
															"name": "ArrayTypeName",
															"src": "2481:9:1"
														}
													],
													"id": 1157,
													"name": "VariableDeclaration",
													"src": "2481:9:1"
												}
											],
											"id": 1158,
											"name": "ParameterList",
											"src": "2480:11:1"
										},
										{
											"children": [
												{
													"attributes": {
														"functionReturnParameters": 1158
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"overloadedDeclarations": [
																	null
																],
																"referencedDeclaration": 1022,
																"type": "address[] storage ref",
																"value": "credits"
															},
															"id": 1159,
															"name": "Identifier",
															"src": "2510:7:1"
														}
													],
													"id": 1160,
													"name": "Return",
													"src": "2503:14:1"
												}
											],
											"id": 1161,
											"name": "Block",
											"src": "2492:33:1"
										}
									],
									"id": 1162,
									"name": "FunctionDefinition",
									"src": "2438:87:1"
								},
								{
									"attributes": {
										"constant": true,
										"implemented": true,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "getUserCredits",
										"payable": false,
										"scope": 1262,
										"stateMutability": "view",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 1163,
											"name": "ParameterList",
											"src": "2556:2:1"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 1175,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address[] memory",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"length": null,
																"type": "address[] storage pointer"
															},
															"children": [
																{
																	"attributes": {
																		"name": "address",
																		"type": "address"
																	},
																	"id": 1164,
																	"name": "ElementaryTypeName",
																	"src": "2580:7:1"
																}
															],
															"id": 1165,
															"name": "ArrayTypeName",
															"src": "2580:9:1"
														}
													],
													"id": 1166,
													"name": "VariableDeclaration",
													"src": "2580:9:1"
												}
											],
											"id": 1167,
											"name": "ParameterList",
											"src": "2579:11:1"
										},
										{
											"children": [
												{
													"attributes": {
														"functionReturnParameters": 1167
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"member_name": "allCredits",
																"referencedDeclaration": 1014,
																"type": "address[] storage ref"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"type": "struct PeerToPeerLending.User storage ref"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1019,
																				"type": "mapping(address => struct PeerToPeerLending.User storage ref)",
																				"value": "users"
																			},
																			"id": 1168,
																			"name": "Identifier",
																			"src": "2609:5:1"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"member_name": "sender",
																				"referencedDeclaration": null,
																				"type": "address"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 1426,
																						"type": "msg",
																						"value": "msg"
																					},
																					"id": 1169,
																					"name": "Identifier",
																					"src": "2615:3:1"
																				}
																			],
																			"id": 1170,
																			"name": "MemberAccess",
																			"src": "2615:10:1"
																		}
																	],
																	"id": 1171,
																	"name": "IndexAccess",
																	"src": "2609:17:1"
																}
															],
															"id": 1172,
															"name": "MemberAccess",
															"src": "2609:28:1"
														}
													],
													"id": 1173,
													"name": "Return",
													"src": "2602:35:1"
												}
											],
											"id": 1174,
											"name": "Block",
											"src": "2591:54:1"
										}
									],
									"id": 1175,
									"name": "FunctionDefinition",
									"src": "2533:112:1"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "setFraudStatus",
										"payable": false,
										"scope": 1262,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "external"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_borrower",
														"scope": 1205,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 1176,
															"name": "ElementaryTypeName",
															"src": "2677:7:1"
														}
													],
													"id": 1177,
													"name": "VariableDeclaration",
													"src": "2677:17:1"
												}
											],
											"id": 1178,
											"name": "ParameterList",
											"src": "2676:19:1"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 1205,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "bool",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "bool",
																"type": "bool"
															},
															"id": 1179,
															"name": "ElementaryTypeName",
															"src": "2714:4:1"
														}
													],
													"id": 1180,
													"name": "VariableDeclaration",
													"src": "2714:4:1"
												}
											],
											"id": 1181,
											"name": "ParameterList",
											"src": "2713:6:1"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"member_name": "fraudStatus",
																		"referencedDeclaration": 1011,
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"type": "struct PeerToPeerLending.User storage ref"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 1019,
																						"type": "mapping(address => struct PeerToPeerLending.User storage ref)",
																						"value": "users"
																					},
																					"id": 1182,
																					"name": "Identifier",
																					"src": "2769:5:1"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 1177,
																						"type": "address",
																						"value": "_borrower"
																					},
																					"id": 1183,
																					"name": "Identifier",
																					"src": "2775:9:1"
																				}
																			],
																			"id": 1184,
																			"name": "IndexAccess",
																			"src": "2769:16:1"
																		}
																	],
																	"id": 1185,
																	"name": "MemberAccess",
																	"src": "2769:28:1"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "74727565",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "bool",
																		"type": "bool",
																		"value": "true"
																	},
																	"id": 1186,
																	"name": "Literal",
																	"src": "2800:4:1"
																}
															],
															"id": 1187,
															"name": "Assignment",
															"src": "2769:35:1"
														}
													],
													"id": 1188,
													"name": "ExpressionStatement",
													"src": "2769:35:1"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1054,
																		"type": "function (address,bool,uint256)",
																		"value": "LogUserSetFraud"
																	},
																	"id": 1189,
																	"name": "Identifier",
																	"src": "2847:15:1"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1177,
																		"type": "address",
																		"value": "_borrower"
																	},
																	"id": 1190,
																	"name": "Identifier",
																	"src": "2863:9:1"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "fraudStatus",
																		"referencedDeclaration": 1011,
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"type": "struct PeerToPeerLending.User storage ref"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 1019,
																						"type": "mapping(address => struct PeerToPeerLending.User storage ref)",
																						"value": "users"
																					},
																					"id": 1191,
																					"name": "Identifier",
																					"src": "2874:5:1"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 1177,
																						"type": "address",
																						"value": "_borrower"
																					},
																					"id": 1192,
																					"name": "Identifier",
																					"src": "2880:9:1"
																				}
																			],
																			"id": 1193,
																			"name": "IndexAccess",
																			"src": "2874:16:1"
																		}
																	],
																	"id": 1194,
																	"name": "MemberAccess",
																	"src": "2874:28:1"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "timestamp",
																		"referencedDeclaration": null,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1418,
																				"type": "block",
																				"value": "block"
																			},
																			"id": 1195,
																			"name": "Identifier",
																			"src": "2904:5:1"
																		}
																	],
																	"id": 1196,
																	"name": "MemberAccess",
																	"src": "2904:15:1"
																}
															],
															"id": 1197,
															"name": "FunctionCall",
															"src": "2847:73:1"
														}
													],
													"id": 1198,
													"name": "ExpressionStatement",
													"src": "2847:73:1"
												},
												{
													"attributes": {
														"functionReturnParameters": 1181
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"member_name": "fraudStatus",
																"referencedDeclaration": 1011,
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"type": "struct PeerToPeerLending.User storage ref"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1019,
																				"type": "mapping(address => struct PeerToPeerLending.User storage ref)",
																				"value": "users"
																			},
																			"id": 1199,
																			"name": "Identifier",
																			"src": "2940:5:1"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1177,
																				"type": "address",
																				"value": "_borrower"
																			},
																			"id": 1200,
																			"name": "Identifier",
																			"src": "2946:9:1"
																		}
																	],
																	"id": 1201,
																	"name": "IndexAccess",
																	"src": "2940:16:1"
																}
															],
															"id": 1202,
															"name": "MemberAccess",
															"src": "2940:28:1"
														}
													],
													"id": 1203,
													"name": "Return",
													"src": "2933:35:1"
												}
											],
											"id": 1204,
											"name": "Block",
											"src": "2720:256:1"
										}
									],
									"id": 1205,
									"name": "FunctionDefinition",
									"src": "2653:323:1"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "changeCreditState",
										"payable": false,
										"scope": 1262,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_credit",
														"scope": 1234,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "contract Credit",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"contractScope": null,
																"name": "Credit",
																"referencedDeclaration": 995,
																"type": "contract Credit"
															},
															"id": 1206,
															"name": "UserDefinedTypeName",
															"src": "3012:6:1"
														}
													],
													"id": 1207,
													"name": "VariableDeclaration",
													"src": "3012:14:1"
												},
												{
													"attributes": {
														"constant": false,
														"name": "state",
														"scope": 1234,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "enum Credit.State",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"contractScope": null,
																"name": "Credit.State",
																"referencedDeclaration": 39,
																"type": "enum Credit.State"
															},
															"id": 1208,
															"name": "UserDefinedTypeName",
															"src": "3028:12:1"
														}
													],
													"id": 1209,
													"name": "VariableDeclaration",
													"src": "3028:18:1"
												}
											],
											"id": 1210,
											"name": "ParameterList",
											"src": "3011:36:1"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 1213,
											"name": "ParameterList",
											"src": "3065:0:1"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 1315,
														"type": "modifier ()",
														"value": "onlyOwner"
													},
													"id": 1211,
													"name": "Identifier",
													"src": "3055:9:1"
												}
											],
											"id": 1212,
											"name": "ModifierInvocation",
											"src": "3055:9:1"
										},
										{
											"children": [
												{
													"attributes": {
														"assignments": [
															1215
														]
													},
													"children": [
														{
															"attributes": {
																"constant": false,
																"name": "credit",
																"scope": 1234,
																"stateVariable": false,
																"storageLocation": "default",
																"type": "contract Credit",
																"value": null,
																"visibility": "internal"
															},
															"children": [
																{
																	"attributes": {
																		"contractScope": null,
																		"name": "Credit",
																		"referencedDeclaration": 995,
																		"type": "contract Credit"
																	},
																	"id": 1214,
																	"name": "UserDefinedTypeName",
																	"src": "3122:6:1"
																}
															],
															"id": 1215,
															"name": "VariableDeclaration",
															"src": "3122:13:1"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "contract Credit",
																"type_conversion": true
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Credit_$995",
																				"typeString": "contract Credit"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 995,
																		"type": "type(contract Credit)",
																		"value": "Credit"
																	},
																	"id": 1216,
																	"name": "Identifier",
																	"src": "3138:6:1"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1207,
																		"type": "contract Credit",
																		"value": "_credit"
																	},
																	"id": 1217,
																	"name": "Identifier",
																	"src": "3145:7:1"
																}
															],
															"id": 1218,
															"name": "FunctionCall",
															"src": "3138:15:1"
														}
													],
													"id": 1219,
													"name": "VariableDeclarationStatement",
													"src": "3122:31:1"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "uint256",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_enum$_State_$39",
																				"typeString": "enum Credit.State"
																			}
																		],
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "changeState",
																		"referencedDeclaration": 973,
																		"type": "function (enum Credit.State) external returns (uint256)"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1215,
																				"type": "contract Credit",
																				"value": "credit"
																			},
																			"id": 1220,
																			"name": "Identifier",
																			"src": "3164:6:1"
																		}
																	],
																	"id": 1222,
																	"name": "MemberAccess",
																	"src": "3164:18:1"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1209,
																		"type": "enum Credit.State",
																		"value": "state"
																	},
																	"id": 1223,
																	"name": "Identifier",
																	"src": "3183:5:1"
																}
															],
															"id": 1224,
															"name": "FunctionCall",
															"src": "3164:25:1"
														}
													],
													"id": 1225,
													"name": "ExpressionStatement",
													"src": "3164:25:1"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Credit_$995",
																				"typeString": "contract Credit"
																			},
																			{
																				"typeIdentifier": "t_enum$_State_$39",
																				"typeString": "enum Credit.State"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1038,
																		"type": "function (address,enum Credit.State,uint256)",
																		"value": "LogCreditStateChanged"
																	},
																	"id": 1226,
																	"name": "Identifier",
																	"src": "3232:21:1"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1215,
																		"type": "contract Credit",
																		"value": "credit"
																	},
																	"id": 1227,
																	"name": "Identifier",
																	"src": "3254:6:1"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1209,
																		"type": "enum Credit.State",
																		"value": "state"
																	},
																	"id": 1228,
																	"name": "Identifier",
																	"src": "3262:5:1"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "timestamp",
																		"referencedDeclaration": null,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1418,
																				"type": "block",
																				"value": "block"
																			},
																			"id": 1229,
																			"name": "Identifier",
																			"src": "3269:5:1"
																		}
																	],
																	"id": 1230,
																	"name": "MemberAccess",
																	"src": "3269:15:1"
																}
															],
															"id": 1231,
															"name": "FunctionCall",
															"src": "3232:53:1"
														}
													],
													"id": 1232,
													"name": "ExpressionStatement",
													"src": "3232:53:1"
												}
											],
											"id": 1233,
											"name": "Block",
											"src": "3065:228:1"
										}
									],
									"id": 1234,
									"name": "FunctionDefinition",
									"src": "2984:309:1"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "changeCreditState",
										"payable": false,
										"scope": 1262,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_credit",
														"scope": 1261,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "contract Credit",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"contractScope": null,
																"name": "Credit",
																"referencedDeclaration": 995,
																"type": "contract Credit"
															},
															"id": 1235,
															"name": "UserDefinedTypeName",
															"src": "3329:6:1"
														}
													],
													"id": 1236,
													"name": "VariableDeclaration",
													"src": "3329:14:1"
												}
											],
											"id": 1237,
											"name": "ParameterList",
											"src": "3328:16:1"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 1240,
											"name": "ParameterList",
											"src": "3362:0:1"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 1315,
														"type": "modifier ()",
														"value": "onlyOwner"
													},
													"id": 1238,
													"name": "Identifier",
													"src": "3352:9:1"
												}
											],
											"id": 1239,
											"name": "ModifierInvocation",
											"src": "3352:9:1"
										},
										{
											"children": [
												{
													"attributes": {
														"assignments": [
															1242
														]
													},
													"children": [
														{
															"attributes": {
																"constant": false,
																"name": "credit",
																"scope": 1261,
																"stateVariable": false,
																"storageLocation": "default",
																"type": "contract Credit",
																"value": null,
																"visibility": "internal"
															},
															"children": [
																{
																	"attributes": {
																		"contractScope": null,
																		"name": "Credit",
																		"referencedDeclaration": 995,
																		"type": "contract Credit"
																	},
																	"id": 1241,
																	"name": "UserDefinedTypeName",
																	"src": "3427:6:1"
																}
															],
															"id": 1242,
															"name": "VariableDeclaration",
															"src": "3427:13:1"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "contract Credit",
																"type_conversion": true
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Credit_$995",
																				"typeString": "contract Credit"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 995,
																		"type": "type(contract Credit)",
																		"value": "Credit"
																	},
																	"id": 1243,
																	"name": "Identifier",
																	"src": "3443:6:1"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1236,
																		"type": "contract Credit",
																		"value": "_credit"
																	},
																	"id": 1244,
																	"name": "Identifier",
																	"src": "3450:7:1"
																}
															],
															"id": 1245,
															"name": "FunctionCall",
															"src": "3443:15:1"
														}
													],
													"id": 1246,
													"name": "VariableDeclarationStatement",
													"src": "3427:31:1"
												},
												{
													"attributes": {
														"assignments": [
															1248
														]
													},
													"children": [
														{
															"attributes": {
																"constant": false,
																"name": "active",
																"scope": 1261,
																"stateVariable": false,
																"storageLocation": "default",
																"type": "bool",
																"value": null,
																"visibility": "internal"
															},
															"children": [
																{
																	"attributes": {
																		"name": "bool",
																		"type": "bool"
																	},
																	"id": 1247,
																	"name": "ElementaryTypeName",
																	"src": "3469:4:1"
																}
															],
															"id": 1248,
															"name": "VariableDeclaration",
															"src": "3469:11:1"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"arguments": [
																	null
																],
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "bool",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			null
																		],
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "toggleActive",
																		"referencedDeclaration": 994,
																		"type": "function () external returns (bool)"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1242,
																				"type": "contract Credit",
																				"value": "credit"
																			},
																			"id": 1249,
																			"name": "Identifier",
																			"src": "3483:6:1"
																		}
																	],
																	"id": 1250,
																	"name": "MemberAccess",
																	"src": "3483:19:1"
																}
															],
															"id": 1251,
															"name": "FunctionCall",
															"src": "3483:21:1"
														}
													],
													"id": 1252,
													"name": "VariableDeclarationStatement",
													"src": "3469:35:1"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Credit_$995",
																				"typeString": "contract Credit"
																			},
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1046,
																		"type": "function (address,bool,uint256)",
																		"value": "LogCreditActiveChanged"
																	},
																	"id": 1253,
																	"name": "Identifier",
																	"src": "3547:22:1"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1242,
																		"type": "contract Credit",
																		"value": "credit"
																	},
																	"id": 1254,
																	"name": "Identifier",
																	"src": "3570:6:1"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1248,
																		"type": "bool",
																		"value": "active"
																	},
																	"id": 1255,
																	"name": "Identifier",
																	"src": "3578:6:1"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "timestamp",
																		"referencedDeclaration": null,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1418,
																				"type": "block",
																				"value": "block"
																			},
																			"id": 1256,
																			"name": "Identifier",
																			"src": "3586:5:1"
																		}
																	],
																	"id": 1257,
																	"name": "MemberAccess",
																	"src": "3586:15:1"
																}
															],
															"id": 1258,
															"name": "FunctionCall",
															"src": "3547:55:1"
														}
													],
													"id": 1259,
													"name": "ExpressionStatement",
													"src": "3547:55:1"
												}
											],
											"id": 1260,
											"name": "Block",
											"src": "3362:248:1"
										}
									],
									"id": 1261,
									"name": "FunctionDefinition",
									"src": "3301:309:1"
								}
							],
							"id": 1262,
							"name": "ContractDefinition",
							"src": "124:3489:1"
						}
					],
					"id": 1263,
					"name": "SourceUnit",
					"src": "0:3613:1"
				}
			},
			"smart-contracts/contracts/common/Destructible.sol": {
				"ast": {
					"absolutePath": "smart-contracts/contracts/common/Destructible.sol",
					"exportedSymbols": {
						"Destructible": [
							1294
						]
					},
					"id": 1295,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1264,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:2"
						},
						{
							"absolutePath": "smart-contracts/contracts/common/Ownable.sol",
							"file": "./Ownable.sol",
							"id": 1265,
							"nodeType": "ImportDirective",
							"scope": 1295,
							"sourceUnit": 1317,
							"src": "28:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": [],
									"baseName": {
										"contractScope": null,
										"id": 1266,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1316,
										"src": "80:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$1316",
											"typeString": "contract Ownable"
										}
									},
									"id": 1267,
									"nodeType": "InheritanceSpecifier",
									"src": "80:7:2"
								}
							],
							"contractDependencies": [
								1316
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1294,
							"linearizedBaseContracts": [
								1294,
								1316
							],
							"name": "Destructible",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1270,
										"nodeType": "Block",
										"src": "140:3:2",
										"statements": []
									},
									"id": 1271,
									"implemented": true,
									"isConstructor": true,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "Destructible",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "122:2:2"
									},
									"payable": true,
									"returnParameters": {
										"id": 1269,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "140:0:2"
									},
									"scope": 1294,
									"src": "101:42:2",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1280,
										"nodeType": "Block",
										"src": "187:38:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1277,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1298,
															"src": "211:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1276,
														"name": "selfdestruct",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1432,
														"src": "198:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "198:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1279,
												"nodeType": "ExpressionStatement",
												"src": "198:19:2"
											}
										]
									},
									"id": 1281,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 1274,
											"modifierName": {
												"argumentTypes": null,
												"id": 1273,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1315,
												"src": "177:9:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "177:9:2"
										}
									],
									"name": "destroy",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1272,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "167:2:2"
									},
									"payable": false,
									"returnParameters": {
										"id": 1275,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "187:0:2"
									},
									"scope": 1294,
									"src": "151:74:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1292,
										"nodeType": "Block",
										"src": "298:43:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1289,
															"name": "_recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1283,
															"src": "322:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1288,
														"name": "selfdestruct",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1432,
														"src": "309:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "309:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1291,
												"nodeType": "ExpressionStatement",
												"src": "309:24:2"
											}
										]
									},
									"id": 1293,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 1286,
											"modifierName": {
												"argumentTypes": null,
												"id": 1285,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1315,
												"src": "288:9:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "288:9:2"
										}
									],
									"name": "destroyAndSend",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1283,
												"name": "_recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "261:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "261:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "260:20:2"
									},
									"payable": false,
									"returnParameters": {
										"id": 1287,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "298:0:2"
									},
									"scope": 1294,
									"src": "237:104:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 1295,
							"src": "55:289:2"
						}
					],
					"src": "0:344:2"
				},
				"id": 2,
				"legacyAST": {
					"attributes": {
						"absolutePath": "smart-contracts/contracts/common/Destructible.sol",
						"exportedSymbols": {
							"Destructible": [
								1294
							]
						}
					},
					"children": [
						{
							"attributes": {
								"literals": [
									"solidity",
									"^",
									"0.4",
									".18"
								]
							},
							"id": 1264,
							"name": "PragmaDirective",
							"src": "0:24:2"
						},
						{
							"attributes": {
								"SourceUnit": 1317,
								"absolutePath": "smart-contracts/contracts/common/Ownable.sol",
								"file": "./Ownable.sol",
								"scope": 1295,
								"symbolAliases": [
									null
								],
								"unitAlias": ""
							},
							"id": 1265,
							"name": "ImportDirective",
							"src": "28:23:2"
						},
						{
							"attributes": {
								"contractDependencies": [
									1316
								],
								"contractKind": "contract",
								"documentation": null,
								"fullyImplemented": true,
								"linearizedBaseContracts": [
									1294,
									1316
								],
								"name": "Destructible",
								"scope": 1295
							},
							"children": [
								{
									"attributes": {
										"arguments": [
											null
										]
									},
									"children": [
										{
											"attributes": {
												"contractScope": null,
												"name": "Ownable",
												"referencedDeclaration": 1316,
												"type": "contract Ownable"
											},
											"id": 1266,
											"name": "UserDefinedTypeName",
											"src": "80:7:2"
										}
									],
									"id": 1267,
									"name": "InheritanceSpecifier",
									"src": "80:7:2"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": true,
										"modifiers": [
											null
										],
										"name": "Destructible",
										"payable": true,
										"scope": 1294,
										"stateMutability": "payable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 1268,
											"name": "ParameterList",
											"src": "122:2:2"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 1269,
											"name": "ParameterList",
											"src": "140:0:2"
										},
										{
											"attributes": {
												"statements": [
													null
												]
											},
											"children": [],
											"id": 1270,
											"name": "Block",
											"src": "140:3:2"
										}
									],
									"id": 1271,
									"name": "FunctionDefinition",
									"src": "101:42:2"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "destroy",
										"payable": false,
										"scope": 1294,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 1272,
											"name": "ParameterList",
											"src": "167:2:2"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 1275,
											"name": "ParameterList",
											"src": "187:0:2"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 1315,
														"type": "modifier ()",
														"value": "onlyOwner"
													},
													"id": 1273,
													"name": "Identifier",
													"src": "177:9:2"
												}
											],
											"id": 1274,
											"name": "ModifierInvocation",
											"src": "177:9:2"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1432,
																		"type": "function (address)",
																		"value": "selfdestruct"
																	},
																	"id": 1276,
																	"name": "Identifier",
																	"src": "198:12:2"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1298,
																		"type": "address",
																		"value": "owner"
																	},
																	"id": 1277,
																	"name": "Identifier",
																	"src": "211:5:2"
																}
															],
															"id": 1278,
															"name": "FunctionCall",
															"src": "198:19:2"
														}
													],
													"id": 1279,
													"name": "ExpressionStatement",
													"src": "198:19:2"
												}
											],
											"id": 1280,
											"name": "Block",
											"src": "187:38:2"
										}
									],
									"id": 1281,
									"name": "FunctionDefinition",
									"src": "151:74:2"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "destroyAndSend",
										"payable": false,
										"scope": 1294,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_recipient",
														"scope": 1293,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 1282,
															"name": "ElementaryTypeName",
															"src": "261:7:2"
														}
													],
													"id": 1283,
													"name": "VariableDeclaration",
													"src": "261:18:2"
												}
											],
											"id": 1284,
											"name": "ParameterList",
											"src": "260:20:2"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 1287,
											"name": "ParameterList",
											"src": "298:0:2"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 1315,
														"type": "modifier ()",
														"value": "onlyOwner"
													},
													"id": 1285,
													"name": "Identifier",
													"src": "288:9:2"
												}
											],
											"id": 1286,
											"name": "ModifierInvocation",
											"src": "288:9:2"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1432,
																		"type": "function (address)",
																		"value": "selfdestruct"
																	},
																	"id": 1288,
																	"name": "Identifier",
																	"src": "309:12:2"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1283,
																		"type": "address",
																		"value": "_recipient"
																	},
																	"id": 1289,
																	"name": "Identifier",
																	"src": "322:10:2"
																}
															],
															"id": 1290,
															"name": "FunctionCall",
															"src": "309:24:2"
														}
													],
													"id": 1291,
													"name": "ExpressionStatement",
													"src": "309:24:2"
												}
											],
											"id": 1292,
											"name": "Block",
											"src": "298:43:2"
										}
									],
									"id": 1293,
									"name": "FunctionDefinition",
									"src": "237:104:2"
								}
							],
							"id": 1294,
							"name": "ContractDefinition",
							"src": "55:289:2"
						}
					],
					"id": 1295,
					"name": "SourceUnit",
					"src": "0:344:2"
				}
			},
			"smart-contracts/contracts/common/Ownable.sol": {
				"ast": {
					"absolutePath": "smart-contracts/contracts/common/Ownable.sol",
					"exportedSymbols": {
						"Ownable": [
							1316
						]
					},
					"id": 1317,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1296,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:3"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1316,
							"linearizedBaseContracts": [
								1316
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1298,
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"scope": 1316,
									"src": "54:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1297,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "54:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 1304,
									"name": "LogOwnershipTransfered",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1300,
												"indexed": true,
												"name": "_currentOwner",
												"nodeType": "VariableDeclaration",
												"scope": 1304,
												"src": "112:29:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "112:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1302,
												"indexed": true,
												"name": "_newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 1304,
												"src": "143:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "143:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "111:58:3"
									},
									"src": "83:87:3"
								},
								{
									"body": {
										"id": 1314,
										"nodeType": "Block",
										"src": "199:59:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1310,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1307,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1426,
																	"src": "218:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1308,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "218:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1309,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1298,
																"src": "232:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "218:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1306,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1429,
														"src": "210:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "210:28:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1312,
												"nodeType": "ExpressionStatement",
												"src": "210:28:3"
											},
											{
												"id": 1313,
												"nodeType": "PlaceholderStatement",
												"src": "249:1:3"
											}
										]
									},
									"id": 1315,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "196:2:3"
									},
									"src": "178:80:3",
									"visibility": "internal"
								}
							],
							"scope": 1317,
							"src": "30:505:3"
						}
					],
					"src": "0:537:3"
				},
				"id": 3,
				"legacyAST": {
					"attributes": {
						"absolutePath": "smart-contracts/contracts/common/Ownable.sol",
						"exportedSymbols": {
							"Ownable": [
								1316
							]
						}
					},
					"children": [
						{
							"attributes": {
								"literals": [
									"solidity",
									"^",
									"0.4",
									".18"
								]
							},
							"id": 1296,
							"name": "PragmaDirective",
							"src": "0:24:3"
						},
						{
							"attributes": {
								"baseContracts": [
									null
								],
								"contractDependencies": [
									null
								],
								"contractKind": "contract",
								"documentation": null,
								"fullyImplemented": true,
								"linearizedBaseContracts": [
									1316
								],
								"name": "Ownable",
								"scope": 1317
							},
							"children": [
								{
									"attributes": {
										"constant": false,
										"name": "owner",
										"scope": 1316,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "address",
										"value": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"name": "address",
												"type": "address"
											},
											"id": 1297,
											"name": "ElementaryTypeName",
											"src": "54:7:3"
										}
									],
									"id": 1298,
									"name": "VariableDeclaration",
									"src": "54:20:3"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "LogOwnershipTransfered"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "_currentOwner",
														"scope": 1304,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 1299,
															"name": "ElementaryTypeName",
															"src": "112:7:3"
														}
													],
													"id": 1300,
													"name": "VariableDeclaration",
													"src": "112:29:3"
												},
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "_newOwner",
														"scope": 1304,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 1301,
															"name": "ElementaryTypeName",
															"src": "143:7:3"
														}
													],
													"id": 1302,
													"name": "VariableDeclaration",
													"src": "143:25:3"
												}
											],
											"id": 1303,
											"name": "ParameterList",
											"src": "111:58:3"
										}
									],
									"id": 1304,
									"name": "EventDefinition",
									"src": "83:87:3"
								},
								{
									"attributes": {
										"name": "onlyOwner",
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 1305,
											"name": "ParameterList",
											"src": "196:2:3"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1429,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 1306,
																	"name": "Identifier",
																	"src": "210:7:3"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "==",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"member_name": "sender",
																				"referencedDeclaration": null,
																				"type": "address"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 1426,
																						"type": "msg",
																						"value": "msg"
																					},
																					"id": 1307,
																					"name": "Identifier",
																					"src": "218:3:3"
																				}
																			],
																			"id": 1308,
																			"name": "MemberAccess",
																			"src": "218:10:3"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1298,
																				"type": "address",
																				"value": "owner"
																			},
																			"id": 1309,
																			"name": "Identifier",
																			"src": "232:5:3"
																		}
																	],
																	"id": 1310,
																	"name": "BinaryOperation",
																	"src": "218:19:3"
																}
															],
															"id": 1311,
															"name": "FunctionCall",
															"src": "210:28:3"
														}
													],
													"id": 1312,
													"name": "ExpressionStatement",
													"src": "210:28:3"
												},
												{
													"id": 1313,
													"name": "PlaceholderStatement",
													"src": "249:1:3"
												}
											],
											"id": 1314,
											"name": "Block",
											"src": "199:59:3"
										}
									],
									"id": 1315,
									"name": "ModifierDefinition",
									"src": "178:80:3"
								}
							],
							"id": 1316,
							"name": "ContractDefinition",
							"src": "30:505:3"
						}
					],
					"id": 1317,
					"name": "SourceUnit",
					"src": "0:537:3"
				}
			},
			"smart-contracts/contracts/common/SafeMath.sol": {
				"ast": {
					"absolutePath": "smart-contracts/contracts/common/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1414
						]
					},
					"id": 1415,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1318,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:4"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1414,
							"linearizedBaseContracts": [
								1414
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1350,
										"nodeType": "Block",
										"src": "121:141:4",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1327,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1320,
														"src": "136:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1328,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "141:1:4",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "136:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1333,
												"nodeType": "IfStatement",
												"src": "132:47:4",
												"trueBody": {
													"id": 1332,
													"nodeType": "Block",
													"src": "144:35:4",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1330,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "166:1:4",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1326,
															"id": 1331,
															"nodeType": "Return",
															"src": "159:8:4"
														}
													]
												}
											},
											{
												"assignments": [
													1335
												],
												"declarations": [
													{
														"constant": false,
														"id": 1335,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 1351,
														"src": "189:9:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1334,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "189:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1339,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1336,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1320,
														"src": "201:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1337,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1322,
														"src": "205:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "201:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "189:17:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1343,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1341,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1335,
																	"src": "224:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1342,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1320,
																	"src": "228:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "224:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1344,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1322,
																"src": "233:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "224:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1340,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1417,
														"src": "217:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "217:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1347,
												"nodeType": "ExpressionStatement",
												"src": "217:18:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1348,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1335,
													"src": "253:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1326,
												"id": 1349,
												"nodeType": "Return",
												"src": "246:8:4"
											}
										]
									},
									"id": 1351,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1320,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "67:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1319,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "67:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1322,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "78:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1321,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "78:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "66:22:4"
									},
									"payable": false,
									"returnParameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1325,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "112:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1324,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "112:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "111:9:4"
									},
									"scope": 1414,
									"src": "54:208:4",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1368,
										"nodeType": "Block",
										"src": "337:126:4",
										"statements": [
											{
												"assignments": [
													1361
												],
												"declarations": [
													{
														"constant": false,
														"id": 1361,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 1369,
														"src": "419:9:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1360,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "419:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1365,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1362,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1353,
														"src": "431:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1363,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1355,
														"src": "435:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "431:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "419:17:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1366,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1361,
													"src": "454:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1359,
												"id": 1367,
												"nodeType": "Return",
												"src": "447:8:4"
											}
										]
									},
									"id": 1369,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1353,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1369,
												"src": "283:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1352,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "283:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1355,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1369,
												"src": "294:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "294:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "282:22:4"
									},
									"payable": false,
									"returnParameters": {
										"id": 1359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1358,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1369,
												"src": "328:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "328:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "327:9:4"
									},
									"scope": 1414,
									"src": "270:193:4",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1388,
										"nodeType": "Block",
										"src": "548:56:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1379,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1373,
																"src": "566:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1380,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1371,
																"src": "571:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "566:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1378,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1417,
														"src": "559:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "559:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1383,
												"nodeType": "ExpressionStatement",
												"src": "559:14:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1384,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1371,
														"src": "591:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1385,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1373,
														"src": "595:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "591:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1377,
												"id": 1387,
												"nodeType": "Return",
												"src": "584:12:4"
											}
										]
									},
									"id": 1389,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1371,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1389,
												"src": "494:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1370,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "494:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1373,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1389,
												"src": "505:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1372,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "493:22:4"
									},
									"payable": false,
									"returnParameters": {
										"id": 1377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1376,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1389,
												"src": "539:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1375,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "539:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "538:9:4"
									},
									"scope": 1414,
									"src": "481:123:4",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1412,
										"nodeType": "Block",
										"src": "689:80:4",
										"statements": [
											{
												"assignments": [
													1399
												],
												"declarations": [
													{
														"constant": false,
														"id": 1399,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 1413,
														"src": "700:9:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1398,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "700:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1403,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1400,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1391,
														"src": "712:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1401,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1393,
														"src": "716:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "712:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "700:17:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1407,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1405,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1399,
																"src": "735:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1406,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1391,
																"src": "740:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "735:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1404,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1417,
														"src": "728:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "728:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1409,
												"nodeType": "ExpressionStatement",
												"src": "728:14:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1410,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1399,
													"src": "760:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1397,
												"id": 1411,
												"nodeType": "Return",
												"src": "753:8:4"
											}
										]
									},
									"id": 1413,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1391,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "635:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1390,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1393,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "646:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1392,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "634:22:4"
									},
									"payable": false,
									"returnParameters": {
										"id": 1397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1396,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "680:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1395,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "680:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "679:9:4"
									},
									"scope": 1414,
									"src": "622:147:4",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 1415,
							"src": "30:742:4"
						}
					],
					"src": "0:774:4"
				},
				"id": 4,
				"legacyAST": {
					"attributes": {
						"absolutePath": "smart-contracts/contracts/common/SafeMath.sol",
						"exportedSymbols": {
							"SafeMath": [
								1414
							]
						}
					},
					"children": [
						{
							"attributes": {
								"literals": [
									"solidity",
									"^",
									"0.4",
									".18"
								]
							},
							"id": 1318,
							"name": "PragmaDirective",
							"src": "0:24:4"
						},
						{
							"attributes": {
								"baseContracts": [
									null
								],
								"contractDependencies": [
									null
								],
								"contractKind": "library",
								"documentation": null,
								"fullyImplemented": true,
								"linearizedBaseContracts": [
									1414
								],
								"name": "SafeMath",
								"scope": 1415
							},
							"children": [
								{
									"attributes": {
										"constant": true,
										"implemented": true,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "mul",
										"payable": false,
										"scope": 1414,
										"stateMutability": "pure",
										"superFunction": null,
										"visibility": "internal"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "a",
														"scope": 1351,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 1319,
															"name": "ElementaryTypeName",
															"src": "67:7:4"
														}
													],
													"id": 1320,
													"name": "VariableDeclaration",
													"src": "67:9:4"
												},
												{
													"attributes": {
														"constant": false,
														"name": "b",
														"scope": 1351,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 1321,
															"name": "ElementaryTypeName",
															"src": "78:7:4"
														}
													],
													"id": 1322,
													"name": "VariableDeclaration",
													"src": "78:9:4"
												}
											],
											"id": 1323,
											"name": "ParameterList",
											"src": "66:22:4"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 1351,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 1324,
															"name": "ElementaryTypeName",
															"src": "112:7:4"
														}
													],
													"id": 1325,
													"name": "VariableDeclaration",
													"src": "112:7:4"
												}
											],
											"id": 1326,
											"name": "ParameterList",
											"src": "111:9:4"
										},
										{
											"children": [
												{
													"attributes": {
														"falseBody": null
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "==",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1320,
																		"type": "uint256",
																		"value": "a"
																	},
																	"id": 1327,
																	"name": "Identifier",
																	"src": "136:1:4"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "30",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "number",
																		"type": "int_const 0",
																		"value": "0"
																	},
																	"id": 1328,
																	"name": "Literal",
																	"src": "141:1:4"
																}
															],
															"id": 1329,
															"name": "BinaryOperation",
															"src": "136:6:4"
														},
														{
															"children": [
																{
																	"attributes": {
																		"functionReturnParameters": 1326
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"hexvalue": "30",
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"subdenomination": null,
																				"token": "number",
																				"type": "int_const 0",
																				"value": "0"
																			},
																			"id": 1330,
																			"name": "Literal",
																			"src": "166:1:4"
																		}
																	],
																	"id": 1331,
																	"name": "Return",
																	"src": "159:8:4"
																}
															],
															"id": 1332,
															"name": "Block",
															"src": "144:35:4"
														}
													],
													"id": 1333,
													"name": "IfStatement",
													"src": "132:47:4"
												},
												{
													"attributes": {
														"assignments": [
															1335
														]
													},
													"children": [
														{
															"attributes": {
																"constant": false,
																"name": "c",
																"scope": 1351,
																"stateVariable": false,
																"storageLocation": "default",
																"type": "uint256",
																"value": null,
																"visibility": "internal"
															},
															"children": [
																{
																	"attributes": {
																		"name": "uint256",
																		"type": "uint256"
																	},
																	"id": 1334,
																	"name": "ElementaryTypeName",
																	"src": "189:7:4"
																}
															],
															"id": 1335,
															"name": "VariableDeclaration",
															"src": "189:9:4"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "*",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1320,
																		"type": "uint256",
																		"value": "a"
																	},
																	"id": 1336,
																	"name": "Identifier",
																	"src": "201:1:4"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1322,
																		"type": "uint256",
																		"value": "b"
																	},
																	"id": 1337,
																	"name": "Identifier",
																	"src": "205:1:4"
																}
															],
															"id": 1338,
															"name": "BinaryOperation",
															"src": "201:5:4"
														}
													],
													"id": 1339,
													"name": "VariableDeclarationStatement",
													"src": "189:17:4"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1417,
																		"type": "function (bool) pure",
																		"value": "assert"
																	},
																	"id": 1340,
																	"name": "Identifier",
																	"src": "217:6:4"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "==",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"operator": "/",
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 1335,
																						"type": "uint256",
																						"value": "c"
																					},
																					"id": 1341,
																					"name": "Identifier",
																					"src": "224:1:4"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 1320,
																						"type": "uint256",
																						"value": "a"
																					},
																					"id": 1342,
																					"name": "Identifier",
																					"src": "228:1:4"
																				}
																			],
																			"id": 1343,
																			"name": "BinaryOperation",
																			"src": "224:5:4"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1322,
																				"type": "uint256",
																				"value": "b"
																			},
																			"id": 1344,
																			"name": "Identifier",
																			"src": "233:1:4"
																		}
																	],
																	"id": 1345,
																	"name": "BinaryOperation",
																	"src": "224:10:4"
																}
															],
															"id": 1346,
															"name": "FunctionCall",
															"src": "217:18:4"
														}
													],
													"id": 1347,
													"name": "ExpressionStatement",
													"src": "217:18:4"
												},
												{
													"attributes": {
														"functionReturnParameters": 1326
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"overloadedDeclarations": [
																	null
																],
																"referencedDeclaration": 1335,
																"type": "uint256",
																"value": "c"
															},
															"id": 1348,
															"name": "Identifier",
															"src": "253:1:4"
														}
													],
													"id": 1349,
													"name": "Return",
													"src": "246:8:4"
												}
											],
											"id": 1350,
											"name": "Block",
											"src": "121:141:4"
										}
									],
									"id": 1351,
									"name": "FunctionDefinition",
									"src": "54:208:4"
								},
								{
									"attributes": {
										"constant": true,
										"implemented": true,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "div",
										"payable": false,
										"scope": 1414,
										"stateMutability": "pure",
										"superFunction": null,
										"visibility": "internal"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "a",
														"scope": 1369,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 1352,
															"name": "ElementaryTypeName",
															"src": "283:7:4"
														}
													],
													"id": 1353,
													"name": "VariableDeclaration",
													"src": "283:9:4"
												},
												{
													"attributes": {
														"constant": false,
														"name": "b",
														"scope": 1369,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 1354,
															"name": "ElementaryTypeName",
															"src": "294:7:4"
														}
													],
													"id": 1355,
													"name": "VariableDeclaration",
													"src": "294:9:4"
												}
											],
											"id": 1356,
											"name": "ParameterList",
											"src": "282:22:4"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 1369,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 1357,
															"name": "ElementaryTypeName",
															"src": "328:7:4"
														}
													],
													"id": 1358,
													"name": "VariableDeclaration",
													"src": "328:7:4"
												}
											],
											"id": 1359,
											"name": "ParameterList",
											"src": "327:9:4"
										},
										{
											"children": [
												{
													"attributes": {
														"assignments": [
															1361
														]
													},
													"children": [
														{
															"attributes": {
																"constant": false,
																"name": "c",
																"scope": 1369,
																"stateVariable": false,
																"storageLocation": "default",
																"type": "uint256",
																"value": null,
																"visibility": "internal"
															},
															"children": [
																{
																	"attributes": {
																		"name": "uint256",
																		"type": "uint256"
																	},
																	"id": 1360,
																	"name": "ElementaryTypeName",
																	"src": "419:7:4"
																}
															],
															"id": 1361,
															"name": "VariableDeclaration",
															"src": "419:9:4"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "/",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1353,
																		"type": "uint256",
																		"value": "a"
																	},
																	"id": 1362,
																	"name": "Identifier",
																	"src": "431:1:4"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1355,
																		"type": "uint256",
																		"value": "b"
																	},
																	"id": 1363,
																	"name": "Identifier",
																	"src": "435:1:4"
																}
															],
															"id": 1364,
															"name": "BinaryOperation",
															"src": "431:5:4"
														}
													],
													"id": 1365,
													"name": "VariableDeclarationStatement",
													"src": "419:17:4"
												},
												{
													"attributes": {
														"functionReturnParameters": 1359
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"overloadedDeclarations": [
																	null
																],
																"referencedDeclaration": 1361,
																"type": "uint256",
																"value": "c"
															},
															"id": 1366,
															"name": "Identifier",
															"src": "454:1:4"
														}
													],
													"id": 1367,
													"name": "Return",
													"src": "447:8:4"
												}
											],
											"id": 1368,
											"name": "Block",
											"src": "337:126:4"
										}
									],
									"id": 1369,
									"name": "FunctionDefinition",
									"src": "270:193:4"
								},
								{
									"attributes": {
										"constant": true,
										"implemented": true,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "sub",
										"payable": false,
										"scope": 1414,
										"stateMutability": "pure",
										"superFunction": null,
										"visibility": "internal"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "a",
														"scope": 1389,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 1370,
															"name": "ElementaryTypeName",
															"src": "494:7:4"
														}
													],
													"id": 1371,
													"name": "VariableDeclaration",
													"src": "494:9:4"
												},
												{
													"attributes": {
														"constant": false,
														"name": "b",
														"scope": 1389,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 1372,
															"name": "ElementaryTypeName",
															"src": "505:7:4"
														}
													],
													"id": 1373,
													"name": "VariableDeclaration",
													"src": "505:9:4"
												}
											],
											"id": 1374,
											"name": "ParameterList",
											"src": "493:22:4"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 1389,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 1375,
															"name": "ElementaryTypeName",
															"src": "539:7:4"
														}
													],
													"id": 1376,
													"name": "VariableDeclaration",
													"src": "539:7:4"
												}
											],
											"id": 1377,
											"name": "ParameterList",
											"src": "538:9:4"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1417,
																		"type": "function (bool) pure",
																		"value": "assert"
																	},
																	"id": 1378,
																	"name": "Identifier",
																	"src": "559:6:4"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "<=",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1373,
																				"type": "uint256",
																				"value": "b"
																			},
																			"id": 1379,
																			"name": "Identifier",
																			"src": "566:1:4"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1371,
																				"type": "uint256",
																				"value": "a"
																			},
																			"id": 1380,
																			"name": "Identifier",
																			"src": "571:1:4"
																		}
																	],
																	"id": 1381,
																	"name": "BinaryOperation",
																	"src": "566:6:4"
																}
															],
															"id": 1382,
															"name": "FunctionCall",
															"src": "559:14:4"
														}
													],
													"id": 1383,
													"name": "ExpressionStatement",
													"src": "559:14:4"
												},
												{
													"attributes": {
														"functionReturnParameters": 1377
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "-",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1371,
																		"type": "uint256",
																		"value": "a"
																	},
																	"id": 1384,
																	"name": "Identifier",
																	"src": "591:1:4"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1373,
																		"type": "uint256",
																		"value": "b"
																	},
																	"id": 1385,
																	"name": "Identifier",
																	"src": "595:1:4"
																}
															],
															"id": 1386,
															"name": "BinaryOperation",
															"src": "591:5:4"
														}
													],
													"id": 1387,
													"name": "Return",
													"src": "584:12:4"
												}
											],
											"id": 1388,
											"name": "Block",
											"src": "548:56:4"
										}
									],
									"id": 1389,
									"name": "FunctionDefinition",
									"src": "481:123:4"
								},
								{
									"attributes": {
										"constant": true,
										"implemented": true,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "add",
										"payable": false,
										"scope": 1414,
										"stateMutability": "pure",
										"superFunction": null,
										"visibility": "internal"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "a",
														"scope": 1413,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 1390,
															"name": "ElementaryTypeName",
															"src": "635:7:4"
														}
													],
													"id": 1391,
													"name": "VariableDeclaration",
													"src": "635:9:4"
												},
												{
													"attributes": {
														"constant": false,
														"name": "b",
														"scope": 1413,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 1392,
															"name": "ElementaryTypeName",
															"src": "646:7:4"
														}
													],
													"id": 1393,
													"name": "VariableDeclaration",
													"src": "646:9:4"
												}
											],
											"id": 1394,
											"name": "ParameterList",
											"src": "634:22:4"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 1413,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 1395,
															"name": "ElementaryTypeName",
															"src": "680:7:4"
														}
													],
													"id": 1396,
													"name": "VariableDeclaration",
													"src": "680:7:4"
												}
											],
											"id": 1397,
											"name": "ParameterList",
											"src": "679:9:4"
										},
										{
											"children": [
												{
													"attributes": {
														"assignments": [
															1399
														]
													},
													"children": [
														{
															"attributes": {
																"constant": false,
																"name": "c",
																"scope": 1413,
																"stateVariable": false,
																"storageLocation": "default",
																"type": "uint256",
																"value": null,
																"visibility": "internal"
															},
															"children": [
																{
																	"attributes": {
																		"name": "uint256",
																		"type": "uint256"
																	},
																	"id": 1398,
																	"name": "ElementaryTypeName",
																	"src": "700:7:4"
																}
															],
															"id": 1399,
															"name": "VariableDeclaration",
															"src": "700:9:4"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "+",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1391,
																		"type": "uint256",
																		"value": "a"
																	},
																	"id": 1400,
																	"name": "Identifier",
																	"src": "712:1:4"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1393,
																		"type": "uint256",
																		"value": "b"
																	},
																	"id": 1401,
																	"name": "Identifier",
																	"src": "716:1:4"
																}
															],
															"id": 1402,
															"name": "BinaryOperation",
															"src": "712:5:4"
														}
													],
													"id": 1403,
													"name": "VariableDeclarationStatement",
													"src": "700:17:4"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1417,
																		"type": "function (bool) pure",
																		"value": "assert"
																	},
																	"id": 1404,
																	"name": "Identifier",
																	"src": "728:6:4"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": ">=",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1399,
																				"type": "uint256",
																				"value": "c"
																			},
																			"id": 1405,
																			"name": "Identifier",
																			"src": "735:1:4"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1391,
																				"type": "uint256",
																				"value": "a"
																			},
																			"id": 1406,
																			"name": "Identifier",
																			"src": "740:1:4"
																		}
																	],
																	"id": 1407,
																	"name": "BinaryOperation",
																	"src": "735:6:4"
																}
															],
															"id": 1408,
															"name": "FunctionCall",
															"src": "728:14:4"
														}
													],
													"id": 1409,
													"name": "ExpressionStatement",
													"src": "728:14:4"
												},
												{
													"attributes": {
														"functionReturnParameters": 1397
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"overloadedDeclarations": [
																	null
																],
																"referencedDeclaration": 1399,
																"type": "uint256",
																"value": "c"
															},
															"id": 1410,
															"name": "Identifier",
															"src": "760:1:4"
														}
													],
													"id": 1411,
													"name": "Return",
													"src": "753:8:4"
												}
											],
											"id": 1412,
											"name": "Block",
											"src": "689:80:4"
										}
									],
									"id": 1413,
									"name": "FunctionDefinition",
									"src": "622:147:4"
								}
							],
							"id": 1414,
							"name": "ContractDefinition",
							"src": "30:742:4"
						}
					],
					"id": 1415,
					"name": "SourceUnit",
					"src": "0:774:4"
				}
			}
		}
	}
}