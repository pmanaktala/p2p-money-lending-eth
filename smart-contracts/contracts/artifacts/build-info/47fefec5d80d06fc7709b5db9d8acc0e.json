{
	"id": "47fefec5d80d06fc7709b5db9d8acc0e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.4.18",
	"solcLongVersion": "0.4.18+commit.9cf6e910",
	"input": {
		"language": "Solidity",
		"sources": {
			"smart-contracts/contracts/Credit.sol": {
				"content": "pragma solidity ^0.4.18;\r\n\r\nimport './common/SafeMath.sol';\r\nimport './common/Destructible.sol';\r\n\r\n/** @title Credit contract.\r\n  * Inherits the Ownable and Destructible contracts.\r\n  */\r\ncontract Credit is Destructible {\r\n\r\n    /** @dev Usings */\r\n    // Using SafeMath for our calculations with uints.\r\n    using SafeMath for uint;\r\n\r\n    /** @dev State variables */\r\n    // Borrower is the person who generated the credit contract.\r\n    address borrower;\r\n\r\n    // Amount requested to be funded (in wei).\r\n    uint requestedAmount;\r\n\r\n    // Amount that will be returned by the borrower (including the interest).\r\n    uint returnAmount;\r\n\r\n    // Currently repaid amount.\r\n    uint repaidAmount;\r\n\r\n    // Credit interest.\r\n    uint interest;\r\n\r\n    // Requested number of repayment installments.\r\n    uint requestedRepayments;\r\n\r\n    // Remaining repayment installments.\r\n    uint remainingRepayments;\r\n\r\n    // The value of the repayment installment.\r\n    uint repaymentInstallment;\r\n\r\n    // The timestamp of credit creation.\r\n    uint requestedDate;\r\n\r\n    // The timestamp of last repayment date.\r\n    uint lastRepaymentDate;\r\n\r\n    // Description of the credit.\r\n    bytes32 description;\r\n\r\n    // Active state of the credit.\r\n    bool active = true;\r\n\r\n    /** Stages that every credit contract gets trough.\r\n      *   investment - During this state only investments are allowed.\r\n      *   repayment - During this stage only repayments are allowed.\r\n      *   interestReturns - This stage gives investors opportunity to request their returns.\r\n      *   expired - This is the stage when the contract is finished its purpose.\r\n      *   fraud - The borrower was marked as fraud.\r\n    */\r\n    enum State { investment, repayment, interestReturns, expired, revoked, fraud }\r\n    State state;\r\n\r\n    // Storing the lenders for this credit.\r\n    mapping(address => bool) public lenders;\r\n\r\n    // Storing the invested amount by each lender.\r\n    mapping(address => uint) lendersInvestedAmount;\r\n\r\n    // Store the lenders count, later needed for revoke vote.\r\n    uint lendersCount = 0;\r\n\r\n    // Revoke votes count.\r\n    uint revokeVotes = 0;\r\n\r\n    // Revoke voters.\r\n    mapping(address => bool) revokeVoters;\r\n\r\n    // Time needed for a revoke voting to start.\r\n    // To be changed in production accordingly.\r\n    uint revokeTimeNeeded = block.timestamp + 1 seconds;\r\n\r\n    // Revoke votes count.\r\n    uint fraudVotes = 0;\r\n\r\n    // Revoke voters.\r\n    mapping(address => bool) fraudVoters;\r\n\r\n\r\n    /** @dev Events\r\n    *\r\n    */\r\n    event LogCreditInitialized(address indexed _address, uint indexed timestamp);\r\n    event LogCreditStateChanged(State indexed state, uint indexed timestamp);\r\n    event LogCreditStateActiveChanged(bool indexed active, uint indexed timestamp);\r\n\r\n    event LogBorrowerWithdrawal(address indexed _address, uint indexed _amount, uint indexed timestamp);\r\n    event LogBorrowerRepaymentInstallment(address indexed _address, uint indexed _amount, uint indexed timestamp);\r\n    event LogBorrowerRepaymentFinished(address indexed _address, uint indexed timestamp);\r\n    event LogBorrowerChangeReturned(address indexed _address, uint indexed _amount, uint indexed timestamp);\r\n    event LogBorrowerIsFraud(address indexed _address, bool indexed fraudStatus, uint indexed timestamp);\r\n\r\n    event LogLenderInvestment(address indexed _address, uint indexed _amount, uint indexed timestamp);\r\n    event LogLenderWithdrawal(address indexed _address, uint indexed _amount, uint indexed timestamp);\r\n    event LogLenderChangeReturned(address indexed _address, uint indexed _amount, uint indexed timestamp);\r\n    event LogLenderVoteForRevoking(address indexed _address, uint indexed timestamp);\r\n    event LogLenderVoteForFraud(address indexed _address, uint indexed timestamp);\r\n    event LogLenderRefunded(address indexed _address, uint indexed _amount, uint indexed timestamp);\r\n\r\n    /** @dev Modifiers\r\n    *\r\n    */\r\n    modifier isActive() {\r\n        require(active == true);\r\n        _;\r\n    }\r\n\r\n    modifier onlyBorrower() {\r\n        require(msg.sender == borrower);\r\n        _;\r\n    }\r\n\r\n    modifier onlyLender() {\r\n        require(lenders[msg.sender] == true);\r\n        _;\r\n    }\r\n\r\n    modifier canAskForInterest() {\r\n        require(state == State.interestReturns);\r\n        require(lendersInvestedAmount[msg.sender] > 0);\r\n        _;\r\n    }\r\n\r\n    modifier canInvest() {\r\n        require(state == State.investment);\r\n        _;\r\n    }\r\n\r\n    modifier canRepay() {\r\n        require(state == State.repayment);\r\n        _;\r\n    }\r\n\r\n    modifier canWithdraw() {\r\n        require(this.balance >= requestedAmount);\r\n        _;\r\n    }\r\n\r\n    modifier isNotFraud() {\r\n        require(state != State.fraud);\r\n        _;\r\n    }\r\n\r\n    modifier isRevokable() {\r\n        require(block.timestamp >= revokeTimeNeeded);\r\n        require(state == State.investment);\r\n        _;\r\n    }\r\n\r\n    modifier isRevoked() {\r\n        require(state == State.revoked);\r\n        _;\r\n    }\r\n\r\n    /** @dev Constructor.\r\n      * @param _requestedAmount Requested credit amount (in wei).\r\n      * @param _requestedRepayments Requested number of repayments.\r\n      * @param _description Credit description.\r\n      */\r\n    function Credit(uint _requestedAmount, uint _requestedRepayments, uint _interest, bytes32 _description) public {\r\n\r\n        /** Set the borrower of the contract to the tx.origin\r\n          * We are using tx.origin, because the contract is going to be published\r\n          * by the main contract and msg.sender will break our logic.\r\n        */\r\n        borrower = tx.origin;\r\n\r\n        // Set the interest for the credit.\r\n        interest = _interest;\r\n\r\n        // Set the requested amount.\r\n        requestedAmount = _requestedAmount;\r\n\r\n        // Set the requested repayments.\r\n        requestedRepayments = _requestedRepayments;\r\n\r\n        /** Set the remaining repayments.\r\n          * Initially this is equal to the requested repayments.\r\n          */\r\n        remainingRepayments = _requestedRepayments;\r\n\r\n        /** Calculate the amount to be returned by the borrower.\r\n          * At this point this is the addition of the requested amount and the interest.\r\n          */\r\n        returnAmount = requestedAmount.add(interest);\r\n\r\n        /** Calculating the repayment installment.\r\n          * We divide the amount to be returned by the requested repayments count to get it.\r\n          */\r\n        repaymentInstallment = returnAmount.div(requestedRepayments);\r\n\r\n        // Set the credit description.\r\n        description = _description;\r\n\r\n        // Set the initialization date.\r\n        requestedDate = block.timestamp;\r\n\r\n        // Log credit initialization.\r\n        LogCreditInitialized(borrower, block.timestamp);\r\n    }\r\n\r\n    /** @dev Get current balance.\r\n      * return this.balance.\r\n      */\r\n    function getBalance() public view returns (uint256) {\r\n        return this.balance;\r\n    }\r\n\r\n    /** @dev Invest function.\r\n      * Provides functionality for person to invest in someone's credit,\r\n      * incentivised by the return of interest.\r\n      */\r\n    function invest() public canInvest payable {\r\n        // Initialize an memory variable for the extra money that may have been sent.\r\n        uint extraMoney = 0;\r\n\r\n        // Check if contract balance is reached the requested amount.\r\n        if (this.balance >= requestedAmount) {\r\n\r\n            // Calculate the extra money that may have been sent.\r\n            extraMoney = this.balance.sub(requestedAmount);\r\n\r\n            // Assert the calculations\r\n            assert(requestedAmount == this.balance.sub(extraMoney));\r\n\r\n            // Assert for possible underflow / overflow\r\n            assert(extraMoney <= msg.value);\r\n\r\n            // Check if extra money is greater than 0 wei.\r\n            if (extraMoney > 0) {\r\n                // Return the extra money to the sender.\r\n                msg.sender.transfer(extraMoney);\r\n\r\n                // Log change returned.\r\n                LogLenderChangeReturned(msg.sender, extraMoney, block.timestamp);\r\n            }\r\n\r\n            // Set the contract state to repayment.\r\n            state = State.repayment;\r\n\r\n            // Log state change.\r\n            LogCreditStateChanged(state, block.timestamp);\r\n        }\r\n\r\n        /** Add the investor to the lenders mapping.\r\n          * So that we know he invested in this contract.\r\n          */\r\n        lenders[msg.sender] = true;\r\n\r\n        // Increment the lenders count.\r\n        lendersCount++;\r\n\r\n        // Add the amount invested to the amount mapping.\r\n        lendersInvestedAmount[msg.sender] = lendersInvestedAmount[msg.sender].add(msg.value.sub(extraMoney));\r\n\r\n        // Log lender invested amount.\r\n        LogLenderInvestment(msg.sender, msg.value.sub(extraMoney), block.timestamp);\r\n    }\r\n\r\n    /** @dev Repayment function.\r\n      * Allows borrower to make repayment installments.\r\n      */\r\n    function repay() public onlyBorrower canRepay payable {\r\n        // The remaining repayments should be greater than 0 to continue.\r\n        require(remainingRepayments > 0);\r\n\r\n        // The value sent should be greater than the repayment installment.\r\n        require(msg.value >= repaymentInstallment);\r\n\r\n        /** Assert that the amount to be returned is greater\r\n          * than the sum of repayments made until now.\r\n          * Otherwise the credit is already repaid.\r\n          */\r\n        assert(repaidAmount < returnAmount);\r\n\r\n        // Decrement the remaining repayments.\r\n        remainingRepayments--;\r\n\r\n        // Update last repayment date.\r\n        lastRepaymentDate = block.timestamp;\r\n\r\n        // Initialize an memory variable for the extra money that may have been sent.\r\n        uint extraMoney = 0;\r\n\r\n        /** Check if the value (in wei) that is being sent is greather than the repayment installment.\r\n          * In this case we should return the change to the msg.sender.\r\n          */\r\n        if (msg.value > repaymentInstallment) {\r\n\r\n            // Calculate the extra money being sent in the transaction.\r\n            extraMoney = msg.value.sub(repaymentInstallment);\r\n\r\n            // Assert the calculations.\r\n            assert(repaymentInstallment == msg.value.sub(extraMoney));\r\n\r\n            // Assert for underflow.\r\n            assert(extraMoney <= msg.value);\r\n\r\n            // Return the change/extra money to the msg.sender.\r\n            msg.sender.transfer(extraMoney);\r\n\r\n            // Log the return of the extra money.\r\n            LogBorrowerChangeReturned(msg.sender, extraMoney, block.timestamp);\r\n        }\r\n\r\n        // Log borrower installment received.\r\n        LogBorrowerRepaymentInstallment(msg.sender, msg.value.sub(extraMoney), block.timestamp);\r\n\r\n        // Add the repayment installment amount to the total repaid amount.\r\n        repaidAmount = repaidAmount.add(msg.value.sub(extraMoney));\r\n\r\n        // Check the repaid amount reached the amount to be returned.\r\n        if (repaidAmount == returnAmount) {\r\n\r\n            // Log credit repaid.\r\n            LogBorrowerRepaymentFinished(msg.sender, block.timestamp);\r\n\r\n            // Set the credit state to \"returning interests\".\r\n            state = State.interestReturns;\r\n\r\n            // Log state change.\r\n            LogCreditStateChanged(state, block.timestamp);\r\n        }\r\n    }\r\n\r\n    /** @dev Withdraw function.\r\n      * It can only be executed while contract is in active state.\r\n      * It is only accessible to the borrower.\r\n      * It is only accessible if the needed amount is gathered in the contract.\r\n      * It can only be executed once.\r\n      * Transfers the gathered amount to the borrower.\r\n      */\r\n    function withdraw() public isActive onlyBorrower canWithdraw isNotFraud {\r\n        // Set the state to repayment so we can avoid reentrancy.\r\n        state = State.repayment;\r\n\r\n        // Log state change.\r\n        LogCreditStateChanged(state, block.timestamp);\r\n\r\n        // Log borrower withdrawal.\r\n        LogBorrowerWithdrawal(msg.sender, this.balance, block.timestamp);\r\n\r\n        // Transfer the gathered amount to the credit borrower.\r\n        borrower.transfer(this.balance);\r\n    }\r\n\r\n    /** @dev Request interest function.\r\n      * It can only be executed while contract is in active state.\r\n      * It is only accessible to lenders.\r\n      * It is only accessible if lender funded 1 or more wei.\r\n      * It can only be executed once.\r\n      * Transfers the lended amount + interest to the lender.\r\n      */\r\n    function requestInterest() public isActive onlyLender canAskForInterest {\r\n\r\n        // Calculate the amount to be returned to lender.\r\n//        uint lenderReturnAmount = lendersInvestedAmount[msg.sender].mul(returnAmount.div(lendersCount).div(lendersInvestedAmount[msg.sender]));\r\n        uint lenderReturnAmount = returnAmount / lendersCount;\r\n\r\n        // Assert the contract has enough balance to pay the lender.\r\n        assert(this.balance >= lenderReturnAmount);\r\n\r\n        // Transfer the return amount with interest to the lender.\r\n        msg.sender.transfer(lenderReturnAmount);\r\n\r\n        // Log the transfer to lender.\r\n        LogLenderWithdrawal(msg.sender, lenderReturnAmount, block.timestamp);\r\n\r\n        // Check if the contract balance is drawned.\r\n        if (this.balance == 0) {\r\n\r\n            // Set the active state to false.\r\n            active = false;\r\n\r\n            // Log active state change.\r\n            LogCreditStateActiveChanged(active, block.timestamp);\r\n\r\n            // Set the contract stage to expired e.g. its lifespan is over.\r\n            state = State.expired;\r\n\r\n            // Log state change.\r\n            LogCreditStateChanged(state, block.timestamp);\r\n        }\r\n    }\r\n\r\n    /** @dev Function to get the whole credit information.\r\n      * return borrower\r\n      * return description\r\n      * return requestedAmount\r\n      * return requestedRepayments\r\n      * return remainingRepayments\r\n      * return interest\r\n      * return returnAmount\r\n      * return state\r\n      * return active\r\n      * return this.balance\r\n      */\r\n    function getCreditInfo() public view returns (address, bytes32, uint, uint, uint, uint, uint, uint, State, bool, uint) {\r\n        return (\r\n        borrower,\r\n        description,\r\n        requestedAmount,\r\n        requestedRepayments,\r\n        repaymentInstallment,\r\n        remainingRepayments,\r\n        interest,\r\n        returnAmount,\r\n        state,\r\n        active,\r\n        this.balance\r\n        );\r\n    }\r\n\r\n    /** @dev Function for revoking the credit.\r\n      */\r\n    function revokeVote() public isActive isRevokable onlyLender {\r\n        // Require only one vote per lender.\r\n        require(revokeVoters[msg.sender] == false);\r\n\r\n        // Increment the revokeVotes.\r\n        revokeVotes++;\r\n\r\n        // Note the lender has voted.\r\n        revokeVoters[msg.sender] == true;\r\n\r\n        // Log lender vote for revoking the credit contract.\r\n        LogLenderVoteForRevoking(msg.sender, block.timestamp);\r\n\r\n        // If the consensus is reached.\r\n        if (lendersCount == revokeVotes) {\r\n            // Call internal revoke function.\r\n            revoke();\r\n        }\r\n    }\r\n\r\n    /** @dev Revoke internal function.\r\n      */\r\n    function revoke() internal {\r\n        // Change the state to revoked.\r\n        state = State.revoked;\r\n\r\n        // Log credit revoked.\r\n        LogCreditStateChanged(state, block.timestamp);\r\n    }\r\n\r\n    /** @dev Function for refunding people. */\r\n    function refund() public isActive onlyLender isRevoked {\r\n        // assert the contract have enough balance.\r\n        assert(this.balance >= lendersInvestedAmount[msg.sender]);\r\n\r\n        // Transfer the return amount with interest to the lender.\r\n        msg.sender.transfer(lendersInvestedAmount[msg.sender]);\r\n\r\n        // Log the transfer to lender.\r\n        LogLenderRefunded(msg.sender, lendersInvestedAmount[msg.sender], block.timestamp);\r\n\r\n        // Check if the contract balance is drawned.\r\n        if (this.balance == 0) {\r\n\r\n            // Set the active state to false.\r\n            active = false;\r\n\r\n            // Log active status change.\r\n            LogCreditStateActiveChanged(active, block.timestamp);\r\n\r\n            // Set the contract stage to expired e.g. its lifespan is over.\r\n            state = State.expired;\r\n\r\n            // Log state change.\r\n            LogCreditStateChanged(state, block.timestamp);\r\n        }\r\n    }\r\n\r\n    /** @dev Function for voting the borrower as fraudster.\r\n     */\r\n    function fraudVote() public isActive onlyLender returns (bool) {\r\n        // A lender could vote only once.\r\n        require(fraudVoters[msg.sender] == false);\r\n\r\n        // Increment fraudVotes count.\r\n        fraudVotes++;\r\n\r\n        // Note the lender has voted.\r\n        fraudVoters[msg.sender] == true;\r\n\r\n        // Log lenders vote for fraud\r\n        LogLenderVoteForFraud(msg.sender, block.timestamp);\r\n\r\n        // Check if consensus is reached.\r\n        if (lendersCount == fraudVotes) {\r\n            // Invoke fraud function.\r\n            return fraud();\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /** @dev Fraund function\r\n      * return\r\n      * calls the owner contract and marks the borrower as fraudster.\r\n      */\r\n    function fraud() internal returns (bool) {\r\n        // call the owner address function with param borrower's address\r\n        bool fraudStatusResult = owner.call(bytes4(keccak256(\"setFraudStatus(address)\")), borrower);\r\n\r\n        // Log user marked as fraud.\r\n        LogBorrowerIsFraud(borrower, fraudStatusResult, block.timestamp);\r\n\r\n        return fraudStatusResult;\r\n    }\r\n\r\n    /** @dev Change state function.\r\n      * @param _state New state.\r\n      * Only accessible to the owner of the contract.\r\n      * Changes the state of the contract.\r\n      */\r\n    function changeState(State _state) external onlyOwner returns (uint) {\r\n        state = _state;\r\n\r\n        // Log state change.\r\n        LogCreditStateChanged(state, block.timestamp);\r\n    }\r\n\r\n    /** @dev Toggle active state function.\r\n      * Only accessible to the owner of the contract.\r\n      * Toggles the active state of the contract.\r\n      * return bool\r\n      */\r\n    function toggleActive() external onlyOwner returns (bool) {\r\n        active = !active;\r\n\r\n        // Log active status change.\r\n        LogCreditStateActiveChanged(active, block.timestamp);\r\n\r\n        return active;\r\n    }\r\n\r\n}"
			},
			"smart-contracts/contracts/common/Destructible.sol": {
				"content": "pragma solidity ^0.4.18;\r\n\r\nimport './Ownable.sol';\r\n\r\ncontract Destructible is Ownable {\r\n    \r\n    function Destructible() public payable { }\r\n\r\n    function destroy() public onlyOwner {\r\n        selfdestruct(owner);\r\n    }\r\n    \r\n    function destroyAndSend(address _recipient) public onlyOwner {\r\n        selfdestruct(_recipient);\r\n    }\r\n}"
			},
			"smart-contracts/contracts/common/SafeMath.sol": {
				"content": "pragma solidity ^0.4.18;\r\n\r\n\r\nlibrary SafeMath {\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n        uint256 c = a * b;\r\n        assert(c / a == b);\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        //there is no case where this function can overflow/underflow\r\n        uint256 c = a / b;\r\n        return c;\r\n    }\r\n    \r\n    \r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        assert(b <= a);\r\n        return a - b;\r\n    }\r\n    \r\n    \r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        assert(c >= a);\r\n        return c;\r\n    }\r\n}\r\n"
			},
			"smart-contracts/contracts/common/Ownable.sol": {
				"content": "pragma solidity ^0.4.18;\r\n\r\n\r\ncontract Ownable {\r\n    address public owner;\r\n\r\n    event LogOwnershipTransfered(address indexed _currentOwner, address indexed _newOwner);\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    // @dev - The ownership shouldn't be transferrable. Otherwise it will mess up the members logic.\r\n    /* function transferOwnership(address _newOwner) public onlyOwner {\r\n         owner = _newOwner;\r\n         LogOwnershipTransfered(msg.sender, _newOwner);\r\n     } */\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"smart-contracts/contracts/Credit.sol": {
				"Credit": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "getBalance",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_state",
									"type": "uint8"
								}
							],
							"name": "changeState",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"name": "lenders",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "toggleActive",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "repay",
							"outputs": [],
							"payable": true,
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "revokeVote",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "refund",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "destroy",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "fraudVote",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "invest",
							"outputs": [],
							"payable": true,
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "requestInterest",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getCreditInfo",
							"outputs": [
								{
									"name": "",
									"type": "address"
								},
								{
									"name": "",
									"type": "bytes32"
								},
								{
									"name": "",
									"type": "uint256"
								},
								{
									"name": "",
									"type": "uint256"
								},
								{
									"name": "",
									"type": "uint256"
								},
								{
									"name": "",
									"type": "uint256"
								},
								{
									"name": "",
									"type": "uint256"
								},
								{
									"name": "",
									"type": "uint256"
								},
								{
									"name": "",
									"type": "uint8"
								},
								{
									"name": "",
									"type": "bool"
								},
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_recipient",
									"type": "address"
								}
							],
							"name": "destroyAndSend",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"name": "_requestedAmount",
									"type": "uint256"
								},
								{
									"name": "_requestedRepayments",
									"type": "uint256"
								},
								{
									"name": "_interest",
									"type": "uint256"
								},
								{
									"name": "_description",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "_address",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "LogCreditInitialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "state",
									"type": "uint8"
								},
								{
									"indexed": true,
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "LogCreditStateChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "active",
									"type": "bool"
								},
								{
									"indexed": true,
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "LogCreditStateActiveChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "_address",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "_amount",
									"type": "uint256"
								},
								{
									"indexed": true,
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "LogBorrowerWithdrawal",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "_address",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "_amount",
									"type": "uint256"
								},
								{
									"indexed": true,
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "LogBorrowerRepaymentInstallment",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "_address",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "LogBorrowerRepaymentFinished",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "_address",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "_amount",
									"type": "uint256"
								},
								{
									"indexed": true,
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "LogBorrowerChangeReturned",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "_address",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "fraudStatus",
									"type": "bool"
								},
								{
									"indexed": true,
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "LogBorrowerIsFraud",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "_address",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "_amount",
									"type": "uint256"
								},
								{
									"indexed": true,
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "LogLenderInvestment",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "_address",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "_amount",
									"type": "uint256"
								},
								{
									"indexed": true,
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "LogLenderWithdrawal",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "_address",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "_amount",
									"type": "uint256"
								},
								{
									"indexed": true,
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "LogLenderChangeReturned",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "_address",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "LogLenderVoteForRevoking",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "_address",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "LogLenderVoteForFraud",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "_address",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "_amount",
									"type": "uint256"
								},
								{
									"indexed": true,
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "LogLenderRefunded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "_currentOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "_newOwner",
									"type": "address"
								}
							],
							"name": "LogOwnershipTransfered",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {
							"changeState(uint8)": {
								"details": "Change state function.\r",
								"params": {
									"_state": "New state.\r Only accessible to the owner of the contract.\r Changes the state of the contract.\r"
								}
							},
							"fraudVote()": {
								"details": "Function for voting the borrower as fraudster.\r"
							},
							"getBalance()": {
								"details": "Get current balance.\r return this.balance.\r"
							},
							"getCreditInfo()": {
								"details": "Function to get the whole credit information.\r return borrower\r return description\r return requestedAmount\r return requestedRepayments\r return remainingRepayments\r return interest\r return returnAmount\r return state\r return active\r return this.balance\r"
							},
							"invest()": {
								"details": "Invest function.\r Provides functionality for person to invest in someone's credit,\r incentivised by the return of interest.\r"
							},
							"refund()": {
								"details": "Function for refunding people. "
							},
							"repay()": {
								"details": "Repayment function.\r Allows borrower to make repayment installments.\r"
							},
							"requestInterest()": {
								"details": "Request interest function.\r It can only be executed while contract is in active state.\r It is only accessible to lenders.\r It is only accessible if lender funded 1 or more wei.\r It can only be executed once.\r Transfers the lended amount + interest to the lender.\r"
							},
							"revokeVote()": {
								"details": "Function for revoking the credit.\r"
							},
							"toggleActive()": {
								"details": "Toggle active state function.\r Only accessible to the owner of the contract.\r Toggles the active state of the contract.\r return bool\r"
							},
							"withdraw()": {
								"details": "Withdraw function.\r It can only be executed while contract is in active state.\r It is only accessible to the borrower.\r It is only accessible if the needed amount is gathered in the contract.\r It can only be executed once.\r Transfers the gathered amount to the borrower.\r"
							}
						},
						"title": "Credit contract.\r Inherits the Ownable and Destructible contracts.\r"
					},
					"evm": {
						"assembly": "    /* \"smart-contracts/contracts/Credit.sol\":189:18457  contract Credit is Destructible {\r... */\n  mstore(0x40, 0x60)\n    /* \"smart-contracts/contracts/Credit.sol\":1255:1259  true */\n  0x1\n    /* \"smart-contracts/contracts/Credit.sol\":1241:1259  bool active = true */\n  0xc\n  exp(0x100, 0x0)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"smart-contracts/contracts/Credit.sol\":2090:2091  0 */\n  0x0\n    /* \"smart-contracts/contracts/Credit.sol\":2070:2091  uint lendersCount = 0 */\n  0xf\n  sstore\n    /* \"smart-contracts/contracts/Credit.sol\":2147:2148  0 */\n  0x0\n    /* \"smart-contracts/contracts/Credit.sol\":2128:2148  uint revokeVotes = 0 */\n  0x10\n  sstore\n    /* \"smart-contracts/contracts/Credit.sol\":2367:2376  1 seconds */\n  0x1\n    /* \"smart-contracts/contracts/Credit.sol\":2349:2364  block.timestamp */\n  timestamp\n    /* \"smart-contracts/contracts/Credit.sol\":2349:2376  block.timestamp + 1 seconds */\n  add\n    /* \"smart-contracts/contracts/Credit.sol\":2325:2376  uint revokeTimeNeeded = block.timestamp + 1 seconds */\n  0x12\n  sstore\n    /* \"smart-contracts/contracts/Credit.sol\":2431:2432  0 */\n  0x0\n    /* \"smart-contracts/contracts/Credit.sol\":2413:2432  uint fraudVotes = 0 */\n  0x13\n  sstore\n    /* \"smart-contracts/contracts/Credit.sol\":5237:6779  function Credit(uint _requestedAmount, uint _requestedRepayments, uint _interest, bytes32 _description) public {\r... */\n  jumpi(tag_1, iszero(callvalue))\n  0x0\n  dup1\n  revert\ntag_1:\n  mload(0x40)\n  0x80\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  mstore\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap2\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap2\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap2\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap2\n  swap1\n  pop\n  pop\n    /* \"smart-contracts/contracts/Credit.sol\":5601:5610  tx.origin */\n  origin\n    /* \"smart-contracts/contracts/Credit.sol\":5590:5598  borrower */\n  0x1\n  0x0\n    /* \"smart-contracts/contracts/Credit.sol\":5590:5610  borrower = tx.origin */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"smart-contracts/contracts/Credit.sol\":5679:5688  _interest */\n  dup2\n    /* \"smart-contracts/contracts/Credit.sol\":5668:5676  interest */\n  0x5\n    /* \"smart-contracts/contracts/Credit.sol\":5668:5688  interest = _interest */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"smart-contracts/contracts/Credit.sol\":5757:5773  _requestedAmount */\n  dup4\n    /* \"smart-contracts/contracts/Credit.sol\":5739:5754  requestedAmount */\n  0x2\n    /* \"smart-contracts/contracts/Credit.sol\":5739:5773  requestedAmount = _requestedAmount */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"smart-contracts/contracts/Credit.sol\":5850:5870  _requestedRepayments */\n  dup3\n    /* \"smart-contracts/contracts/Credit.sol\":5828:5847  requestedRepayments */\n  0x6\n    /* \"smart-contracts/contracts/Credit.sol\":5828:5870  requestedRepayments = _requestedRepayments */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"smart-contracts/contracts/Credit.sol\":6028:6048  _requestedRepayments */\n  dup3\n    /* \"smart-contracts/contracts/Credit.sol\":6006:6025  remainingRepayments */\n  0x7\n    /* \"smart-contracts/contracts/Credit.sol\":6006:6048  remainingRepayments = _requestedRepayments */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"smart-contracts/contracts/Credit.sol\":6246:6275  requestedAmount.add(interest) */\n  tag_6\n    /* \"smart-contracts/contracts/Credit.sol\":6266:6274  interest */\n  sload(0x5)\n    /* \"smart-contracts/contracts/Credit.sol\":6246:6261  requestedAmount */\n  sload(0x2)\n    /* \"smart-contracts/contracts/Credit.sol\":6246:6265  requestedAmount.add */\n  or(tag_0_104, mul(0x100000000, tag_7))\n  swap1\n    /* \"smart-contracts/contracts/Credit.sol\":6246:6275  requestedAmount.add(interest) */\n  swap2\n  swap1\n  0x100000000\n  swap1\n  div\n  jump\t// in\ntag_6:\n    /* \"smart-contracts/contracts/Credit.sol\":6231:6243  returnAmount */\n  0x3\n    /* \"smart-contracts/contracts/Credit.sol\":6231:6275  returnAmount = requestedAmount.add(interest) */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"smart-contracts/contracts/Credit.sol\":6471:6508  returnAmount.div(requestedRepayments) */\n  tag_8\n    /* \"smart-contracts/contracts/Credit.sol\":6488:6507  requestedRepayments */\n  sload(0x6)\n    /* \"smart-contracts/contracts/Credit.sol\":6471:6483  returnAmount */\n  sload(0x3)\n    /* \"smart-contracts/contracts/Credit.sol\":6471:6487  returnAmount.div */\n  or(tag_0_193, mul(0x100000000, tag_9))\n  swap1\n    /* \"smart-contracts/contracts/Credit.sol\":6471:6508  returnAmount.div(requestedRepayments) */\n  swap2\n  swap1\n  0x100000000\n  swap1\n  div\n  jump\t// in\ntag_8:\n    /* \"smart-contracts/contracts/Credit.sol\":6448:6468  repaymentInstallment */\n  0x8\n    /* \"smart-contracts/contracts/Credit.sol\":6448:6508  repaymentInstallment = returnAmount.div(requestedRepayments) */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"smart-contracts/contracts/Credit.sol\":6575:6587  _description */\n  dup1\n    /* \"smart-contracts/contracts/Credit.sol\":6561:6572  description */\n  0xb\n    /* \"smart-contracts/contracts/Credit.sol\":6561:6587  description = _description */\n  dup2\n  not(0x0)\n  and\n  swap1\n  sstore\n  pop\n    /* \"smart-contracts/contracts/Credit.sol\":6657:6672  block.timestamp */\n  timestamp\n    /* \"smart-contracts/contracts/Credit.sol\":6641:6654  requestedDate */\n  0x9\n    /* \"smart-contracts/contracts/Credit.sol\":6641:6672  requestedDate = block.timestamp */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"smart-contracts/contracts/Credit.sol\":6755:6770  block.timestamp */\n  timestamp\n    /* \"smart-contracts/contracts/Credit.sol\":6745:6753  borrower */\n  0x1\n  0x0\n  swap1\n  sload\n  swap1\n  0x100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"smart-contracts/contracts/Credit.sol\":6724:6771  LogCreditInitialized(borrower, block.timestamp) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xf9f75c99c0e3522cd19ffc66fd6c94989a3f0821d37d5c5bb176aab904c6335d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"smart-contracts/contracts/Credit.sol\":5237:6779  function Credit(uint _requestedAmount, uint _requestedRepayments, uint _interest, bytes32 _description) public {\r... */\n  pop\n  pop\n  pop\n  pop\n    /* \"smart-contracts/contracts/Credit.sol\":189:18457  contract Credit is Destructible {\r... */\n  jump(tag_10)\n    /* \"smart-contracts/contracts/common/SafeMath.sol\":622:769  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\ntag_7:\n    /* \"smart-contracts/contracts/common/SafeMath.sol\":680:687  uint256 */\n  0x0\n    /* \"smart-contracts/contracts/common/SafeMath.sol\":700:709  uint256 c */\n  dup1\n    /* \"smart-contracts/contracts/common/SafeMath.sol\":716:717  b */\n  dup3\n    /* \"smart-contracts/contracts/common/SafeMath.sol\":712:713  a */\n  dup5\n    /* \"smart-contracts/contracts/common/SafeMath.sol\":712:717  a + b */\n  add\n    /* \"smart-contracts/contracts/common/SafeMath.sol\":700:717  uint256 c = a + b */\n  swap1\n  pop\n    /* \"smart-contracts/contracts/common/SafeMath.sol\":740:741  a */\n  dup4\n    /* \"smart-contracts/contracts/common/SafeMath.sol\":735:736  c */\n  dup2\n    /* \"smart-contracts/contracts/common/SafeMath.sol\":735:741  c >= a */\n  lt\n  iszero\n    /* \"smart-contracts/contracts/common/SafeMath.sol\":728:742  assert(c >= a) */\n  iszero\n  iszero\n  tag_12\n  jumpi\n  invalid\ntag_12:\n    /* \"smart-contracts/contracts/common/SafeMath.sol\":760:761  c */\n  dup1\n    /* \"smart-contracts/contracts/common/SafeMath.sol\":753:761  return c */\n  swap2\n  pop\n    /* \"smart-contracts/contracts/common/SafeMath.sol\":622:769  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n  pop\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"smart-contracts/contracts/common/SafeMath.sol\":270:463  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\ntag_9:\n    /* \"smart-contracts/contracts/common/SafeMath.sol\":328:335  uint256 */\n  0x0\n    /* \"smart-contracts/contracts/common/SafeMath.sol\":419:428  uint256 c */\n  dup1\n    /* \"smart-contracts/contracts/common/SafeMath.sol\":435:436  b */\n  dup3\n    /* \"smart-contracts/contracts/common/SafeMath.sol\":431:432  a */\n  dup5\n    /* \"smart-contracts/contracts/common/SafeMath.sol\":431:436  a / b */\n  dup2\n  iszero\n  iszero\n  tag_14\n  jumpi\n  invalid\ntag_14:\n  div\n    /* \"smart-contracts/contracts/common/SafeMath.sol\":419:436  uint256 c = a / b */\n  swap1\n  pop\n    /* \"smart-contracts/contracts/common/SafeMath.sol\":454:455  c */\n  dup1\n    /* \"smart-contracts/contracts/common/SafeMath.sol\":447:455  return c */\n  swap2\n  pop\n    /* \"smart-contracts/contracts/common/SafeMath.sol\":270:463  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n  pop\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"smart-contracts/contracts/Credit.sol\":189:18457  contract Credit is Destructible {\r... */\ntag_10:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"smart-contracts/contracts/Credit.sol\":189:18457  contract Credit is Destructible {\r... */\n      mstore(0x40, 0x60)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x12065fe0\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x268f1153\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x28fd10d7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x29c68dc1\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x3ccfd60b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x402d8883\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x43c14b22\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x590e1ae3\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x83197ef0\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xd85da7b6\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xe8b5e51f\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xefd475ab\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xf06817cf\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xf5074f41\n      eq\n      tag_16\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"smart-contracts/contracts/Credit.sol\":6862:6952  function getBalance() public view returns (uint256) {\r... */\n    tag_2:\n      jumpi(tag_17, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_17:\n      tag_18\n      jump(tag_19)\n    tag_18:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"smart-contracts/contracts/Credit.sol\":17851:18041  function changeState(State _state) external onlyOwner returns (uint) {\r... */\n    tag_3:\n      jumpi(tag_20, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_20:\n      tag_21\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_22)\n    tag_21:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"smart-contracts/contracts/Credit.sol\":1852:1891  mapping(address => bool) public lenders */\n    tag_4:\n      jumpi(tag_23, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_23:\n      tag_24\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_25)\n    tag_24:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"smart-contracts/contracts/Credit.sol\":18230:18452  function toggleActive() external onlyOwner returns (bool) {\r... */\n    tag_5:\n      jumpi(tag_26, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_26:\n      tag_27\n      jump(tag_28)\n    tag_27:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"smart-contracts/contracts/Credit.sol\":11703:12195  function withdraw() public isActive onlyBorrower canWithdraw isNotFraud {\r... */\n    tag_6:\n      jumpi(tag_29, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_29:\n      tag_30\n      jump(tag_31)\n    tag_30:\n      stop\n        /* \"smart-contracts/contracts/Credit.sol\":8949:11360  function repay() public onlyBorrower canRepay payable {\r... */\n    tag_7:\n      tag_32\n      jump(tag_33)\n    tag_32:\n      stop\n        /* \"smart-contracts/contracts/Credit.sol\":14589:15202  function revokeVote() public isActive isRevokable onlyLender {\r... */\n    tag_8:\n      jumpi(tag_34, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_34:\n      tag_35\n      jump(tag_36)\n    tag_35:\n      stop\n        /* \"smart-contracts/contracts/Credit.sol\":15514:16468  function refund() public isActive onlyLender isRevoked {\r... */\n    tag_9:\n      jumpi(tag_37, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_37:\n      tag_38\n      jump(tag_39)\n    tag_38:\n      stop\n        /* \"smart-contracts/contracts/common/Destructible.sol\":151:225  function destroy() public onlyOwner {\r... */\n    tag_10:\n      jumpi(tag_40, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_40:\n      tag_41\n      jump(tag_42)\n    tag_41:\n      stop\n        /* \"smart-contracts/contracts/common/Ownable.sol\":54:74  address public owner */\n    tag_11:\n      jumpi(tag_43, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_43:\n      tag_44\n      jump(tag_45)\n    tag_44:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"smart-contracts/contracts/Credit.sol\":16546:17151  function fraudVote() public isActive onlyLender returns (bool) {\r... */\n    tag_12:\n      jumpi(tag_46, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_46:\n      tag_47\n      jump(tag_48)\n    tag_47:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"smart-contracts/contracts/Credit.sol\":7124:8840  function invest() public canInvest payable {\r... */\n    tag_13:\n      tag_49\n      jump(tag_50)\n    tag_49:\n      stop\n        /* \"smart-contracts/contracts/Credit.sol\":12530:13748  function requestInterest() public isActive onlyLender canAskForInterest {\r... */\n    tag_14:\n      jumpi(tag_51, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_51:\n      tag_52\n      jump(tag_53)\n    tag_52:\n      stop\n        /* \"smart-contracts/contracts/Credit.sol\":14111:14523  function getCreditInfo() public view returns (address, bytes32, uint, uint, uint, uint, uint, uint, State, bool, uint) {\r... */\n    tag_15:\n      jumpi(tag_54, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_54:\n      tag_55\n      jump(tag_56)\n    tag_55:\n      mload(0x40)\n      dup1\n      dup13\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup12\n      not(0x0)\n      and\n      not(0x0)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup11\n      dup2\n      mstore\n      0x20\n      add\n      dup10\n      dup2\n      mstore\n      0x20\n      add\n      dup9\n      dup2\n      mstore\n      0x20\n      add\n      dup8\n      dup2\n      mstore\n      0x20\n      add\n      dup7\n      dup2\n      mstore\n      0x20\n      add\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      0x5\n      dup2\n      gt\n      iszero\n      tag_57\n      jumpi\n      invalid\n    tag_57:\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap12\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"smart-contracts/contracts/common/Destructible.sol\":237:341  function destroyAndSend(address _recipient) public onlyOwner {\r... */\n    tag_16:\n      jumpi(tag_58, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_58:\n      tag_59\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_60)\n    tag_59:\n      stop\n        /* \"smart-contracts/contracts/Credit.sol\":6862:6952  function getBalance() public view returns (uint256) {\r... */\n    tag_19:\n        /* \"smart-contracts/contracts/Credit.sol\":6905:6912  uint256 */\n      0x0\n        /* \"smart-contracts/contracts/Credit.sol\":6932:6936  this */\n      address\n        /* \"smart-contracts/contracts/Credit.sol\":6932:6944  this.balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      balance\n        /* \"smart-contracts/contracts/Credit.sol\":6925:6944  return this.balance */\n      swap1\n      pop\n        /* \"smart-contracts/contracts/Credit.sol\":6862:6952  function getBalance() public view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"smart-contracts/contracts/Credit.sol\":17851:18041  function changeState(State _state) external onlyOwner returns (uint) {\r... */\n    tag_22:\n        /* \"smart-contracts/contracts/Credit.sol\":17914:17918  uint */\n      0x0\n        /* \"smart-contracts/contracts/common/Ownable.sol\":232:237  owner */\n      dup1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"smart-contracts/contracts/common/Ownable.sol\":218:237  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"smart-contracts/contracts/common/Ownable.sol\":218:228  msg.sender */\n      caller\n        /* \"smart-contracts/contracts/common/Ownable.sol\":218:237  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"smart-contracts/contracts/common/Ownable.sol\":210:238  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_63\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_63:\n        /* \"smart-contracts/contracts/Credit.sol\":17939:17945  _state */\n      dup2\n        /* \"smart-contracts/contracts/Credit.sol\":17931:17936  state */\n      0xc\n      0x1\n        /* \"smart-contracts/contracts/Credit.sol\":17931:17945  state = _state */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x5\n      dup2\n      gt\n      iszero\n      tag_65\n      jumpi\n      invalid\n    tag_65:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"smart-contracts/contracts/Credit.sol\":18017:18032  block.timestamp */\n      timestamp\n        /* \"smart-contracts/contracts/Credit.sol\":18010:18015  state */\n      0xc\n      0x1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"smart-contracts/contracts/Credit.sol\":17988:18033  LogCreditStateChanged(state, block.timestamp) */\n      0x5\n      dup2\n      gt\n      iszero\n      tag_66\n      jumpi\n      invalid\n    tag_66:\n      0xaaae373901e745122c2e0925ad006227969c6cd190b7d5ea2fb7fdbd1d955b35\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"smart-contracts/contracts/Credit.sol\":17851:18041  function changeState(State _state) external onlyOwner returns (uint) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"smart-contracts/contracts/Credit.sol\":1852:1891  mapping(address => bool) public lenders */\n    tag_25:\n      mstore(0x20, 0xd)\n      dup1\n      0x0\n      mstore\n      keccak256(0x0, 0x40)\n      0x0\n      swap2\n      pop\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"smart-contracts/contracts/Credit.sol\":18230:18452  function toggleActive() external onlyOwner returns (bool) {\r... */\n    tag_28:\n        /* \"smart-contracts/contracts/Credit.sol\":18282:18286  bool */\n      0x0\n        /* \"smart-contracts/contracts/common/Ownable.sol\":232:237  owner */\n      dup1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"smart-contracts/contracts/common/Ownable.sol\":218:237  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"smart-contracts/contracts/common/Ownable.sol\":218:228  msg.sender */\n      caller\n        /* \"smart-contracts/contracts/common/Ownable.sol\":218:237  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"smart-contracts/contracts/common/Ownable.sol\":210:238  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_68\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_68:\n        /* \"smart-contracts/contracts/Credit.sol\":18309:18315  active */\n      0xc\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"smart-contracts/contracts/Credit.sol\":18308:18315  !active */\n      iszero\n        /* \"smart-contracts/contracts/Credit.sol\":18299:18305  active */\n      0xc\n      0x0\n        /* \"smart-contracts/contracts/Credit.sol\":18299:18315  active = !active */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"smart-contracts/contracts/Credit.sol\":18402:18417  block.timestamp */\n      timestamp\n        /* \"smart-contracts/contracts/Credit.sol\":18394:18400  active */\n      0xc\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"smart-contracts/contracts/Credit.sol\":18366:18418  LogCreditStateActiveChanged(active, block.timestamp) */\n      iszero\n      iszero\n      0x160914ea27c60aa29a5f3a69d74e6069869de36e38939de1e0a66b921d8623d2\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"smart-contracts/contracts/Credit.sol\":18438:18444  active */\n      0xc\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"smart-contracts/contracts/Credit.sol\":18431:18444  return active */\n      swap1\n      pop\n        /* \"smart-contracts/contracts/Credit.sol\":18230:18452  function toggleActive() external onlyOwner returns (bool) {\r... */\n      swap1\n      jump\t// out\n        /* \"smart-contracts/contracts/Credit.sol\":11703:12195  function withdraw() public isActive onlyBorrower canWithdraw isNotFraud {\r... */\n    tag_31:\n        /* \"smart-contracts/contracts/Credit.sol\":4007:4011  true */\n      0x1\n        /* \"smart-contracts/contracts/Credit.sol\":3997:4011  active == true */\n      iszero\n      iszero\n        /* \"smart-contracts/contracts/Credit.sol\":3997:4003  active */\n      0xc\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"smart-contracts/contracts/Credit.sol\":3997:4011  active == true */\n      iszero\n      iszero\n      eq\n        /* \"smart-contracts/contracts/Credit.sol\":3989:4012  require(active == true) */\n      iszero\n      iszero\n      tag_71\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_71:\n        /* \"smart-contracts/contracts/Credit.sol\":4097:4105  borrower */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"smart-contracts/contracts/Credit.sol\":4083:4105  msg.sender == borrower */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"smart-contracts/contracts/Credit.sol\":4083:4093  msg.sender */\n      caller\n        /* \"smart-contracts/contracts/Credit.sol\":4083:4105  msg.sender == borrower */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"smart-contracts/contracts/Credit.sol\":4075:4106  require(msg.sender == borrower) */\n      iszero\n      iszero\n      tag_73\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_73:\n        /* \"smart-contracts/contracts/Credit.sol\":4639:4654  requestedAmount */\n      sload(0x2)\n        /* \"smart-contracts/contracts/Credit.sol\":4623:4627  this */\n      address\n        /* \"smart-contracts/contracts/Credit.sol\":4623:4635  this.balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      balance\n        /* \"smart-contracts/contracts/Credit.sol\":4623:4654  this.balance >= requestedAmount */\n      lt\n      iszero\n        /* \"smart-contracts/contracts/Credit.sol\":4615:4655  require(this.balance >= requestedAmount) */\n      iszero\n      iszero\n      tag_75\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_75:\n        /* \"smart-contracts/contracts/Credit.sol\":4733:4744  State.fraud */\n      0x5\n        /* \"smart-contracts/contracts/Credit.sol\":4724:4744  state != State.fraud */\n      dup1\n      dup2\n      gt\n      iszero\n      tag_77\n      jumpi\n      invalid\n    tag_77:\n        /* \"smart-contracts/contracts/Credit.sol\":4724:4729  state */\n      0xc\n      0x1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"smart-contracts/contracts/Credit.sol\":4724:4744  state != State.fraud */\n      0x5\n      dup2\n      gt\n      iszero\n      tag_78\n      jumpi\n      invalid\n    tag_78:\n      eq\n      iszero\n        /* \"smart-contracts/contracts/Credit.sol\":4716:4745  require(state != State.fraud) */\n      iszero\n      iszero\n      tag_79\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_79:\n        /* \"smart-contracts/contracts/Credit.sol\":11861:11876  State.repayment */\n      0x1\n        /* \"smart-contracts/contracts/Credit.sol\":11853:11858  state */\n      0xc\n      0x1\n        /* \"smart-contracts/contracts/Credit.sol\":11853:11876  state = State.repayment */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x5\n      dup2\n      gt\n      iszero\n      tag_81\n      jumpi\n      invalid\n    tag_81:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"smart-contracts/contracts/Credit.sol\":11948:11963  block.timestamp */\n      timestamp\n        /* \"smart-contracts/contracts/Credit.sol\":11941:11946  state */\n      0xc\n      0x1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"smart-contracts/contracts/Credit.sol\":11919:11964  LogCreditStateChanged(state, block.timestamp) */\n      0x5\n      dup2\n      gt\n      iszero\n      tag_82\n      jumpi\n      invalid\n    tag_82:\n      0xaaae373901e745122c2e0925ad006227969c6cd190b7d5ea2fb7fdbd1d955b35\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"smart-contracts/contracts/Credit.sol\":12062:12077  block.timestamp */\n      timestamp\n        /* \"smart-contracts/contracts/Credit.sol\":12048:12052  this */\n      address\n        /* \"smart-contracts/contracts/Credit.sol\":12048:12060  this.balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      balance\n        /* \"smart-contracts/contracts/Credit.sol\":12036:12046  msg.sender */\n      caller\n        /* \"smart-contracts/contracts/Credit.sol\":12014:12078  LogBorrowerWithdrawal(msg.sender, this.balance, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x20734f14d107b526674905e470e35d0a474f9fb996a7bdb034c839c8894524e6\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"smart-contracts/contracts/Credit.sol\":12156:12164  borrower */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"smart-contracts/contracts/Credit.sol\":12156:12173  borrower.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"smart-contracts/contracts/Credit.sol\":12156:12187  borrower.transfer(this.balance) */\n      0x8fc\n        /* \"smart-contracts/contracts/Credit.sol\":12174:12178  this */\n      address\n        /* \"smart-contracts/contracts/Credit.sol\":12174:12186  this.balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      balance\n        /* \"smart-contracts/contracts/Credit.sol\":12156:12187  borrower.transfer(this.balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      iszero\n      tag_83\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_83:\n        /* \"smart-contracts/contracts/Credit.sol\":11703:12195  function withdraw() public isActive onlyBorrower canWithdraw isNotFraud {\r... */\n      jump\t// out\n        /* \"smart-contracts/contracts/Credit.sol\":8949:11360  function repay() public onlyBorrower canRepay payable {\r... */\n    tag_33:\n        /* \"smart-contracts/contracts/Credit.sol\":9756:9771  uint extraMoney */\n      0x0\n        /* \"smart-contracts/contracts/Credit.sol\":4097:4105  borrower */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"smart-contracts/contracts/Credit.sol\":4083:4105  msg.sender == borrower */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"smart-contracts/contracts/Credit.sol\":4083:4093  msg.sender */\n      caller\n        /* \"smart-contracts/contracts/Credit.sol\":4083:4105  msg.sender == borrower */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"smart-contracts/contracts/Credit.sol\":4075:4106  require(msg.sender == borrower) */\n      iszero\n      iszero\n      tag_85\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_85:\n        /* \"smart-contracts/contracts/Credit.sol\":4537:4552  State.repayment */\n      0x1\n        /* \"smart-contracts/contracts/Credit.sol\":4528:4552  state == State.repayment */\n      0x5\n      dup2\n      gt\n      iszero\n      tag_87\n      jumpi\n      invalid\n    tag_87:\n        /* \"smart-contracts/contracts/Credit.sol\":4528:4533  state */\n      0xc\n      0x1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"smart-contracts/contracts/Credit.sol\":4528:4552  state == State.repayment */\n      0x5\n      dup2\n      gt\n      iszero\n      tag_88\n      jumpi\n      invalid\n    tag_88:\n      eq\n        /* \"smart-contracts/contracts/Credit.sol\":4520:4553  require(state == State.repayment) */\n      iszero\n      iszero\n      tag_89\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_89:\n        /* \"smart-contracts/contracts/Credit.sol\":9119:9120  0 */\n      0x0\n        /* \"smart-contracts/contracts/Credit.sol\":9097:9116  remainingRepayments */\n      sload(0x7)\n        /* \"smart-contracts/contracts/Credit.sol\":9097:9120  remainingRepayments > 0 */\n      gt\n        /* \"smart-contracts/contracts/Credit.sol\":9089:9121  require(remainingRepayments > 0) */\n      iszero\n      iszero\n      tag_91\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_91:\n        /* \"smart-contracts/contracts/Credit.sol\":9232:9252  repaymentInstallment */\n      sload(0x8)\n        /* \"smart-contracts/contracts/Credit.sol\":9219:9228  msg.value */\n      callvalue\n        /* \"smart-contracts/contracts/Credit.sol\":9219:9252  msg.value >= repaymentInstallment */\n      lt\n      iszero\n        /* \"smart-contracts/contracts/Credit.sol\":9211:9253  require(msg.value >= repaymentInstallment) */\n      iszero\n      iszero\n      tag_92\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_92:\n        /* \"smart-contracts/contracts/Credit.sol\":9473:9485  returnAmount */\n      sload(0x3)\n        /* \"smart-contracts/contracts/Credit.sol\":9458:9470  repaidAmount */\n      sload(0x4)\n        /* \"smart-contracts/contracts/Credit.sol\":9458:9485  repaidAmount < returnAmount */\n      lt\n        /* \"smart-contracts/contracts/Credit.sol\":9451:9486  assert(repaidAmount < returnAmount) */\n      iszero\n      iszero\n      tag_93\n      jumpi\n      invalid\n    tag_93:\n        /* \"smart-contracts/contracts/Credit.sol\":9547:9566  remainingRepayments */\n      0x7\n      0x0\n        /* \"smart-contracts/contracts/Credit.sol\":9547:9568  remainingRepayments-- */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      0x1\n      swap1\n      sub\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"smart-contracts/contracts/Credit.sol\":9641:9656  block.timestamp */\n      timestamp\n        /* \"smart-contracts/contracts/Credit.sol\":9621:9638  lastRepaymentDate */\n      0xa\n        /* \"smart-contracts/contracts/Credit.sol\":9621:9656  lastRepaymentDate = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"smart-contracts/contracts/Credit.sol\":9774:9775  0 */\n      0x0\n        /* \"smart-contracts/contracts/Credit.sol\":9756:9775  uint extraMoney = 0 */\n      swap1\n      pop\n        /* \"smart-contracts/contracts/Credit.sol\":9995:10015  repaymentInstallment */\n      sload(0x8)\n        /* \"smart-contracts/contracts/Credit.sol\":9983:9992  msg.value */\n      callvalue\n        /* \"smart-contracts/contracts/Credit.sol\":9983:10015  msg.value > repaymentInstallment */\n      gt\n        /* \"smart-contracts/contracts/Credit.sol\":9979:10615  if (msg.value > repaymentInstallment) {\r... */\n      iszero\n      tag_94\n      jumpi\n        /* \"smart-contracts/contracts/Credit.sol\":10120:10155  msg.value.sub(repaymentInstallment) */\n      tag_95\n        /* \"smart-contracts/contracts/Credit.sol\":10134:10154  repaymentInstallment */\n      sload(0x8)\n        /* \"smart-contracts/contracts/Credit.sol\":10120:10129  msg.value */\n      callvalue\n        /* \"smart-contracts/contracts/Credit.sol\":10120:10133  msg.value.sub */\n      tag_96\n      swap1\n        /* \"smart-contracts/contracts/Credit.sol\":10120:10155  msg.value.sub(repaymentInstallment) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_95:\n        /* \"smart-contracts/contracts/Credit.sol\":10107:10155  extraMoney = msg.value.sub(repaymentInstallment) */\n      swap1\n      pop\n        /* \"smart-contracts/contracts/Credit.sol\":10244:10269  msg.value.sub(extraMoney) */\n      tag_97\n        /* \"smart-contracts/contracts/Credit.sol\":10258:10268  extraMoney */\n      dup2\n        /* \"smart-contracts/contracts/Credit.sol\":10244:10253  msg.value */\n      callvalue\n        /* \"smart-contracts/contracts/Credit.sol\":10244:10257  msg.value.sub */\n      tag_96\n      swap1\n        /* \"smart-contracts/contracts/Credit.sol\":10244:10269  msg.value.sub(extraMoney) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_97:\n        /* \"smart-contracts/contracts/Credit.sol\":10220:10240  repaymentInstallment */\n      sload(0x8)\n        /* \"smart-contracts/contracts/Credit.sol\":10220:10269  repaymentInstallment == msg.value.sub(extraMoney) */\n      eq\n        /* \"smart-contracts/contracts/Credit.sol\":10213:10270  assert(repaymentInstallment == msg.value.sub(extraMoney)) */\n      iszero\n      iszero\n      tag_98\n      jumpi\n      invalid\n    tag_98:\n        /* \"smart-contracts/contracts/Credit.sol\":10346:10355  msg.value */\n      callvalue\n        /* \"smart-contracts/contracts/Credit.sol\":10332:10342  extraMoney */\n      dup2\n        /* \"smart-contracts/contracts/Credit.sol\":10332:10355  extraMoney <= msg.value */\n      gt\n      iszero\n        /* \"smart-contracts/contracts/Credit.sol\":10325:10356  assert(extraMoney <= msg.value) */\n      iszero\n      iszero\n      tag_99\n      jumpi\n      invalid\n    tag_99:\n        /* \"smart-contracts/contracts/Credit.sol\":10438:10448  msg.sender */\n      caller\n        /* \"smart-contracts/contracts/Credit.sol\":10438:10457  msg.sender.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"smart-contracts/contracts/Credit.sol\":10438:10469  msg.sender.transfer(extraMoney) */\n      0x8fc\n        /* \"smart-contracts/contracts/Credit.sol\":10458:10468  extraMoney */\n      dup3\n        /* \"smart-contracts/contracts/Credit.sol\":10438:10469  msg.sender.transfer(extraMoney) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      iszero\n      tag_100\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_100:\n        /* \"smart-contracts/contracts/Credit.sol\":10587:10602  block.timestamp */\n      timestamp\n        /* \"smart-contracts/contracts/Credit.sol\":10575:10585  extraMoney */\n      dup2\n        /* \"smart-contracts/contracts/Credit.sol\":10563:10573  msg.sender */\n      caller\n        /* \"smart-contracts/contracts/Credit.sol\":10537:10603  LogBorrowerChangeReturned(msg.sender, extraMoney, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x5c9874487a2258c6bd6dc39a2cfcf7ea944b50b79d9a7152668779687b2ebd8d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"smart-contracts/contracts/Credit.sol\":9979:10615  if (msg.value > repaymentInstallment) {\r... */\n    tag_94:\n        /* \"smart-contracts/contracts/Credit.sol\":10745:10760  block.timestamp */\n      timestamp\n        /* \"smart-contracts/contracts/Credit.sol\":10718:10743  msg.value.sub(extraMoney) */\n      tag_101\n        /* \"smart-contracts/contracts/Credit.sol\":10732:10742  extraMoney */\n      dup3\n        /* \"smart-contracts/contracts/Credit.sol\":10718:10727  msg.value */\n      callvalue\n        /* \"smart-contracts/contracts/Credit.sol\":10718:10731  msg.value.sub */\n      tag_96\n      swap1\n        /* \"smart-contracts/contracts/Credit.sol\":10718:10743  msg.value.sub(extraMoney) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_101:\n        /* \"smart-contracts/contracts/Credit.sol\":10706:10716  msg.sender */\n      caller\n        /* \"smart-contracts/contracts/Credit.sol\":10674:10761  LogBorrowerRepaymentInstallment(msg.sender, msg.value.sub(extraMoney), block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x350a09487d622378c6efbda255f996387696319f803a2e53eee64f7aa70be85a\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"smart-contracts/contracts/Credit.sol\":10866:10909  repaidAmount.add(msg.value.sub(extraMoney)) */\n      tag_102\n        /* \"smart-contracts/contracts/Credit.sol\":10883:10908  msg.value.sub(extraMoney) */\n      tag_103\n        /* \"smart-contracts/contracts/Credit.sol\":10897:10907  extraMoney */\n      dup3\n        /* \"smart-contracts/contracts/Credit.sol\":10883:10892  msg.value */\n      callvalue\n        /* \"smart-contracts/contracts/Credit.sol\":10883:10896  msg.value.sub */\n      tag_96\n      swap1\n        /* \"smart-contracts/contracts/Credit.sol\":10883:10908  msg.value.sub(extraMoney) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_103:\n        /* \"smart-contracts/contracts/Credit.sol\":10866:10878  repaidAmount */\n      sload(0x4)\n        /* \"smart-contracts/contracts/Credit.sol\":10866:10882  repaidAmount.add */\n      tag_104\n      swap1\n        /* \"smart-contracts/contracts/Credit.sol\":10866:10909  repaidAmount.add(msg.value.sub(extraMoney)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_102:\n        /* \"smart-contracts/contracts/Credit.sol\":10851:10863  repaidAmount */\n      0x4\n        /* \"smart-contracts/contracts/Credit.sol\":10851:10909  repaidAmount = repaidAmount.add(msg.value.sub(extraMoney)) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"smart-contracts/contracts/Credit.sol\":11013:11025  returnAmount */\n      sload(0x3)\n        /* \"smart-contracts/contracts/Credit.sol\":10997:11009  repaidAmount */\n      sload(0x4)\n        /* \"smart-contracts/contracts/Credit.sol\":10997:11025  repaidAmount == returnAmount */\n      eq\n        /* \"smart-contracts/contracts/Credit.sol\":10993:11353  if (repaidAmount == returnAmount) {\r... */\n      iszero\n      tag_105\n      jumpi\n        /* \"smart-contracts/contracts/Credit.sol\":11120:11135  block.timestamp */\n      timestamp\n        /* \"smart-contracts/contracts/Credit.sol\":11108:11118  msg.sender */\n      caller\n        /* \"smart-contracts/contracts/Credit.sol\":11079:11136  LogBorrowerRepaymentFinished(msg.sender, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x25630de45a38a90cbca3a2eb35a8197e51b56d6d912581711e5e3773fe77cabc\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"smart-contracts/contracts/Credit.sol\":11224:11245  State.interestReturns */\n      0x2\n        /* \"smart-contracts/contracts/Credit.sol\":11216:11221  state */\n      0xc\n      0x1\n        /* \"smart-contracts/contracts/Credit.sol\":11216:11245  state = State.interestReturns */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x5\n      dup2\n      gt\n      iszero\n      tag_106\n      jumpi\n      invalid\n    tag_106:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"smart-contracts/contracts/Credit.sol\":11325:11340  block.timestamp */\n      timestamp\n        /* \"smart-contracts/contracts/Credit.sol\":11318:11323  state */\n      0xc\n      0x1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"smart-contracts/contracts/Credit.sol\":11296:11341  LogCreditStateChanged(state, block.timestamp) */\n      0x5\n      dup2\n      gt\n      iszero\n      tag_107\n      jumpi\n      invalid\n    tag_107:\n      0xaaae373901e745122c2e0925ad006227969c6cd190b7d5ea2fb7fdbd1d955b35\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"smart-contracts/contracts/Credit.sol\":10993:11353  if (repaidAmount == returnAmount) {\r... */\n    tag_105:\n        /* \"smart-contracts/contracts/Credit.sol\":8949:11360  function repay() public onlyBorrower canRepay payable {\r... */\n      pop\n      jump\t// out\n        /* \"smart-contracts/contracts/Credit.sol\":14589:15202  function revokeVote() public isActive isRevokable onlyLender {\r... */\n    tag_36:\n        /* \"smart-contracts/contracts/Credit.sol\":4007:4011  true */\n      0x1\n        /* \"smart-contracts/contracts/Credit.sol\":3997:4011  active == true */\n      iszero\n      iszero\n        /* \"smart-contracts/contracts/Credit.sol\":3997:4003  active */\n      0xc\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"smart-contracts/contracts/Credit.sol\":3997:4011  active == true */\n      iszero\n      iszero\n      eq\n        /* \"smart-contracts/contracts/Credit.sol\":3989:4012  require(active == true) */\n      iszero\n      iszero\n      tag_109\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_109:\n        /* \"smart-contracts/contracts/Credit.sol\":4834:4850  revokeTimeNeeded */\n      sload(0x12)\n        /* \"smart-contracts/contracts/Credit.sol\":4815:4830  block.timestamp */\n      timestamp\n        /* \"smart-contracts/contracts/Credit.sol\":4815:4850  block.timestamp >= revokeTimeNeeded */\n      lt\n      iszero\n        /* \"smart-contracts/contracts/Credit.sol\":4807:4851  require(block.timestamp >= revokeTimeNeeded) */\n      iszero\n      iszero\n      tag_111\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_111:\n        /* \"smart-contracts/contracts/Credit.sol\":4879:4895  State.investment */\n      0x0\n        /* \"smart-contracts/contracts/Credit.sol\":4870:4895  state == State.investment */\n      0x5\n      dup2\n      gt\n      iszero\n      tag_112\n      jumpi\n      invalid\n    tag_112:\n        /* \"smart-contracts/contracts/Credit.sol\":4870:4875  state */\n      0xc\n      0x1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"smart-contracts/contracts/Credit.sol\":4870:4895  state == State.investment */\n      0x5\n      dup2\n      gt\n      iszero\n      tag_113\n      jumpi\n      invalid\n    tag_113:\n      eq\n        /* \"smart-contracts/contracts/Credit.sol\":4862:4896  require(state == State.investment) */\n      iszero\n      iszero\n      tag_114\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_114:\n        /* \"smart-contracts/contracts/Credit.sol\":4198:4202  true */\n      0x1\n        /* \"smart-contracts/contracts/Credit.sol\":4175:4202  lenders[msg.sender] == true */\n      iszero\n      iszero\n        /* \"smart-contracts/contracts/Credit.sol\":4175:4182  lenders */\n      0xd\n        /* \"smart-contracts/contracts/Credit.sol\":4175:4194  lenders[msg.sender] */\n      0x0\n        /* \"smart-contracts/contracts/Credit.sol\":4183:4193  msg.sender */\n      caller\n        /* \"smart-contracts/contracts/Credit.sol\":4175:4194  lenders[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"smart-contracts/contracts/Credit.sol\":4175:4202  lenders[msg.sender] == true */\n      iszero\n      iszero\n      eq\n        /* \"smart-contracts/contracts/Credit.sol\":4167:4203  require(lenders[msg.sender] == true) */\n      iszero\n      iszero\n      tag_116\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_116:\n        /* \"smart-contracts/contracts/Credit.sol\":14743:14748  false */\n      0x0\n        /* \"smart-contracts/contracts/Credit.sol\":14715:14748  revokeVoters[msg.sender] == false */\n      iszero\n      iszero\n        /* \"smart-contracts/contracts/Credit.sol\":14715:14727  revokeVoters */\n      0x11\n        /* \"smart-contracts/contracts/Credit.sol\":14715:14739  revokeVoters[msg.sender] */\n      0x0\n        /* \"smart-contracts/contracts/Credit.sol\":14728:14738  msg.sender */\n      caller\n        /* \"smart-contracts/contracts/Credit.sol\":14715:14739  revokeVoters[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"smart-contracts/contracts/Credit.sol\":14715:14748  revokeVoters[msg.sender] == false */\n      iszero\n      iszero\n      eq\n        /* \"smart-contracts/contracts/Credit.sol\":14707:14749  require(revokeVoters[msg.sender] == false) */\n      iszero\n      iszero\n      tag_118\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_118:\n        /* \"smart-contracts/contracts/Credit.sol\":14801:14812  revokeVotes */\n      0x10\n      0x0\n        /* \"smart-contracts/contracts/Credit.sol\":14801:14814  revokeVotes++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      0x1\n      add\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"smart-contracts/contracts/Credit.sol\":14894:14898  true */\n      0x1\n        /* \"smart-contracts/contracts/Credit.sol\":14866:14898  revokeVoters[msg.sender] == true */\n      iszero\n      iszero\n        /* \"smart-contracts/contracts/Credit.sol\":14866:14878  revokeVoters */\n      0x11\n        /* \"smart-contracts/contracts/Credit.sol\":14866:14890  revokeVoters[msg.sender] */\n      0x0\n        /* \"smart-contracts/contracts/Credit.sol\":14879:14889  msg.sender */\n      caller\n        /* \"smart-contracts/contracts/Credit.sol\":14866:14890  revokeVoters[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      pop\n      pop\n        /* \"smart-contracts/contracts/Credit.sol\":14866:14898  revokeVoters[msg.sender] == true */\n      pop\n        /* \"smart-contracts/contracts/Credit.sol\":15010:15025  block.timestamp */\n      timestamp\n        /* \"smart-contracts/contracts/Credit.sol\":14998:15008  msg.sender */\n      caller\n        /* \"smart-contracts/contracts/Credit.sol\":14973:15026  LogLenderVoteForRevoking(msg.sender, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd7173ce7e4ce6f6d075259ac1a467ab8290db175a2cee8587a663c006b97e129\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"smart-contracts/contracts/Credit.sol\":15100:15111  revokeVotes */\n      sload(0x10)\n        /* \"smart-contracts/contracts/Credit.sol\":15084:15096  lendersCount */\n      sload(0xf)\n        /* \"smart-contracts/contracts/Credit.sol\":15084:15111  lendersCount == revokeVotes */\n      eq\n        /* \"smart-contracts/contracts/Credit.sol\":15080:15195  if (lendersCount == revokeVotes) {\r... */\n      iszero\n      tag_119\n      jumpi\n        /* \"smart-contracts/contracts/Credit.sol\":15175:15183  revoke() */\n      tag_120\n        /* \"smart-contracts/contracts/Credit.sol\":15175:15181  revoke */\n      tag_121\n        /* \"smart-contracts/contracts/Credit.sol\":15175:15183  revoke() */\n      jump\t// in\n    tag_120:\n        /* \"smart-contracts/contracts/Credit.sol\":15080:15195  if (lendersCount == revokeVotes) {\r... */\n    tag_119:\n        /* \"smart-contracts/contracts/Credit.sol\":14589:15202  function revokeVote() public isActive isRevokable onlyLender {\r... */\n      jump\t// out\n        /* \"smart-contracts/contracts/Credit.sol\":15514:16468  function refund() public isActive onlyLender isRevoked {\r... */\n    tag_39:\n        /* \"smart-contracts/contracts/Credit.sol\":4007:4011  true */\n      0x1\n        /* \"smart-contracts/contracts/Credit.sol\":3997:4011  active == true */\n      iszero\n      iszero\n        /* \"smart-contracts/contracts/Credit.sol\":3997:4003  active */\n      0xc\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"smart-contracts/contracts/Credit.sol\":3997:4011  active == true */\n      iszero\n      iszero\n      eq\n        /* \"smart-contracts/contracts/Credit.sol\":3989:4012  require(active == true) */\n      iszero\n      iszero\n      tag_123\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_123:\n        /* \"smart-contracts/contracts/Credit.sol\":4198:4202  true */\n      0x1\n        /* \"smart-contracts/contracts/Credit.sol\":4175:4202  lenders[msg.sender] == true */\n      iszero\n      iszero\n        /* \"smart-contracts/contracts/Credit.sol\":4175:4182  lenders */\n      0xd\n        /* \"smart-contracts/contracts/Credit.sol\":4175:4194  lenders[msg.sender] */\n      0x0\n        /* \"smart-contracts/contracts/Credit.sol\":4183:4193  msg.sender */\n      caller\n        /* \"smart-contracts/contracts/Credit.sol\":4175:4194  lenders[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"smart-contracts/contracts/Credit.sol\":4175:4202  lenders[msg.sender] == true */\n      iszero\n      iszero\n      eq\n        /* \"smart-contracts/contracts/Credit.sol\":4167:4203  require(lenders[msg.sender] == true) */\n      iszero\n      iszero\n      tag_125\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_125:\n        /* \"smart-contracts/contracts/Credit.sol\":4973:4986  State.revoked */\n      0x4\n        /* \"smart-contracts/contracts/Credit.sol\":4964:4986  state == State.revoked */\n      0x5\n      dup2\n      gt\n      iszero\n      tag_127\n      jumpi\n      invalid\n    tag_127:\n        /* \"smart-contracts/contracts/Credit.sol\":4964:4969  state */\n      0xc\n      0x1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"smart-contracts/contracts/Credit.sol\":4964:4986  state == State.revoked */\n      0x5\n      dup2\n      gt\n      iszero\n      tag_128\n      jumpi\n      invalid\n    tag_128:\n      eq\n        /* \"smart-contracts/contracts/Credit.sol\":4956:4987  require(state == State.revoked) */\n      iszero\n      iszero\n      tag_129\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_129:\n        /* \"smart-contracts/contracts/Credit.sol\":15656:15677  lendersInvestedAmount */\n      0xe\n        /* \"smart-contracts/contracts/Credit.sol\":15656:15689  lendersInvestedAmount[msg.sender] */\n      0x0\n        /* \"smart-contracts/contracts/Credit.sol\":15678:15688  msg.sender */\n      caller\n        /* \"smart-contracts/contracts/Credit.sol\":15656:15689  lendersInvestedAmount[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"smart-contracts/contracts/Credit.sol\":15640:15644  this */\n      address\n        /* \"smart-contracts/contracts/Credit.sol\":15640:15652  this.balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      balance\n        /* \"smart-contracts/contracts/Credit.sol\":15640:15689  this.balance >= lendersInvestedAmount[msg.sender] */\n      lt\n      iszero\n        /* \"smart-contracts/contracts/Credit.sol\":15633:15690  assert(this.balance >= lendersInvestedAmount[msg.sender]) */\n      iszero\n      iszero\n      tag_131\n      jumpi\n      invalid\n    tag_131:\n        /* \"smart-contracts/contracts/Credit.sol\":15771:15781  msg.sender */\n      caller\n        /* \"smart-contracts/contracts/Credit.sol\":15771:15790  msg.sender.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"smart-contracts/contracts/Credit.sol\":15771:15825  msg.sender.transfer(lendersInvestedAmount[msg.sender]) */\n      0x8fc\n        /* \"smart-contracts/contracts/Credit.sol\":15791:15812  lendersInvestedAmount */\n      0xe\n        /* \"smart-contracts/contracts/Credit.sol\":15791:15824  lendersInvestedAmount[msg.sender] */\n      0x0\n        /* \"smart-contracts/contracts/Credit.sol\":15813:15823  msg.sender */\n      caller\n        /* \"smart-contracts/contracts/Credit.sol\":15791:15824  lendersInvestedAmount[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"smart-contracts/contracts/Credit.sol\":15771:15825  msg.sender.transfer(lendersInvestedAmount[msg.sender]) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      iszero\n      tag_132\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_132:\n        /* \"smart-contracts/contracts/Credit.sol\":15943:15958  block.timestamp */\n      timestamp\n        /* \"smart-contracts/contracts/Credit.sol\":15908:15929  lendersInvestedAmount */\n      0xe\n        /* \"smart-contracts/contracts/Credit.sol\":15908:15941  lendersInvestedAmount[msg.sender] */\n      0x0\n        /* \"smart-contracts/contracts/Credit.sol\":15930:15940  msg.sender */\n      caller\n        /* \"smart-contracts/contracts/Credit.sol\":15908:15941  lendersInvestedAmount[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"smart-contracts/contracts/Credit.sol\":15896:15906  msg.sender */\n      caller\n        /* \"smart-contracts/contracts/Credit.sol\":15878:15959  LogLenderRefunded(msg.sender, lendersInvestedAmount[msg.sender], block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x71e252e33f19f0223f47f27d00910548d26488b9b55cb5b410b75e273152f8d6\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"smart-contracts/contracts/Credit.sol\":16046:16047  0 */\n      0x0\n        /* \"smart-contracts/contracts/Credit.sol\":16030:16034  this */\n      address\n        /* \"smart-contracts/contracts/Credit.sol\":16030:16042  this.balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      balance\n        /* \"smart-contracts/contracts/Credit.sol\":16030:16047  this.balance == 0 */\n      eq\n        /* \"smart-contracts/contracts/Credit.sol\":16026:16461  if (this.balance == 0) {\r... */\n      iszero\n      tag_133\n      jumpi\n        /* \"smart-contracts/contracts/Credit.sol\":16122:16127  false */\n      0x0\n        /* \"smart-contracts/contracts/Credit.sol\":16113:16119  active */\n      0xc\n      0x0\n        /* \"smart-contracts/contracts/Credit.sol\":16113:16127  active = false */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"smart-contracts/contracts/Credit.sol\":16222:16237  block.timestamp */\n      timestamp\n        /* \"smart-contracts/contracts/Credit.sol\":16214:16220  active */\n      0xc\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"smart-contracts/contracts/Credit.sol\":16186:16238  LogCreditStateActiveChanged(active, block.timestamp) */\n      iszero\n      iszero\n      0x160914ea27c60aa29a5f3a69d74e6069869de36e38939de1e0a66b921d8623d2\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"smart-contracts/contracts/Credit.sol\":16340:16353  State.expired */\n      0x3\n        /* \"smart-contracts/contracts/Credit.sol\":16332:16337  state */\n      0xc\n      0x1\n        /* \"smart-contracts/contracts/Credit.sol\":16332:16353  state = State.expired */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x5\n      dup2\n      gt\n      iszero\n      tag_134\n      jumpi\n      invalid\n    tag_134:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"smart-contracts/contracts/Credit.sol\":16433:16448  block.timestamp */\n      timestamp\n        /* \"smart-contracts/contracts/Credit.sol\":16426:16431  state */\n      0xc\n      0x1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"smart-contracts/contracts/Credit.sol\":16404:16449  LogCreditStateChanged(state, block.timestamp) */\n      0x5\n      dup2\n      gt\n      iszero\n      tag_135\n      jumpi\n      invalid\n    tag_135:\n      0xaaae373901e745122c2e0925ad006227969c6cd190b7d5ea2fb7fdbd1d955b35\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"smart-contracts/contracts/Credit.sol\":16026:16461  if (this.balance == 0) {\r... */\n    tag_133:\n        /* \"smart-contracts/contracts/Credit.sol\":15514:16468  function refund() public isActive onlyLender isRevoked {\r... */\n      jump\t// out\n        /* \"smart-contracts/contracts/common/Destructible.sol\":151:225  function destroy() public onlyOwner {\r... */\n    tag_42:\n        /* \"smart-contracts/contracts/common/Ownable.sol\":232:237  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"smart-contracts/contracts/common/Ownable.sol\":218:237  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"smart-contracts/contracts/common/Ownable.sol\":218:228  msg.sender */\n      caller\n        /* \"smart-contracts/contracts/common/Ownable.sol\":218:237  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"smart-contracts/contracts/common/Ownable.sol\":210:238  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_137\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_137:\n        /* \"smart-contracts/contracts/common/Destructible.sol\":211:216  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"smart-contracts/contracts/common/Destructible.sol\":198:217  selfdestruct(owner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      selfdestruct\n        /* \"smart-contracts/contracts/common/Ownable.sol\":54:74  address public owner */\n    tag_45:\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"smart-contracts/contracts/Credit.sol\":16546:17151  function fraudVote() public isActive onlyLender returns (bool) {\r... */\n    tag_48:\n        /* \"smart-contracts/contracts/Credit.sol\":16603:16607  bool */\n      0x0\n        /* \"smart-contracts/contracts/Credit.sol\":4007:4011  true */\n      0x1\n        /* \"smart-contracts/contracts/Credit.sol\":3997:4011  active == true */\n      iszero\n      iszero\n        /* \"smart-contracts/contracts/Credit.sol\":3997:4003  active */\n      0xc\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"smart-contracts/contracts/Credit.sol\":3997:4011  active == true */\n      iszero\n      iszero\n      eq\n        /* \"smart-contracts/contracts/Credit.sol\":3989:4012  require(active == true) */\n      iszero\n      iszero\n      tag_140\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_140:\n        /* \"smart-contracts/contracts/Credit.sol\":4198:4202  true */\n      0x1\n        /* \"smart-contracts/contracts/Credit.sol\":4175:4202  lenders[msg.sender] == true */\n      iszero\n      iszero\n        /* \"smart-contracts/contracts/Credit.sol\":4175:4182  lenders */\n      0xd\n        /* \"smart-contracts/contracts/Credit.sol\":4175:4194  lenders[msg.sender] */\n      0x0\n        /* \"smart-contracts/contracts/Credit.sol\":4183:4193  msg.sender */\n      caller\n        /* \"smart-contracts/contracts/Credit.sol\":4175:4194  lenders[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"smart-contracts/contracts/Credit.sol\":4175:4202  lenders[msg.sender] == true */\n      iszero\n      iszero\n      eq\n        /* \"smart-contracts/contracts/Credit.sol\":4167:4203  require(lenders[msg.sender] == true) */\n      iszero\n      iszero\n      tag_142\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_142:\n        /* \"smart-contracts/contracts/Credit.sol\":16698:16703  false */\n      0x0\n        /* \"smart-contracts/contracts/Credit.sol\":16671:16703  fraudVoters[msg.sender] == false */\n      iszero\n      iszero\n        /* \"smart-contracts/contracts/Credit.sol\":16671:16682  fraudVoters */\n      0x14\n        /* \"smart-contracts/contracts/Credit.sol\":16671:16694  fraudVoters[msg.sender] */\n      0x0\n        /* \"smart-contracts/contracts/Credit.sol\":16683:16693  msg.sender */\n      caller\n        /* \"smart-contracts/contracts/Credit.sol\":16671:16694  fraudVoters[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"smart-contracts/contracts/Credit.sol\":16671:16703  fraudVoters[msg.sender] == false */\n      iszero\n      iszero\n      eq\n        /* \"smart-contracts/contracts/Credit.sol\":16663:16704  require(fraudVoters[msg.sender] == false) */\n      iszero\n      iszero\n      tag_144\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_144:\n        /* \"smart-contracts/contracts/Credit.sol\":16757:16767  fraudVotes */\n      0x13\n      0x0\n        /* \"smart-contracts/contracts/Credit.sol\":16757:16769  fraudVotes++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      0x1\n      add\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"smart-contracts/contracts/Credit.sol\":16848:16852  true */\n      0x1\n        /* \"smart-contracts/contracts/Credit.sol\":16821:16852  fraudVoters[msg.sender] == true */\n      iszero\n      iszero\n        /* \"smart-contracts/contracts/Credit.sol\":16821:16832  fraudVoters */\n      0x14\n        /* \"smart-contracts/contracts/Credit.sol\":16821:16844  fraudVoters[msg.sender] */\n      0x0\n        /* \"smart-contracts/contracts/Credit.sol\":16833:16843  msg.sender */\n      caller\n        /* \"smart-contracts/contracts/Credit.sol\":16821:16844  fraudVoters[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      pop\n      pop\n        /* \"smart-contracts/contracts/Credit.sol\":16821:16852  fraudVoters[msg.sender] == true */\n      pop\n        /* \"smart-contracts/contracts/Credit.sol\":16938:16953  block.timestamp */\n      timestamp\n        /* \"smart-contracts/contracts/Credit.sol\":16926:16936  msg.sender */\n      caller\n        /* \"smart-contracts/contracts/Credit.sol\":16904:16954  LogLenderVoteForFraud(msg.sender, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1db613004119dde2a638b639fba9960c0e6064ee7c2d06f300e41c78920ed6dc\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"smart-contracts/contracts/Credit.sol\":17030:17040  fraudVotes */\n      sload(0x13)\n        /* \"smart-contracts/contracts/Credit.sol\":17014:17026  lendersCount */\n      sload(0xf)\n        /* \"smart-contracts/contracts/Credit.sol\":17014:17040  lendersCount == fraudVotes */\n      eq\n        /* \"smart-contracts/contracts/Credit.sol\":17010:17122  if (lendersCount == fraudVotes) {\r... */\n      iszero\n      tag_145\n      jumpi\n        /* \"smart-contracts/contracts/Credit.sol\":17103:17110  fraud() */\n      tag_146\n        /* \"smart-contracts/contracts/Credit.sol\":17103:17108  fraud */\n      tag_147\n        /* \"smart-contracts/contracts/Credit.sol\":17103:17110  fraud() */\n      jump\t// in\n    tag_146:\n        /* \"smart-contracts/contracts/Credit.sol\":17096:17110  return fraud() */\n      swap1\n      pop\n      jump(tag_143)\n        /* \"smart-contracts/contracts/Credit.sol\":17010:17122  if (lendersCount == fraudVotes) {\r... */\n    tag_145:\n        /* \"smart-contracts/contracts/Credit.sol\":17139:17143  true */\n      0x1\n        /* \"smart-contracts/contracts/Credit.sol\":17132:17143  return true */\n      swap1\n      pop\n        /* \"smart-contracts/contracts/Credit.sol\":4214:4215  _ */\n    tag_143:\n        /* \"smart-contracts/contracts/Credit.sol\":16546:17151  function fraudVote() public isActive onlyLender returns (bool) {\r... */\n      swap1\n      jump\t// out\n        /* \"smart-contracts/contracts/Credit.sol\":7124:8840  function invest() public canInvest payable {\r... */\n    tag_50:\n        /* \"smart-contracts/contracts/Credit.sol\":7265:7280  uint extraMoney */\n      0x0\n        /* \"smart-contracts/contracts/Credit.sol\":4444:4460  State.investment */\n      dup1\n        /* \"smart-contracts/contracts/Credit.sol\":4435:4460  state == State.investment */\n      0x5\n      dup2\n      gt\n      iszero\n      tag_149\n      jumpi\n      invalid\n    tag_149:\n        /* \"smart-contracts/contracts/Credit.sol\":4435:4440  state */\n      0xc\n      0x1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"smart-contracts/contracts/Credit.sol\":4435:4460  state == State.investment */\n      0x5\n      dup2\n      gt\n      iszero\n      tag_150\n      jumpi\n      invalid\n    tag_150:\n      eq\n        /* \"smart-contracts/contracts/Credit.sol\":4427:4461  require(state == State.investment) */\n      iszero\n      iszero\n      tag_151\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_151:\n        /* \"smart-contracts/contracts/Credit.sol\":7283:7284  0 */\n      0x0\n        /* \"smart-contracts/contracts/Credit.sol\":7265:7284  uint extraMoney = 0 */\n      swap1\n      pop\n        /* \"smart-contracts/contracts/Credit.sol\":7388:7403  requestedAmount */\n      sload(0x2)\n        /* \"smart-contracts/contracts/Credit.sol\":7372:7376  this */\n      address\n        /* \"smart-contracts/contracts/Credit.sol\":7372:7384  this.balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      balance\n        /* \"smart-contracts/contracts/Credit.sol\":7372:7403  this.balance >= requestedAmount */\n      lt\n      iszero\n        /* \"smart-contracts/contracts/Credit.sol\":7368:8299  if (this.balance >= requestedAmount) {\r... */\n      iszero\n      tag_153\n      jumpi\n        /* \"smart-contracts/contracts/Credit.sol\":7502:7535  this.balance.sub(requestedAmount) */\n      tag_154\n        /* \"smart-contracts/contracts/Credit.sol\":7519:7534  requestedAmount */\n      sload(0x2)\n        /* \"smart-contracts/contracts/Credit.sol\":7502:7506  this */\n      address\n        /* \"smart-contracts/contracts/Credit.sol\":7502:7514  this.balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      balance\n        /* \"smart-contracts/contracts/Credit.sol\":7502:7518  this.balance.sub */\n      tag_96\n      swap1\n        /* \"smart-contracts/contracts/Credit.sol\":7502:7535  this.balance.sub(requestedAmount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_154:\n        /* \"smart-contracts/contracts/Credit.sol\":7489:7535  extraMoney = this.balance.sub(requestedAmount) */\n      swap1\n      pop\n        /* \"smart-contracts/contracts/Credit.sol\":7618:7646  this.balance.sub(extraMoney) */\n      tag_155\n        /* \"smart-contracts/contracts/Credit.sol\":7635:7645  extraMoney */\n      dup2\n        /* \"smart-contracts/contracts/Credit.sol\":7618:7622  this */\n      address\n        /* \"smart-contracts/contracts/Credit.sol\":7618:7630  this.balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      balance\n        /* \"smart-contracts/contracts/Credit.sol\":7618:7634  this.balance.sub */\n      tag_96\n      swap1\n        /* \"smart-contracts/contracts/Credit.sol\":7618:7646  this.balance.sub(extraMoney) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_155:\n        /* \"smart-contracts/contracts/Credit.sol\":7599:7614  requestedAmount */\n      sload(0x2)\n        /* \"smart-contracts/contracts/Credit.sol\":7599:7646  requestedAmount == this.balance.sub(extraMoney) */\n      eq\n        /* \"smart-contracts/contracts/Credit.sol\":7592:7647  assert(requestedAmount == this.balance.sub(extraMoney)) */\n      iszero\n      iszero\n      tag_156\n      jumpi\n      invalid\n    tag_156:\n        /* \"smart-contracts/contracts/Credit.sol\":7742:7751  msg.value */\n      callvalue\n        /* \"smart-contracts/contracts/Credit.sol\":7728:7738  extraMoney */\n      dup2\n        /* \"smart-contracts/contracts/Credit.sol\":7728:7751  extraMoney <= msg.value */\n      gt\n      iszero\n        /* \"smart-contracts/contracts/Credit.sol\":7721:7752  assert(extraMoney <= msg.value) */\n      iszero\n      iszero\n      tag_157\n      jumpi\n      invalid\n    tag_157:\n        /* \"smart-contracts/contracts/Credit.sol\":7846:7847  0 */\n      0x0\n        /* \"smart-contracts/contracts/Credit.sol\":7833:7843  extraMoney */\n      dup2\n        /* \"smart-contracts/contracts/Credit.sol\":7833:7847  extraMoney > 0 */\n      gt\n        /* \"smart-contracts/contracts/Credit.sol\":7829:8099  if (extraMoney > 0) {\r... */\n      iszero\n      tag_158\n      jumpi\n        /* \"smart-contracts/contracts/Credit.sol\":7926:7936  msg.sender */\n      caller\n        /* \"smart-contracts/contracts/Credit.sol\":7926:7945  msg.sender.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"smart-contracts/contracts/Credit.sol\":7926:7957  msg.sender.transfer(extraMoney) */\n      0x8fc\n        /* \"smart-contracts/contracts/Credit.sol\":7946:7956  extraMoney */\n      dup3\n        /* \"smart-contracts/contracts/Credit.sol\":7926:7957  msg.sender.transfer(extraMoney) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      iszero\n      tag_159\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_159:\n        /* \"smart-contracts/contracts/Credit.sol\":8067:8082  block.timestamp */\n      timestamp\n        /* \"smart-contracts/contracts/Credit.sol\":8055:8065  extraMoney */\n      dup2\n        /* \"smart-contracts/contracts/Credit.sol\":8043:8053  msg.sender */\n      caller\n        /* \"smart-contracts/contracts/Credit.sol\":8019:8083  LogLenderChangeReturned(msg.sender, extraMoney, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x566803f6e271b911c84f87631bcd310d6a6510bf8882577a96fc76975703e431\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"smart-contracts/contracts/Credit.sol\":7829:8099  if (extraMoney > 0) {\r... */\n    tag_158:\n        /* \"smart-contracts/contracts/Credit.sol\":8176:8191  State.repayment */\n      0x1\n        /* \"smart-contracts/contracts/Credit.sol\":8168:8173  state */\n      0xc\n      0x1\n        /* \"smart-contracts/contracts/Credit.sol\":8168:8191  state = State.repayment */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x5\n      dup2\n      gt\n      iszero\n      tag_160\n      jumpi\n      invalid\n    tag_160:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"smart-contracts/contracts/Credit.sol\":8271:8286  block.timestamp */\n      timestamp\n        /* \"smart-contracts/contracts/Credit.sol\":8264:8269  state */\n      0xc\n      0x1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"smart-contracts/contracts/Credit.sol\":8242:8287  LogCreditStateChanged(state, block.timestamp) */\n      0x5\n      dup2\n      gt\n      iszero\n      tag_161\n      jumpi\n      invalid\n    tag_161:\n      0xaaae373901e745122c2e0925ad006227969c6cd190b7d5ea2fb7fdbd1d955b35\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"smart-contracts/contracts/Credit.sol\":7368:8299  if (this.balance >= requestedAmount) {\r... */\n    tag_153:\n        /* \"smart-contracts/contracts/Credit.sol\":8460:8464  true */\n      0x1\n        /* \"smart-contracts/contracts/Credit.sol\":8438:8445  lenders */\n      0xd\n        /* \"smart-contracts/contracts/Credit.sol\":8438:8457  lenders[msg.sender] */\n      0x0\n        /* \"smart-contracts/contracts/Credit.sol\":8446:8456  msg.sender */\n      caller\n        /* \"smart-contracts/contracts/Credit.sol\":8438:8457  lenders[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n        /* \"smart-contracts/contracts/Credit.sol\":8438:8464  lenders[msg.sender] = true */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"smart-contracts/contracts/Credit.sol\":8518:8530  lendersCount */\n      0xf\n      0x0\n        /* \"smart-contracts/contracts/Credit.sol\":8518:8532  lendersCount++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      0x1\n      add\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"smart-contracts/contracts/Credit.sol\":8640:8704  lendersInvestedAmount[msg.sender].add(msg.value.sub(extraMoney)) */\n      tag_162\n        /* \"smart-contracts/contracts/Credit.sol\":8678:8703  msg.value.sub(extraMoney) */\n      tag_163\n        /* \"smart-contracts/contracts/Credit.sol\":8692:8702  extraMoney */\n      dup3\n        /* \"smart-contracts/contracts/Credit.sol\":8678:8687  msg.value */\n      callvalue\n        /* \"smart-contracts/contracts/Credit.sol\":8678:8691  msg.value.sub */\n      tag_96\n      swap1\n        /* \"smart-contracts/contracts/Credit.sol\":8678:8703  msg.value.sub(extraMoney) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_163:\n        /* \"smart-contracts/contracts/Credit.sol\":8640:8661  lendersInvestedAmount */\n      0xe\n        /* \"smart-contracts/contracts/Credit.sol\":8640:8673  lendersInvestedAmount[msg.sender] */\n      0x0\n        /* \"smart-contracts/contracts/Credit.sol\":8662:8672  msg.sender */\n      caller\n        /* \"smart-contracts/contracts/Credit.sol\":8640:8673  lendersInvestedAmount[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"smart-contracts/contracts/Credit.sol\":8640:8677  lendersInvestedAmount[msg.sender].add */\n      tag_104\n      swap1\n        /* \"smart-contracts/contracts/Credit.sol\":8640:8704  lendersInvestedAmount[msg.sender].add(msg.value.sub(extraMoney)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_162:\n        /* \"smart-contracts/contracts/Credit.sol\":8604:8625  lendersInvestedAmount */\n      0xe\n        /* \"smart-contracts/contracts/Credit.sol\":8604:8637  lendersInvestedAmount[msg.sender] */\n      0x0\n        /* \"smart-contracts/contracts/Credit.sol\":8626:8636  msg.sender */\n      caller\n        /* \"smart-contracts/contracts/Credit.sol\":8604:8637  lendersInvestedAmount[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"smart-contracts/contracts/Credit.sol\":8604:8704  lendersInvestedAmount[msg.sender] = lendersInvestedAmount[msg.sender].add(msg.value.sub(extraMoney)) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"smart-contracts/contracts/Credit.sol\":8816:8831  block.timestamp */\n      timestamp\n        /* \"smart-contracts/contracts/Credit.sol\":8789:8814  msg.value.sub(extraMoney) */\n      tag_164\n        /* \"smart-contracts/contracts/Credit.sol\":8803:8813  extraMoney */\n      dup3\n        /* \"smart-contracts/contracts/Credit.sol\":8789:8798  msg.value */\n      callvalue\n        /* \"smart-contracts/contracts/Credit.sol\":8789:8802  msg.value.sub */\n      tag_96\n      swap1\n        /* \"smart-contracts/contracts/Credit.sol\":8789:8814  msg.value.sub(extraMoney) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_164:\n        /* \"smart-contracts/contracts/Credit.sol\":8777:8787  msg.sender */\n      caller\n        /* \"smart-contracts/contracts/Credit.sol\":8757:8832  LogLenderInvestment(msg.sender, msg.value.sub(extraMoney), block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1b0969ce7f5b05c5e0969329a05cdbd7e2e2f6cee33ba26fd6e6bbcff82312cd\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"smart-contracts/contracts/Credit.sol\":7124:8840  function invest() public canInvest payable {\r... */\n      pop\n      jump\t// out\n        /* \"smart-contracts/contracts/Credit.sol\":12530:13748  function requestInterest() public isActive onlyLender canAskForInterest {\r... */\n    tag_53:\n        /* \"smart-contracts/contracts/Credit.sol\":12821:12844  uint lenderReturnAmount */\n      0x0\n        /* \"smart-contracts/contracts/Credit.sol\":4007:4011  true */\n      0x1\n        /* \"smart-contracts/contracts/Credit.sol\":3997:4011  active == true */\n      iszero\n      iszero\n        /* \"smart-contracts/contracts/Credit.sol\":3997:4003  active */\n      0xc\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"smart-contracts/contracts/Credit.sol\":3997:4011  active == true */\n      iszero\n      iszero\n      eq\n        /* \"smart-contracts/contracts/Credit.sol\":3989:4012  require(active == true) */\n      iszero\n      iszero\n      tag_166\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_166:\n        /* \"smart-contracts/contracts/Credit.sol\":4198:4202  true */\n      0x1\n        /* \"smart-contracts/contracts/Credit.sol\":4175:4202  lenders[msg.sender] == true */\n      iszero\n      iszero\n        /* \"smart-contracts/contracts/Credit.sol\":4175:4182  lenders */\n      0xd\n        /* \"smart-contracts/contracts/Credit.sol\":4175:4194  lenders[msg.sender] */\n      0x0\n        /* \"smart-contracts/contracts/Credit.sol\":4183:4193  msg.sender */\n      caller\n        /* \"smart-contracts/contracts/Credit.sol\":4175:4194  lenders[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"smart-contracts/contracts/Credit.sol\":4175:4202  lenders[msg.sender] == true */\n      iszero\n      iszero\n      eq\n        /* \"smart-contracts/contracts/Credit.sol\":4167:4203  require(lenders[msg.sender] == true) */\n      iszero\n      iszero\n      tag_168\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_168:\n        /* \"smart-contracts/contracts/Credit.sol\":4288:4309  State.interestReturns */\n      0x2\n        /* \"smart-contracts/contracts/Credit.sol\":4279:4309  state == State.interestReturns */\n      0x5\n      dup2\n      gt\n      iszero\n      tag_170\n      jumpi\n      invalid\n    tag_170:\n        /* \"smart-contracts/contracts/Credit.sol\":4279:4284  state */\n      0xc\n      0x1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"smart-contracts/contracts/Credit.sol\":4279:4309  state == State.interestReturns */\n      0x5\n      dup2\n      gt\n      iszero\n      tag_171\n      jumpi\n      invalid\n    tag_171:\n      eq\n        /* \"smart-contracts/contracts/Credit.sol\":4271:4310  require(state == State.interestReturns) */\n      iszero\n      iszero\n      tag_172\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_172:\n        /* \"smart-contracts/contracts/Credit.sol\":4365:4366  0 */\n      0x0\n        /* \"smart-contracts/contracts/Credit.sol\":4329:4350  lendersInvestedAmount */\n      0xe\n        /* \"smart-contracts/contracts/Credit.sol\":4329:4362  lendersInvestedAmount[msg.sender] */\n      0x0\n        /* \"smart-contracts/contracts/Credit.sol\":4351:4361  msg.sender */\n      caller\n        /* \"smart-contracts/contracts/Credit.sol\":4329:4362  lendersInvestedAmount[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"smart-contracts/contracts/Credit.sol\":4329:4366  lendersInvestedAmount[msg.sender] > 0 */\n      gt\n        /* \"smart-contracts/contracts/Credit.sol\":4321:4367  require(lendersInvestedAmount[msg.sender] > 0) */\n      iszero\n      iszero\n      tag_173\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_173:\n        /* \"smart-contracts/contracts/Credit.sol\":12862:12874  lendersCount */\n      sload(0xf)\n        /* \"smart-contracts/contracts/Credit.sol\":12847:12859  returnAmount */\n      sload(0x3)\n        /* \"smart-contracts/contracts/Credit.sol\":12847:12874  returnAmount / lendersCount */\n      dup2\n      iszero\n      iszero\n      tag_175\n      jumpi\n      invalid\n    tag_175:\n      div\n        /* \"smart-contracts/contracts/Credit.sol\":12821:12874  uint lenderReturnAmount = returnAmount / lendersCount */\n      swap1\n      pop\n        /* \"smart-contracts/contracts/Credit.sol\":12980:12998  lenderReturnAmount */\n      dup1\n        /* \"smart-contracts/contracts/Credit.sol\":12964:12968  this */\n      address\n        /* \"smart-contracts/contracts/Credit.sol\":12964:12976  this.balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      balance\n        /* \"smart-contracts/contracts/Credit.sol\":12964:12998  this.balance >= lenderReturnAmount */\n      lt\n      iszero\n        /* \"smart-contracts/contracts/Credit.sol\":12957:12999  assert(this.balance >= lenderReturnAmount) */\n      iszero\n      iszero\n      tag_176\n      jumpi\n      invalid\n    tag_176:\n        /* \"smart-contracts/contracts/Credit.sol\":13080:13090  msg.sender */\n      caller\n        /* \"smart-contracts/contracts/Credit.sol\":13080:13099  msg.sender.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"smart-contracts/contracts/Credit.sol\":13080:13119  msg.sender.transfer(lenderReturnAmount) */\n      0x8fc\n        /* \"smart-contracts/contracts/Credit.sol\":13100:13118  lenderReturnAmount */\n      dup3\n        /* \"smart-contracts/contracts/Credit.sol\":13080:13119  msg.sender.transfer(lenderReturnAmount) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      iszero\n      tag_177\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_177:\n        /* \"smart-contracts/contracts/Credit.sol\":13224:13239  block.timestamp */\n      timestamp\n        /* \"smart-contracts/contracts/Credit.sol\":13204:13222  lenderReturnAmount */\n      dup2\n        /* \"smart-contracts/contracts/Credit.sol\":13192:13202  msg.sender */\n      caller\n        /* \"smart-contracts/contracts/Credit.sol\":13172:13240  LogLenderWithdrawal(msg.sender, lenderReturnAmount, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x52f6685df2f773f854b17db1d82e2352e222010daaf8175761f02ef8782c403\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"smart-contracts/contracts/Credit.sol\":13327:13328  0 */\n      0x0\n        /* \"smart-contracts/contracts/Credit.sol\":13311:13315  this */\n      address\n        /* \"smart-contracts/contracts/Credit.sol\":13311:13323  this.balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      balance\n        /* \"smart-contracts/contracts/Credit.sol\":13311:13328  this.balance == 0 */\n      eq\n        /* \"smart-contracts/contracts/Credit.sol\":13307:13741  if (this.balance == 0) {\r... */\n      iszero\n      tag_178\n      jumpi\n        /* \"smart-contracts/contracts/Credit.sol\":13403:13408  false */\n      0x0\n        /* \"smart-contracts/contracts/Credit.sol\":13394:13400  active */\n      0xc\n      0x0\n        /* \"smart-contracts/contracts/Credit.sol\":13394:13408  active = false */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"smart-contracts/contracts/Credit.sol\":13502:13517  block.timestamp */\n      timestamp\n        /* \"smart-contracts/contracts/Credit.sol\":13494:13500  active */\n      0xc\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"smart-contracts/contracts/Credit.sol\":13466:13518  LogCreditStateActiveChanged(active, block.timestamp) */\n      iszero\n      iszero\n      0x160914ea27c60aa29a5f3a69d74e6069869de36e38939de1e0a66b921d8623d2\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"smart-contracts/contracts/Credit.sol\":13620:13633  State.expired */\n      0x3\n        /* \"smart-contracts/contracts/Credit.sol\":13612:13617  state */\n      0xc\n      0x1\n        /* \"smart-contracts/contracts/Credit.sol\":13612:13633  state = State.expired */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x5\n      dup2\n      gt\n      iszero\n      tag_179\n      jumpi\n      invalid\n    tag_179:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"smart-contracts/contracts/Credit.sol\":13713:13728  block.timestamp */\n      timestamp\n        /* \"smart-contracts/contracts/Credit.sol\":13706:13711  state */\n      0xc\n      0x1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"smart-contracts/contracts/Credit.sol\":13684:13729  LogCreditStateChanged(state, block.timestamp) */\n      0x5\n      dup2\n      gt\n      iszero\n      tag_180\n      jumpi\n      invalid\n    tag_180:\n      0xaaae373901e745122c2e0925ad006227969c6cd190b7d5ea2fb7fdbd1d955b35\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"smart-contracts/contracts/Credit.sol\":13307:13741  if (this.balance == 0) {\r... */\n    tag_178:\n        /* \"smart-contracts/contracts/Credit.sol\":12530:13748  function requestInterest() public isActive onlyLender canAskForInterest {\r... */\n      pop\n      jump\t// out\n        /* \"smart-contracts/contracts/Credit.sol\":14111:14523  function getCreditInfo() public view returns (address, bytes32, uint, uint, uint, uint, uint, uint, State, bool, uint) {\r... */\n    tag_56:\n        /* \"smart-contracts/contracts/Credit.sol\":14157:14164  address */\n      0x0\n        /* \"smart-contracts/contracts/Credit.sol\":14166:14173  bytes32 */\n      dup1\n        /* \"smart-contracts/contracts/Credit.sol\":14175:14179  uint */\n      0x0\n        /* \"smart-contracts/contracts/Credit.sol\":14181:14185  uint */\n      dup1\n        /* \"smart-contracts/contracts/Credit.sol\":14187:14191  uint */\n      0x0\n        /* \"smart-contracts/contracts/Credit.sol\":14193:14197  uint */\n      dup1\n        /* \"smart-contracts/contracts/Credit.sol\":14199:14203  uint */\n      0x0\n        /* \"smart-contracts/contracts/Credit.sol\":14205:14209  uint */\n      dup1\n        /* \"smart-contracts/contracts/Credit.sol\":14211:14216  State */\n      0x0\n        /* \"smart-contracts/contracts/Credit.sol\":14218:14222  bool */\n      dup1\n        /* \"smart-contracts/contracts/Credit.sol\":14224:14228  uint */\n      0x0\n        /* \"smart-contracts/contracts/Credit.sol\":14259:14267  borrower */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"smart-contracts/contracts/Credit.sol\":14278:14289  description */\n      sload(0xb)\n        /* \"smart-contracts/contracts/Credit.sol\":14300:14315  requestedAmount */\n      sload(0x2)\n        /* \"smart-contracts/contracts/Credit.sol\":14326:14345  requestedRepayments */\n      sload(0x6)\n        /* \"smart-contracts/contracts/Credit.sol\":14356:14376  repaymentInstallment */\n      sload(0x8)\n        /* \"smart-contracts/contracts/Credit.sol\":14387:14406  remainingRepayments */\n      sload(0x7)\n        /* \"smart-contracts/contracts/Credit.sol\":14417:14425  interest */\n      sload(0x5)\n        /* \"smart-contracts/contracts/Credit.sol\":14436:14448  returnAmount */\n      sload(0x3)\n        /* \"smart-contracts/contracts/Credit.sol\":14459:14464  state */\n      0xc\n      0x1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"smart-contracts/contracts/Credit.sol\":14475:14481  active */\n      0xc\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"smart-contracts/contracts/Credit.sol\":14492:14496  this */\n      address\n        /* \"smart-contracts/contracts/Credit.sol\":14492:14504  this.balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      balance\n        /* \"smart-contracts/contracts/Credit.sol\":14241:14515  return (\r... */\n      swap11\n      pop\n      swap11\n      pop\n      swap11\n      pop\n      swap11\n      pop\n      swap11\n      pop\n      swap11\n      pop\n      swap11\n      pop\n      swap11\n      pop\n      swap11\n      pop\n      swap11\n      pop\n      swap11\n      pop\n        /* \"smart-contracts/contracts/Credit.sol\":14111:14523  function getCreditInfo() public view returns (address, bytes32, uint, uint, uint, uint, uint, uint, State, bool, uint) {\r... */\n      swap1\n      swap2\n      swap3\n      swap4\n      swap5\n      swap6\n      swap7\n      swap8\n      swap9\n      swap10\n      swap11\n      jump\t// out\n        /* \"smart-contracts/contracts/common/Destructible.sol\":237:341  function destroyAndSend(address _recipient) public onlyOwner {\r... */\n    tag_60:\n        /* \"smart-contracts/contracts/common/Ownable.sol\":232:237  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"smart-contracts/contracts/common/Ownable.sol\":218:237  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"smart-contracts/contracts/common/Ownable.sol\":218:228  msg.sender */\n      caller\n        /* \"smart-contracts/contracts/common/Ownable.sol\":218:237  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"smart-contracts/contracts/common/Ownable.sol\":210:238  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_183\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_183:\n        /* \"smart-contracts/contracts/common/Destructible.sol\":322:332  _recipient */\n      dup1\n        /* \"smart-contracts/contracts/common/Destructible.sol\":309:333  selfdestruct(_recipient) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      selfdestruct\n        /* \"smart-contracts/contracts/common/SafeMath.sol\":481:604  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_96:\n        /* \"smart-contracts/contracts/common/SafeMath.sol\":539:546  uint256 */\n      0x0\n        /* \"smart-contracts/contracts/common/SafeMath.sol\":571:572  a */\n      dup3\n        /* \"smart-contracts/contracts/common/SafeMath.sol\":566:567  b */\n      dup3\n        /* \"smart-contracts/contracts/common/SafeMath.sol\":566:572  b <= a */\n      gt\n      iszero\n        /* \"smart-contracts/contracts/common/SafeMath.sol\":559:573  assert(b <= a) */\n      iszero\n      iszero\n      tag_186\n      jumpi\n      invalid\n    tag_186:\n        /* \"smart-contracts/contracts/common/SafeMath.sol\":595:596  b */\n      dup2\n        /* \"smart-contracts/contracts/common/SafeMath.sol\":591:592  a */\n      dup4\n        /* \"smart-contracts/contracts/common/SafeMath.sol\":591:596  a - b */\n      sub\n        /* \"smart-contracts/contracts/common/SafeMath.sol\":584:596  return a - b */\n      swap1\n      pop\n        /* \"smart-contracts/contracts/common/SafeMath.sol\":481:604  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"smart-contracts/contracts/common/SafeMath.sol\":622:769  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_104:\n        /* \"smart-contracts/contracts/common/SafeMath.sol\":680:687  uint256 */\n      0x0\n        /* \"smart-contracts/contracts/common/SafeMath.sol\":700:709  uint256 c */\n      dup1\n        /* \"smart-contracts/contracts/common/SafeMath.sol\":716:717  b */\n      dup3\n        /* \"smart-contracts/contracts/common/SafeMath.sol\":712:713  a */\n      dup5\n        /* \"smart-contracts/contracts/common/SafeMath.sol\":712:717  a + b */\n      add\n        /* \"smart-contracts/contracts/common/SafeMath.sol\":700:717  uint256 c = a + b */\n      swap1\n      pop\n        /* \"smart-contracts/contracts/common/SafeMath.sol\":740:741  a */\n      dup4\n        /* \"smart-contracts/contracts/common/SafeMath.sol\":735:736  c */\n      dup2\n        /* \"smart-contracts/contracts/common/SafeMath.sol\":735:741  c >= a */\n      lt\n      iszero\n        /* \"smart-contracts/contracts/common/SafeMath.sol\":728:742  assert(c >= a) */\n      iszero\n      iszero\n      tag_188\n      jumpi\n      invalid\n    tag_188:\n        /* \"smart-contracts/contracts/common/SafeMath.sol\":760:761  c */\n      dup1\n        /* \"smart-contracts/contracts/common/SafeMath.sol\":753:761  return c */\n      swap2\n      pop\n        /* \"smart-contracts/contracts/common/SafeMath.sol\":622:769  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"smart-contracts/contracts/Credit.sol\":15260:15458  function revoke() internal {\r... */\n    tag_121:\n        /* \"smart-contracts/contracts/Credit.sol\":15347:15360  State.revoked */\n      0x4\n        /* \"smart-contracts/contracts/Credit.sol\":15339:15344  state */\n      0xc\n      0x1\n        /* \"smart-contracts/contracts/Credit.sol\":15339:15360  state = State.revoked */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x5\n      dup2\n      gt\n      iszero\n      tag_190\n      jumpi\n      invalid\n    tag_190:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"smart-contracts/contracts/Credit.sol\":15434:15449  block.timestamp */\n      timestamp\n        /* \"smart-contracts/contracts/Credit.sol\":15427:15432  state */\n      0xc\n      0x1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"smart-contracts/contracts/Credit.sol\":15405:15450  LogCreditStateChanged(state, block.timestamp) */\n      0x5\n      dup2\n      gt\n      iszero\n      tag_191\n      jumpi\n      invalid\n    tag_191:\n      0xaaae373901e745122c2e0925ad006227969c6cd190b7d5ea2fb7fdbd1d955b35\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"smart-contracts/contracts/Credit.sol\":15260:15458  function revoke() internal {\r... */\n      jump\t// out\n        /* \"smart-contracts/contracts/Credit.sol\":17286:17663  function fraud() internal returns (bool) {\r... */\n    tag_147:\n        /* \"smart-contracts/contracts/Credit.sol\":17321:17325  bool */\n      0x0\n        /* \"smart-contracts/contracts/Credit.sol\":17412:17434  bool fraudStatusResult */\n      dup1\n        /* \"smart-contracts/contracts/Credit.sol\":17437:17442  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"smart-contracts/contracts/Credit.sol\":17437:17447  owner.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"smart-contracts/contracts/Credit.sol\":17455:17491  keccak256(\"setFraudStatus(address)\") */\n      mload(0x40)\n      dup1\n      dup1\n      0x7365744672617564537461747573286164647265737329000000000000000000\n      dup2\n      mstore\n      pop\n      0x17\n      add\n      swap1\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"smart-contracts/contracts/Credit.sol\":17437:17503  owner.call(bytes4(keccak256(\"setFraudStatus(address)\")), borrower) */\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n        /* \"smart-contracts/contracts/Credit.sol\":17494:17502  borrower */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"smart-contracts/contracts/Credit.sol\":17437:17503  owner.call(bytes4(keccak256(\"setFraudStatus(address)\")), borrower) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      sub(gas, 0x646e)\n      call\n      swap3\n      pop\n      pop\n      pop\n        /* \"smart-contracts/contracts/Credit.sol\":17412:17503  bool fraudStatusResult = owner.call(bytes4(keccak256(\"setFraudStatus(address)\")), borrower) */\n      swap1\n      pop\n        /* \"smart-contracts/contracts/Credit.sol\":17602:17617  block.timestamp */\n      timestamp\n        /* \"smart-contracts/contracts/Credit.sol\":17583:17600  fraudStatusResult */\n      dup2\n        /* \"smart-contracts/contracts/Credit.sol\":17554:17618  LogBorrowerIsFraud(borrower, fraudStatusResult, block.timestamp) */\n      iszero\n      iszero\n        /* \"smart-contracts/contracts/Credit.sol\":17573:17581  borrower */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"smart-contracts/contracts/Credit.sol\":17554:17618  LogBorrowerIsFraud(borrower, fraudStatusResult, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc1bb1d1e99d1e8d2705ba85717226a3fd9a86e4de2284b00dfe6f33538d5249f\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"smart-contracts/contracts/Credit.sol\":17638:17655  fraudStatusResult */\n      dup1\n        /* \"smart-contracts/contracts/Credit.sol\":17631:17655  return fraudStatusResult */\n      swap2\n      pop\n        /* \"smart-contracts/contracts/Credit.sol\":17286:17663  function fraud() internal returns (bool) {\r... */\n      pop\n      swap1\n      jump\t// out\n        /* \"smart-contracts/contracts/common/SafeMath.sol\":270:463  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_193:\n        /* \"smart-contracts/contracts/common/SafeMath.sol\":328:335  uint256 */\n      0x0\n        /* \"smart-contracts/contracts/common/SafeMath.sol\":419:428  uint256 c */\n      dup1\n        /* \"smart-contracts/contracts/common/SafeMath.sol\":435:436  b */\n      dup3\n        /* \"smart-contracts/contracts/common/SafeMath.sol\":431:432  a */\n      dup5\n        /* \"smart-contracts/contracts/common/SafeMath.sol\":431:436  a / b */\n      dup2\n      iszero\n      iszero\n      tag_195\n      jumpi\n      invalid\n    tag_195:\n      div\n        /* \"smart-contracts/contracts/common/SafeMath.sol\":419:436  uint256 c = a / b */\n      swap1\n      pop\n        /* \"smart-contracts/contracts/common/SafeMath.sol\":454:455  c */\n      dup1\n        /* \"smart-contracts/contracts/common/SafeMath.sol\":447:455  return c */\n      swap2\n      pop\n        /* \"smart-contracts/contracts/common/SafeMath.sol\":270:463  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa165627a7a72305820c6bdffaf857a7cbc472e17a61185316c899f2d1b52afcf33283be95188b4bba10029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60606040526001600c60006101000a81548160ff0219169083151502179055506000600f55600060105560014201601255600060135534156200004157600080fd5b60405160808062001d6f8339810160405280805190602001909190805190602001909190805190602001909190805190602001909190505032600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600581905550836002819055508260068190555082600781905550620000fd600554600254620001b264010000000002620018ff179091906401000000009004565b6003819055506200012a600654600354620001d16401000000000262001b2b179091906401000000009004565b60088190555080600b81600019169055504260098190555042600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff9f75c99c0e3522cd19ffc66fd6c94989a3f0821d37d5c5bb176aab904c6335d60405160405180910390a350505050620001ed565b6000808284019050838110151515620001c757fe5b8091505092915050565b6000808284811515620001e057fe5b0490508091505092915050565b611b7280620001fd6000396000f3006060604052600436106100db576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806312065fe0146100e0578063268f11531461010957806328fd10d71461014357806329c68dc1146101945780633ccfd60b146101c1578063402d8883146101d657806343c14b22146101e0578063590e1ae3146101f557806383197ef01461020a5780638da5cb5b1461021f578063d85da7b614610274578063e8b5e51f146102a1578063efd475ab146102ab578063f06817cf146102c0578063f5074f4114610375575b600080fd5b34156100eb57600080fd5b6100f36103ae565b6040518082815260200191505060405180910390f35b341561011457600080fd5b61012d600480803560ff169060200190919050506103cd565b6040518082815260200191505060405180910390f35b341561014e57600080fd5b61017a600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061049a565b604051808215151515815260200191505060405180910390f35b341561019f57600080fd5b6101a76104ba565b604051808215151515815260200191505060405180910390f35b34156101cc57600080fd5b6101d4610595565b005b6101de6107b2565b005b34156101eb57600080fd5b6101f3610aa9565b005b341561020057600080fd5b610208610c8b565b005b341561021557600080fd5b61021d610f8e565b005b341561022a57600080fd5b610232611023565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561027f57600080fd5b610287611048565b604051808215151515815260200191505060405180910390f35b6102a96111f3565b005b34156102b657600080fd5b6102be611525565b005b34156102cb57600080fd5b6102d36117ce565b604051808c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018b600019166000191681526020018a815260200189815260200188815260200187815260200186815260200185815260200184600581111561034757fe5b60ff168152602001831515151581526020018281526020019b50505050505050505050505060405180910390f35b341561038057600080fd5b6103ac600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611872565b005b60003073ffffffffffffffffffffffffffffffffffffffff1631905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561042a57600080fd5b81600c60016101000a81548160ff0219169083600581111561044857fe5b021790555042600c60019054906101000a900460ff16600581111561046957fe5b7faaae373901e745122c2e0925ad006227969c6cd190b7d5ea2fb7fdbd1d955b3560405160405180910390a3919050565b600d6020528060005260406000206000915054906101000a900460ff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561051757600080fd5b600c60009054906101000a900460ff1615600c60006101000a81548160ff02191690831515021790555042600c60009054906101000a900460ff1615157f160914ea27c60aa29a5f3a69d74e6069869de36e38939de1e0a66b921d8623d260405160405180910390a3600c60009054906101000a900460ff16905090565b60011515600c60009054906101000a900460ff1615151415156105b757600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561061357600080fd5b6002543073ffffffffffffffffffffffffffffffffffffffff16311015151561063b57600080fd5b60058081111561064757fe5b600c60019054906101000a900460ff16600581111561066257fe5b1415151561066f57600080fd5b6001600c60016101000a81548160ff0219169083600581111561068e57fe5b021790555042600c60019054906101000a900460ff1660058111156106af57fe5b7faaae373901e745122c2e0925ad006227969c6cd190b7d5ea2fb7fdbd1d955b3560405160405180910390a3423073ffffffffffffffffffffffffffffffffffffffff16313373ffffffffffffffffffffffffffffffffffffffff167f20734f14d107b526674905e470e35d0a474f9fb996a7bdb034c839c8894524e660405160405180910390a4600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f1935050505015156107b057600080fd5b565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561081057600080fd5b6001600581111561081d57fe5b600c60019054906101000a900460ff16600581111561083857fe5b14151561084457600080fd5b600060075411151561085557600080fd5b600854341015151561086657600080fd5b60035460045410151561087557fe5b6007600081548092919060019003919050555042600a8190555060009050600854341115610965576108b2600854346118e690919063ffffffff16565b90506108c781346118e690919063ffffffff16565b6008541415156108d357fe5b3481111515156108df57fe5b3373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050151561091f57600080fd5b42813373ffffffffffffffffffffffffffffffffffffffff167f5c9874487a2258c6bd6dc39a2cfcf7ea944b50b79d9a7152668779687b2ebd8d60405160405180910390a45b4261097982346118e690919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f350a09487d622378c6efbda255f996387696319f803a2e53eee64f7aa70be85a60405160405180910390a46109e36109d282346118e690919063ffffffff16565b6004546118ff90919063ffffffff16565b6004819055506003546004541415610aa657423373ffffffffffffffffffffffffffffffffffffffff167f25630de45a38a90cbca3a2eb35a8197e51b56d6d912581711e5e3773fe77cabc60405160405180910390a36002600c60016101000a81548160ff02191690836005811115610a5857fe5b021790555042600c60019054906101000a900460ff166005811115610a7957fe5b7faaae373901e745122c2e0925ad006227969c6cd190b7d5ea2fb7fdbd1d955b3560405160405180910390a35b50565b60011515600c60009054906101000a900460ff161515141515610acb57600080fd5b6012544210151515610adc57600080fd5b60006005811115610ae957fe5b600c60019054906101000a900460ff166005811115610b0457fe5b141515610b1057600080fd5b60011515600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515141515610b6f57600080fd5b60001515601160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515141515610bce57600080fd5b60106000815480929190600101919050555060011515601160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a90505050423373ffffffffffffffffffffffffffffffffffffffff167fd7173ce7e4ce6f6d075259ac1a467ab8290db175a2cee8587a663c006b97e12960405160405180910390a3601054600f541415610c8957610c8861191d565b5b565b60011515600c60009054906101000a900460ff161515141515610cad57600080fd5b60011515600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515141515610d0c57600080fd5b60046005811115610d1957fe5b600c60019054906101000a900460ff166005811115610d3457fe5b141515610d4057600080fd5b600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020543073ffffffffffffffffffffffffffffffffffffffff163110151515610da257fe5b3373ffffffffffffffffffffffffffffffffffffffff166108fc600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549081150290604051600060405180830381858888f193505050501515610e2157600080fd5b42600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020543373ffffffffffffffffffffffffffffffffffffffff167f71e252e33f19f0223f47f27d00910548d26488b9b55cb5b410b75e273152f8d660405160405180910390a460003073ffffffffffffffffffffffffffffffffffffffff16311415610f8c576000600c60006101000a81548160ff02191690831515021790555042600c60009054906101000a900460ff1615157f160914ea27c60aa29a5f3a69d74e6069869de36e38939de1e0a66b921d8623d260405160405180910390a36003600c60016101000a81548160ff02191690836005811115610f3e57fe5b021790555042600c60019054906101000a900460ff166005811115610f5f57fe5b7faaae373901e745122c2e0925ad006227969c6cd190b7d5ea2fb7fdbd1d955b3560405160405180910390a35b565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610fe957600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060011515600c60009054906101000a900460ff16151514151561106c57600080fd5b60011515600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151415156110cb57600080fd5b60001515601460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514151561112a57600080fd5b60136000815480929190600101919050555060011515601460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a90505050423373ffffffffffffffffffffffffffffffffffffffff167f1db613004119dde2a638b639fba9960c0e6064ee7c2d06f300e41c78920ed6dc60405160405180910390a3601354600f5414156111eb576111e461198b565b90506111f0565b600190505b90565b600080600581111561120157fe5b600c60019054906101000a900460ff16600581111561121c57fe5b14151561122857600080fd5b600090506002543073ffffffffffffffffffffffffffffffffffffffff16311015156113ba5761127a6002543073ffffffffffffffffffffffffffffffffffffffff16316118e690919063ffffffff16565b90506112a6813073ffffffffffffffffffffffffffffffffffffffff16316118e690919063ffffffff16565b6002541415156112b257fe5b3481111515156112be57fe5b600081111561134d573373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050151561130757600080fd5b42813373ffffffffffffffffffffffffffffffffffffffff167f566803f6e271b911c84f87631bcd310d6a6510bf8882577a96fc76975703e43160405160405180910390a45b6001600c60016101000a81548160ff0219169083600581111561136c57fe5b021790555042600c60019054906101000a900460ff16600581111561138d57fe5b7faaae373901e745122c2e0925ad006227969c6cd190b7d5ea2fb7fdbd1d955b3560405160405180910390a35b6001600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600f6000815480929190600101919050555061148861143a82346118e690919063ffffffff16565b600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546118ff90919063ffffffff16565b600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550426114df82346118e690919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f1b0969ce7f5b05c5e0969329a05cdbd7e2e2f6cee33ba26fd6e6bbcff82312cd60405160405180910390a450565b600060011515600c60009054906101000a900460ff16151514151561154957600080fd5b60011515600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151415156115a857600080fd5b600260058111156115b557fe5b600c60019054906101000a900460ff1660058111156115d057fe5b1415156115dc57600080fd5b6000600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411151561162a57600080fd5b600f5460035481151561163957fe5b049050803073ffffffffffffffffffffffffffffffffffffffff16311015151561165f57fe5b3373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050151561169f57600080fd5b42813373ffffffffffffffffffffffffffffffffffffffff167f052f6685df2f773f854b17db1d82e2352e222010daaf8175761f02ef8782c40360405160405180910390a460003073ffffffffffffffffffffffffffffffffffffffff163114156117cb576000600c60006101000a81548160ff02191690831515021790555042600c60009054906101000a900460ff1615157f160914ea27c60aa29a5f3a69d74e6069869de36e38939de1e0a66b921d8623d260405160405180910390a36003600c60016101000a81548160ff0219169083600581111561177d57fe5b021790555042600c60019054906101000a900460ff16600581111561179e57fe5b7faaae373901e745122c2e0925ad006227969c6cd190b7d5ea2fb7fdbd1d955b3560405160405180910390a35b50565b6000806000806000806000806000806000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600b54600254600654600854600754600554600354600c60019054906101000a900460ff16600c60009054906101000a900460ff163073ffffffffffffffffffffffffffffffffffffffff16319a509a509a509a509a509a509a509a509a509a509a50909192939495969798999a565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156118cd57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16ff5b60008282111515156118f457fe5b818303905092915050565b600080828401905083811015151561191357fe5b8091505092915050565b6004600c60016101000a81548160ff0219169083600581111561193c57fe5b021790555042600c60019054906101000a900460ff16600581111561195d57fe5b7faaae373901e745122c2e0925ad006227969c6cd190b7d5ea2fb7fdbd1d955b3560405160405180910390a3565b6000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660405180807f7365744672617564537461747573286164647265737329000000000000000000815250601701905060405180910390207c01000000000000000000000000000000000000000000000000000000009004600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060006040518083038160008761646e5a03f192505050905042811515600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fc1bb1d1e99d1e8d2705ba85717226a3fd9a86e4de2284b00dfe6f33538d5249f60405160405180910390a48091505090565b6000808284811515611b3957fe5b04905080915050929150505600a165627a7a72305820c6bdffaf857a7cbc472e17a61185316c899f2d1b52afcf33283be95188b4bba10029",
							"opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0xC PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xF SSTORE PUSH1 0x0 PUSH1 0x10 SSTORE PUSH1 0x1 TIMESTAMP ADD PUSH1 0x12 SSTORE PUSH1 0x0 PUSH1 0x13 SSTORE CALLVALUE ISZERO PUSH3 0x41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x80 DUP1 PUSH3 0x1D6F DUP4 CODECOPY DUP2 ADD PUSH1 0x40 MSTORE DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP ORIGIN PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x5 DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x2 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x6 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH3 0xFD PUSH1 0x5 SLOAD PUSH1 0x2 SLOAD PUSH3 0x1B2 PUSH5 0x100000000 MUL PUSH3 0x18FF OR SWAP1 SWAP2 SWAP1 PUSH5 0x100000000 SWAP1 DIV JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH3 0x12A PUSH1 0x6 SLOAD PUSH1 0x3 SLOAD PUSH3 0x1D1 PUSH5 0x100000000 MUL PUSH3 0x1B2B OR SWAP1 SWAP2 SWAP1 PUSH5 0x100000000 SWAP1 DIV JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xB DUP2 PUSH1 0x0 NOT AND SWAP1 SSTORE POP TIMESTAMP PUSH1 0x9 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF9F75C99C0E3522CD19FFC66FD6C94989A3F0821D37D5C5BB176AAB904C6335D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP PUSH3 0x1ED JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO ISZERO ISZERO PUSH3 0x1C7 JUMPI INVALID JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 DUP2 ISZERO ISZERO PUSH3 0x1E0 JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B72 DUP1 PUSH3 0x1FD PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xDB JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x12065FE0 EQ PUSH2 0xE0 JUMPI DUP1 PUSH4 0x268F1153 EQ PUSH2 0x109 JUMPI DUP1 PUSH4 0x28FD10D7 EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0x29C68DC1 EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x402D8883 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x43C14B22 EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0x590E1AE3 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x83197EF0 EQ PUSH2 0x20A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0xD85DA7B6 EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0xE8B5E51F EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0xEFD475AB EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0xF06817CF EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0xF5074F41 EQ PUSH2 0x375 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0xEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF3 PUSH2 0x3AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x114 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12D PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x3CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x14E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x17A PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x49A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x19F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A7 PUSH2 0x4BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x1CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D4 PUSH2 0x595 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DE PUSH2 0x7B2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x1EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F3 PUSH2 0xAA9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x200 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x208 PUSH2 0xC8B JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x215 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x21D PUSH2 0xF8E JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x22A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x232 PUSH2 0x1023 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x27F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x287 PUSH2 0x1048 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A9 PUSH2 0x11F3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x2B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2BE PUSH2 0x1525 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x2CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2D3 PUSH2 0x17CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP12 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD DUP11 DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x347 JUMPI INVALID JUMPDEST PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x380 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3AC PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1872 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x42A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0xC PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x448 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x469 JUMPI INVALID JUMPDEST PUSH32 0xAAAE373901E745122C2E0925AD006227969C6CD190B7D5EA2FB7FDBD1D955B35 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x517 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH1 0xC PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH32 0x160914EA27C60AA29A5F3A69D74E6069869DE36E38939DE1E0A66B921D8623D2 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO ISZERO PUSH2 0x5B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x613 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 SLOAD ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE LT ISZERO ISZERO ISZERO PUSH2 0x63B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 DUP1 DUP2 GT ISZERO PUSH2 0x647 JUMPI INVALID JUMPDEST PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x662 JUMPI INVALID JUMPDEST EQ ISZERO ISZERO ISZERO PUSH2 0x66F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xC PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x68E JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x6AF JUMPI INVALID JUMPDEST PUSH32 0xAAAE373901E745122C2E0925AD006227969C6CD190B7D5EA2FB7FDBD1D955B35 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 TIMESTAMP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x20734F14D107B526674905E470E35D0A474F9FB996A7BDB034C839C8894524E6 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO ISZERO PUSH2 0x7B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x810 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x81D JUMPI INVALID JUMPDEST PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x838 JUMPI INVALID JUMPDEST EQ ISZERO ISZERO PUSH2 0x844 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x7 SLOAD GT ISZERO ISZERO PUSH2 0x855 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x8 SLOAD CALLVALUE LT ISZERO ISZERO ISZERO PUSH2 0x866 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD LT ISZERO ISZERO PUSH2 0x875 JUMPI INVALID JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 SWAP1 SUB SWAP2 SWAP1 POP SSTORE POP TIMESTAMP PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH1 0x0 SWAP1 POP PUSH1 0x8 SLOAD CALLVALUE GT ISZERO PUSH2 0x965 JUMPI PUSH2 0x8B2 PUSH1 0x8 SLOAD CALLVALUE PUSH2 0x18E6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x8C7 DUP2 CALLVALUE PUSH2 0x18E6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 SLOAD EQ ISZERO ISZERO PUSH2 0x8D3 JUMPI INVALID JUMPDEST CALLVALUE DUP2 GT ISZERO ISZERO ISZERO PUSH2 0x8DF JUMPI INVALID JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO ISZERO PUSH2 0x91F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST TIMESTAMP DUP2 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5C9874487A2258C6BD6DC39A2CFCF7EA944B50B79D9A7152668779687B2EBD8D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST TIMESTAMP PUSH2 0x979 DUP3 CALLVALUE PUSH2 0x18E6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x350A09487D622378C6EFBDA255F996387696319F803A2E53EEE64F7AA70BE85A PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x9E3 PUSH2 0x9D2 DUP3 CALLVALUE PUSH2 0x18E6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x18FF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD EQ ISZERO PUSH2 0xAA6 JUMPI TIMESTAMP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x25630DE45A38A90CBCA3A2EB35A8197E51B56D6D912581711E5E3773FE77CABC PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x2 PUSH1 0xC PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0xA58 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0xA79 JUMPI INVALID JUMPDEST PUSH32 0xAAAE373901E745122C2E0925AD006227969C6CD190B7D5EA2FB7FDBD1D955B35 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO ISZERO PUSH2 0xACB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x12 SLOAD TIMESTAMP LT ISZERO ISZERO ISZERO PUSH2 0xADC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0xAE9 JUMPI INVALID JUMPDEST PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0xB04 JUMPI INVALID JUMPDEST EQ ISZERO ISZERO PUSH2 0xB10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0xD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO ISZERO PUSH2 0xB6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0x11 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO ISZERO PUSH2 0xBCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x10 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE POP PUSH1 0x1 ISZERO ISZERO PUSH1 0x11 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 POP POP POP TIMESTAMP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD7173CE7E4CE6F6D075259AC1A467AB8290DB175A2CEE8587A663C006B97E129 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x10 SLOAD PUSH1 0xF SLOAD EQ ISZERO PUSH2 0xC89 JUMPI PUSH2 0xC88 PUSH2 0x191D JUMP JUMPDEST JUMPDEST JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO ISZERO PUSH2 0xCAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0xD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO ISZERO PUSH2 0xD0C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0xD19 JUMPI INVALID JUMPDEST PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0xD34 JUMPI INVALID JUMPDEST EQ ISZERO ISZERO PUSH2 0xD40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xE PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE LT ISZERO ISZERO ISZERO PUSH2 0xDA2 JUMPI INVALID JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0xE PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO ISZERO PUSH2 0xE21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST TIMESTAMP PUSH1 0xE PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x71E252E33F19F0223F47F27D00910548D26488B9B55CB5B410B75E273152F8D6 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE EQ ISZERO PUSH2 0xF8C JUMPI PUSH1 0x0 PUSH1 0xC PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH32 0x160914EA27C60AA29A5F3A69D74E6069869DE36E38939DE1E0A66B921D8623D2 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x3 PUSH1 0xC PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0xF3E JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0xF5F JUMPI INVALID JUMPDEST PUSH32 0xAAAE373901E745122C2E0925AD006227969C6CD190B7D5EA2FB7FDBD1D955B35 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0xFE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 ISZERO ISZERO PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO ISZERO PUSH2 0x106C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0xD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO ISZERO PUSH2 0x10CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0x14 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO ISZERO PUSH2 0x112A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x13 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE POP PUSH1 0x1 ISZERO ISZERO PUSH1 0x14 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 POP POP POP TIMESTAMP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1DB613004119DDE2A638B639FBA9960C0E6064EE7C2D06F300E41C78920ED6DC PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x13 SLOAD PUSH1 0xF SLOAD EQ ISZERO PUSH2 0x11EB JUMPI PUSH2 0x11E4 PUSH2 0x198B JUMP JUMPDEST SWAP1 POP PUSH2 0x11F0 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x1201 JUMPI INVALID JUMPDEST PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x121C JUMPI INVALID JUMPDEST EQ ISZERO ISZERO PUSH2 0x1228 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 POP PUSH1 0x2 SLOAD ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE LT ISZERO ISZERO PUSH2 0x13BA JUMPI PUSH2 0x127A PUSH1 0x2 SLOAD ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE PUSH2 0x18E6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x12A6 DUP2 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE PUSH2 0x18E6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 SLOAD EQ ISZERO ISZERO PUSH2 0x12B2 JUMPI INVALID JUMPDEST CALLVALUE DUP2 GT ISZERO ISZERO ISZERO PUSH2 0x12BE JUMPI INVALID JUMPDEST PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x134D JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO ISZERO PUSH2 0x1307 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST TIMESTAMP DUP2 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x566803F6E271B911C84F87631BCD310D6A6510BF8882577A96FC76975703E431 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST PUSH1 0x1 PUSH1 0xC PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x136C JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x138D JUMPI INVALID JUMPDEST PUSH32 0xAAAE373901E745122C2E0925AD006227969C6CD190B7D5EA2FB7FDBD1D955B35 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST PUSH1 0x1 PUSH1 0xD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xF PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE POP PUSH2 0x1488 PUSH2 0x143A DUP3 CALLVALUE PUSH2 0x18E6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x18FF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH2 0x14DF DUP3 CALLVALUE PUSH2 0x18E6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1B0969CE7F5B05C5E0969329A05CDBD7E2E2F6CEE33BA26FD6E6BBCFF82312CD PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 ISZERO ISZERO PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO ISZERO PUSH2 0x1549 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0xD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO ISZERO PUSH2 0x15A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x15B5 JUMPI INVALID JUMPDEST PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x15D0 JUMPI INVALID JUMPDEST EQ ISZERO ISZERO PUSH2 0x15DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xE PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT ISZERO ISZERO PUSH2 0x162A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xF SLOAD PUSH1 0x3 SLOAD DUP2 ISZERO ISZERO PUSH2 0x1639 JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE LT ISZERO ISZERO ISZERO PUSH2 0x165F JUMPI INVALID JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO ISZERO PUSH2 0x169F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST TIMESTAMP DUP2 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x52F6685DF2F773F854B17DB1D82E2352E222010DAAF8175761F02EF8782C403 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE EQ ISZERO PUSH2 0x17CB JUMPI PUSH1 0x0 PUSH1 0xC PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH32 0x160914EA27C60AA29A5F3A69D74E6069869DE36E38939DE1E0A66B921D8623D2 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x3 PUSH1 0xC PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x177D JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x179E JUMPI INVALID JUMPDEST PUSH32 0xAAAE373901E745122C2E0925AD006227969C6CD190B7D5EA2FB7FDBD1D955B35 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xB SLOAD PUSH1 0x2 SLOAD PUSH1 0x6 SLOAD PUSH1 0x8 SLOAD PUSH1 0x7 SLOAD PUSH1 0x5 SLOAD PUSH1 0x3 SLOAD PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 SWAP8 SWAP9 SWAP10 SWAP11 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x18CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO ISZERO ISZERO PUSH2 0x18F4 JUMPI INVALID JUMPDEST DUP2 DUP4 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO ISZERO ISZERO PUSH2 0x1913 JUMPI INVALID JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0xC PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x193C JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x195D JUMPI INVALID JUMPDEST PUSH32 0xAAAE373901E745122C2E0925AD006227969C6CD190B7D5EA2FB7FDBD1D955B35 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP1 DUP1 PUSH32 0x7365744672617564537461747573286164647265737329000000000000000000 DUP2 MSTORE POP PUSH1 0x17 ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 PUSH2 0x646E GAS SUB CALL SWAP3 POP POP POP SWAP1 POP TIMESTAMP DUP2 ISZERO ISZERO PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC1BB1D1E99D1E8D2705BA85717226A3FD9A86E4DE2284B00DFE6F33538D5249F PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 DUP2 ISZERO ISZERO PUSH2 0x1B39 JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xc6 0xbd SELFDESTRUCT 0xaf DUP6 PUSH27 0x7CBC472E17A61185316C899F2D1B52AFCF33283BE95188B4BBA100 0x29 ",
							"sourceMap": "189:18268:0:-;;;1255:4;1241:18;;;;;;;;;;;;;;;;;;;;2090:1;2070:21;;2147:1;2128:20;;2367:9;2349:15;:27;2325:51;;2431:1;2413:19;;5237:1542;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5601:9;5590:8;;:20;;;;;;;;;;;;;;;;;;5679:9;5668:8;:20;;;;5757:16;5739:15;:34;;;;5850:20;5828:19;:42;;;;6028:20;6006:19;:42;;;;6246:29;6266:8;;6246:15;;:19;;;;;;:29;;;;;:::i;:::-;6231:12;:44;;;;6471:37;6488:19;;6471:12;;:16;;;;;;:37;;;;;:::i;:::-;6448:20;:60;;;;6575:12;6561:11;:26;;;;;;;6657:15;6641:13;:31;;;;6755:15;6745:8;;;;;;;;;;;6724:47;;;;;;;;;;;;5237:1542;;;;189:18268;;622:147:3;680:7;700:9;716:1;712;:5;700:17;;740:1;735;:6;;728:14;;;;;;760:1;753:8;;622:147;;;;;:::o;270:193::-;328:7;419:9;435:1;431;:5;;;;;;;;419:17;;454:1;447:8;;270:193;;;;;:::o;189:18268:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6060604052600436106100db576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806312065fe0146100e0578063268f11531461010957806328fd10d71461014357806329c68dc1146101945780633ccfd60b146101c1578063402d8883146101d657806343c14b22146101e0578063590e1ae3146101f557806383197ef01461020a5780638da5cb5b1461021f578063d85da7b614610274578063e8b5e51f146102a1578063efd475ab146102ab578063f06817cf146102c0578063f5074f4114610375575b600080fd5b34156100eb57600080fd5b6100f36103ae565b6040518082815260200191505060405180910390f35b341561011457600080fd5b61012d600480803560ff169060200190919050506103cd565b6040518082815260200191505060405180910390f35b341561014e57600080fd5b61017a600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061049a565b604051808215151515815260200191505060405180910390f35b341561019f57600080fd5b6101a76104ba565b604051808215151515815260200191505060405180910390f35b34156101cc57600080fd5b6101d4610595565b005b6101de6107b2565b005b34156101eb57600080fd5b6101f3610aa9565b005b341561020057600080fd5b610208610c8b565b005b341561021557600080fd5b61021d610f8e565b005b341561022a57600080fd5b610232611023565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561027f57600080fd5b610287611048565b604051808215151515815260200191505060405180910390f35b6102a96111f3565b005b34156102b657600080fd5b6102be611525565b005b34156102cb57600080fd5b6102d36117ce565b604051808c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018b600019166000191681526020018a815260200189815260200188815260200187815260200186815260200185815260200184600581111561034757fe5b60ff168152602001831515151581526020018281526020019b50505050505050505050505060405180910390f35b341561038057600080fd5b6103ac600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611872565b005b60003073ffffffffffffffffffffffffffffffffffffffff1631905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561042a57600080fd5b81600c60016101000a81548160ff0219169083600581111561044857fe5b021790555042600c60019054906101000a900460ff16600581111561046957fe5b7faaae373901e745122c2e0925ad006227969c6cd190b7d5ea2fb7fdbd1d955b3560405160405180910390a3919050565b600d6020528060005260406000206000915054906101000a900460ff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561051757600080fd5b600c60009054906101000a900460ff1615600c60006101000a81548160ff02191690831515021790555042600c60009054906101000a900460ff1615157f160914ea27c60aa29a5f3a69d74e6069869de36e38939de1e0a66b921d8623d260405160405180910390a3600c60009054906101000a900460ff16905090565b60011515600c60009054906101000a900460ff1615151415156105b757600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561061357600080fd5b6002543073ffffffffffffffffffffffffffffffffffffffff16311015151561063b57600080fd5b60058081111561064757fe5b600c60019054906101000a900460ff16600581111561066257fe5b1415151561066f57600080fd5b6001600c60016101000a81548160ff0219169083600581111561068e57fe5b021790555042600c60019054906101000a900460ff1660058111156106af57fe5b7faaae373901e745122c2e0925ad006227969c6cd190b7d5ea2fb7fdbd1d955b3560405160405180910390a3423073ffffffffffffffffffffffffffffffffffffffff16313373ffffffffffffffffffffffffffffffffffffffff167f20734f14d107b526674905e470e35d0a474f9fb996a7bdb034c839c8894524e660405160405180910390a4600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f1935050505015156107b057600080fd5b565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561081057600080fd5b6001600581111561081d57fe5b600c60019054906101000a900460ff16600581111561083857fe5b14151561084457600080fd5b600060075411151561085557600080fd5b600854341015151561086657600080fd5b60035460045410151561087557fe5b6007600081548092919060019003919050555042600a8190555060009050600854341115610965576108b2600854346118e690919063ffffffff16565b90506108c781346118e690919063ffffffff16565b6008541415156108d357fe5b3481111515156108df57fe5b3373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050151561091f57600080fd5b42813373ffffffffffffffffffffffffffffffffffffffff167f5c9874487a2258c6bd6dc39a2cfcf7ea944b50b79d9a7152668779687b2ebd8d60405160405180910390a45b4261097982346118e690919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f350a09487d622378c6efbda255f996387696319f803a2e53eee64f7aa70be85a60405160405180910390a46109e36109d282346118e690919063ffffffff16565b6004546118ff90919063ffffffff16565b6004819055506003546004541415610aa657423373ffffffffffffffffffffffffffffffffffffffff167f25630de45a38a90cbca3a2eb35a8197e51b56d6d912581711e5e3773fe77cabc60405160405180910390a36002600c60016101000a81548160ff02191690836005811115610a5857fe5b021790555042600c60019054906101000a900460ff166005811115610a7957fe5b7faaae373901e745122c2e0925ad006227969c6cd190b7d5ea2fb7fdbd1d955b3560405160405180910390a35b50565b60011515600c60009054906101000a900460ff161515141515610acb57600080fd5b6012544210151515610adc57600080fd5b60006005811115610ae957fe5b600c60019054906101000a900460ff166005811115610b0457fe5b141515610b1057600080fd5b60011515600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515141515610b6f57600080fd5b60001515601160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515141515610bce57600080fd5b60106000815480929190600101919050555060011515601160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a90505050423373ffffffffffffffffffffffffffffffffffffffff167fd7173ce7e4ce6f6d075259ac1a467ab8290db175a2cee8587a663c006b97e12960405160405180910390a3601054600f541415610c8957610c8861191d565b5b565b60011515600c60009054906101000a900460ff161515141515610cad57600080fd5b60011515600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515141515610d0c57600080fd5b60046005811115610d1957fe5b600c60019054906101000a900460ff166005811115610d3457fe5b141515610d4057600080fd5b600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020543073ffffffffffffffffffffffffffffffffffffffff163110151515610da257fe5b3373ffffffffffffffffffffffffffffffffffffffff166108fc600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549081150290604051600060405180830381858888f193505050501515610e2157600080fd5b42600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020543373ffffffffffffffffffffffffffffffffffffffff167f71e252e33f19f0223f47f27d00910548d26488b9b55cb5b410b75e273152f8d660405160405180910390a460003073ffffffffffffffffffffffffffffffffffffffff16311415610f8c576000600c60006101000a81548160ff02191690831515021790555042600c60009054906101000a900460ff1615157f160914ea27c60aa29a5f3a69d74e6069869de36e38939de1e0a66b921d8623d260405160405180910390a36003600c60016101000a81548160ff02191690836005811115610f3e57fe5b021790555042600c60019054906101000a900460ff166005811115610f5f57fe5b7faaae373901e745122c2e0925ad006227969c6cd190b7d5ea2fb7fdbd1d955b3560405160405180910390a35b565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610fe957600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060011515600c60009054906101000a900460ff16151514151561106c57600080fd5b60011515600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151415156110cb57600080fd5b60001515601460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514151561112a57600080fd5b60136000815480929190600101919050555060011515601460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a90505050423373ffffffffffffffffffffffffffffffffffffffff167f1db613004119dde2a638b639fba9960c0e6064ee7c2d06f300e41c78920ed6dc60405160405180910390a3601354600f5414156111eb576111e461198b565b90506111f0565b600190505b90565b600080600581111561120157fe5b600c60019054906101000a900460ff16600581111561121c57fe5b14151561122857600080fd5b600090506002543073ffffffffffffffffffffffffffffffffffffffff16311015156113ba5761127a6002543073ffffffffffffffffffffffffffffffffffffffff16316118e690919063ffffffff16565b90506112a6813073ffffffffffffffffffffffffffffffffffffffff16316118e690919063ffffffff16565b6002541415156112b257fe5b3481111515156112be57fe5b600081111561134d573373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050151561130757600080fd5b42813373ffffffffffffffffffffffffffffffffffffffff167f566803f6e271b911c84f87631bcd310d6a6510bf8882577a96fc76975703e43160405160405180910390a45b6001600c60016101000a81548160ff0219169083600581111561136c57fe5b021790555042600c60019054906101000a900460ff16600581111561138d57fe5b7faaae373901e745122c2e0925ad006227969c6cd190b7d5ea2fb7fdbd1d955b3560405160405180910390a35b6001600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600f6000815480929190600101919050555061148861143a82346118e690919063ffffffff16565b600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546118ff90919063ffffffff16565b600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550426114df82346118e690919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f1b0969ce7f5b05c5e0969329a05cdbd7e2e2f6cee33ba26fd6e6bbcff82312cd60405160405180910390a450565b600060011515600c60009054906101000a900460ff16151514151561154957600080fd5b60011515600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151415156115a857600080fd5b600260058111156115b557fe5b600c60019054906101000a900460ff1660058111156115d057fe5b1415156115dc57600080fd5b6000600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411151561162a57600080fd5b600f5460035481151561163957fe5b049050803073ffffffffffffffffffffffffffffffffffffffff16311015151561165f57fe5b3373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050151561169f57600080fd5b42813373ffffffffffffffffffffffffffffffffffffffff167f052f6685df2f773f854b17db1d82e2352e222010daaf8175761f02ef8782c40360405160405180910390a460003073ffffffffffffffffffffffffffffffffffffffff163114156117cb576000600c60006101000a81548160ff02191690831515021790555042600c60009054906101000a900460ff1615157f160914ea27c60aa29a5f3a69d74e6069869de36e38939de1e0a66b921d8623d260405160405180910390a36003600c60016101000a81548160ff0219169083600581111561177d57fe5b021790555042600c60019054906101000a900460ff16600581111561179e57fe5b7faaae373901e745122c2e0925ad006227969c6cd190b7d5ea2fb7fdbd1d955b3560405160405180910390a35b50565b6000806000806000806000806000806000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600b54600254600654600854600754600554600354600c60019054906101000a900460ff16600c60009054906101000a900460ff163073ffffffffffffffffffffffffffffffffffffffff16319a509a509a509a509a509a509a509a509a509a509a50909192939495969798999a565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156118cd57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16ff5b60008282111515156118f457fe5b818303905092915050565b600080828401905083811015151561191357fe5b8091505092915050565b6004600c60016101000a81548160ff0219169083600581111561193c57fe5b021790555042600c60019054906101000a900460ff16600581111561195d57fe5b7faaae373901e745122c2e0925ad006227969c6cd190b7d5ea2fb7fdbd1d955b3560405160405180910390a3565b6000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660405180807f7365744672617564537461747573286164647265737329000000000000000000815250601701905060405180910390207c01000000000000000000000000000000000000000000000000000000009004600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060006040518083038160008761646e5a03f192505050905042811515600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fc1bb1d1e99d1e8d2705ba85717226a3fd9a86e4de2284b00dfe6f33538d5249f60405160405180910390a48091505090565b6000808284811515611b3957fe5b04905080915050929150505600a165627a7a72305820c6bdffaf857a7cbc472e17a61185316c899f2d1b52afcf33283be95188b4bba10029",
							"opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xDB JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x12065FE0 EQ PUSH2 0xE0 JUMPI DUP1 PUSH4 0x268F1153 EQ PUSH2 0x109 JUMPI DUP1 PUSH4 0x28FD10D7 EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0x29C68DC1 EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x402D8883 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x43C14B22 EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0x590E1AE3 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x83197EF0 EQ PUSH2 0x20A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0xD85DA7B6 EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0xE8B5E51F EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0xEFD475AB EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0xF06817CF EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0xF5074F41 EQ PUSH2 0x375 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0xEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF3 PUSH2 0x3AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x114 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12D PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x3CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x14E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x17A PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x49A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x19F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A7 PUSH2 0x4BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x1CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D4 PUSH2 0x595 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DE PUSH2 0x7B2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x1EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F3 PUSH2 0xAA9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x200 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x208 PUSH2 0xC8B JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x215 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x21D PUSH2 0xF8E JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x22A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x232 PUSH2 0x1023 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x27F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x287 PUSH2 0x1048 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A9 PUSH2 0x11F3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x2B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2BE PUSH2 0x1525 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x2CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2D3 PUSH2 0x17CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP12 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD DUP11 DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x347 JUMPI INVALID JUMPDEST PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x380 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3AC PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1872 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x42A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0xC PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x448 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x469 JUMPI INVALID JUMPDEST PUSH32 0xAAAE373901E745122C2E0925AD006227969C6CD190B7D5EA2FB7FDBD1D955B35 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x517 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH1 0xC PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH32 0x160914EA27C60AA29A5F3A69D74E6069869DE36E38939DE1E0A66B921D8623D2 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO ISZERO PUSH2 0x5B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x613 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 SLOAD ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE LT ISZERO ISZERO ISZERO PUSH2 0x63B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 DUP1 DUP2 GT ISZERO PUSH2 0x647 JUMPI INVALID JUMPDEST PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x662 JUMPI INVALID JUMPDEST EQ ISZERO ISZERO ISZERO PUSH2 0x66F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xC PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x68E JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x6AF JUMPI INVALID JUMPDEST PUSH32 0xAAAE373901E745122C2E0925AD006227969C6CD190B7D5EA2FB7FDBD1D955B35 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 TIMESTAMP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x20734F14D107B526674905E470E35D0A474F9FB996A7BDB034C839C8894524E6 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO ISZERO PUSH2 0x7B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x810 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x81D JUMPI INVALID JUMPDEST PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x838 JUMPI INVALID JUMPDEST EQ ISZERO ISZERO PUSH2 0x844 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x7 SLOAD GT ISZERO ISZERO PUSH2 0x855 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x8 SLOAD CALLVALUE LT ISZERO ISZERO ISZERO PUSH2 0x866 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD LT ISZERO ISZERO PUSH2 0x875 JUMPI INVALID JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 SWAP1 SUB SWAP2 SWAP1 POP SSTORE POP TIMESTAMP PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH1 0x0 SWAP1 POP PUSH1 0x8 SLOAD CALLVALUE GT ISZERO PUSH2 0x965 JUMPI PUSH2 0x8B2 PUSH1 0x8 SLOAD CALLVALUE PUSH2 0x18E6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x8C7 DUP2 CALLVALUE PUSH2 0x18E6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 SLOAD EQ ISZERO ISZERO PUSH2 0x8D3 JUMPI INVALID JUMPDEST CALLVALUE DUP2 GT ISZERO ISZERO ISZERO PUSH2 0x8DF JUMPI INVALID JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO ISZERO PUSH2 0x91F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST TIMESTAMP DUP2 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5C9874487A2258C6BD6DC39A2CFCF7EA944B50B79D9A7152668779687B2EBD8D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST TIMESTAMP PUSH2 0x979 DUP3 CALLVALUE PUSH2 0x18E6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x350A09487D622378C6EFBDA255F996387696319F803A2E53EEE64F7AA70BE85A PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x9E3 PUSH2 0x9D2 DUP3 CALLVALUE PUSH2 0x18E6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x18FF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD EQ ISZERO PUSH2 0xAA6 JUMPI TIMESTAMP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x25630DE45A38A90CBCA3A2EB35A8197E51B56D6D912581711E5E3773FE77CABC PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x2 PUSH1 0xC PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0xA58 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0xA79 JUMPI INVALID JUMPDEST PUSH32 0xAAAE373901E745122C2E0925AD006227969C6CD190B7D5EA2FB7FDBD1D955B35 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO ISZERO PUSH2 0xACB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x12 SLOAD TIMESTAMP LT ISZERO ISZERO ISZERO PUSH2 0xADC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0xAE9 JUMPI INVALID JUMPDEST PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0xB04 JUMPI INVALID JUMPDEST EQ ISZERO ISZERO PUSH2 0xB10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0xD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO ISZERO PUSH2 0xB6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0x11 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO ISZERO PUSH2 0xBCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x10 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE POP PUSH1 0x1 ISZERO ISZERO PUSH1 0x11 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 POP POP POP TIMESTAMP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD7173CE7E4CE6F6D075259AC1A467AB8290DB175A2CEE8587A663C006B97E129 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x10 SLOAD PUSH1 0xF SLOAD EQ ISZERO PUSH2 0xC89 JUMPI PUSH2 0xC88 PUSH2 0x191D JUMP JUMPDEST JUMPDEST JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO ISZERO PUSH2 0xCAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0xD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO ISZERO PUSH2 0xD0C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0xD19 JUMPI INVALID JUMPDEST PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0xD34 JUMPI INVALID JUMPDEST EQ ISZERO ISZERO PUSH2 0xD40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xE PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE LT ISZERO ISZERO ISZERO PUSH2 0xDA2 JUMPI INVALID JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0xE PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO ISZERO PUSH2 0xE21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST TIMESTAMP PUSH1 0xE PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x71E252E33F19F0223F47F27D00910548D26488B9B55CB5B410B75E273152F8D6 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE EQ ISZERO PUSH2 0xF8C JUMPI PUSH1 0x0 PUSH1 0xC PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH32 0x160914EA27C60AA29A5F3A69D74E6069869DE36E38939DE1E0A66B921D8623D2 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x3 PUSH1 0xC PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0xF3E JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0xF5F JUMPI INVALID JUMPDEST PUSH32 0xAAAE373901E745122C2E0925AD006227969C6CD190B7D5EA2FB7FDBD1D955B35 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0xFE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 ISZERO ISZERO PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO ISZERO PUSH2 0x106C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0xD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO ISZERO PUSH2 0x10CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0x14 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO ISZERO PUSH2 0x112A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x13 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE POP PUSH1 0x1 ISZERO ISZERO PUSH1 0x14 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 POP POP POP TIMESTAMP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1DB613004119DDE2A638B639FBA9960C0E6064EE7C2D06F300E41C78920ED6DC PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x13 SLOAD PUSH1 0xF SLOAD EQ ISZERO PUSH2 0x11EB JUMPI PUSH2 0x11E4 PUSH2 0x198B JUMP JUMPDEST SWAP1 POP PUSH2 0x11F0 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x1201 JUMPI INVALID JUMPDEST PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x121C JUMPI INVALID JUMPDEST EQ ISZERO ISZERO PUSH2 0x1228 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 POP PUSH1 0x2 SLOAD ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE LT ISZERO ISZERO PUSH2 0x13BA JUMPI PUSH2 0x127A PUSH1 0x2 SLOAD ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE PUSH2 0x18E6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x12A6 DUP2 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE PUSH2 0x18E6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 SLOAD EQ ISZERO ISZERO PUSH2 0x12B2 JUMPI INVALID JUMPDEST CALLVALUE DUP2 GT ISZERO ISZERO ISZERO PUSH2 0x12BE JUMPI INVALID JUMPDEST PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x134D JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO ISZERO PUSH2 0x1307 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST TIMESTAMP DUP2 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x566803F6E271B911C84F87631BCD310D6A6510BF8882577A96FC76975703E431 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST PUSH1 0x1 PUSH1 0xC PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x136C JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x138D JUMPI INVALID JUMPDEST PUSH32 0xAAAE373901E745122C2E0925AD006227969C6CD190B7D5EA2FB7FDBD1D955B35 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST PUSH1 0x1 PUSH1 0xD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xF PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE POP PUSH2 0x1488 PUSH2 0x143A DUP3 CALLVALUE PUSH2 0x18E6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x18FF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH2 0x14DF DUP3 CALLVALUE PUSH2 0x18E6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1B0969CE7F5B05C5E0969329A05CDBD7E2E2F6CEE33BA26FD6E6BBCFF82312CD PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 ISZERO ISZERO PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO ISZERO PUSH2 0x1549 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0xD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO ISZERO PUSH2 0x15A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x15B5 JUMPI INVALID JUMPDEST PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x15D0 JUMPI INVALID JUMPDEST EQ ISZERO ISZERO PUSH2 0x15DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xE PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT ISZERO ISZERO PUSH2 0x162A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xF SLOAD PUSH1 0x3 SLOAD DUP2 ISZERO ISZERO PUSH2 0x1639 JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE LT ISZERO ISZERO ISZERO PUSH2 0x165F JUMPI INVALID JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO ISZERO PUSH2 0x169F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST TIMESTAMP DUP2 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x52F6685DF2F773F854B17DB1D82E2352E222010DAAF8175761F02EF8782C403 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE EQ ISZERO PUSH2 0x17CB JUMPI PUSH1 0x0 PUSH1 0xC PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH32 0x160914EA27C60AA29A5F3A69D74E6069869DE36E38939DE1E0A66B921D8623D2 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x3 PUSH1 0xC PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x177D JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x179E JUMPI INVALID JUMPDEST PUSH32 0xAAAE373901E745122C2E0925AD006227969C6CD190B7D5EA2FB7FDBD1D955B35 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xB SLOAD PUSH1 0x2 SLOAD PUSH1 0x6 SLOAD PUSH1 0x8 SLOAD PUSH1 0x7 SLOAD PUSH1 0x5 SLOAD PUSH1 0x3 SLOAD PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 SWAP8 SWAP9 SWAP10 SWAP11 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x18CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO ISZERO ISZERO PUSH2 0x18F4 JUMPI INVALID JUMPDEST DUP2 DUP4 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO ISZERO ISZERO PUSH2 0x1913 JUMPI INVALID JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0xC PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x193C JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x195D JUMPI INVALID JUMPDEST PUSH32 0xAAAE373901E745122C2E0925AD006227969C6CD190B7D5EA2FB7FDBD1D955B35 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP1 DUP1 PUSH32 0x7365744672617564537461747573286164647265737329000000000000000000 DUP2 MSTORE POP PUSH1 0x17 ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 PUSH2 0x646E GAS SUB CALL SWAP3 POP POP POP SWAP1 POP TIMESTAMP DUP2 ISZERO ISZERO PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC1BB1D1E99D1E8D2705BA85717226A3FD9A86E4DE2284B00DFE6F33538D5249F PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 DUP2 ISZERO ISZERO PUSH2 0x1B39 JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xc6 0xbd SELFDESTRUCT 0xaf DUP6 PUSH27 0x7CBC472E17A61185316C899F2D1B52AFCF33283BE95188B4BBA100 0x29 ",
							"sourceMap": "189:18268:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6862:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17851:190;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1852:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18230:222;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11703:492;;;;;;;;;;;;;;8949:2411;;;;;;14589:613;;;;;;;;;;;;;;15514:954;;;;;;;;;;;;;;151:74:1;;;;;;;;;;;;;;54:20:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16546:605:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7124:1716;;;;;;12530:1218;;;;;;;;;;;;;;14111:412;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;237:104:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;6862:90:0;6905:7;6932:4;:12;;;6925:19;;6862:90;:::o;17851:190::-;17914:4;232:5:2;;;;;;;;;;;218:19;;:10;:19;;;210:28;;;;;;;;17939:6:0;17931:5;;:14;;;;;;;;;;;;;;;;;;;;;;;;18017:15;18010:5;;;;;;;;;;;17988:45;;;;;;;;;;;;;;;;;;17851:190;;;:::o;1852:39::-;;;;;;;;;;;;;;;;;;;;;;:::o;18230:222::-;18282:4;232:5:2;;;;;;;;;;;218:19;;:10;:19;;;210:28;;;;;;;;18309:6:0;;;;;;;;;;;18308:7;18299:6;;:16;;;;;;;;;;;;;;;;;;18402:15;18394:6;;;;;;;;;;;18366:52;;;;;;;;;;;;18438:6;;;;;;;;;;;18431:13;;18230:222;:::o;11703:492::-;4007:4;3997:14;;:6;;;;;;;;;;;:14;;;3989:23;;;;;;;;4097:8;;;;;;;;;;;4083:22;;:10;:22;;;4075:31;;;;;;;;4639:15;;4623:4;:12;;;:31;;4615:40;;;;;;;;4733:11;4724:20;;;;;;;;:5;;;;;;;;;;;:20;;;;;;;;;;4716:29;;;;;;;;11861:15;11853:5;;:23;;;;;;;;;;;;;;;;;;;;;;;;11948:15;11941:5;;;;;;;;;;;11919:45;;;;;;;;;;;;;;;;;;12062:15;12048:4;:12;;;12036:10;12014:64;;;;;;;;;;;;12156:8;;;;;;;;;;;:17;;:31;12174:4;:12;;;12156:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11703:492::o;8949:2411::-;9756:15;4097:8;;;;;;;;;;;4083:22;;:10;:22;;;4075:31;;;;;;;;4537:15;4528:24;;;;;;;;:5;;;;;;;;;;;:24;;;;;;;;;4520:33;;;;;;;;9119:1;9097:19;;:23;9089:32;;;;;;;;9232:20;;9219:9;:33;;9211:42;;;;;;;;9473:12;;9458;;:27;9451:35;;;;;;9547:19;;:21;;;;;;;;;;;;;;9641:15;9621:17;:35;;;;9774:1;9756:19;;9995:20;;9983:9;:32;9979:636;;;10120:35;10134:20;;10120:9;:13;;:35;;;;:::i;:::-;10107:48;;10244:25;10258:10;10244:9;:13;;:25;;;;:::i;:::-;10220:20;;:49;10213:57;;;;;;10346:9;10332:10;:23;;10325:31;;;;;;10438:10;:19;;:31;10458:10;10438:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10587:15;10575:10;10563;10537:66;;;;;;;;;;;;9979:636;10745:15;10718:25;10732:10;10718:9;:13;;:25;;;;:::i;:::-;10706:10;10674:87;;;;;;;;;;;;10866:43;10883:25;10897:10;10883:9;:13;;:25;;;;:::i;:::-;10866:12;;:16;;:43;;;;:::i;:::-;10851:12;:58;;;;11013:12;;10997;;:28;10993:360;;;11120:15;11108:10;11079:57;;;;;;;;;;;;11224:21;11216:5;;:29;;;;;;;;;;;;;;;;;;;;;;;;11325:15;11318:5;;;;;;;;;;;11296:45;;;;;;;;;;;;;;;;;;10993:360;8949:2411;:::o;14589:613::-;4007:4;3997:14;;:6;;;;;;;;;;;:14;;;3989:23;;;;;;;;4834:16;;4815:15;:35;;4807:44;;;;;;;;4879:16;4870:25;;;;;;;;:5;;;;;;;;;;;:25;;;;;;;;;4862:34;;;;;;;;4198:4;4175:27;;:7;:19;4183:10;4175:19;;;;;;;;;;;;;;;;;;;;;;;;;:27;;;4167:36;;;;;;;;14743:5;14715:33;;:12;:24;14728:10;14715:24;;;;;;;;;;;;;;;;;;;;;;;;;:33;;;14707:42;;;;;;;;14801:11;;:13;;;;;;;;;;;;;14894:4;14866:32;;:12;:24;14879:10;14866:24;;;;;;;;;;;;;;;;;;;;;;;;:32;15010:15;14998:10;14973:53;;;;;;;;;;;;15100:11;;15084:12;;:27;15080:115;;;15175:8;:6;:8::i;:::-;15080:115;14589:613::o;15514:954::-;4007:4;3997:14;;:6;;;;;;;;;;;:14;;;3989:23;;;;;;;;4198:4;4175:27;;:7;:19;4183:10;4175:19;;;;;;;;;;;;;;;;;;;;;;;;;:27;;;4167:36;;;;;;;;4973:13;4964:22;;;;;;;;:5;;;;;;;;;;;:22;;;;;;;;;4956:31;;;;;;;;15656:21;:33;15678:10;15656:33;;;;;;;;;;;;;;;;15640:4;:12;;;:49;;15633:57;;;;;;15771:10;:19;;:54;15791:21;:33;15813:10;15791:33;;;;;;;;;;;;;;;;15771:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15943:15;15908:21;:33;15930:10;15908:33;;;;;;;;;;;;;;;;15896:10;15878:81;;;;;;;;;;;;16046:1;16030:4;:12;;;:17;16026:435;;;16122:5;16113:6;;:14;;;;;;;;;;;;;;;;;;16222:15;16214:6;;;;;;;;;;;16186:52;;;;;;;;;;;;16340:13;16332:5;;:21;;;;;;;;;;;;;;;;;;;;;;;;16433:15;16426:5;;;;;;;;;;;16404:45;;;;;;;;;;;;;;;;;;16026:435;15514:954::o;151:74:1:-;232:5:2;;;;;;;;;;;218:19;;:10;:19;;;210:28;;;;;;;;211:5:1;;;;;;;;;;;198:19;;;54:20:2;;;;;;;;;;;;;:::o;16546:605:0:-;16603:4;4007;3997:14;;:6;;;;;;;;;;;:14;;;3989:23;;;;;;;;4198:4;4175:27;;:7;:19;4183:10;4175:19;;;;;;;;;;;;;;;;;;;;;;;;;:27;;;4167:36;;;;;;;;16698:5;16671:32;;:11;:23;16683:10;16671:23;;;;;;;;;;;;;;;;;;;;;;;;;:32;;;16663:41;;;;;;;;16757:10;;:12;;;;;;;;;;;;;16848:4;16821:31;;:11;:23;16833:10;16821:23;;;;;;;;;;;;;;;;;;;;;;;;:31;16938:15;16926:10;16904:50;;;;;;;;;;;;17030:10;;17014:12;;:26;17010:112;;;17103:7;:5;:7::i;:::-;17096:14;;;;17010:112;17139:4;17132:11;;4214:1;16546:605;:::o;7124:1716::-;7265:15;4444:16;4435:25;;;;;;;;:5;;;;;;;;;;;:25;;;;;;;;;4427:34;;;;;;;;7283:1;7265:19;;7388:15;;7372:4;:12;;;:31;;7368:931;;;7502:33;7519:15;;7502:4;:12;;;:16;;:33;;;;:::i;:::-;7489:46;;7618:28;7635:10;7618:4;:12;;;:16;;:28;;;;:::i;:::-;7599:15;;:47;7592:55;;;;;;7742:9;7728:10;:23;;7721:31;;;;;;7846:1;7833:10;:14;7829:270;;;7926:10;:19;;:31;7946:10;7926:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8067:15;8055:10;8043;8019:64;;;;;;;;;;;;7829:270;8176:15;8168:5;;:23;;;;;;;;;;;;;;;;;;;;;;;;8271:15;8264:5;;;;;;;;;;;8242:45;;;;;;;;;;;;;;;;;;7368:931;8460:4;8438:7;:19;8446:10;8438:19;;;;;;;;;;;;;;;;:26;;;;;;;;;;;;;;;;;;8518:12;;:14;;;;;;;;;;;;;8640:64;8678:25;8692:10;8678:9;:13;;:25;;;;:::i;:::-;8640:21;:33;8662:10;8640:33;;;;;;;;;;;;;;;;:37;;:64;;;;:::i;:::-;8604:21;:33;8626:10;8604:33;;;;;;;;;;;;;;;:100;;;;8816:15;8789:25;8803:10;8789:9;:13;;:25;;;;:::i;:::-;8777:10;8757:75;;;;;;;;;;;;7124:1716;:::o;12530:1218::-;12821:23;4007:4;3997:14;;:6;;;;;;;;;;;:14;;;3989:23;;;;;;;;4198:4;4175:27;;:7;:19;4183:10;4175:19;;;;;;;;;;;;;;;;;;;;;;;;;:27;;;4167:36;;;;;;;;4288:21;4279:30;;;;;;;;:5;;;;;;;;;;;:30;;;;;;;;;4271:39;;;;;;;;4365:1;4329:21;:33;4351:10;4329:33;;;;;;;;;;;;;;;;:37;4321:46;;;;;;;;12862:12;;12847;;:27;;;;;;;;12821:53;;12980:18;12964:4;:12;;;:34;;12957:42;;;;;;13080:10;:19;;:39;13100:18;13080:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13224:15;13204:18;13192:10;13172:68;;;;;;;;;;;;13327:1;13311:4;:12;;;:17;13307:434;;;13403:5;13394:6;;:14;;;;;;;;;;;;;;;;;;13502:15;13494:6;;;;;;;;;;;13466:52;;;;;;;;;;;;13620:13;13612:5;;:21;;;;;;;;;;;;;;;;;;;;;;;;13713:15;13706:5;;;;;;;;;;;13684:45;;;;;;;;;;;;;;;;;;13307:434;12530:1218;:::o;14111:412::-;14157:7;14166;14175:4;14181;14187;14193;14199;14205;14211:5;14218:4;14224;14259:8;;;;;;;;;;;14278:11;;14300:15;;14326:19;;14356:20;;14387:19;;14417:8;;14436:12;;14459:5;;;;;;;;;;;14475:6;;;;;;;;;;;14492:4;:12;;;14241:274;;;;;;;;;;;;;;;;;;;;;;14111:412;;;;;;;;;;;:::o;237:104:1:-;232:5:2;;;;;;;;;;;218:19;;:10;:19;;;210:28;;;;;;;;322:10:1;309:24;;;481:123:3;539:7;571:1;566;:6;;559:14;;;;;;595:1;591;:5;584:12;;481:123;;;;:::o;622:147::-;680:7;700:9;716:1;712;:5;700:17;;740:1;735;:6;;728:14;;;;;;760:1;753:8;;622:147;;;;;:::o;15260:198:0:-;15347:13;15339:5;;:21;;;;;;;;;;;;;;;;;;;;;;;;15434:15;15427:5;;;;;;;;;;;15405:45;;;;;;;;;;;;;;;;;;15260:198::o;17286:377::-;17321:4;17412:22;17437:5;;;;;;;;;;;:10;;17455:36;;;;;;;;;;;;;;;;;;;17437:66;;;17494:8;;;;;;;;;;;17437:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17412:91;;17602:15;17583:17;17554:64;;17573:8;;;;;;;;;;;17554:64;;;;;;;;;;;;17638:17;17631:24;;17286:377;;:::o;270:193:3:-;328:7;419:9;435:1;431;:5;;;;;;;;419:17;;454:1;447:8;;270:193;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1405200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"changeState(uint8)": "22710",
								"destroy()": "30816",
								"destroyAndSend(address)": "30752",
								"fraudVote()": "infinite",
								"getBalance()": "599",
								"getCreditInfo()": "3457",
								"invest()": "infinite",
								"lenders(address)": "583",
								"owner()": "632",
								"refund()": "infinite",
								"repay()": "infinite",
								"requestInterest()": "infinite",
								"revokeVote()": "46604",
								"toggleActive()": "23064",
								"withdraw()": "infinite"
							},
							"internal": {
								"fraud()": "infinite",
								"revoke()": "22199"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 189,
									"end": 18457,
									"name": "PUSH",
									"value": "60"
								},
								{
									"begin": 189,
									"end": 18457,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 189,
									"end": 18457,
									"name": "MSTORE"
								},
								{
									"begin": 1255,
									"end": 1259,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 1241,
									"end": 1259,
									"name": "PUSH",
									"value": "C"
								},
								{
									"begin": 1241,
									"end": 1259,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1241,
									"end": 1259,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 1241,
									"end": 1259,
									"name": "EXP"
								},
								{
									"begin": 1241,
									"end": 1259,
									"name": "DUP2"
								},
								{
									"begin": 1241,
									"end": 1259,
									"name": "SLOAD"
								},
								{
									"begin": 1241,
									"end": 1259,
									"name": "DUP2"
								},
								{
									"begin": 1241,
									"end": 1259,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 1241,
									"end": 1259,
									"name": "MUL"
								},
								{
									"begin": 1241,
									"end": 1259,
									"name": "NOT"
								},
								{
									"begin": 1241,
									"end": 1259,
									"name": "AND"
								},
								{
									"begin": 1241,
									"end": 1259,
									"name": "SWAP1"
								},
								{
									"begin": 1241,
									"end": 1259,
									"name": "DUP4"
								},
								{
									"begin": 1241,
									"end": 1259,
									"name": "ISZERO"
								},
								{
									"begin": 1241,
									"end": 1259,
									"name": "ISZERO"
								},
								{
									"begin": 1241,
									"end": 1259,
									"name": "MUL"
								},
								{
									"begin": 1241,
									"end": 1259,
									"name": "OR"
								},
								{
									"begin": 1241,
									"end": 1259,
									"name": "SWAP1"
								},
								{
									"begin": 1241,
									"end": 1259,
									"name": "SSTORE"
								},
								{
									"begin": 1241,
									"end": 1259,
									"name": "POP"
								},
								{
									"begin": 2090,
									"end": 2091,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 2070,
									"end": 2091,
									"name": "PUSH",
									"value": "F"
								},
								{
									"begin": 2070,
									"end": 2091,
									"name": "SSTORE"
								},
								{
									"begin": 2147,
									"end": 2148,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 2128,
									"end": 2148,
									"name": "PUSH",
									"value": "10"
								},
								{
									"begin": 2128,
									"end": 2148,
									"name": "SSTORE"
								},
								{
									"begin": 2367,
									"end": 2376,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 2349,
									"end": 2364,
									"name": "TIMESTAMP"
								},
								{
									"begin": 2349,
									"end": 2376,
									"name": "ADD"
								},
								{
									"begin": 2325,
									"end": 2376,
									"name": "PUSH",
									"value": "12"
								},
								{
									"begin": 2325,
									"end": 2376,
									"name": "SSTORE"
								},
								{
									"begin": 2431,
									"end": 2432,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 2413,
									"end": 2432,
									"name": "PUSH",
									"value": "13"
								},
								{
									"begin": 2413,
									"end": 2432,
									"name": "SSTORE"
								},
								{
									"begin": 5237,
									"end": 6779,
									"name": "CALLVALUE"
								},
								{
									"begin": 5237,
									"end": 6779,
									"name": "ISZERO"
								},
								{
									"begin": 5237,
									"end": 6779,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5237,
									"end": 6779,
									"name": "JUMPI"
								},
								{
									"begin": 5237,
									"end": 6779,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 5237,
									"end": 6779,
									"name": "DUP1"
								},
								{
									"begin": 5237,
									"end": 6779,
									"name": "REVERT"
								},
								{
									"begin": 5237,
									"end": 6779,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5237,
									"end": 6779,
									"name": "JUMPDEST"
								},
								{
									"begin": 5237,
									"end": 6779,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 5237,
									"end": 6779,
									"name": "MLOAD"
								},
								{
									"begin": 5237,
									"end": 6779,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 5237,
									"end": 6779,
									"name": "DUP1"
								},
								{
									"begin": 5237,
									"end": 6779,
									"name": "PUSHSIZE"
								},
								{
									"begin": 5237,
									"end": 6779,
									"name": "DUP4"
								},
								{
									"begin": 5237,
									"end": 6779,
									"name": "CODECOPY"
								},
								{
									"begin": 5237,
									"end": 6779,
									"name": "DUP2"
								},
								{
									"begin": 5237,
									"end": 6779,
									"name": "ADD"
								},
								{
									"begin": 5237,
									"end": 6779,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 5237,
									"end": 6779,
									"name": "MSTORE"
								},
								{
									"begin": 5237,
									"end": 6779,
									"name": "DUP1"
								},
								{
									"begin": 5237,
									"end": 6779,
									"name": "DUP1"
								},
								{
									"begin": 5237,
									"end": 6779,
									"name": "MLOAD"
								},
								{
									"begin": 5237,
									"end": 6779,
									"name": "SWAP1"
								},
								{
									"begin": 5237,
									"end": 6779,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 5237,
									"end": 6779,
									"name": "ADD"
								},
								{
									"begin": 5237,
									"end": 6779,
									"name": "SWAP1"
								},
								{
									"begin": 5237,
									"end": 6779,
									"name": "SWAP2"
								},
								{
									"begin": 5237,
									"end": 6779,
									"name": "SWAP1"
								},
								{
									"begin": 5237,
									"end": 6779,
									"name": "DUP1"
								},
								{
									"begin": 5237,
									"end": 6779,
									"name": "MLOAD"
								},
								{
									"begin": 5237,
									"end": 6779,
									"name": "SWAP1"
								},
								{
									"begin": 5237,
									"end": 6779,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 5237,
									"end": 6779,
									"name": "ADD"
								},
								{
									"begin": 5237,
									"end": 6779,
									"name": "SWAP1"
								},
								{
									"begin": 5237,
									"end": 6779,
									"name": "SWAP2"
								},
								{
									"begin": 5237,
									"end": 6779,
									"name": "SWAP1"
								},
								{
									"begin": 5237,
									"end": 6779,
									"name": "DUP1"
								},
								{
									"begin": 5237,
									"end": 6779,
									"name": "MLOAD"
								},
								{
									"begin": 5237,
									"end": 6779,
									"name": "SWAP1"
								},
								{
									"begin": 5237,
									"end": 6779,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 5237,
									"end": 6779,
									"name": "ADD"
								},
								{
									"begin": 5237,
									"end": 6779,
									"name": "SWAP1"
								},
								{
									"begin": 5237,
									"end": 6779,
									"name": "SWAP2"
								},
								{
									"begin": 5237,
									"end": 6779,
									"name": "SWAP1"
								},
								{
									"begin": 5237,
									"end": 6779,
									"name": "DUP1"
								},
								{
									"begin": 5237,
									"end": 6779,
									"name": "MLOAD"
								},
								{
									"begin": 5237,
									"end": 6779,
									"name": "SWAP1"
								},
								{
									"begin": 5237,
									"end": 6779,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 5237,
									"end": 6779,
									"name": "ADD"
								},
								{
									"begin": 5237,
									"end": 6779,
									"name": "SWAP1"
								},
								{
									"begin": 5237,
									"end": 6779,
									"name": "SWAP2"
								},
								{
									"begin": 5237,
									"end": 6779,
									"name": "SWAP1"
								},
								{
									"begin": 5237,
									"end": 6779,
									"name": "POP"
								},
								{
									"begin": 5237,
									"end": 6779,
									"name": "POP"
								},
								{
									"begin": 5601,
									"end": 5610,
									"name": "ORIGIN"
								},
								{
									"begin": 5590,
									"end": 5598,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 5590,
									"end": 5598,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 5590,
									"end": 5610,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 5590,
									"end": 5610,
									"name": "EXP"
								},
								{
									"begin": 5590,
									"end": 5610,
									"name": "DUP2"
								},
								{
									"begin": 5590,
									"end": 5610,
									"name": "SLOAD"
								},
								{
									"begin": 5590,
									"end": 5610,
									"name": "DUP2"
								},
								{
									"begin": 5590,
									"end": 5610,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5590,
									"end": 5610,
									"name": "MUL"
								},
								{
									"begin": 5590,
									"end": 5610,
									"name": "NOT"
								},
								{
									"begin": 5590,
									"end": 5610,
									"name": "AND"
								},
								{
									"begin": 5590,
									"end": 5610,
									"name": "SWAP1"
								},
								{
									"begin": 5590,
									"end": 5610,
									"name": "DUP4"
								},
								{
									"begin": 5590,
									"end": 5610,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5590,
									"end": 5610,
									"name": "AND"
								},
								{
									"begin": 5590,
									"end": 5610,
									"name": "MUL"
								},
								{
									"begin": 5590,
									"end": 5610,
									"name": "OR"
								},
								{
									"begin": 5590,
									"end": 5610,
									"name": "SWAP1"
								},
								{
									"begin": 5590,
									"end": 5610,
									"name": "SSTORE"
								},
								{
									"begin": 5590,
									"end": 5610,
									"name": "POP"
								},
								{
									"begin": 5679,
									"end": 5688,
									"name": "DUP2"
								},
								{
									"begin": 5668,
									"end": 5676,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 5668,
									"end": 5688,
									"name": "DUP2"
								},
								{
									"begin": 5668,
									"end": 5688,
									"name": "SWAP1"
								},
								{
									"begin": 5668,
									"end": 5688,
									"name": "SSTORE"
								},
								{
									"begin": 5668,
									"end": 5688,
									"name": "POP"
								},
								{
									"begin": 5757,
									"end": 5773,
									"name": "DUP4"
								},
								{
									"begin": 5739,
									"end": 5754,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 5739,
									"end": 5773,
									"name": "DUP2"
								},
								{
									"begin": 5739,
									"end": 5773,
									"name": "SWAP1"
								},
								{
									"begin": 5739,
									"end": 5773,
									"name": "SSTORE"
								},
								{
									"begin": 5739,
									"end": 5773,
									"name": "POP"
								},
								{
									"begin": 5850,
									"end": 5870,
									"name": "DUP3"
								},
								{
									"begin": 5828,
									"end": 5847,
									"name": "PUSH",
									"value": "6"
								},
								{
									"begin": 5828,
									"end": 5870,
									"name": "DUP2"
								},
								{
									"begin": 5828,
									"end": 5870,
									"name": "SWAP1"
								},
								{
									"begin": 5828,
									"end": 5870,
									"name": "SSTORE"
								},
								{
									"begin": 5828,
									"end": 5870,
									"name": "POP"
								},
								{
									"begin": 6028,
									"end": 6048,
									"name": "DUP3"
								},
								{
									"begin": 6006,
									"end": 6025,
									"name": "PUSH",
									"value": "7"
								},
								{
									"begin": 6006,
									"end": 6048,
									"name": "DUP2"
								},
								{
									"begin": 6006,
									"end": 6048,
									"name": "SWAP1"
								},
								{
									"begin": 6006,
									"end": 6048,
									"name": "SSTORE"
								},
								{
									"begin": 6006,
									"end": 6048,
									"name": "POP"
								},
								{
									"begin": 6246,
									"end": 6275,
									"name": "PUSH [tag]",
									"value": "6"
								},
								{
									"begin": 6266,
									"end": 6274,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 6266,
									"end": 6274,
									"name": "SLOAD"
								},
								{
									"begin": 6246,
									"end": 6261,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 6246,
									"end": 6261,
									"name": "SLOAD"
								},
								{
									"begin": 6246,
									"end": 6265,
									"name": "PUSH [tag]",
									"value": "7"
								},
								{
									"begin": 6246,
									"end": 6265,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 6246,
									"end": 6265,
									"name": "MUL"
								},
								{
									"begin": 6246,
									"end": 6265,
									"name": "PUSH [tag]",
									"value": "18446744073709551720"
								},
								{
									"begin": 6246,
									"end": 6265,
									"name": "OR"
								},
								{
									"begin": 6246,
									"end": 6265,
									"name": "SWAP1"
								},
								{
									"begin": 6246,
									"end": 6275,
									"name": "SWAP2"
								},
								{
									"begin": 6246,
									"end": 6275,
									"name": "SWAP1"
								},
								{
									"begin": 6246,
									"end": 6275,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 6246,
									"end": 6275,
									"name": "SWAP1"
								},
								{
									"begin": 6246,
									"end": 6275,
									"name": "DIV"
								},
								{
									"begin": 6246,
									"end": 6275,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 6246,
									"end": 6275,
									"name": "tag",
									"value": "6"
								},
								{
									"begin": 6246,
									"end": 6275,
									"name": "JUMPDEST"
								},
								{
									"begin": 6231,
									"end": 6243,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 6231,
									"end": 6275,
									"name": "DUP2"
								},
								{
									"begin": 6231,
									"end": 6275,
									"name": "SWAP1"
								},
								{
									"begin": 6231,
									"end": 6275,
									"name": "SSTORE"
								},
								{
									"begin": 6231,
									"end": 6275,
									"name": "POP"
								},
								{
									"begin": 6471,
									"end": 6508,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": 6488,
									"end": 6507,
									"name": "PUSH",
									"value": "6"
								},
								{
									"begin": 6488,
									"end": 6507,
									"name": "SLOAD"
								},
								{
									"begin": 6471,
									"end": 6483,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 6471,
									"end": 6483,
									"name": "SLOAD"
								},
								{
									"begin": 6471,
									"end": 6487,
									"name": "PUSH [tag]",
									"value": "9"
								},
								{
									"begin": 6471,
									"end": 6487,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 6471,
									"end": 6487,
									"name": "MUL"
								},
								{
									"begin": 6471,
									"end": 6487,
									"name": "PUSH [tag]",
									"value": "18446744073709551809"
								},
								{
									"begin": 6471,
									"end": 6487,
									"name": "OR"
								},
								{
									"begin": 6471,
									"end": 6487,
									"name": "SWAP1"
								},
								{
									"begin": 6471,
									"end": 6508,
									"name": "SWAP2"
								},
								{
									"begin": 6471,
									"end": 6508,
									"name": "SWAP1"
								},
								{
									"begin": 6471,
									"end": 6508,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 6471,
									"end": 6508,
									"name": "SWAP1"
								},
								{
									"begin": 6471,
									"end": 6508,
									"name": "DIV"
								},
								{
									"begin": 6471,
									"end": 6508,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 6471,
									"end": 6508,
									"name": "tag",
									"value": "8"
								},
								{
									"begin": 6471,
									"end": 6508,
									"name": "JUMPDEST"
								},
								{
									"begin": 6448,
									"end": 6468,
									"name": "PUSH",
									"value": "8"
								},
								{
									"begin": 6448,
									"end": 6508,
									"name": "DUP2"
								},
								{
									"begin": 6448,
									"end": 6508,
									"name": "SWAP1"
								},
								{
									"begin": 6448,
									"end": 6508,
									"name": "SSTORE"
								},
								{
									"begin": 6448,
									"end": 6508,
									"name": "POP"
								},
								{
									"begin": 6575,
									"end": 6587,
									"name": "DUP1"
								},
								{
									"begin": 6561,
									"end": 6572,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 6561,
									"end": 6587,
									"name": "DUP2"
								},
								{
									"begin": 6561,
									"end": 6587,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 6561,
									"end": 6587,
									"name": "NOT"
								},
								{
									"begin": 6561,
									"end": 6587,
									"name": "AND"
								},
								{
									"begin": 6561,
									"end": 6587,
									"name": "SWAP1"
								},
								{
									"begin": 6561,
									"end": 6587,
									"name": "SSTORE"
								},
								{
									"begin": 6561,
									"end": 6587,
									"name": "POP"
								},
								{
									"begin": 6657,
									"end": 6672,
									"name": "TIMESTAMP"
								},
								{
									"begin": 6641,
									"end": 6654,
									"name": "PUSH",
									"value": "9"
								},
								{
									"begin": 6641,
									"end": 6672,
									"name": "DUP2"
								},
								{
									"begin": 6641,
									"end": 6672,
									"name": "SWAP1"
								},
								{
									"begin": 6641,
									"end": 6672,
									"name": "SSTORE"
								},
								{
									"begin": 6641,
									"end": 6672,
									"name": "POP"
								},
								{
									"begin": 6755,
									"end": 6770,
									"name": "TIMESTAMP"
								},
								{
									"begin": 6745,
									"end": 6753,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 6745,
									"end": 6753,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 6745,
									"end": 6753,
									"name": "SWAP1"
								},
								{
									"begin": 6745,
									"end": 6753,
									"name": "SLOAD"
								},
								{
									"begin": 6745,
									"end": 6753,
									"name": "SWAP1"
								},
								{
									"begin": 6745,
									"end": 6753,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 6745,
									"end": 6753,
									"name": "EXP"
								},
								{
									"begin": 6745,
									"end": 6753,
									"name": "SWAP1"
								},
								{
									"begin": 6745,
									"end": 6753,
									"name": "DIV"
								},
								{
									"begin": 6745,
									"end": 6753,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6745,
									"end": 6753,
									"name": "AND"
								},
								{
									"begin": 6724,
									"end": 6771,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6724,
									"end": 6771,
									"name": "AND"
								},
								{
									"begin": 6724,
									"end": 6771,
									"name": "PUSH",
									"value": "F9F75C99C0E3522CD19FFC66FD6C94989A3F0821D37D5C5BB176AAB904C6335D"
								},
								{
									"begin": 6724,
									"end": 6771,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 6724,
									"end": 6771,
									"name": "MLOAD"
								},
								{
									"begin": 6724,
									"end": 6771,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 6724,
									"end": 6771,
									"name": "MLOAD"
								},
								{
									"begin": 6724,
									"end": 6771,
									"name": "DUP1"
								},
								{
									"begin": 6724,
									"end": 6771,
									"name": "SWAP2"
								},
								{
									"begin": 6724,
									"end": 6771,
									"name": "SUB"
								},
								{
									"begin": 6724,
									"end": 6771,
									"name": "SWAP1"
								},
								{
									"begin": 6724,
									"end": 6771,
									"name": "LOG3"
								},
								{
									"begin": 5237,
									"end": 6779,
									"name": "POP"
								},
								{
									"begin": 5237,
									"end": 6779,
									"name": "POP"
								},
								{
									"begin": 5237,
									"end": 6779,
									"name": "POP"
								},
								{
									"begin": 5237,
									"end": 6779,
									"name": "POP"
								},
								{
									"begin": 189,
									"end": 18457,
									"name": "PUSH [tag]",
									"value": "10"
								},
								{
									"begin": 189,
									"end": 18457,
									"name": "JUMP"
								},
								{
									"begin": 622,
									"end": 769,
									"name": "tag",
									"value": "7"
								},
								{
									"begin": 622,
									"end": 769,
									"name": "JUMPDEST"
								},
								{
									"begin": 680,
									"end": 687,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 700,
									"end": 709,
									"name": "DUP1"
								},
								{
									"begin": 716,
									"end": 717,
									"name": "DUP3"
								},
								{
									"begin": 712,
									"end": 713,
									"name": "DUP5"
								},
								{
									"begin": 712,
									"end": 717,
									"name": "ADD"
								},
								{
									"begin": 700,
									"end": 717,
									"name": "SWAP1"
								},
								{
									"begin": 700,
									"end": 717,
									"name": "POP"
								},
								{
									"begin": 740,
									"end": 741,
									"name": "DUP4"
								},
								{
									"begin": 735,
									"end": 736,
									"name": "DUP2"
								},
								{
									"begin": 735,
									"end": 741,
									"name": "LT"
								},
								{
									"begin": 735,
									"end": 741,
									"name": "ISZERO"
								},
								{
									"begin": 728,
									"end": 742,
									"name": "ISZERO"
								},
								{
									"begin": 728,
									"end": 742,
									"name": "ISZERO"
								},
								{
									"begin": 728,
									"end": 742,
									"name": "PUSH [tag]",
									"value": "12"
								},
								{
									"begin": 728,
									"end": 742,
									"name": "JUMPI"
								},
								{
									"begin": 728,
									"end": 742,
									"name": "INVALID"
								},
								{
									"begin": 728,
									"end": 742,
									"name": "tag",
									"value": "12"
								},
								{
									"begin": 728,
									"end": 742,
									"name": "JUMPDEST"
								},
								{
									"begin": 760,
									"end": 761,
									"name": "DUP1"
								},
								{
									"begin": 753,
									"end": 761,
									"name": "SWAP2"
								},
								{
									"begin": 753,
									"end": 761,
									"name": "POP"
								},
								{
									"begin": 622,
									"end": 769,
									"name": "POP"
								},
								{
									"begin": 622,
									"end": 769,
									"name": "SWAP3"
								},
								{
									"begin": 622,
									"end": 769,
									"name": "SWAP2"
								},
								{
									"begin": 622,
									"end": 769,
									"name": "POP"
								},
								{
									"begin": 622,
									"end": 769,
									"name": "POP"
								},
								{
									"begin": 622,
									"end": 769,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 270,
									"end": 463,
									"name": "tag",
									"value": "9"
								},
								{
									"begin": 270,
									"end": 463,
									"name": "JUMPDEST"
								},
								{
									"begin": 328,
									"end": 335,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 419,
									"end": 428,
									"name": "DUP1"
								},
								{
									"begin": 435,
									"end": 436,
									"name": "DUP3"
								},
								{
									"begin": 431,
									"end": 432,
									"name": "DUP5"
								},
								{
									"begin": 431,
									"end": 436,
									"name": "DUP2"
								},
								{
									"begin": 431,
									"end": 436,
									"name": "ISZERO"
								},
								{
									"begin": 431,
									"end": 436,
									"name": "ISZERO"
								},
								{
									"begin": 431,
									"end": 436,
									"name": "PUSH [tag]",
									"value": "14"
								},
								{
									"begin": 431,
									"end": 436,
									"name": "JUMPI"
								},
								{
									"begin": 431,
									"end": 436,
									"name": "INVALID"
								},
								{
									"begin": 431,
									"end": 436,
									"name": "tag",
									"value": "14"
								},
								{
									"begin": 431,
									"end": 436,
									"name": "JUMPDEST"
								},
								{
									"begin": 431,
									"end": 436,
									"name": "DIV"
								},
								{
									"begin": 419,
									"end": 436,
									"name": "SWAP1"
								},
								{
									"begin": 419,
									"end": 436,
									"name": "POP"
								},
								{
									"begin": 454,
									"end": 455,
									"name": "DUP1"
								},
								{
									"begin": 447,
									"end": 455,
									"name": "SWAP2"
								},
								{
									"begin": 447,
									"end": 455,
									"name": "POP"
								},
								{
									"begin": 270,
									"end": 463,
									"name": "POP"
								},
								{
									"begin": 270,
									"end": 463,
									"name": "SWAP3"
								},
								{
									"begin": 270,
									"end": 463,
									"name": "SWAP2"
								},
								{
									"begin": 270,
									"end": 463,
									"name": "POP"
								},
								{
									"begin": 270,
									"end": 463,
									"name": "POP"
								},
								{
									"begin": 270,
									"end": 463,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 189,
									"end": 18457,
									"name": "tag",
									"value": "10"
								},
								{
									"begin": 189,
									"end": 18457,
									"name": "JUMPDEST"
								},
								{
									"begin": 189,
									"end": 18457,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 189,
									"end": 18457,
									"name": "DUP1"
								},
								{
									"begin": 189,
									"end": 18457,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 189,
									"end": 18457,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 189,
									"end": 18457,
									"name": "CODECOPY"
								},
								{
									"begin": 189,
									"end": 18457,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 189,
									"end": 18457,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a72305820c6bdffaf857a7cbc472e17a61185316c899f2d1b52afcf33283be95188b4bba10029",
									".code": [
										{
											"begin": 189,
											"end": 18457,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 189,
											"end": 18457,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 189,
											"end": 18457,
											"name": "MSTORE"
										},
										{
											"begin": 189,
											"end": 18457,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 189,
											"end": 18457,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 189,
											"end": 18457,
											"name": "LT"
										},
										{
											"begin": 189,
											"end": 18457,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 189,
											"end": 18457,
											"name": "JUMPI"
										},
										{
											"begin": 189,
											"end": 18457,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 189,
											"end": 18457,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 189,
											"end": 18457,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 189,
											"end": 18457,
											"name": "SWAP1"
										},
										{
											"begin": 189,
											"end": 18457,
											"name": "DIV"
										},
										{
											"begin": 189,
											"end": 18457,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 189,
											"end": 18457,
											"name": "AND"
										},
										{
											"begin": 189,
											"end": 18457,
											"name": "DUP1"
										},
										{
											"begin": 189,
											"end": 18457,
											"name": "PUSH",
											"value": "12065FE0"
										},
										{
											"begin": 189,
											"end": 18457,
											"name": "EQ"
										},
										{
											"begin": 189,
											"end": 18457,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 189,
											"end": 18457,
											"name": "JUMPI"
										},
										{
											"begin": 189,
											"end": 18457,
											"name": "DUP1"
										},
										{
											"begin": 189,
											"end": 18457,
											"name": "PUSH",
											"value": "268F1153"
										},
										{
											"begin": 189,
											"end": 18457,
											"name": "EQ"
										},
										{
											"begin": 189,
											"end": 18457,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 189,
											"end": 18457,
											"name": "JUMPI"
										},
										{
											"begin": 189,
											"end": 18457,
											"name": "DUP1"
										},
										{
											"begin": 189,
											"end": 18457,
											"name": "PUSH",
											"value": "28FD10D7"
										},
										{
											"begin": 189,
											"end": 18457,
											"name": "EQ"
										},
										{
											"begin": 189,
											"end": 18457,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 189,
											"end": 18457,
											"name": "JUMPI"
										},
										{
											"begin": 189,
											"end": 18457,
											"name": "DUP1"
										},
										{
											"begin": 189,
											"end": 18457,
											"name": "PUSH",
											"value": "29C68DC1"
										},
										{
											"begin": 189,
											"end": 18457,
											"name": "EQ"
										},
										{
											"begin": 189,
											"end": 18457,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 189,
											"end": 18457,
											"name": "JUMPI"
										},
										{
											"begin": 189,
											"end": 18457,
											"name": "DUP1"
										},
										{
											"begin": 189,
											"end": 18457,
											"name": "PUSH",
											"value": "3CCFD60B"
										},
										{
											"begin": 189,
											"end": 18457,
											"name": "EQ"
										},
										{
											"begin": 189,
											"end": 18457,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 189,
											"end": 18457,
											"name": "JUMPI"
										},
										{
											"begin": 189,
											"end": 18457,
											"name": "DUP1"
										},
										{
											"begin": 189,
											"end": 18457,
											"name": "PUSH",
											"value": "402D8883"
										},
										{
											"begin": 189,
											"end": 18457,
											"name": "EQ"
										},
										{
											"begin": 189,
											"end": 18457,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 189,
											"end": 18457,
											"name": "JUMPI"
										},
										{
											"begin": 189,
											"end": 18457,
											"name": "DUP1"
										},
										{
											"begin": 189,
											"end": 18457,
											"name": "PUSH",
											"value": "43C14B22"
										},
										{
											"begin": 189,
											"end": 18457,
											"name": "EQ"
										},
										{
											"begin": 189,
											"end": 18457,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 189,
											"end": 18457,
											"name": "JUMPI"
										},
										{
											"begin": 189,
											"end": 18457,
											"name": "DUP1"
										},
										{
											"begin": 189,
											"end": 18457,
											"name": "PUSH",
											"value": "590E1AE3"
										},
										{
											"begin": 189,
											"end": 18457,
											"name": "EQ"
										},
										{
											"begin": 189,
											"end": 18457,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 189,
											"end": 18457,
											"name": "JUMPI"
										},
										{
											"begin": 189,
											"end": 18457,
											"name": "DUP1"
										},
										{
											"begin": 189,
											"end": 18457,
											"name": "PUSH",
											"value": "83197EF0"
										},
										{
											"begin": 189,
											"end": 18457,
											"name": "EQ"
										},
										{
											"begin": 189,
											"end": 18457,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 189,
											"end": 18457,
											"name": "JUMPI"
										},
										{
											"begin": 189,
											"end": 18457,
											"name": "DUP1"
										},
										{
											"begin": 189,
											"end": 18457,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 189,
											"end": 18457,
											"name": "EQ"
										},
										{
											"begin": 189,
											"end": 18457,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 189,
											"end": 18457,
											"name": "JUMPI"
										},
										{
											"begin": 189,
											"end": 18457,
											"name": "DUP1"
										},
										{
											"begin": 189,
											"end": 18457,
											"name": "PUSH",
											"value": "D85DA7B6"
										},
										{
											"begin": 189,
											"end": 18457,
											"name": "EQ"
										},
										{
											"begin": 189,
											"end": 18457,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 189,
											"end": 18457,
											"name": "JUMPI"
										},
										{
											"begin": 189,
											"end": 18457,
											"name": "DUP1"
										},
										{
											"begin": 189,
											"end": 18457,
											"name": "PUSH",
											"value": "E8B5E51F"
										},
										{
											"begin": 189,
											"end": 18457,
											"name": "EQ"
										},
										{
											"begin": 189,
											"end": 18457,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 189,
											"end": 18457,
											"name": "JUMPI"
										},
										{
											"begin": 189,
											"end": 18457,
											"name": "DUP1"
										},
										{
											"begin": 189,
											"end": 18457,
											"name": "PUSH",
											"value": "EFD475AB"
										},
										{
											"begin": 189,
											"end": 18457,
											"name": "EQ"
										},
										{
											"begin": 189,
											"end": 18457,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 189,
											"end": 18457,
											"name": "JUMPI"
										},
										{
											"begin": 189,
											"end": 18457,
											"name": "DUP1"
										},
										{
											"begin": 189,
											"end": 18457,
											"name": "PUSH",
											"value": "F06817CF"
										},
										{
											"begin": 189,
											"end": 18457,
											"name": "EQ"
										},
										{
											"begin": 189,
											"end": 18457,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 189,
											"end": 18457,
											"name": "JUMPI"
										},
										{
											"begin": 189,
											"end": 18457,
											"name": "DUP1"
										},
										{
											"begin": 189,
											"end": 18457,
											"name": "PUSH",
											"value": "F5074F41"
										},
										{
											"begin": 189,
											"end": 18457,
											"name": "EQ"
										},
										{
											"begin": 189,
											"end": 18457,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 189,
											"end": 18457,
											"name": "JUMPI"
										},
										{
											"begin": 189,
											"end": 18457,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 189,
											"end": 18457,
											"name": "JUMPDEST"
										},
										{
											"begin": 189,
											"end": 18457,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 189,
											"end": 18457,
											"name": "DUP1"
										},
										{
											"begin": 189,
											"end": 18457,
											"name": "REVERT"
										},
										{
											"begin": 6862,
											"end": 6952,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 6862,
											"end": 6952,
											"name": "JUMPDEST"
										},
										{
											"begin": 6862,
											"end": 6952,
											"name": "CALLVALUE"
										},
										{
											"begin": 6862,
											"end": 6952,
											"name": "ISZERO"
										},
										{
											"begin": 6862,
											"end": 6952,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 6862,
											"end": 6952,
											"name": "JUMPI"
										},
										{
											"begin": 6862,
											"end": 6952,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6862,
											"end": 6952,
											"name": "DUP1"
										},
										{
											"begin": 6862,
											"end": 6952,
											"name": "REVERT"
										},
										{
											"begin": 6862,
											"end": 6952,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 6862,
											"end": 6952,
											"name": "JUMPDEST"
										},
										{
											"begin": 6862,
											"end": 6952,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 6862,
											"end": 6952,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 6862,
											"end": 6952,
											"name": "JUMP"
										},
										{
											"begin": 6862,
											"end": 6952,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 6862,
											"end": 6952,
											"name": "JUMPDEST"
										},
										{
											"begin": 6862,
											"end": 6952,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6862,
											"end": 6952,
											"name": "MLOAD"
										},
										{
											"begin": 6862,
											"end": 6952,
											"name": "DUP1"
										},
										{
											"begin": 6862,
											"end": 6952,
											"name": "DUP3"
										},
										{
											"begin": 6862,
											"end": 6952,
											"name": "DUP2"
										},
										{
											"begin": 6862,
											"end": 6952,
											"name": "MSTORE"
										},
										{
											"begin": 6862,
											"end": 6952,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6862,
											"end": 6952,
											"name": "ADD"
										},
										{
											"begin": 6862,
											"end": 6952,
											"name": "SWAP2"
										},
										{
											"begin": 6862,
											"end": 6952,
											"name": "POP"
										},
										{
											"begin": 6862,
											"end": 6952,
											"name": "POP"
										},
										{
											"begin": 6862,
											"end": 6952,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6862,
											"end": 6952,
											"name": "MLOAD"
										},
										{
											"begin": 6862,
											"end": 6952,
											"name": "DUP1"
										},
										{
											"begin": 6862,
											"end": 6952,
											"name": "SWAP2"
										},
										{
											"begin": 6862,
											"end": 6952,
											"name": "SUB"
										},
										{
											"begin": 6862,
											"end": 6952,
											"name": "SWAP1"
										},
										{
											"begin": 6862,
											"end": 6952,
											"name": "RETURN"
										},
										{
											"begin": 17851,
											"end": 18041,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 17851,
											"end": 18041,
											"name": "JUMPDEST"
										},
										{
											"begin": 17851,
											"end": 18041,
											"name": "CALLVALUE"
										},
										{
											"begin": 17851,
											"end": 18041,
											"name": "ISZERO"
										},
										{
											"begin": 17851,
											"end": 18041,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 17851,
											"end": 18041,
											"name": "JUMPI"
										},
										{
											"begin": 17851,
											"end": 18041,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17851,
											"end": 18041,
											"name": "DUP1"
										},
										{
											"begin": 17851,
											"end": 18041,
											"name": "REVERT"
										},
										{
											"begin": 17851,
											"end": 18041,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 17851,
											"end": 18041,
											"name": "JUMPDEST"
										},
										{
											"begin": 17851,
											"end": 18041,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 17851,
											"end": 18041,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 17851,
											"end": 18041,
											"name": "DUP1"
										},
										{
											"begin": 17851,
											"end": 18041,
											"name": "DUP1"
										},
										{
											"begin": 17851,
											"end": 18041,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 17851,
											"end": 18041,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 17851,
											"end": 18041,
											"name": "AND"
										},
										{
											"begin": 17851,
											"end": 18041,
											"name": "SWAP1"
										},
										{
											"begin": 17851,
											"end": 18041,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17851,
											"end": 18041,
											"name": "ADD"
										},
										{
											"begin": 17851,
											"end": 18041,
											"name": "SWAP1"
										},
										{
											"begin": 17851,
											"end": 18041,
											"name": "SWAP2"
										},
										{
											"begin": 17851,
											"end": 18041,
											"name": "SWAP1"
										},
										{
											"begin": 17851,
											"end": 18041,
											"name": "POP"
										},
										{
											"begin": 17851,
											"end": 18041,
											"name": "POP"
										},
										{
											"begin": 17851,
											"end": 18041,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 17851,
											"end": 18041,
											"name": "JUMP"
										},
										{
											"begin": 17851,
											"end": 18041,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 17851,
											"end": 18041,
											"name": "JUMPDEST"
										},
										{
											"begin": 17851,
											"end": 18041,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17851,
											"end": 18041,
											"name": "MLOAD"
										},
										{
											"begin": 17851,
											"end": 18041,
											"name": "DUP1"
										},
										{
											"begin": 17851,
											"end": 18041,
											"name": "DUP3"
										},
										{
											"begin": 17851,
											"end": 18041,
											"name": "DUP2"
										},
										{
											"begin": 17851,
											"end": 18041,
											"name": "MSTORE"
										},
										{
											"begin": 17851,
											"end": 18041,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17851,
											"end": 18041,
											"name": "ADD"
										},
										{
											"begin": 17851,
											"end": 18041,
											"name": "SWAP2"
										},
										{
											"begin": 17851,
											"end": 18041,
											"name": "POP"
										},
										{
											"begin": 17851,
											"end": 18041,
											"name": "POP"
										},
										{
											"begin": 17851,
											"end": 18041,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17851,
											"end": 18041,
											"name": "MLOAD"
										},
										{
											"begin": 17851,
											"end": 18041,
											"name": "DUP1"
										},
										{
											"begin": 17851,
											"end": 18041,
											"name": "SWAP2"
										},
										{
											"begin": 17851,
											"end": 18041,
											"name": "SUB"
										},
										{
											"begin": 17851,
											"end": 18041,
											"name": "SWAP1"
										},
										{
											"begin": 17851,
											"end": 18041,
											"name": "RETURN"
										},
										{
											"begin": 1852,
											"end": 1891,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 1852,
											"end": 1891,
											"name": "JUMPDEST"
										},
										{
											"begin": 1852,
											"end": 1891,
											"name": "CALLVALUE"
										},
										{
											"begin": 1852,
											"end": 1891,
											"name": "ISZERO"
										},
										{
											"begin": 1852,
											"end": 1891,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 1852,
											"end": 1891,
											"name": "JUMPI"
										},
										{
											"begin": 1852,
											"end": 1891,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1852,
											"end": 1891,
											"name": "DUP1"
										},
										{
											"begin": 1852,
											"end": 1891,
											"name": "REVERT"
										},
										{
											"begin": 1852,
											"end": 1891,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 1852,
											"end": 1891,
											"name": "JUMPDEST"
										},
										{
											"begin": 1852,
											"end": 1891,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 1852,
											"end": 1891,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1852,
											"end": 1891,
											"name": "DUP1"
										},
										{
											"begin": 1852,
											"end": 1891,
											"name": "DUP1"
										},
										{
											"begin": 1852,
											"end": 1891,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1852,
											"end": 1891,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1852,
											"end": 1891,
											"name": "AND"
										},
										{
											"begin": 1852,
											"end": 1891,
											"name": "SWAP1"
										},
										{
											"begin": 1852,
											"end": 1891,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1852,
											"end": 1891,
											"name": "ADD"
										},
										{
											"begin": 1852,
											"end": 1891,
											"name": "SWAP1"
										},
										{
											"begin": 1852,
											"end": 1891,
											"name": "SWAP2"
										},
										{
											"begin": 1852,
											"end": 1891,
											"name": "SWAP1"
										},
										{
											"begin": 1852,
											"end": 1891,
											"name": "POP"
										},
										{
											"begin": 1852,
											"end": 1891,
											"name": "POP"
										},
										{
											"begin": 1852,
											"end": 1891,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 1852,
											"end": 1891,
											"name": "JUMP"
										},
										{
											"begin": 1852,
											"end": 1891,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 1852,
											"end": 1891,
											"name": "JUMPDEST"
										},
										{
											"begin": 1852,
											"end": 1891,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1852,
											"end": 1891,
											"name": "MLOAD"
										},
										{
											"begin": 1852,
											"end": 1891,
											"name": "DUP1"
										},
										{
											"begin": 1852,
											"end": 1891,
											"name": "DUP3"
										},
										{
											"begin": 1852,
											"end": 1891,
											"name": "ISZERO"
										},
										{
											"begin": 1852,
											"end": 1891,
											"name": "ISZERO"
										},
										{
											"begin": 1852,
											"end": 1891,
											"name": "ISZERO"
										},
										{
											"begin": 1852,
											"end": 1891,
											"name": "ISZERO"
										},
										{
											"begin": 1852,
											"end": 1891,
											"name": "DUP2"
										},
										{
											"begin": 1852,
											"end": 1891,
											"name": "MSTORE"
										},
										{
											"begin": 1852,
											"end": 1891,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1852,
											"end": 1891,
											"name": "ADD"
										},
										{
											"begin": 1852,
											"end": 1891,
											"name": "SWAP2"
										},
										{
											"begin": 1852,
											"end": 1891,
											"name": "POP"
										},
										{
											"begin": 1852,
											"end": 1891,
											"name": "POP"
										},
										{
											"begin": 1852,
											"end": 1891,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1852,
											"end": 1891,
											"name": "MLOAD"
										},
										{
											"begin": 1852,
											"end": 1891,
											"name": "DUP1"
										},
										{
											"begin": 1852,
											"end": 1891,
											"name": "SWAP2"
										},
										{
											"begin": 1852,
											"end": 1891,
											"name": "SUB"
										},
										{
											"begin": 1852,
											"end": 1891,
											"name": "SWAP1"
										},
										{
											"begin": 1852,
											"end": 1891,
											"name": "RETURN"
										},
										{
											"begin": 18230,
											"end": 18452,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 18230,
											"end": 18452,
											"name": "JUMPDEST"
										},
										{
											"begin": 18230,
											"end": 18452,
											"name": "CALLVALUE"
										},
										{
											"begin": 18230,
											"end": 18452,
											"name": "ISZERO"
										},
										{
											"begin": 18230,
											"end": 18452,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 18230,
											"end": 18452,
											"name": "JUMPI"
										},
										{
											"begin": 18230,
											"end": 18452,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18230,
											"end": 18452,
											"name": "DUP1"
										},
										{
											"begin": 18230,
											"end": 18452,
											"name": "REVERT"
										},
										{
											"begin": 18230,
											"end": 18452,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 18230,
											"end": 18452,
											"name": "JUMPDEST"
										},
										{
											"begin": 18230,
											"end": 18452,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 18230,
											"end": 18452,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 18230,
											"end": 18452,
											"name": "JUMP"
										},
										{
											"begin": 18230,
											"end": 18452,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 18230,
											"end": 18452,
											"name": "JUMPDEST"
										},
										{
											"begin": 18230,
											"end": 18452,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18230,
											"end": 18452,
											"name": "MLOAD"
										},
										{
											"begin": 18230,
											"end": 18452,
											"name": "DUP1"
										},
										{
											"begin": 18230,
											"end": 18452,
											"name": "DUP3"
										},
										{
											"begin": 18230,
											"end": 18452,
											"name": "ISZERO"
										},
										{
											"begin": 18230,
											"end": 18452,
											"name": "ISZERO"
										},
										{
											"begin": 18230,
											"end": 18452,
											"name": "ISZERO"
										},
										{
											"begin": 18230,
											"end": 18452,
											"name": "ISZERO"
										},
										{
											"begin": 18230,
											"end": 18452,
											"name": "DUP2"
										},
										{
											"begin": 18230,
											"end": 18452,
											"name": "MSTORE"
										},
										{
											"begin": 18230,
											"end": 18452,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18230,
											"end": 18452,
											"name": "ADD"
										},
										{
											"begin": 18230,
											"end": 18452,
											"name": "SWAP2"
										},
										{
											"begin": 18230,
											"end": 18452,
											"name": "POP"
										},
										{
											"begin": 18230,
											"end": 18452,
											"name": "POP"
										},
										{
											"begin": 18230,
											"end": 18452,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18230,
											"end": 18452,
											"name": "MLOAD"
										},
										{
											"begin": 18230,
											"end": 18452,
											"name": "DUP1"
										},
										{
											"begin": 18230,
											"end": 18452,
											"name": "SWAP2"
										},
										{
											"begin": 18230,
											"end": 18452,
											"name": "SUB"
										},
										{
											"begin": 18230,
											"end": 18452,
											"name": "SWAP1"
										},
										{
											"begin": 18230,
											"end": 18452,
											"name": "RETURN"
										},
										{
											"begin": 11703,
											"end": 12195,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 11703,
											"end": 12195,
											"name": "JUMPDEST"
										},
										{
											"begin": 11703,
											"end": 12195,
											"name": "CALLVALUE"
										},
										{
											"begin": 11703,
											"end": 12195,
											"name": "ISZERO"
										},
										{
											"begin": 11703,
											"end": 12195,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 11703,
											"end": 12195,
											"name": "JUMPI"
										},
										{
											"begin": 11703,
											"end": 12195,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11703,
											"end": 12195,
											"name": "DUP1"
										},
										{
											"begin": 11703,
											"end": 12195,
											"name": "REVERT"
										},
										{
											"begin": 11703,
											"end": 12195,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 11703,
											"end": 12195,
											"name": "JUMPDEST"
										},
										{
											"begin": 11703,
											"end": 12195,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 11703,
											"end": 12195,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 11703,
											"end": 12195,
											"name": "JUMP"
										},
										{
											"begin": 11703,
											"end": 12195,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 11703,
											"end": 12195,
											"name": "JUMPDEST"
										},
										{
											"begin": 11703,
											"end": 12195,
											"name": "STOP"
										},
										{
											"begin": 8949,
											"end": 11360,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 8949,
											"end": 11360,
											"name": "JUMPDEST"
										},
										{
											"begin": 8949,
											"end": 11360,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 8949,
											"end": 11360,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 8949,
											"end": 11360,
											"name": "JUMP"
										},
										{
											"begin": 8949,
											"end": 11360,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 8949,
											"end": 11360,
											"name": "JUMPDEST"
										},
										{
											"begin": 8949,
											"end": 11360,
											"name": "STOP"
										},
										{
											"begin": 14589,
											"end": 15202,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 14589,
											"end": 15202,
											"name": "JUMPDEST"
										},
										{
											"begin": 14589,
											"end": 15202,
											"name": "CALLVALUE"
										},
										{
											"begin": 14589,
											"end": 15202,
											"name": "ISZERO"
										},
										{
											"begin": 14589,
											"end": 15202,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 14589,
											"end": 15202,
											"name": "JUMPI"
										},
										{
											"begin": 14589,
											"end": 15202,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14589,
											"end": 15202,
											"name": "DUP1"
										},
										{
											"begin": 14589,
											"end": 15202,
											"name": "REVERT"
										},
										{
											"begin": 14589,
											"end": 15202,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 14589,
											"end": 15202,
											"name": "JUMPDEST"
										},
										{
											"begin": 14589,
											"end": 15202,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 14589,
											"end": 15202,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 14589,
											"end": 15202,
											"name": "JUMP"
										},
										{
											"begin": 14589,
											"end": 15202,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 14589,
											"end": 15202,
											"name": "JUMPDEST"
										},
										{
											"begin": 14589,
											"end": 15202,
											"name": "STOP"
										},
										{
											"begin": 15514,
											"end": 16468,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 15514,
											"end": 16468,
											"name": "JUMPDEST"
										},
										{
											"begin": 15514,
											"end": 16468,
											"name": "CALLVALUE"
										},
										{
											"begin": 15514,
											"end": 16468,
											"name": "ISZERO"
										},
										{
											"begin": 15514,
											"end": 16468,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 15514,
											"end": 16468,
											"name": "JUMPI"
										},
										{
											"begin": 15514,
											"end": 16468,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15514,
											"end": 16468,
											"name": "DUP1"
										},
										{
											"begin": 15514,
											"end": 16468,
											"name": "REVERT"
										},
										{
											"begin": 15514,
											"end": 16468,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 15514,
											"end": 16468,
											"name": "JUMPDEST"
										},
										{
											"begin": 15514,
											"end": 16468,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 15514,
											"end": 16468,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 15514,
											"end": 16468,
											"name": "JUMP"
										},
										{
											"begin": 15514,
											"end": 16468,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 15514,
											"end": 16468,
											"name": "JUMPDEST"
										},
										{
											"begin": 15514,
											"end": 16468,
											"name": "STOP"
										},
										{
											"begin": 151,
											"end": 225,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 151,
											"end": 225,
											"name": "JUMPDEST"
										},
										{
											"begin": 151,
											"end": 225,
											"name": "CALLVALUE"
										},
										{
											"begin": 151,
											"end": 225,
											"name": "ISZERO"
										},
										{
											"begin": 151,
											"end": 225,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 151,
											"end": 225,
											"name": "JUMPI"
										},
										{
											"begin": 151,
											"end": 225,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 151,
											"end": 225,
											"name": "DUP1"
										},
										{
											"begin": 151,
											"end": 225,
											"name": "REVERT"
										},
										{
											"begin": 151,
											"end": 225,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 151,
											"end": 225,
											"name": "JUMPDEST"
										},
										{
											"begin": 151,
											"end": 225,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 151,
											"end": 225,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 151,
											"end": 225,
											"name": "JUMP"
										},
										{
											"begin": 151,
											"end": 225,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 151,
											"end": 225,
											"name": "JUMPDEST"
										},
										{
											"begin": 151,
											"end": 225,
											"name": "STOP"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "JUMPDEST"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "CALLVALUE"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "ISZERO"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "JUMPI"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "DUP1"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "REVERT"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "JUMPDEST"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "JUMP"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "JUMPDEST"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "MLOAD"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "DUP1"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "DUP3"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "AND"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "AND"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "DUP2"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "MSTORE"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "ADD"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "SWAP2"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "POP"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "POP"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "MLOAD"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "DUP1"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "SWAP2"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "SUB"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "SWAP1"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "RETURN"
										},
										{
											"begin": 16546,
											"end": 17151,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 16546,
											"end": 17151,
											"name": "JUMPDEST"
										},
										{
											"begin": 16546,
											"end": 17151,
											"name": "CALLVALUE"
										},
										{
											"begin": 16546,
											"end": 17151,
											"name": "ISZERO"
										},
										{
											"begin": 16546,
											"end": 17151,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 16546,
											"end": 17151,
											"name": "JUMPI"
										},
										{
											"begin": 16546,
											"end": 17151,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16546,
											"end": 17151,
											"name": "DUP1"
										},
										{
											"begin": 16546,
											"end": 17151,
											"name": "REVERT"
										},
										{
											"begin": 16546,
											"end": 17151,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 16546,
											"end": 17151,
											"name": "JUMPDEST"
										},
										{
											"begin": 16546,
											"end": 17151,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 16546,
											"end": 17151,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 16546,
											"end": 17151,
											"name": "JUMP"
										},
										{
											"begin": 16546,
											"end": 17151,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 16546,
											"end": 17151,
											"name": "JUMPDEST"
										},
										{
											"begin": 16546,
											"end": 17151,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16546,
											"end": 17151,
											"name": "MLOAD"
										},
										{
											"begin": 16546,
											"end": 17151,
											"name": "DUP1"
										},
										{
											"begin": 16546,
											"end": 17151,
											"name": "DUP3"
										},
										{
											"begin": 16546,
											"end": 17151,
											"name": "ISZERO"
										},
										{
											"begin": 16546,
											"end": 17151,
											"name": "ISZERO"
										},
										{
											"begin": 16546,
											"end": 17151,
											"name": "ISZERO"
										},
										{
											"begin": 16546,
											"end": 17151,
											"name": "ISZERO"
										},
										{
											"begin": 16546,
											"end": 17151,
											"name": "DUP2"
										},
										{
											"begin": 16546,
											"end": 17151,
											"name": "MSTORE"
										},
										{
											"begin": 16546,
											"end": 17151,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16546,
											"end": 17151,
											"name": "ADD"
										},
										{
											"begin": 16546,
											"end": 17151,
											"name": "SWAP2"
										},
										{
											"begin": 16546,
											"end": 17151,
											"name": "POP"
										},
										{
											"begin": 16546,
											"end": 17151,
											"name": "POP"
										},
										{
											"begin": 16546,
											"end": 17151,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16546,
											"end": 17151,
											"name": "MLOAD"
										},
										{
											"begin": 16546,
											"end": 17151,
											"name": "DUP1"
										},
										{
											"begin": 16546,
											"end": 17151,
											"name": "SWAP2"
										},
										{
											"begin": 16546,
											"end": 17151,
											"name": "SUB"
										},
										{
											"begin": 16546,
											"end": 17151,
											"name": "SWAP1"
										},
										{
											"begin": 16546,
											"end": 17151,
											"name": "RETURN"
										},
										{
											"begin": 7124,
											"end": 8840,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 7124,
											"end": 8840,
											"name": "JUMPDEST"
										},
										{
											"begin": 7124,
											"end": 8840,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 7124,
											"end": 8840,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 7124,
											"end": 8840,
											"name": "JUMP"
										},
										{
											"begin": 7124,
											"end": 8840,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 7124,
											"end": 8840,
											"name": "JUMPDEST"
										},
										{
											"begin": 7124,
											"end": 8840,
											"name": "STOP"
										},
										{
											"begin": 12530,
											"end": 13748,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 12530,
											"end": 13748,
											"name": "JUMPDEST"
										},
										{
											"begin": 12530,
											"end": 13748,
											"name": "CALLVALUE"
										},
										{
											"begin": 12530,
											"end": 13748,
											"name": "ISZERO"
										},
										{
											"begin": 12530,
											"end": 13748,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 12530,
											"end": 13748,
											"name": "JUMPI"
										},
										{
											"begin": 12530,
											"end": 13748,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12530,
											"end": 13748,
											"name": "DUP1"
										},
										{
											"begin": 12530,
											"end": 13748,
											"name": "REVERT"
										},
										{
											"begin": 12530,
											"end": 13748,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 12530,
											"end": 13748,
											"name": "JUMPDEST"
										},
										{
											"begin": 12530,
											"end": 13748,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 12530,
											"end": 13748,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 12530,
											"end": 13748,
											"name": "JUMP"
										},
										{
											"begin": 12530,
											"end": 13748,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 12530,
											"end": 13748,
											"name": "JUMPDEST"
										},
										{
											"begin": 12530,
											"end": 13748,
											"name": "STOP"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "JUMPDEST"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "CALLVALUE"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "ISZERO"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "JUMPI"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "DUP1"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "REVERT"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "JUMPDEST"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "JUMP"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "JUMPDEST"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "MLOAD"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "DUP1"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "DUP13"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "AND"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "AND"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "DUP2"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "MSTORE"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "ADD"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "DUP12"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "NOT"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "AND"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "NOT"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "AND"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "DUP2"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "MSTORE"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "ADD"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "DUP11"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "DUP2"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "MSTORE"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "ADD"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "DUP10"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "DUP2"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "MSTORE"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "ADD"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "DUP9"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "DUP2"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "MSTORE"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "ADD"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "DUP8"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "DUP2"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "MSTORE"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "ADD"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "DUP7"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "DUP2"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "MSTORE"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "ADD"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "DUP6"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "DUP2"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "MSTORE"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "ADD"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "DUP5"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "DUP2"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "GT"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "ISZERO"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "JUMPI"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "INVALID"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "JUMPDEST"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "AND"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "DUP2"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "MSTORE"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "ADD"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "DUP4"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "ISZERO"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "ISZERO"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "ISZERO"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "ISZERO"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "DUP2"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "MSTORE"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "ADD"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "DUP3"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "DUP2"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "MSTORE"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "ADD"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "SWAP12"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "POP"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "POP"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "POP"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "POP"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "POP"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "POP"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "POP"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "POP"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "POP"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "POP"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "POP"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "POP"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "MLOAD"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "DUP1"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "SWAP2"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "SUB"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "SWAP1"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "RETURN"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "JUMPDEST"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "CALLVALUE"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "ISZERO"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "JUMPI"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "DUP1"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "REVERT"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "JUMPDEST"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "DUP1"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "DUP1"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "AND"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "SWAP1"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "ADD"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "SWAP1"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "SWAP2"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "SWAP1"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "POP"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "POP"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "JUMP"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "JUMPDEST"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "STOP"
										},
										{
											"begin": 6862,
											"end": 6952,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 6862,
											"end": 6952,
											"name": "JUMPDEST"
										},
										{
											"begin": 6905,
											"end": 6912,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6932,
											"end": 6936,
											"name": "ADDRESS"
										},
										{
											"begin": 6932,
											"end": 6944,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6932,
											"end": 6944,
											"name": "AND"
										},
										{
											"begin": 6932,
											"end": 6944,
											"name": "BALANCE"
										},
										{
											"begin": 6925,
											"end": 6944,
											"name": "SWAP1"
										},
										{
											"begin": 6925,
											"end": 6944,
											"name": "POP"
										},
										{
											"begin": 6862,
											"end": 6952,
											"name": "SWAP1"
										},
										{
											"begin": 6862,
											"end": 6952,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 17851,
											"end": 18041,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 17851,
											"end": 18041,
											"name": "JUMPDEST"
										},
										{
											"begin": 17914,
											"end": 17918,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "DUP1"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "SWAP1"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "SLOAD"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "SWAP1"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "EXP"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "SWAP1"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "DIV"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "AND"
										},
										{
											"begin": 218,
											"end": 237,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 218,
											"end": 237,
											"name": "AND"
										},
										{
											"begin": 218,
											"end": 228,
											"name": "CALLER"
										},
										{
											"begin": 218,
											"end": 237,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 218,
											"end": 237,
											"name": "AND"
										},
										{
											"begin": 218,
											"end": 237,
											"name": "EQ"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "ISZERO"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "ISZERO"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "JUMPI"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "DUP1"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "REVERT"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "JUMPDEST"
										},
										{
											"begin": 17939,
											"end": 17945,
											"name": "DUP2"
										},
										{
											"begin": 17931,
											"end": 17936,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 17931,
											"end": 17936,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 17931,
											"end": 17945,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 17931,
											"end": 17945,
											"name": "EXP"
										},
										{
											"begin": 17931,
											"end": 17945,
											"name": "DUP2"
										},
										{
											"begin": 17931,
											"end": 17945,
											"name": "SLOAD"
										},
										{
											"begin": 17931,
											"end": 17945,
											"name": "DUP2"
										},
										{
											"begin": 17931,
											"end": 17945,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 17931,
											"end": 17945,
											"name": "MUL"
										},
										{
											"begin": 17931,
											"end": 17945,
											"name": "NOT"
										},
										{
											"begin": 17931,
											"end": 17945,
											"name": "AND"
										},
										{
											"begin": 17931,
											"end": 17945,
											"name": "SWAP1"
										},
										{
											"begin": 17931,
											"end": 17945,
											"name": "DUP4"
										},
										{
											"begin": 17931,
											"end": 17945,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 17931,
											"end": 17945,
											"name": "DUP2"
										},
										{
											"begin": 17931,
											"end": 17945,
											"name": "GT"
										},
										{
											"begin": 17931,
											"end": 17945,
											"name": "ISZERO"
										},
										{
											"begin": 17931,
											"end": 17945,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 17931,
											"end": 17945,
											"name": "JUMPI"
										},
										{
											"begin": 17931,
											"end": 17945,
											"name": "INVALID"
										},
										{
											"begin": 17931,
											"end": 17945,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 17931,
											"end": 17945,
											"name": "JUMPDEST"
										},
										{
											"begin": 17931,
											"end": 17945,
											"name": "MUL"
										},
										{
											"begin": 17931,
											"end": 17945,
											"name": "OR"
										},
										{
											"begin": 17931,
											"end": 17945,
											"name": "SWAP1"
										},
										{
											"begin": 17931,
											"end": 17945,
											"name": "SSTORE"
										},
										{
											"begin": 17931,
											"end": 17945,
											"name": "POP"
										},
										{
											"begin": 18017,
											"end": 18032,
											"name": "TIMESTAMP"
										},
										{
											"begin": 18010,
											"end": 18015,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 18010,
											"end": 18015,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 18010,
											"end": 18015,
											"name": "SWAP1"
										},
										{
											"begin": 18010,
											"end": 18015,
											"name": "SLOAD"
										},
										{
											"begin": 18010,
											"end": 18015,
											"name": "SWAP1"
										},
										{
											"begin": 18010,
											"end": 18015,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 18010,
											"end": 18015,
											"name": "EXP"
										},
										{
											"begin": 18010,
											"end": 18015,
											"name": "SWAP1"
										},
										{
											"begin": 18010,
											"end": 18015,
											"name": "DIV"
										},
										{
											"begin": 18010,
											"end": 18015,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 18010,
											"end": 18015,
											"name": "AND"
										},
										{
											"begin": 17988,
											"end": 18033,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 17988,
											"end": 18033,
											"name": "DUP2"
										},
										{
											"begin": 17988,
											"end": 18033,
											"name": "GT"
										},
										{
											"begin": 17988,
											"end": 18033,
											"name": "ISZERO"
										},
										{
											"begin": 17988,
											"end": 18033,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 17988,
											"end": 18033,
											"name": "JUMPI"
										},
										{
											"begin": 17988,
											"end": 18033,
											"name": "INVALID"
										},
										{
											"begin": 17988,
											"end": 18033,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 17988,
											"end": 18033,
											"name": "JUMPDEST"
										},
										{
											"begin": 17988,
											"end": 18033,
											"name": "PUSH",
											"value": "AAAE373901E745122C2E0925AD006227969C6CD190B7D5EA2FB7FDBD1D955B35"
										},
										{
											"begin": 17988,
											"end": 18033,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17988,
											"end": 18033,
											"name": "MLOAD"
										},
										{
											"begin": 17988,
											"end": 18033,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17988,
											"end": 18033,
											"name": "MLOAD"
										},
										{
											"begin": 17988,
											"end": 18033,
											"name": "DUP1"
										},
										{
											"begin": 17988,
											"end": 18033,
											"name": "SWAP2"
										},
										{
											"begin": 17988,
											"end": 18033,
											"name": "SUB"
										},
										{
											"begin": 17988,
											"end": 18033,
											"name": "SWAP1"
										},
										{
											"begin": 17988,
											"end": 18033,
											"name": "LOG3"
										},
										{
											"begin": 17851,
											"end": 18041,
											"name": "SWAP2"
										},
										{
											"begin": 17851,
											"end": 18041,
											"name": "SWAP1"
										},
										{
											"begin": 17851,
											"end": 18041,
											"name": "POP"
										},
										{
											"begin": 17851,
											"end": 18041,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1852,
											"end": 1891,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 1852,
											"end": 1891,
											"name": "JUMPDEST"
										},
										{
											"begin": 1852,
											"end": 1891,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 1852,
											"end": 1891,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1852,
											"end": 1891,
											"name": "MSTORE"
										},
										{
											"begin": 1852,
											"end": 1891,
											"name": "DUP1"
										},
										{
											"begin": 1852,
											"end": 1891,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1852,
											"end": 1891,
											"name": "MSTORE"
										},
										{
											"begin": 1852,
											"end": 1891,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1852,
											"end": 1891,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1852,
											"end": 1891,
											"name": "KECCAK256"
										},
										{
											"begin": 1852,
											"end": 1891,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1852,
											"end": 1891,
											"name": "SWAP2"
										},
										{
											"begin": 1852,
											"end": 1891,
											"name": "POP"
										},
										{
											"begin": 1852,
											"end": 1891,
											"name": "SLOAD"
										},
										{
											"begin": 1852,
											"end": 1891,
											"name": "SWAP1"
										},
										{
											"begin": 1852,
											"end": 1891,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1852,
											"end": 1891,
											"name": "EXP"
										},
										{
											"begin": 1852,
											"end": 1891,
											"name": "SWAP1"
										},
										{
											"begin": 1852,
											"end": 1891,
											"name": "DIV"
										},
										{
											"begin": 1852,
											"end": 1891,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1852,
											"end": 1891,
											"name": "AND"
										},
										{
											"begin": 1852,
											"end": 1891,
											"name": "DUP2"
										},
										{
											"begin": 1852,
											"end": 1891,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 18230,
											"end": 18452,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 18230,
											"end": 18452,
											"name": "JUMPDEST"
										},
										{
											"begin": 18282,
											"end": 18286,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "DUP1"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "SWAP1"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "SLOAD"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "SWAP1"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "EXP"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "SWAP1"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "DIV"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "AND"
										},
										{
											"begin": 218,
											"end": 237,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 218,
											"end": 237,
											"name": "AND"
										},
										{
											"begin": 218,
											"end": 228,
											"name": "CALLER"
										},
										{
											"begin": 218,
											"end": 237,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 218,
											"end": 237,
											"name": "AND"
										},
										{
											"begin": 218,
											"end": 237,
											"name": "EQ"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "ISZERO"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "ISZERO"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "JUMPI"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "DUP1"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "REVERT"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "JUMPDEST"
										},
										{
											"begin": 18309,
											"end": 18315,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 18309,
											"end": 18315,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18309,
											"end": 18315,
											"name": "SWAP1"
										},
										{
											"begin": 18309,
											"end": 18315,
											"name": "SLOAD"
										},
										{
											"begin": 18309,
											"end": 18315,
											"name": "SWAP1"
										},
										{
											"begin": 18309,
											"end": 18315,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 18309,
											"end": 18315,
											"name": "EXP"
										},
										{
											"begin": 18309,
											"end": 18315,
											"name": "SWAP1"
										},
										{
											"begin": 18309,
											"end": 18315,
											"name": "DIV"
										},
										{
											"begin": 18309,
											"end": 18315,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 18309,
											"end": 18315,
											"name": "AND"
										},
										{
											"begin": 18308,
											"end": 18315,
											"name": "ISZERO"
										},
										{
											"begin": 18299,
											"end": 18305,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 18299,
											"end": 18305,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18299,
											"end": 18315,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 18299,
											"end": 18315,
											"name": "EXP"
										},
										{
											"begin": 18299,
											"end": 18315,
											"name": "DUP2"
										},
										{
											"begin": 18299,
											"end": 18315,
											"name": "SLOAD"
										},
										{
											"begin": 18299,
											"end": 18315,
											"name": "DUP2"
										},
										{
											"begin": 18299,
											"end": 18315,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 18299,
											"end": 18315,
											"name": "MUL"
										},
										{
											"begin": 18299,
											"end": 18315,
											"name": "NOT"
										},
										{
											"begin": 18299,
											"end": 18315,
											"name": "AND"
										},
										{
											"begin": 18299,
											"end": 18315,
											"name": "SWAP1"
										},
										{
											"begin": 18299,
											"end": 18315,
											"name": "DUP4"
										},
										{
											"begin": 18299,
											"end": 18315,
											"name": "ISZERO"
										},
										{
											"begin": 18299,
											"end": 18315,
											"name": "ISZERO"
										},
										{
											"begin": 18299,
											"end": 18315,
											"name": "MUL"
										},
										{
											"begin": 18299,
											"end": 18315,
											"name": "OR"
										},
										{
											"begin": 18299,
											"end": 18315,
											"name": "SWAP1"
										},
										{
											"begin": 18299,
											"end": 18315,
											"name": "SSTORE"
										},
										{
											"begin": 18299,
											"end": 18315,
											"name": "POP"
										},
										{
											"begin": 18402,
											"end": 18417,
											"name": "TIMESTAMP"
										},
										{
											"begin": 18394,
											"end": 18400,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 18394,
											"end": 18400,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18394,
											"end": 18400,
											"name": "SWAP1"
										},
										{
											"begin": 18394,
											"end": 18400,
											"name": "SLOAD"
										},
										{
											"begin": 18394,
											"end": 18400,
											"name": "SWAP1"
										},
										{
											"begin": 18394,
											"end": 18400,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 18394,
											"end": 18400,
											"name": "EXP"
										},
										{
											"begin": 18394,
											"end": 18400,
											"name": "SWAP1"
										},
										{
											"begin": 18394,
											"end": 18400,
											"name": "DIV"
										},
										{
											"begin": 18394,
											"end": 18400,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 18394,
											"end": 18400,
											"name": "AND"
										},
										{
											"begin": 18366,
											"end": 18418,
											"name": "ISZERO"
										},
										{
											"begin": 18366,
											"end": 18418,
											"name": "ISZERO"
										},
										{
											"begin": 18366,
											"end": 18418,
											"name": "PUSH",
											"value": "160914EA27C60AA29A5F3A69D74E6069869DE36E38939DE1E0A66B921D8623D2"
										},
										{
											"begin": 18366,
											"end": 18418,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18366,
											"end": 18418,
											"name": "MLOAD"
										},
										{
											"begin": 18366,
											"end": 18418,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18366,
											"end": 18418,
											"name": "MLOAD"
										},
										{
											"begin": 18366,
											"end": 18418,
											"name": "DUP1"
										},
										{
											"begin": 18366,
											"end": 18418,
											"name": "SWAP2"
										},
										{
											"begin": 18366,
											"end": 18418,
											"name": "SUB"
										},
										{
											"begin": 18366,
											"end": 18418,
											"name": "SWAP1"
										},
										{
											"begin": 18366,
											"end": 18418,
											"name": "LOG3"
										},
										{
											"begin": 18438,
											"end": 18444,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 18438,
											"end": 18444,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18438,
											"end": 18444,
											"name": "SWAP1"
										},
										{
											"begin": 18438,
											"end": 18444,
											"name": "SLOAD"
										},
										{
											"begin": 18438,
											"end": 18444,
											"name": "SWAP1"
										},
										{
											"begin": 18438,
											"end": 18444,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 18438,
											"end": 18444,
											"name": "EXP"
										},
										{
											"begin": 18438,
											"end": 18444,
											"name": "SWAP1"
										},
										{
											"begin": 18438,
											"end": 18444,
											"name": "DIV"
										},
										{
											"begin": 18438,
											"end": 18444,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 18438,
											"end": 18444,
											"name": "AND"
										},
										{
											"begin": 18431,
											"end": 18444,
											"name": "SWAP1"
										},
										{
											"begin": 18431,
											"end": 18444,
											"name": "POP"
										},
										{
											"begin": 18230,
											"end": 18452,
											"name": "SWAP1"
										},
										{
											"begin": 18230,
											"end": 18452,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11703,
											"end": 12195,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 11703,
											"end": 12195,
											"name": "JUMPDEST"
										},
										{
											"begin": 4007,
											"end": 4011,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3997,
											"end": 4011,
											"name": "ISZERO"
										},
										{
											"begin": 3997,
											"end": 4011,
											"name": "ISZERO"
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "SWAP1"
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "SLOAD"
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "SWAP1"
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "EXP"
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "SWAP1"
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "DIV"
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "AND"
										},
										{
											"begin": 3997,
											"end": 4011,
											"name": "ISZERO"
										},
										{
											"begin": 3997,
											"end": 4011,
											"name": "ISZERO"
										},
										{
											"begin": 3997,
											"end": 4011,
											"name": "EQ"
										},
										{
											"begin": 3989,
											"end": 4012,
											"name": "ISZERO"
										},
										{
											"begin": 3989,
											"end": 4012,
											"name": "ISZERO"
										},
										{
											"begin": 3989,
											"end": 4012,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 3989,
											"end": 4012,
											"name": "JUMPI"
										},
										{
											"begin": 3989,
											"end": 4012,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3989,
											"end": 4012,
											"name": "DUP1"
										},
										{
											"begin": 3989,
											"end": 4012,
											"name": "REVERT"
										},
										{
											"begin": 3989,
											"end": 4012,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 3989,
											"end": 4012,
											"name": "JUMPDEST"
										},
										{
											"begin": 4097,
											"end": 4105,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4097,
											"end": 4105,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4097,
											"end": 4105,
											"name": "SWAP1"
										},
										{
											"begin": 4097,
											"end": 4105,
											"name": "SLOAD"
										},
										{
											"begin": 4097,
											"end": 4105,
											"name": "SWAP1"
										},
										{
											"begin": 4097,
											"end": 4105,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4097,
											"end": 4105,
											"name": "EXP"
										},
										{
											"begin": 4097,
											"end": 4105,
											"name": "SWAP1"
										},
										{
											"begin": 4097,
											"end": 4105,
											"name": "DIV"
										},
										{
											"begin": 4097,
											"end": 4105,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4097,
											"end": 4105,
											"name": "AND"
										},
										{
											"begin": 4083,
											"end": 4105,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4083,
											"end": 4105,
											"name": "AND"
										},
										{
											"begin": 4083,
											"end": 4093,
											"name": "CALLER"
										},
										{
											"begin": 4083,
											"end": 4105,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4083,
											"end": 4105,
											"name": "AND"
										},
										{
											"begin": 4083,
											"end": 4105,
											"name": "EQ"
										},
										{
											"begin": 4075,
											"end": 4106,
											"name": "ISZERO"
										},
										{
											"begin": 4075,
											"end": 4106,
											"name": "ISZERO"
										},
										{
											"begin": 4075,
											"end": 4106,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 4075,
											"end": 4106,
											"name": "JUMPI"
										},
										{
											"begin": 4075,
											"end": 4106,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4075,
											"end": 4106,
											"name": "DUP1"
										},
										{
											"begin": 4075,
											"end": 4106,
											"name": "REVERT"
										},
										{
											"begin": 4075,
											"end": 4106,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 4075,
											"end": 4106,
											"name": "JUMPDEST"
										},
										{
											"begin": 4639,
											"end": 4654,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 4639,
											"end": 4654,
											"name": "SLOAD"
										},
										{
											"begin": 4623,
											"end": 4627,
											"name": "ADDRESS"
										},
										{
											"begin": 4623,
											"end": 4635,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4623,
											"end": 4635,
											"name": "AND"
										},
										{
											"begin": 4623,
											"end": 4635,
											"name": "BALANCE"
										},
										{
											"begin": 4623,
											"end": 4654,
											"name": "LT"
										},
										{
											"begin": 4623,
											"end": 4654,
											"name": "ISZERO"
										},
										{
											"begin": 4615,
											"end": 4655,
											"name": "ISZERO"
										},
										{
											"begin": 4615,
											"end": 4655,
											"name": "ISZERO"
										},
										{
											"begin": 4615,
											"end": 4655,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 4615,
											"end": 4655,
											"name": "JUMPI"
										},
										{
											"begin": 4615,
											"end": 4655,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4615,
											"end": 4655,
											"name": "DUP1"
										},
										{
											"begin": 4615,
											"end": 4655,
											"name": "REVERT"
										},
										{
											"begin": 4615,
											"end": 4655,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 4615,
											"end": 4655,
											"name": "JUMPDEST"
										},
										{
											"begin": 4733,
											"end": 4744,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 4724,
											"end": 4744,
											"name": "DUP1"
										},
										{
											"begin": 4724,
											"end": 4744,
											"name": "DUP2"
										},
										{
											"begin": 4724,
											"end": 4744,
											"name": "GT"
										},
										{
											"begin": 4724,
											"end": 4744,
											"name": "ISZERO"
										},
										{
											"begin": 4724,
											"end": 4744,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 4724,
											"end": 4744,
											"name": "JUMPI"
										},
										{
											"begin": 4724,
											"end": 4744,
											"name": "INVALID"
										},
										{
											"begin": 4724,
											"end": 4744,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 4724,
											"end": 4744,
											"name": "JUMPDEST"
										},
										{
											"begin": 4724,
											"end": 4729,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 4724,
											"end": 4729,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4724,
											"end": 4729,
											"name": "SWAP1"
										},
										{
											"begin": 4724,
											"end": 4729,
											"name": "SLOAD"
										},
										{
											"begin": 4724,
											"end": 4729,
											"name": "SWAP1"
										},
										{
											"begin": 4724,
											"end": 4729,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4724,
											"end": 4729,
											"name": "EXP"
										},
										{
											"begin": 4724,
											"end": 4729,
											"name": "SWAP1"
										},
										{
											"begin": 4724,
											"end": 4729,
											"name": "DIV"
										},
										{
											"begin": 4724,
											"end": 4729,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 4724,
											"end": 4729,
											"name": "AND"
										},
										{
											"begin": 4724,
											"end": 4744,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 4724,
											"end": 4744,
											"name": "DUP2"
										},
										{
											"begin": 4724,
											"end": 4744,
											"name": "GT"
										},
										{
											"begin": 4724,
											"end": 4744,
											"name": "ISZERO"
										},
										{
											"begin": 4724,
											"end": 4744,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 4724,
											"end": 4744,
											"name": "JUMPI"
										},
										{
											"begin": 4724,
											"end": 4744,
											"name": "INVALID"
										},
										{
											"begin": 4724,
											"end": 4744,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 4724,
											"end": 4744,
											"name": "JUMPDEST"
										},
										{
											"begin": 4724,
											"end": 4744,
											"name": "EQ"
										},
										{
											"begin": 4724,
											"end": 4744,
											"name": "ISZERO"
										},
										{
											"begin": 4716,
											"end": 4745,
											"name": "ISZERO"
										},
										{
											"begin": 4716,
											"end": 4745,
											"name": "ISZERO"
										},
										{
											"begin": 4716,
											"end": 4745,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 4716,
											"end": 4745,
											"name": "JUMPI"
										},
										{
											"begin": 4716,
											"end": 4745,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4716,
											"end": 4745,
											"name": "DUP1"
										},
										{
											"begin": 4716,
											"end": 4745,
											"name": "REVERT"
										},
										{
											"begin": 4716,
											"end": 4745,
											"name": "tag",
											"value": "79"
										},
										{
											"begin": 4716,
											"end": 4745,
											"name": "JUMPDEST"
										},
										{
											"begin": 11861,
											"end": 11876,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11853,
											"end": 11858,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 11853,
											"end": 11858,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11853,
											"end": 11876,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11853,
											"end": 11876,
											"name": "EXP"
										},
										{
											"begin": 11853,
											"end": 11876,
											"name": "DUP2"
										},
										{
											"begin": 11853,
											"end": 11876,
											"name": "SLOAD"
										},
										{
											"begin": 11853,
											"end": 11876,
											"name": "DUP2"
										},
										{
											"begin": 11853,
											"end": 11876,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 11853,
											"end": 11876,
											"name": "MUL"
										},
										{
											"begin": 11853,
											"end": 11876,
											"name": "NOT"
										},
										{
											"begin": 11853,
											"end": 11876,
											"name": "AND"
										},
										{
											"begin": 11853,
											"end": 11876,
											"name": "SWAP1"
										},
										{
											"begin": 11853,
											"end": 11876,
											"name": "DUP4"
										},
										{
											"begin": 11853,
											"end": 11876,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 11853,
											"end": 11876,
											"name": "DUP2"
										},
										{
											"begin": 11853,
											"end": 11876,
											"name": "GT"
										},
										{
											"begin": 11853,
											"end": 11876,
											"name": "ISZERO"
										},
										{
											"begin": 11853,
											"end": 11876,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 11853,
											"end": 11876,
											"name": "JUMPI"
										},
										{
											"begin": 11853,
											"end": 11876,
											"name": "INVALID"
										},
										{
											"begin": 11853,
											"end": 11876,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 11853,
											"end": 11876,
											"name": "JUMPDEST"
										},
										{
											"begin": 11853,
											"end": 11876,
											"name": "MUL"
										},
										{
											"begin": 11853,
											"end": 11876,
											"name": "OR"
										},
										{
											"begin": 11853,
											"end": 11876,
											"name": "SWAP1"
										},
										{
											"begin": 11853,
											"end": 11876,
											"name": "SSTORE"
										},
										{
											"begin": 11853,
											"end": 11876,
											"name": "POP"
										},
										{
											"begin": 11948,
											"end": 11963,
											"name": "TIMESTAMP"
										},
										{
											"begin": 11941,
											"end": 11946,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 11941,
											"end": 11946,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11941,
											"end": 11946,
											"name": "SWAP1"
										},
										{
											"begin": 11941,
											"end": 11946,
											"name": "SLOAD"
										},
										{
											"begin": 11941,
											"end": 11946,
											"name": "SWAP1"
										},
										{
											"begin": 11941,
											"end": 11946,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11941,
											"end": 11946,
											"name": "EXP"
										},
										{
											"begin": 11941,
											"end": 11946,
											"name": "SWAP1"
										},
										{
											"begin": 11941,
											"end": 11946,
											"name": "DIV"
										},
										{
											"begin": 11941,
											"end": 11946,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 11941,
											"end": 11946,
											"name": "AND"
										},
										{
											"begin": 11919,
											"end": 11964,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 11919,
											"end": 11964,
											"name": "DUP2"
										},
										{
											"begin": 11919,
											"end": 11964,
											"name": "GT"
										},
										{
											"begin": 11919,
											"end": 11964,
											"name": "ISZERO"
										},
										{
											"begin": 11919,
											"end": 11964,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 11919,
											"end": 11964,
											"name": "JUMPI"
										},
										{
											"begin": 11919,
											"end": 11964,
											"name": "INVALID"
										},
										{
											"begin": 11919,
											"end": 11964,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 11919,
											"end": 11964,
											"name": "JUMPDEST"
										},
										{
											"begin": 11919,
											"end": 11964,
											"name": "PUSH",
											"value": "AAAE373901E745122C2E0925AD006227969C6CD190B7D5EA2FB7FDBD1D955B35"
										},
										{
											"begin": 11919,
											"end": 11964,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11919,
											"end": 11964,
											"name": "MLOAD"
										},
										{
											"begin": 11919,
											"end": 11964,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11919,
											"end": 11964,
											"name": "MLOAD"
										},
										{
											"begin": 11919,
											"end": 11964,
											"name": "DUP1"
										},
										{
											"begin": 11919,
											"end": 11964,
											"name": "SWAP2"
										},
										{
											"begin": 11919,
											"end": 11964,
											"name": "SUB"
										},
										{
											"begin": 11919,
											"end": 11964,
											"name": "SWAP1"
										},
										{
											"begin": 11919,
											"end": 11964,
											"name": "LOG3"
										},
										{
											"begin": 12062,
											"end": 12077,
											"name": "TIMESTAMP"
										},
										{
											"begin": 12048,
											"end": 12052,
											"name": "ADDRESS"
										},
										{
											"begin": 12048,
											"end": 12060,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12048,
											"end": 12060,
											"name": "AND"
										},
										{
											"begin": 12048,
											"end": 12060,
											"name": "BALANCE"
										},
										{
											"begin": 12036,
											"end": 12046,
											"name": "CALLER"
										},
										{
											"begin": 12014,
											"end": 12078,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12014,
											"end": 12078,
											"name": "AND"
										},
										{
											"begin": 12014,
											"end": 12078,
											"name": "PUSH",
											"value": "20734F14D107B526674905E470E35D0A474F9FB996A7BDB034C839C8894524E6"
										},
										{
											"begin": 12014,
											"end": 12078,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12014,
											"end": 12078,
											"name": "MLOAD"
										},
										{
											"begin": 12014,
											"end": 12078,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12014,
											"end": 12078,
											"name": "MLOAD"
										},
										{
											"begin": 12014,
											"end": 12078,
											"name": "DUP1"
										},
										{
											"begin": 12014,
											"end": 12078,
											"name": "SWAP2"
										},
										{
											"begin": 12014,
											"end": 12078,
											"name": "SUB"
										},
										{
											"begin": 12014,
											"end": 12078,
											"name": "SWAP1"
										},
										{
											"begin": 12014,
											"end": 12078,
											"name": "LOG4"
										},
										{
											"begin": 12156,
											"end": 12164,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12156,
											"end": 12164,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12156,
											"end": 12164,
											"name": "SWAP1"
										},
										{
											"begin": 12156,
											"end": 12164,
											"name": "SLOAD"
										},
										{
											"begin": 12156,
											"end": 12164,
											"name": "SWAP1"
										},
										{
											"begin": 12156,
											"end": 12164,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12156,
											"end": 12164,
											"name": "EXP"
										},
										{
											"begin": 12156,
											"end": 12164,
											"name": "SWAP1"
										},
										{
											"begin": 12156,
											"end": 12164,
											"name": "DIV"
										},
										{
											"begin": 12156,
											"end": 12164,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12156,
											"end": 12164,
											"name": "AND"
										},
										{
											"begin": 12156,
											"end": 12173,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12156,
											"end": 12173,
											"name": "AND"
										},
										{
											"begin": 12156,
											"end": 12187,
											"name": "PUSH",
											"value": "8FC"
										},
										{
											"begin": 12174,
											"end": 12178,
											"name": "ADDRESS"
										},
										{
											"begin": 12174,
											"end": 12186,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12174,
											"end": 12186,
											"name": "AND"
										},
										{
											"begin": 12174,
											"end": 12186,
											"name": "BALANCE"
										},
										{
											"begin": 12156,
											"end": 12187,
											"name": "SWAP1"
										},
										{
											"begin": 12156,
											"end": 12187,
											"name": "DUP2"
										},
										{
											"begin": 12156,
											"end": 12187,
											"name": "ISZERO"
										},
										{
											"begin": 12156,
											"end": 12187,
											"name": "MUL"
										},
										{
											"begin": 12156,
											"end": 12187,
											"name": "SWAP1"
										},
										{
											"begin": 12156,
											"end": 12187,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12156,
											"end": 12187,
											"name": "MLOAD"
										},
										{
											"begin": 12156,
											"end": 12187,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12156,
											"end": 12187,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12156,
											"end": 12187,
											"name": "MLOAD"
										},
										{
											"begin": 12156,
											"end": 12187,
											"name": "DUP1"
										},
										{
											"begin": 12156,
											"end": 12187,
											"name": "DUP4"
										},
										{
											"begin": 12156,
											"end": 12187,
											"name": "SUB"
										},
										{
											"begin": 12156,
											"end": 12187,
											"name": "DUP2"
										},
										{
											"begin": 12156,
											"end": 12187,
											"name": "DUP6"
										},
										{
											"begin": 12156,
											"end": 12187,
											"name": "DUP9"
										},
										{
											"begin": 12156,
											"end": 12187,
											"name": "DUP9"
										},
										{
											"begin": 12156,
											"end": 12187,
											"name": "CALL"
										},
										{
											"begin": 12156,
											"end": 12187,
											"name": "SWAP4"
										},
										{
											"begin": 12156,
											"end": 12187,
											"name": "POP"
										},
										{
											"begin": 12156,
											"end": 12187,
											"name": "POP"
										},
										{
											"begin": 12156,
											"end": 12187,
											"name": "POP"
										},
										{
											"begin": 12156,
											"end": 12187,
											"name": "POP"
										},
										{
											"begin": 12156,
											"end": 12187,
											"name": "ISZERO"
										},
										{
											"begin": 12156,
											"end": 12187,
											"name": "ISZERO"
										},
										{
											"begin": 12156,
											"end": 12187,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 12156,
											"end": 12187,
											"name": "JUMPI"
										},
										{
											"begin": 12156,
											"end": 12187,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12156,
											"end": 12187,
											"name": "DUP1"
										},
										{
											"begin": 12156,
											"end": 12187,
											"name": "REVERT"
										},
										{
											"begin": 12156,
											"end": 12187,
											"name": "tag",
											"value": "83"
										},
										{
											"begin": 12156,
											"end": 12187,
											"name": "JUMPDEST"
										},
										{
											"begin": 11703,
											"end": 12195,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 8949,
											"end": 11360,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 8949,
											"end": 11360,
											"name": "JUMPDEST"
										},
										{
											"begin": 9756,
											"end": 9771,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4097,
											"end": 4105,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4097,
											"end": 4105,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4097,
											"end": 4105,
											"name": "SWAP1"
										},
										{
											"begin": 4097,
											"end": 4105,
											"name": "SLOAD"
										},
										{
											"begin": 4097,
											"end": 4105,
											"name": "SWAP1"
										},
										{
											"begin": 4097,
											"end": 4105,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4097,
											"end": 4105,
											"name": "EXP"
										},
										{
											"begin": 4097,
											"end": 4105,
											"name": "SWAP1"
										},
										{
											"begin": 4097,
											"end": 4105,
											"name": "DIV"
										},
										{
											"begin": 4097,
											"end": 4105,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4097,
											"end": 4105,
											"name": "AND"
										},
										{
											"begin": 4083,
											"end": 4105,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4083,
											"end": 4105,
											"name": "AND"
										},
										{
											"begin": 4083,
											"end": 4093,
											"name": "CALLER"
										},
										{
											"begin": 4083,
											"end": 4105,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4083,
											"end": 4105,
											"name": "AND"
										},
										{
											"begin": 4083,
											"end": 4105,
											"name": "EQ"
										},
										{
											"begin": 4075,
											"end": 4106,
											"name": "ISZERO"
										},
										{
											"begin": 4075,
											"end": 4106,
											"name": "ISZERO"
										},
										{
											"begin": 4075,
											"end": 4106,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 4075,
											"end": 4106,
											"name": "JUMPI"
										},
										{
											"begin": 4075,
											"end": 4106,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4075,
											"end": 4106,
											"name": "DUP1"
										},
										{
											"begin": 4075,
											"end": 4106,
											"name": "REVERT"
										},
										{
											"begin": 4075,
											"end": 4106,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 4075,
											"end": 4106,
											"name": "JUMPDEST"
										},
										{
											"begin": 4537,
											"end": 4552,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4528,
											"end": 4552,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 4528,
											"end": 4552,
											"name": "DUP2"
										},
										{
											"begin": 4528,
											"end": 4552,
											"name": "GT"
										},
										{
											"begin": 4528,
											"end": 4552,
											"name": "ISZERO"
										},
										{
											"begin": 4528,
											"end": 4552,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 4528,
											"end": 4552,
											"name": "JUMPI"
										},
										{
											"begin": 4528,
											"end": 4552,
											"name": "INVALID"
										},
										{
											"begin": 4528,
											"end": 4552,
											"name": "tag",
											"value": "87"
										},
										{
											"begin": 4528,
											"end": 4552,
											"name": "JUMPDEST"
										},
										{
											"begin": 4528,
											"end": 4533,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 4528,
											"end": 4533,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4528,
											"end": 4533,
											"name": "SWAP1"
										},
										{
											"begin": 4528,
											"end": 4533,
											"name": "SLOAD"
										},
										{
											"begin": 4528,
											"end": 4533,
											"name": "SWAP1"
										},
										{
											"begin": 4528,
											"end": 4533,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4528,
											"end": 4533,
											"name": "EXP"
										},
										{
											"begin": 4528,
											"end": 4533,
											"name": "SWAP1"
										},
										{
											"begin": 4528,
											"end": 4533,
											"name": "DIV"
										},
										{
											"begin": 4528,
											"end": 4533,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 4528,
											"end": 4533,
											"name": "AND"
										},
										{
											"begin": 4528,
											"end": 4552,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 4528,
											"end": 4552,
											"name": "DUP2"
										},
										{
											"begin": 4528,
											"end": 4552,
											"name": "GT"
										},
										{
											"begin": 4528,
											"end": 4552,
											"name": "ISZERO"
										},
										{
											"begin": 4528,
											"end": 4552,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 4528,
											"end": 4552,
											"name": "JUMPI"
										},
										{
											"begin": 4528,
											"end": 4552,
											"name": "INVALID"
										},
										{
											"begin": 4528,
											"end": 4552,
											"name": "tag",
											"value": "88"
										},
										{
											"begin": 4528,
											"end": 4552,
											"name": "JUMPDEST"
										},
										{
											"begin": 4528,
											"end": 4552,
											"name": "EQ"
										},
										{
											"begin": 4520,
											"end": 4553,
											"name": "ISZERO"
										},
										{
											"begin": 4520,
											"end": 4553,
											"name": "ISZERO"
										},
										{
											"begin": 4520,
											"end": 4553,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 4520,
											"end": 4553,
											"name": "JUMPI"
										},
										{
											"begin": 4520,
											"end": 4553,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4520,
											"end": 4553,
											"name": "DUP1"
										},
										{
											"begin": 4520,
											"end": 4553,
											"name": "REVERT"
										},
										{
											"begin": 4520,
											"end": 4553,
											"name": "tag",
											"value": "89"
										},
										{
											"begin": 4520,
											"end": 4553,
											"name": "JUMPDEST"
										},
										{
											"begin": 9119,
											"end": 9120,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9097,
											"end": 9116,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 9097,
											"end": 9116,
											"name": "SLOAD"
										},
										{
											"begin": 9097,
											"end": 9120,
											"name": "GT"
										},
										{
											"begin": 9089,
											"end": 9121,
											"name": "ISZERO"
										},
										{
											"begin": 9089,
											"end": 9121,
											"name": "ISZERO"
										},
										{
											"begin": 9089,
											"end": 9121,
											"name": "PUSH [tag]",
											"value": "91"
										},
										{
											"begin": 9089,
											"end": 9121,
											"name": "JUMPI"
										},
										{
											"begin": 9089,
											"end": 9121,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9089,
											"end": 9121,
											"name": "DUP1"
										},
										{
											"begin": 9089,
											"end": 9121,
											"name": "REVERT"
										},
										{
											"begin": 9089,
											"end": 9121,
											"name": "tag",
											"value": "91"
										},
										{
											"begin": 9089,
											"end": 9121,
											"name": "JUMPDEST"
										},
										{
											"begin": 9232,
											"end": 9252,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 9232,
											"end": 9252,
											"name": "SLOAD"
										},
										{
											"begin": 9219,
											"end": 9228,
											"name": "CALLVALUE"
										},
										{
											"begin": 9219,
											"end": 9252,
											"name": "LT"
										},
										{
											"begin": 9219,
											"end": 9252,
											"name": "ISZERO"
										},
										{
											"begin": 9211,
											"end": 9253,
											"name": "ISZERO"
										},
										{
											"begin": 9211,
											"end": 9253,
											"name": "ISZERO"
										},
										{
											"begin": 9211,
											"end": 9253,
											"name": "PUSH [tag]",
											"value": "92"
										},
										{
											"begin": 9211,
											"end": 9253,
											"name": "JUMPI"
										},
										{
											"begin": 9211,
											"end": 9253,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9211,
											"end": 9253,
											"name": "DUP1"
										},
										{
											"begin": 9211,
											"end": 9253,
											"name": "REVERT"
										},
										{
											"begin": 9211,
											"end": 9253,
											"name": "tag",
											"value": "92"
										},
										{
											"begin": 9211,
											"end": 9253,
											"name": "JUMPDEST"
										},
										{
											"begin": 9473,
											"end": 9485,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 9473,
											"end": 9485,
											"name": "SLOAD"
										},
										{
											"begin": 9458,
											"end": 9470,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9458,
											"end": 9470,
											"name": "SLOAD"
										},
										{
											"begin": 9458,
											"end": 9485,
											"name": "LT"
										},
										{
											"begin": 9451,
											"end": 9486,
											"name": "ISZERO"
										},
										{
											"begin": 9451,
											"end": 9486,
											"name": "ISZERO"
										},
										{
											"begin": 9451,
											"end": 9486,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 9451,
											"end": 9486,
											"name": "JUMPI"
										},
										{
											"begin": 9451,
											"end": 9486,
											"name": "INVALID"
										},
										{
											"begin": 9451,
											"end": 9486,
											"name": "tag",
											"value": "93"
										},
										{
											"begin": 9451,
											"end": 9486,
											"name": "JUMPDEST"
										},
										{
											"begin": 9547,
											"end": 9566,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 9547,
											"end": 9566,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9547,
											"end": 9568,
											"name": "DUP2"
										},
										{
											"begin": 9547,
											"end": 9568,
											"name": "SLOAD"
										},
										{
											"begin": 9547,
											"end": 9568,
											"name": "DUP1"
										},
										{
											"begin": 9547,
											"end": 9568,
											"name": "SWAP3"
										},
										{
											"begin": 9547,
											"end": 9568,
											"name": "SWAP2"
										},
										{
											"begin": 9547,
											"end": 9568,
											"name": "SWAP1"
										},
										{
											"begin": 9547,
											"end": 9568,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 9547,
											"end": 9568,
											"name": "SWAP1"
										},
										{
											"begin": 9547,
											"end": 9568,
											"name": "SUB"
										},
										{
											"begin": 9547,
											"end": 9568,
											"name": "SWAP2"
										},
										{
											"begin": 9547,
											"end": 9568,
											"name": "SWAP1"
										},
										{
											"begin": 9547,
											"end": 9568,
											"name": "POP"
										},
										{
											"begin": 9547,
											"end": 9568,
											"name": "SSTORE"
										},
										{
											"begin": 9547,
											"end": 9568,
											"name": "POP"
										},
										{
											"begin": 9641,
											"end": 9656,
											"name": "TIMESTAMP"
										},
										{
											"begin": 9621,
											"end": 9638,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 9621,
											"end": 9656,
											"name": "DUP2"
										},
										{
											"begin": 9621,
											"end": 9656,
											"name": "SWAP1"
										},
										{
											"begin": 9621,
											"end": 9656,
											"name": "SSTORE"
										},
										{
											"begin": 9621,
											"end": 9656,
											"name": "POP"
										},
										{
											"begin": 9774,
											"end": 9775,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9756,
											"end": 9775,
											"name": "SWAP1"
										},
										{
											"begin": 9756,
											"end": 9775,
											"name": "POP"
										},
										{
											"begin": 9995,
											"end": 10015,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 9995,
											"end": 10015,
											"name": "SLOAD"
										},
										{
											"begin": 9983,
											"end": 9992,
											"name": "CALLVALUE"
										},
										{
											"begin": 9983,
											"end": 10015,
											"name": "GT"
										},
										{
											"begin": 9979,
											"end": 10615,
											"name": "ISZERO"
										},
										{
											"begin": 9979,
											"end": 10615,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 9979,
											"end": 10615,
											"name": "JUMPI"
										},
										{
											"begin": 10120,
											"end": 10155,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 10134,
											"end": 10154,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 10134,
											"end": 10154,
											"name": "SLOAD"
										},
										{
											"begin": 10120,
											"end": 10129,
											"name": "CALLVALUE"
										},
										{
											"begin": 10120,
											"end": 10133,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 10120,
											"end": 10133,
											"name": "SWAP1"
										},
										{
											"begin": 10120,
											"end": 10155,
											"name": "SWAP2"
										},
										{
											"begin": 10120,
											"end": 10155,
											"name": "SWAP1"
										},
										{
											"begin": 10120,
											"end": 10155,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 10120,
											"end": 10155,
											"name": "AND"
										},
										{
											"begin": 10120,
											"end": 10155,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10120,
											"end": 10155,
											"name": "tag",
											"value": "95"
										},
										{
											"begin": 10120,
											"end": 10155,
											"name": "JUMPDEST"
										},
										{
											"begin": 10107,
											"end": 10155,
											"name": "SWAP1"
										},
										{
											"begin": 10107,
											"end": 10155,
											"name": "POP"
										},
										{
											"begin": 10244,
											"end": 10269,
											"name": "PUSH [tag]",
											"value": "97"
										},
										{
											"begin": 10258,
											"end": 10268,
											"name": "DUP2"
										},
										{
											"begin": 10244,
											"end": 10253,
											"name": "CALLVALUE"
										},
										{
											"begin": 10244,
											"end": 10257,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 10244,
											"end": 10257,
											"name": "SWAP1"
										},
										{
											"begin": 10244,
											"end": 10269,
											"name": "SWAP2"
										},
										{
											"begin": 10244,
											"end": 10269,
											"name": "SWAP1"
										},
										{
											"begin": 10244,
											"end": 10269,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 10244,
											"end": 10269,
											"name": "AND"
										},
										{
											"begin": 10244,
											"end": 10269,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10244,
											"end": 10269,
											"name": "tag",
											"value": "97"
										},
										{
											"begin": 10244,
											"end": 10269,
											"name": "JUMPDEST"
										},
										{
											"begin": 10220,
											"end": 10240,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 10220,
											"end": 10240,
											"name": "SLOAD"
										},
										{
											"begin": 10220,
											"end": 10269,
											"name": "EQ"
										},
										{
											"begin": 10213,
											"end": 10270,
											"name": "ISZERO"
										},
										{
											"begin": 10213,
											"end": 10270,
											"name": "ISZERO"
										},
										{
											"begin": 10213,
											"end": 10270,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 10213,
											"end": 10270,
											"name": "JUMPI"
										},
										{
											"begin": 10213,
											"end": 10270,
											"name": "INVALID"
										},
										{
											"begin": 10213,
											"end": 10270,
											"name": "tag",
											"value": "98"
										},
										{
											"begin": 10213,
											"end": 10270,
											"name": "JUMPDEST"
										},
										{
											"begin": 10346,
											"end": 10355,
											"name": "CALLVALUE"
										},
										{
											"begin": 10332,
											"end": 10342,
											"name": "DUP2"
										},
										{
											"begin": 10332,
											"end": 10355,
											"name": "GT"
										},
										{
											"begin": 10332,
											"end": 10355,
											"name": "ISZERO"
										},
										{
											"begin": 10325,
											"end": 10356,
											"name": "ISZERO"
										},
										{
											"begin": 10325,
											"end": 10356,
											"name": "ISZERO"
										},
										{
											"begin": 10325,
											"end": 10356,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 10325,
											"end": 10356,
											"name": "JUMPI"
										},
										{
											"begin": 10325,
											"end": 10356,
											"name": "INVALID"
										},
										{
											"begin": 10325,
											"end": 10356,
											"name": "tag",
											"value": "99"
										},
										{
											"begin": 10325,
											"end": 10356,
											"name": "JUMPDEST"
										},
										{
											"begin": 10438,
											"end": 10448,
											"name": "CALLER"
										},
										{
											"begin": 10438,
											"end": 10457,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10438,
											"end": 10457,
											"name": "AND"
										},
										{
											"begin": 10438,
											"end": 10469,
											"name": "PUSH",
											"value": "8FC"
										},
										{
											"begin": 10458,
											"end": 10468,
											"name": "DUP3"
										},
										{
											"begin": 10438,
											"end": 10469,
											"name": "SWAP1"
										},
										{
											"begin": 10438,
											"end": 10469,
											"name": "DUP2"
										},
										{
											"begin": 10438,
											"end": 10469,
											"name": "ISZERO"
										},
										{
											"begin": 10438,
											"end": 10469,
											"name": "MUL"
										},
										{
											"begin": 10438,
											"end": 10469,
											"name": "SWAP1"
										},
										{
											"begin": 10438,
											"end": 10469,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10438,
											"end": 10469,
											"name": "MLOAD"
										},
										{
											"begin": 10438,
											"end": 10469,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10438,
											"end": 10469,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10438,
											"end": 10469,
											"name": "MLOAD"
										},
										{
											"begin": 10438,
											"end": 10469,
											"name": "DUP1"
										},
										{
											"begin": 10438,
											"end": 10469,
											"name": "DUP4"
										},
										{
											"begin": 10438,
											"end": 10469,
											"name": "SUB"
										},
										{
											"begin": 10438,
											"end": 10469,
											"name": "DUP2"
										},
										{
											"begin": 10438,
											"end": 10469,
											"name": "DUP6"
										},
										{
											"begin": 10438,
											"end": 10469,
											"name": "DUP9"
										},
										{
											"begin": 10438,
											"end": 10469,
											"name": "DUP9"
										},
										{
											"begin": 10438,
											"end": 10469,
											"name": "CALL"
										},
										{
											"begin": 10438,
											"end": 10469,
											"name": "SWAP4"
										},
										{
											"begin": 10438,
											"end": 10469,
											"name": "POP"
										},
										{
											"begin": 10438,
											"end": 10469,
											"name": "POP"
										},
										{
											"begin": 10438,
											"end": 10469,
											"name": "POP"
										},
										{
											"begin": 10438,
											"end": 10469,
											"name": "POP"
										},
										{
											"begin": 10438,
											"end": 10469,
											"name": "ISZERO"
										},
										{
											"begin": 10438,
											"end": 10469,
											"name": "ISZERO"
										},
										{
											"begin": 10438,
											"end": 10469,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 10438,
											"end": 10469,
											"name": "JUMPI"
										},
										{
											"begin": 10438,
											"end": 10469,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10438,
											"end": 10469,
											"name": "DUP1"
										},
										{
											"begin": 10438,
											"end": 10469,
											"name": "REVERT"
										},
										{
											"begin": 10438,
											"end": 10469,
											"name": "tag",
											"value": "100"
										},
										{
											"begin": 10438,
											"end": 10469,
											"name": "JUMPDEST"
										},
										{
											"begin": 10587,
											"end": 10602,
											"name": "TIMESTAMP"
										},
										{
											"begin": 10575,
											"end": 10585,
											"name": "DUP2"
										},
										{
											"begin": 10563,
											"end": 10573,
											"name": "CALLER"
										},
										{
											"begin": 10537,
											"end": 10603,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10537,
											"end": 10603,
											"name": "AND"
										},
										{
											"begin": 10537,
											"end": 10603,
											"name": "PUSH",
											"value": "5C9874487A2258C6BD6DC39A2CFCF7EA944B50B79D9A7152668779687B2EBD8D"
										},
										{
											"begin": 10537,
											"end": 10603,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10537,
											"end": 10603,
											"name": "MLOAD"
										},
										{
											"begin": 10537,
											"end": 10603,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10537,
											"end": 10603,
											"name": "MLOAD"
										},
										{
											"begin": 10537,
											"end": 10603,
											"name": "DUP1"
										},
										{
											"begin": 10537,
											"end": 10603,
											"name": "SWAP2"
										},
										{
											"begin": 10537,
											"end": 10603,
											"name": "SUB"
										},
										{
											"begin": 10537,
											"end": 10603,
											"name": "SWAP1"
										},
										{
											"begin": 10537,
											"end": 10603,
											"name": "LOG4"
										},
										{
											"begin": 9979,
											"end": 10615,
											"name": "tag",
											"value": "94"
										},
										{
											"begin": 9979,
											"end": 10615,
											"name": "JUMPDEST"
										},
										{
											"begin": 10745,
											"end": 10760,
											"name": "TIMESTAMP"
										},
										{
											"begin": 10718,
											"end": 10743,
											"name": "PUSH [tag]",
											"value": "101"
										},
										{
											"begin": 10732,
											"end": 10742,
											"name": "DUP3"
										},
										{
											"begin": 10718,
											"end": 10727,
											"name": "CALLVALUE"
										},
										{
											"begin": 10718,
											"end": 10731,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 10718,
											"end": 10731,
											"name": "SWAP1"
										},
										{
											"begin": 10718,
											"end": 10743,
											"name": "SWAP2"
										},
										{
											"begin": 10718,
											"end": 10743,
											"name": "SWAP1"
										},
										{
											"begin": 10718,
											"end": 10743,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 10718,
											"end": 10743,
											"name": "AND"
										},
										{
											"begin": 10718,
											"end": 10743,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10718,
											"end": 10743,
											"name": "tag",
											"value": "101"
										},
										{
											"begin": 10718,
											"end": 10743,
											"name": "JUMPDEST"
										},
										{
											"begin": 10706,
											"end": 10716,
											"name": "CALLER"
										},
										{
											"begin": 10674,
											"end": 10761,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10674,
											"end": 10761,
											"name": "AND"
										},
										{
											"begin": 10674,
											"end": 10761,
											"name": "PUSH",
											"value": "350A09487D622378C6EFBDA255F996387696319F803A2E53EEE64F7AA70BE85A"
										},
										{
											"begin": 10674,
											"end": 10761,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10674,
											"end": 10761,
											"name": "MLOAD"
										},
										{
											"begin": 10674,
											"end": 10761,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10674,
											"end": 10761,
											"name": "MLOAD"
										},
										{
											"begin": 10674,
											"end": 10761,
											"name": "DUP1"
										},
										{
											"begin": 10674,
											"end": 10761,
											"name": "SWAP2"
										},
										{
											"begin": 10674,
											"end": 10761,
											"name": "SUB"
										},
										{
											"begin": 10674,
											"end": 10761,
											"name": "SWAP1"
										},
										{
											"begin": 10674,
											"end": 10761,
											"name": "LOG4"
										},
										{
											"begin": 10866,
											"end": 10909,
											"name": "PUSH [tag]",
											"value": "102"
										},
										{
											"begin": 10883,
											"end": 10908,
											"name": "PUSH [tag]",
											"value": "103"
										},
										{
											"begin": 10897,
											"end": 10907,
											"name": "DUP3"
										},
										{
											"begin": 10883,
											"end": 10892,
											"name": "CALLVALUE"
										},
										{
											"begin": 10883,
											"end": 10896,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 10883,
											"end": 10896,
											"name": "SWAP1"
										},
										{
											"begin": 10883,
											"end": 10908,
											"name": "SWAP2"
										},
										{
											"begin": 10883,
											"end": 10908,
											"name": "SWAP1"
										},
										{
											"begin": 10883,
											"end": 10908,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 10883,
											"end": 10908,
											"name": "AND"
										},
										{
											"begin": 10883,
											"end": 10908,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10883,
											"end": 10908,
											"name": "tag",
											"value": "103"
										},
										{
											"begin": 10883,
											"end": 10908,
											"name": "JUMPDEST"
										},
										{
											"begin": 10866,
											"end": 10878,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10866,
											"end": 10878,
											"name": "SLOAD"
										},
										{
											"begin": 10866,
											"end": 10882,
											"name": "PUSH [tag]",
											"value": "104"
										},
										{
											"begin": 10866,
											"end": 10882,
											"name": "SWAP1"
										},
										{
											"begin": 10866,
											"end": 10909,
											"name": "SWAP2"
										},
										{
											"begin": 10866,
											"end": 10909,
											"name": "SWAP1"
										},
										{
											"begin": 10866,
											"end": 10909,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 10866,
											"end": 10909,
											"name": "AND"
										},
										{
											"begin": 10866,
											"end": 10909,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10866,
											"end": 10909,
											"name": "tag",
											"value": "102"
										},
										{
											"begin": 10866,
											"end": 10909,
											"name": "JUMPDEST"
										},
										{
											"begin": 10851,
											"end": 10863,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10851,
											"end": 10909,
											"name": "DUP2"
										},
										{
											"begin": 10851,
											"end": 10909,
											"name": "SWAP1"
										},
										{
											"begin": 10851,
											"end": 10909,
											"name": "SSTORE"
										},
										{
											"begin": 10851,
											"end": 10909,
											"name": "POP"
										},
										{
											"begin": 11013,
											"end": 11025,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 11013,
											"end": 11025,
											"name": "SLOAD"
										},
										{
											"begin": 10997,
											"end": 11009,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10997,
											"end": 11009,
											"name": "SLOAD"
										},
										{
											"begin": 10997,
											"end": 11025,
											"name": "EQ"
										},
										{
											"begin": 10993,
											"end": 11353,
											"name": "ISZERO"
										},
										{
											"begin": 10993,
											"end": 11353,
											"name": "PUSH [tag]",
											"value": "105"
										},
										{
											"begin": 10993,
											"end": 11353,
											"name": "JUMPI"
										},
										{
											"begin": 11120,
											"end": 11135,
											"name": "TIMESTAMP"
										},
										{
											"begin": 11108,
											"end": 11118,
											"name": "CALLER"
										},
										{
											"begin": 11079,
											"end": 11136,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11079,
											"end": 11136,
											"name": "AND"
										},
										{
											"begin": 11079,
											"end": 11136,
											"name": "PUSH",
											"value": "25630DE45A38A90CBCA3A2EB35A8197E51B56D6D912581711E5E3773FE77CABC"
										},
										{
											"begin": 11079,
											"end": 11136,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11079,
											"end": 11136,
											"name": "MLOAD"
										},
										{
											"begin": 11079,
											"end": 11136,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11079,
											"end": 11136,
											"name": "MLOAD"
										},
										{
											"begin": 11079,
											"end": 11136,
											"name": "DUP1"
										},
										{
											"begin": 11079,
											"end": 11136,
											"name": "SWAP2"
										},
										{
											"begin": 11079,
											"end": 11136,
											"name": "SUB"
										},
										{
											"begin": 11079,
											"end": 11136,
											"name": "SWAP1"
										},
										{
											"begin": 11079,
											"end": 11136,
											"name": "LOG3"
										},
										{
											"begin": 11224,
											"end": 11245,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 11216,
											"end": 11221,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 11216,
											"end": 11221,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11216,
											"end": 11245,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11216,
											"end": 11245,
											"name": "EXP"
										},
										{
											"begin": 11216,
											"end": 11245,
											"name": "DUP2"
										},
										{
											"begin": 11216,
											"end": 11245,
											"name": "SLOAD"
										},
										{
											"begin": 11216,
											"end": 11245,
											"name": "DUP2"
										},
										{
											"begin": 11216,
											"end": 11245,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 11216,
											"end": 11245,
											"name": "MUL"
										},
										{
											"begin": 11216,
											"end": 11245,
											"name": "NOT"
										},
										{
											"begin": 11216,
											"end": 11245,
											"name": "AND"
										},
										{
											"begin": 11216,
											"end": 11245,
											"name": "SWAP1"
										},
										{
											"begin": 11216,
											"end": 11245,
											"name": "DUP4"
										},
										{
											"begin": 11216,
											"end": 11245,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 11216,
											"end": 11245,
											"name": "DUP2"
										},
										{
											"begin": 11216,
											"end": 11245,
											"name": "GT"
										},
										{
											"begin": 11216,
											"end": 11245,
											"name": "ISZERO"
										},
										{
											"begin": 11216,
											"end": 11245,
											"name": "PUSH [tag]",
											"value": "106"
										},
										{
											"begin": 11216,
											"end": 11245,
											"name": "JUMPI"
										},
										{
											"begin": 11216,
											"end": 11245,
											"name": "INVALID"
										},
										{
											"begin": 11216,
											"end": 11245,
											"name": "tag",
											"value": "106"
										},
										{
											"begin": 11216,
											"end": 11245,
											"name": "JUMPDEST"
										},
										{
											"begin": 11216,
											"end": 11245,
											"name": "MUL"
										},
										{
											"begin": 11216,
											"end": 11245,
											"name": "OR"
										},
										{
											"begin": 11216,
											"end": 11245,
											"name": "SWAP1"
										},
										{
											"begin": 11216,
											"end": 11245,
											"name": "SSTORE"
										},
										{
											"begin": 11216,
											"end": 11245,
											"name": "POP"
										},
										{
											"begin": 11325,
											"end": 11340,
											"name": "TIMESTAMP"
										},
										{
											"begin": 11318,
											"end": 11323,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 11318,
											"end": 11323,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11318,
											"end": 11323,
											"name": "SWAP1"
										},
										{
											"begin": 11318,
											"end": 11323,
											"name": "SLOAD"
										},
										{
											"begin": 11318,
											"end": 11323,
											"name": "SWAP1"
										},
										{
											"begin": 11318,
											"end": 11323,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11318,
											"end": 11323,
											"name": "EXP"
										},
										{
											"begin": 11318,
											"end": 11323,
											"name": "SWAP1"
										},
										{
											"begin": 11318,
											"end": 11323,
											"name": "DIV"
										},
										{
											"begin": 11318,
											"end": 11323,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 11318,
											"end": 11323,
											"name": "AND"
										},
										{
											"begin": 11296,
											"end": 11341,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 11296,
											"end": 11341,
											"name": "DUP2"
										},
										{
											"begin": 11296,
											"end": 11341,
											"name": "GT"
										},
										{
											"begin": 11296,
											"end": 11341,
											"name": "ISZERO"
										},
										{
											"begin": 11296,
											"end": 11341,
											"name": "PUSH [tag]",
											"value": "107"
										},
										{
											"begin": 11296,
											"end": 11341,
											"name": "JUMPI"
										},
										{
											"begin": 11296,
											"end": 11341,
											"name": "INVALID"
										},
										{
											"begin": 11296,
											"end": 11341,
											"name": "tag",
											"value": "107"
										},
										{
											"begin": 11296,
											"end": 11341,
											"name": "JUMPDEST"
										},
										{
											"begin": 11296,
											"end": 11341,
											"name": "PUSH",
											"value": "AAAE373901E745122C2E0925AD006227969C6CD190B7D5EA2FB7FDBD1D955B35"
										},
										{
											"begin": 11296,
											"end": 11341,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11296,
											"end": 11341,
											"name": "MLOAD"
										},
										{
											"begin": 11296,
											"end": 11341,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11296,
											"end": 11341,
											"name": "MLOAD"
										},
										{
											"begin": 11296,
											"end": 11341,
											"name": "DUP1"
										},
										{
											"begin": 11296,
											"end": 11341,
											"name": "SWAP2"
										},
										{
											"begin": 11296,
											"end": 11341,
											"name": "SUB"
										},
										{
											"begin": 11296,
											"end": 11341,
											"name": "SWAP1"
										},
										{
											"begin": 11296,
											"end": 11341,
											"name": "LOG3"
										},
										{
											"begin": 10993,
											"end": 11353,
											"name": "tag",
											"value": "105"
										},
										{
											"begin": 10993,
											"end": 11353,
											"name": "JUMPDEST"
										},
										{
											"begin": 8949,
											"end": 11360,
											"name": "POP"
										},
										{
											"begin": 8949,
											"end": 11360,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 14589,
											"end": 15202,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 14589,
											"end": 15202,
											"name": "JUMPDEST"
										},
										{
											"begin": 4007,
											"end": 4011,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3997,
											"end": 4011,
											"name": "ISZERO"
										},
										{
											"begin": 3997,
											"end": 4011,
											"name": "ISZERO"
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "SWAP1"
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "SLOAD"
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "SWAP1"
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "EXP"
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "SWAP1"
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "DIV"
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "AND"
										},
										{
											"begin": 3997,
											"end": 4011,
											"name": "ISZERO"
										},
										{
											"begin": 3997,
											"end": 4011,
											"name": "ISZERO"
										},
										{
											"begin": 3997,
											"end": 4011,
											"name": "EQ"
										},
										{
											"begin": 3989,
											"end": 4012,
											"name": "ISZERO"
										},
										{
											"begin": 3989,
											"end": 4012,
											"name": "ISZERO"
										},
										{
											"begin": 3989,
											"end": 4012,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 3989,
											"end": 4012,
											"name": "JUMPI"
										},
										{
											"begin": 3989,
											"end": 4012,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3989,
											"end": 4012,
											"name": "DUP1"
										},
										{
											"begin": 3989,
											"end": 4012,
											"name": "REVERT"
										},
										{
											"begin": 3989,
											"end": 4012,
											"name": "tag",
											"value": "109"
										},
										{
											"begin": 3989,
											"end": 4012,
											"name": "JUMPDEST"
										},
										{
											"begin": 4834,
											"end": 4850,
											"name": "PUSH",
											"value": "12"
										},
										{
											"begin": 4834,
											"end": 4850,
											"name": "SLOAD"
										},
										{
											"begin": 4815,
											"end": 4830,
											"name": "TIMESTAMP"
										},
										{
											"begin": 4815,
											"end": 4850,
											"name": "LT"
										},
										{
											"begin": 4815,
											"end": 4850,
											"name": "ISZERO"
										},
										{
											"begin": 4807,
											"end": 4851,
											"name": "ISZERO"
										},
										{
											"begin": 4807,
											"end": 4851,
											"name": "ISZERO"
										},
										{
											"begin": 4807,
											"end": 4851,
											"name": "PUSH [tag]",
											"value": "111"
										},
										{
											"begin": 4807,
											"end": 4851,
											"name": "JUMPI"
										},
										{
											"begin": 4807,
											"end": 4851,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4807,
											"end": 4851,
											"name": "DUP1"
										},
										{
											"begin": 4807,
											"end": 4851,
											"name": "REVERT"
										},
										{
											"begin": 4807,
											"end": 4851,
											"name": "tag",
											"value": "111"
										},
										{
											"begin": 4807,
											"end": 4851,
											"name": "JUMPDEST"
										},
										{
											"begin": 4879,
											"end": 4895,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4870,
											"end": 4895,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 4870,
											"end": 4895,
											"name": "DUP2"
										},
										{
											"begin": 4870,
											"end": 4895,
											"name": "GT"
										},
										{
											"begin": 4870,
											"end": 4895,
											"name": "ISZERO"
										},
										{
											"begin": 4870,
											"end": 4895,
											"name": "PUSH [tag]",
											"value": "112"
										},
										{
											"begin": 4870,
											"end": 4895,
											"name": "JUMPI"
										},
										{
											"begin": 4870,
											"end": 4895,
											"name": "INVALID"
										},
										{
											"begin": 4870,
											"end": 4895,
											"name": "tag",
											"value": "112"
										},
										{
											"begin": 4870,
											"end": 4895,
											"name": "JUMPDEST"
										},
										{
											"begin": 4870,
											"end": 4875,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 4870,
											"end": 4875,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4870,
											"end": 4875,
											"name": "SWAP1"
										},
										{
											"begin": 4870,
											"end": 4875,
											"name": "SLOAD"
										},
										{
											"begin": 4870,
											"end": 4875,
											"name": "SWAP1"
										},
										{
											"begin": 4870,
											"end": 4875,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4870,
											"end": 4875,
											"name": "EXP"
										},
										{
											"begin": 4870,
											"end": 4875,
											"name": "SWAP1"
										},
										{
											"begin": 4870,
											"end": 4875,
											"name": "DIV"
										},
										{
											"begin": 4870,
											"end": 4875,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 4870,
											"end": 4875,
											"name": "AND"
										},
										{
											"begin": 4870,
											"end": 4895,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 4870,
											"end": 4895,
											"name": "DUP2"
										},
										{
											"begin": 4870,
											"end": 4895,
											"name": "GT"
										},
										{
											"begin": 4870,
											"end": 4895,
											"name": "ISZERO"
										},
										{
											"begin": 4870,
											"end": 4895,
											"name": "PUSH [tag]",
											"value": "113"
										},
										{
											"begin": 4870,
											"end": 4895,
											"name": "JUMPI"
										},
										{
											"begin": 4870,
											"end": 4895,
											"name": "INVALID"
										},
										{
											"begin": 4870,
											"end": 4895,
											"name": "tag",
											"value": "113"
										},
										{
											"begin": 4870,
											"end": 4895,
											"name": "JUMPDEST"
										},
										{
											"begin": 4870,
											"end": 4895,
											"name": "EQ"
										},
										{
											"begin": 4862,
											"end": 4896,
											"name": "ISZERO"
										},
										{
											"begin": 4862,
											"end": 4896,
											"name": "ISZERO"
										},
										{
											"begin": 4862,
											"end": 4896,
											"name": "PUSH [tag]",
											"value": "114"
										},
										{
											"begin": 4862,
											"end": 4896,
											"name": "JUMPI"
										},
										{
											"begin": 4862,
											"end": 4896,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4862,
											"end": 4896,
											"name": "DUP1"
										},
										{
											"begin": 4862,
											"end": 4896,
											"name": "REVERT"
										},
										{
											"begin": 4862,
											"end": 4896,
											"name": "tag",
											"value": "114"
										},
										{
											"begin": 4862,
											"end": 4896,
											"name": "JUMPDEST"
										},
										{
											"begin": 4198,
											"end": 4202,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4175,
											"end": 4202,
											"name": "ISZERO"
										},
										{
											"begin": 4175,
											"end": 4202,
											"name": "ISZERO"
										},
										{
											"begin": 4175,
											"end": 4182,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4183,
											"end": 4193,
											"name": "CALLER"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "AND"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "AND"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "DUP2"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "MSTORE"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "ADD"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "SWAP1"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "DUP2"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "MSTORE"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "ADD"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "KECCAK256"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "SWAP1"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "SLOAD"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "SWAP1"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "EXP"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "SWAP1"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "DIV"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "AND"
										},
										{
											"begin": 4175,
											"end": 4202,
											"name": "ISZERO"
										},
										{
											"begin": 4175,
											"end": 4202,
											"name": "ISZERO"
										},
										{
											"begin": 4175,
											"end": 4202,
											"name": "EQ"
										},
										{
											"begin": 4167,
											"end": 4203,
											"name": "ISZERO"
										},
										{
											"begin": 4167,
											"end": 4203,
											"name": "ISZERO"
										},
										{
											"begin": 4167,
											"end": 4203,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 4167,
											"end": 4203,
											"name": "JUMPI"
										},
										{
											"begin": 4167,
											"end": 4203,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4167,
											"end": 4203,
											"name": "DUP1"
										},
										{
											"begin": 4167,
											"end": 4203,
											"name": "REVERT"
										},
										{
											"begin": 4167,
											"end": 4203,
											"name": "tag",
											"value": "116"
										},
										{
											"begin": 4167,
											"end": 4203,
											"name": "JUMPDEST"
										},
										{
											"begin": 14743,
											"end": 14748,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14715,
											"end": 14748,
											"name": "ISZERO"
										},
										{
											"begin": 14715,
											"end": 14748,
											"name": "ISZERO"
										},
										{
											"begin": 14715,
											"end": 14727,
											"name": "PUSH",
											"value": "11"
										},
										{
											"begin": 14715,
											"end": 14739,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14728,
											"end": 14738,
											"name": "CALLER"
										},
										{
											"begin": 14715,
											"end": 14739,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14715,
											"end": 14739,
											"name": "AND"
										},
										{
											"begin": 14715,
											"end": 14739,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14715,
											"end": 14739,
											"name": "AND"
										},
										{
											"begin": 14715,
											"end": 14739,
											"name": "DUP2"
										},
										{
											"begin": 14715,
											"end": 14739,
											"name": "MSTORE"
										},
										{
											"begin": 14715,
											"end": 14739,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14715,
											"end": 14739,
											"name": "ADD"
										},
										{
											"begin": 14715,
											"end": 14739,
											"name": "SWAP1"
										},
										{
											"begin": 14715,
											"end": 14739,
											"name": "DUP2"
										},
										{
											"begin": 14715,
											"end": 14739,
											"name": "MSTORE"
										},
										{
											"begin": 14715,
											"end": 14739,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14715,
											"end": 14739,
											"name": "ADD"
										},
										{
											"begin": 14715,
											"end": 14739,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14715,
											"end": 14739,
											"name": "KECCAK256"
										},
										{
											"begin": 14715,
											"end": 14739,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14715,
											"end": 14739,
											"name": "SWAP1"
										},
										{
											"begin": 14715,
											"end": 14739,
											"name": "SLOAD"
										},
										{
											"begin": 14715,
											"end": 14739,
											"name": "SWAP1"
										},
										{
											"begin": 14715,
											"end": 14739,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 14715,
											"end": 14739,
											"name": "EXP"
										},
										{
											"begin": 14715,
											"end": 14739,
											"name": "SWAP1"
										},
										{
											"begin": 14715,
											"end": 14739,
											"name": "DIV"
										},
										{
											"begin": 14715,
											"end": 14739,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 14715,
											"end": 14739,
											"name": "AND"
										},
										{
											"begin": 14715,
											"end": 14748,
											"name": "ISZERO"
										},
										{
											"begin": 14715,
											"end": 14748,
											"name": "ISZERO"
										},
										{
											"begin": 14715,
											"end": 14748,
											"name": "EQ"
										},
										{
											"begin": 14707,
											"end": 14749,
											"name": "ISZERO"
										},
										{
											"begin": 14707,
											"end": 14749,
											"name": "ISZERO"
										},
										{
											"begin": 14707,
											"end": 14749,
											"name": "PUSH [tag]",
											"value": "118"
										},
										{
											"begin": 14707,
											"end": 14749,
											"name": "JUMPI"
										},
										{
											"begin": 14707,
											"end": 14749,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14707,
											"end": 14749,
											"name": "DUP1"
										},
										{
											"begin": 14707,
											"end": 14749,
											"name": "REVERT"
										},
										{
											"begin": 14707,
											"end": 14749,
											"name": "tag",
											"value": "118"
										},
										{
											"begin": 14707,
											"end": 14749,
											"name": "JUMPDEST"
										},
										{
											"begin": 14801,
											"end": 14812,
											"name": "PUSH",
											"value": "10"
										},
										{
											"begin": 14801,
											"end": 14812,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14801,
											"end": 14814,
											"name": "DUP2"
										},
										{
											"begin": 14801,
											"end": 14814,
											"name": "SLOAD"
										},
										{
											"begin": 14801,
											"end": 14814,
											"name": "DUP1"
										},
										{
											"begin": 14801,
											"end": 14814,
											"name": "SWAP3"
										},
										{
											"begin": 14801,
											"end": 14814,
											"name": "SWAP2"
										},
										{
											"begin": 14801,
											"end": 14814,
											"name": "SWAP1"
										},
										{
											"begin": 14801,
											"end": 14814,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 14801,
											"end": 14814,
											"name": "ADD"
										},
										{
											"begin": 14801,
											"end": 14814,
											"name": "SWAP2"
										},
										{
											"begin": 14801,
											"end": 14814,
											"name": "SWAP1"
										},
										{
											"begin": 14801,
											"end": 14814,
											"name": "POP"
										},
										{
											"begin": 14801,
											"end": 14814,
											"name": "SSTORE"
										},
										{
											"begin": 14801,
											"end": 14814,
											"name": "POP"
										},
										{
											"begin": 14894,
											"end": 14898,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 14866,
											"end": 14898,
											"name": "ISZERO"
										},
										{
											"begin": 14866,
											"end": 14898,
											"name": "ISZERO"
										},
										{
											"begin": 14866,
											"end": 14878,
											"name": "PUSH",
											"value": "11"
										},
										{
											"begin": 14866,
											"end": 14890,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14879,
											"end": 14889,
											"name": "CALLER"
										},
										{
											"begin": 14866,
											"end": 14890,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14866,
											"end": 14890,
											"name": "AND"
										},
										{
											"begin": 14866,
											"end": 14890,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14866,
											"end": 14890,
											"name": "AND"
										},
										{
											"begin": 14866,
											"end": 14890,
											"name": "DUP2"
										},
										{
											"begin": 14866,
											"end": 14890,
											"name": "MSTORE"
										},
										{
											"begin": 14866,
											"end": 14890,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14866,
											"end": 14890,
											"name": "ADD"
										},
										{
											"begin": 14866,
											"end": 14890,
											"name": "SWAP1"
										},
										{
											"begin": 14866,
											"end": 14890,
											"name": "DUP2"
										},
										{
											"begin": 14866,
											"end": 14890,
											"name": "MSTORE"
										},
										{
											"begin": 14866,
											"end": 14890,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14866,
											"end": 14890,
											"name": "ADD"
										},
										{
											"begin": 14866,
											"end": 14890,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14866,
											"end": 14890,
											"name": "KECCAK256"
										},
										{
											"begin": 14866,
											"end": 14890,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14866,
											"end": 14890,
											"name": "SWAP1"
										},
										{
											"begin": 14866,
											"end": 14890,
											"name": "SLOAD"
										},
										{
											"begin": 14866,
											"end": 14890,
											"name": "SWAP1"
										},
										{
											"begin": 14866,
											"end": 14890,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 14866,
											"end": 14890,
											"name": "EXP"
										},
										{
											"begin": 14866,
											"end": 14890,
											"name": "SWAP1"
										},
										{
											"begin": 14866,
											"end": 14890,
											"name": "POP"
										},
										{
											"begin": 14866,
											"end": 14890,
											"name": "POP"
										},
										{
											"begin": 14866,
											"end": 14898,
											"name": "POP"
										},
										{
											"begin": 15010,
											"end": 15025,
											"name": "TIMESTAMP"
										},
										{
											"begin": 14998,
											"end": 15008,
											"name": "CALLER"
										},
										{
											"begin": 14973,
											"end": 15026,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14973,
											"end": 15026,
											"name": "AND"
										},
										{
											"begin": 14973,
											"end": 15026,
											"name": "PUSH",
											"value": "D7173CE7E4CE6F6D075259AC1A467AB8290DB175A2CEE8587A663C006B97E129"
										},
										{
											"begin": 14973,
											"end": 15026,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14973,
											"end": 15026,
											"name": "MLOAD"
										},
										{
											"begin": 14973,
											"end": 15026,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14973,
											"end": 15026,
											"name": "MLOAD"
										},
										{
											"begin": 14973,
											"end": 15026,
											"name": "DUP1"
										},
										{
											"begin": 14973,
											"end": 15026,
											"name": "SWAP2"
										},
										{
											"begin": 14973,
											"end": 15026,
											"name": "SUB"
										},
										{
											"begin": 14973,
											"end": 15026,
											"name": "SWAP1"
										},
										{
											"begin": 14973,
											"end": 15026,
											"name": "LOG3"
										},
										{
											"begin": 15100,
											"end": 15111,
											"name": "PUSH",
											"value": "10"
										},
										{
											"begin": 15100,
											"end": 15111,
											"name": "SLOAD"
										},
										{
											"begin": 15084,
											"end": 15096,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 15084,
											"end": 15096,
											"name": "SLOAD"
										},
										{
											"begin": 15084,
											"end": 15111,
											"name": "EQ"
										},
										{
											"begin": 15080,
											"end": 15195,
											"name": "ISZERO"
										},
										{
											"begin": 15080,
											"end": 15195,
											"name": "PUSH [tag]",
											"value": "119"
										},
										{
											"begin": 15080,
											"end": 15195,
											"name": "JUMPI"
										},
										{
											"begin": 15175,
											"end": 15183,
											"name": "PUSH [tag]",
											"value": "120"
										},
										{
											"begin": 15175,
											"end": 15181,
											"name": "PUSH [tag]",
											"value": "121"
										},
										{
											"begin": 15175,
											"end": 15183,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15175,
											"end": 15183,
											"name": "tag",
											"value": "120"
										},
										{
											"begin": 15175,
											"end": 15183,
											"name": "JUMPDEST"
										},
										{
											"begin": 15080,
											"end": 15195,
											"name": "tag",
											"value": "119"
										},
										{
											"begin": 15080,
											"end": 15195,
											"name": "JUMPDEST"
										},
										{
											"begin": 14589,
											"end": 15202,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 15514,
											"end": 16468,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 15514,
											"end": 16468,
											"name": "JUMPDEST"
										},
										{
											"begin": 4007,
											"end": 4011,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3997,
											"end": 4011,
											"name": "ISZERO"
										},
										{
											"begin": 3997,
											"end": 4011,
											"name": "ISZERO"
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "SWAP1"
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "SLOAD"
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "SWAP1"
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "EXP"
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "SWAP1"
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "DIV"
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "AND"
										},
										{
											"begin": 3997,
											"end": 4011,
											"name": "ISZERO"
										},
										{
											"begin": 3997,
											"end": 4011,
											"name": "ISZERO"
										},
										{
											"begin": 3997,
											"end": 4011,
											"name": "EQ"
										},
										{
											"begin": 3989,
											"end": 4012,
											"name": "ISZERO"
										},
										{
											"begin": 3989,
											"end": 4012,
											"name": "ISZERO"
										},
										{
											"begin": 3989,
											"end": 4012,
											"name": "PUSH [tag]",
											"value": "123"
										},
										{
											"begin": 3989,
											"end": 4012,
											"name": "JUMPI"
										},
										{
											"begin": 3989,
											"end": 4012,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3989,
											"end": 4012,
											"name": "DUP1"
										},
										{
											"begin": 3989,
											"end": 4012,
											"name": "REVERT"
										},
										{
											"begin": 3989,
											"end": 4012,
											"name": "tag",
											"value": "123"
										},
										{
											"begin": 3989,
											"end": 4012,
											"name": "JUMPDEST"
										},
										{
											"begin": 4198,
											"end": 4202,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4175,
											"end": 4202,
											"name": "ISZERO"
										},
										{
											"begin": 4175,
											"end": 4202,
											"name": "ISZERO"
										},
										{
											"begin": 4175,
											"end": 4182,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4183,
											"end": 4193,
											"name": "CALLER"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "AND"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "AND"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "DUP2"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "MSTORE"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "ADD"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "SWAP1"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "DUP2"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "MSTORE"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "ADD"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "KECCAK256"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "SWAP1"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "SLOAD"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "SWAP1"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "EXP"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "SWAP1"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "DIV"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "AND"
										},
										{
											"begin": 4175,
											"end": 4202,
											"name": "ISZERO"
										},
										{
											"begin": 4175,
											"end": 4202,
											"name": "ISZERO"
										},
										{
											"begin": 4175,
											"end": 4202,
											"name": "EQ"
										},
										{
											"begin": 4167,
											"end": 4203,
											"name": "ISZERO"
										},
										{
											"begin": 4167,
											"end": 4203,
											"name": "ISZERO"
										},
										{
											"begin": 4167,
											"end": 4203,
											"name": "PUSH [tag]",
											"value": "125"
										},
										{
											"begin": 4167,
											"end": 4203,
											"name": "JUMPI"
										},
										{
											"begin": 4167,
											"end": 4203,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4167,
											"end": 4203,
											"name": "DUP1"
										},
										{
											"begin": 4167,
											"end": 4203,
											"name": "REVERT"
										},
										{
											"begin": 4167,
											"end": 4203,
											"name": "tag",
											"value": "125"
										},
										{
											"begin": 4167,
											"end": 4203,
											"name": "JUMPDEST"
										},
										{
											"begin": 4973,
											"end": 4986,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4964,
											"end": 4986,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 4964,
											"end": 4986,
											"name": "DUP2"
										},
										{
											"begin": 4964,
											"end": 4986,
											"name": "GT"
										},
										{
											"begin": 4964,
											"end": 4986,
											"name": "ISZERO"
										},
										{
											"begin": 4964,
											"end": 4986,
											"name": "PUSH [tag]",
											"value": "127"
										},
										{
											"begin": 4964,
											"end": 4986,
											"name": "JUMPI"
										},
										{
											"begin": 4964,
											"end": 4986,
											"name": "INVALID"
										},
										{
											"begin": 4964,
											"end": 4986,
											"name": "tag",
											"value": "127"
										},
										{
											"begin": 4964,
											"end": 4986,
											"name": "JUMPDEST"
										},
										{
											"begin": 4964,
											"end": 4969,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 4964,
											"end": 4969,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4964,
											"end": 4969,
											"name": "SWAP1"
										},
										{
											"begin": 4964,
											"end": 4969,
											"name": "SLOAD"
										},
										{
											"begin": 4964,
											"end": 4969,
											"name": "SWAP1"
										},
										{
											"begin": 4964,
											"end": 4969,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4964,
											"end": 4969,
											"name": "EXP"
										},
										{
											"begin": 4964,
											"end": 4969,
											"name": "SWAP1"
										},
										{
											"begin": 4964,
											"end": 4969,
											"name": "DIV"
										},
										{
											"begin": 4964,
											"end": 4969,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 4964,
											"end": 4969,
											"name": "AND"
										},
										{
											"begin": 4964,
											"end": 4986,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 4964,
											"end": 4986,
											"name": "DUP2"
										},
										{
											"begin": 4964,
											"end": 4986,
											"name": "GT"
										},
										{
											"begin": 4964,
											"end": 4986,
											"name": "ISZERO"
										},
										{
											"begin": 4964,
											"end": 4986,
											"name": "PUSH [tag]",
											"value": "128"
										},
										{
											"begin": 4964,
											"end": 4986,
											"name": "JUMPI"
										},
										{
											"begin": 4964,
											"end": 4986,
											"name": "INVALID"
										},
										{
											"begin": 4964,
											"end": 4986,
											"name": "tag",
											"value": "128"
										},
										{
											"begin": 4964,
											"end": 4986,
											"name": "JUMPDEST"
										},
										{
											"begin": 4964,
											"end": 4986,
											"name": "EQ"
										},
										{
											"begin": 4956,
											"end": 4987,
											"name": "ISZERO"
										},
										{
											"begin": 4956,
											"end": 4987,
											"name": "ISZERO"
										},
										{
											"begin": 4956,
											"end": 4987,
											"name": "PUSH [tag]",
											"value": "129"
										},
										{
											"begin": 4956,
											"end": 4987,
											"name": "JUMPI"
										},
										{
											"begin": 4956,
											"end": 4987,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4956,
											"end": 4987,
											"name": "DUP1"
										},
										{
											"begin": 4956,
											"end": 4987,
											"name": "REVERT"
										},
										{
											"begin": 4956,
											"end": 4987,
											"name": "tag",
											"value": "129"
										},
										{
											"begin": 4956,
											"end": 4987,
											"name": "JUMPDEST"
										},
										{
											"begin": 15656,
											"end": 15677,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 15656,
											"end": 15689,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15678,
											"end": 15688,
											"name": "CALLER"
										},
										{
											"begin": 15656,
											"end": 15689,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15656,
											"end": 15689,
											"name": "AND"
										},
										{
											"begin": 15656,
											"end": 15689,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15656,
											"end": 15689,
											"name": "AND"
										},
										{
											"begin": 15656,
											"end": 15689,
											"name": "DUP2"
										},
										{
											"begin": 15656,
											"end": 15689,
											"name": "MSTORE"
										},
										{
											"begin": 15656,
											"end": 15689,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15656,
											"end": 15689,
											"name": "ADD"
										},
										{
											"begin": 15656,
											"end": 15689,
											"name": "SWAP1"
										},
										{
											"begin": 15656,
											"end": 15689,
											"name": "DUP2"
										},
										{
											"begin": 15656,
											"end": 15689,
											"name": "MSTORE"
										},
										{
											"begin": 15656,
											"end": 15689,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15656,
											"end": 15689,
											"name": "ADD"
										},
										{
											"begin": 15656,
											"end": 15689,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15656,
											"end": 15689,
											"name": "KECCAK256"
										},
										{
											"begin": 15656,
											"end": 15689,
											"name": "SLOAD"
										},
										{
											"begin": 15640,
											"end": 15644,
											"name": "ADDRESS"
										},
										{
											"begin": 15640,
											"end": 15652,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15640,
											"end": 15652,
											"name": "AND"
										},
										{
											"begin": 15640,
											"end": 15652,
											"name": "BALANCE"
										},
										{
											"begin": 15640,
											"end": 15689,
											"name": "LT"
										},
										{
											"begin": 15640,
											"end": 15689,
											"name": "ISZERO"
										},
										{
											"begin": 15633,
											"end": 15690,
											"name": "ISZERO"
										},
										{
											"begin": 15633,
											"end": 15690,
											"name": "ISZERO"
										},
										{
											"begin": 15633,
											"end": 15690,
											"name": "PUSH [tag]",
											"value": "131"
										},
										{
											"begin": 15633,
											"end": 15690,
											"name": "JUMPI"
										},
										{
											"begin": 15633,
											"end": 15690,
											"name": "INVALID"
										},
										{
											"begin": 15633,
											"end": 15690,
											"name": "tag",
											"value": "131"
										},
										{
											"begin": 15633,
											"end": 15690,
											"name": "JUMPDEST"
										},
										{
											"begin": 15771,
											"end": 15781,
											"name": "CALLER"
										},
										{
											"begin": 15771,
											"end": 15790,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15771,
											"end": 15790,
											"name": "AND"
										},
										{
											"begin": 15771,
											"end": 15825,
											"name": "PUSH",
											"value": "8FC"
										},
										{
											"begin": 15791,
											"end": 15812,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 15791,
											"end": 15824,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15813,
											"end": 15823,
											"name": "CALLER"
										},
										{
											"begin": 15791,
											"end": 15824,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15791,
											"end": 15824,
											"name": "AND"
										},
										{
											"begin": 15791,
											"end": 15824,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15791,
											"end": 15824,
											"name": "AND"
										},
										{
											"begin": 15791,
											"end": 15824,
											"name": "DUP2"
										},
										{
											"begin": 15791,
											"end": 15824,
											"name": "MSTORE"
										},
										{
											"begin": 15791,
											"end": 15824,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15791,
											"end": 15824,
											"name": "ADD"
										},
										{
											"begin": 15791,
											"end": 15824,
											"name": "SWAP1"
										},
										{
											"begin": 15791,
											"end": 15824,
											"name": "DUP2"
										},
										{
											"begin": 15791,
											"end": 15824,
											"name": "MSTORE"
										},
										{
											"begin": 15791,
											"end": 15824,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15791,
											"end": 15824,
											"name": "ADD"
										},
										{
											"begin": 15791,
											"end": 15824,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15791,
											"end": 15824,
											"name": "KECCAK256"
										},
										{
											"begin": 15791,
											"end": 15824,
											"name": "SLOAD"
										},
										{
											"begin": 15771,
											"end": 15825,
											"name": "SWAP1"
										},
										{
											"begin": 15771,
											"end": 15825,
											"name": "DUP2"
										},
										{
											"begin": 15771,
											"end": 15825,
											"name": "ISZERO"
										},
										{
											"begin": 15771,
											"end": 15825,
											"name": "MUL"
										},
										{
											"begin": 15771,
											"end": 15825,
											"name": "SWAP1"
										},
										{
											"begin": 15771,
											"end": 15825,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15771,
											"end": 15825,
											"name": "MLOAD"
										},
										{
											"begin": 15771,
											"end": 15825,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15771,
											"end": 15825,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15771,
											"end": 15825,
											"name": "MLOAD"
										},
										{
											"begin": 15771,
											"end": 15825,
											"name": "DUP1"
										},
										{
											"begin": 15771,
											"end": 15825,
											"name": "DUP4"
										},
										{
											"begin": 15771,
											"end": 15825,
											"name": "SUB"
										},
										{
											"begin": 15771,
											"end": 15825,
											"name": "DUP2"
										},
										{
											"begin": 15771,
											"end": 15825,
											"name": "DUP6"
										},
										{
											"begin": 15771,
											"end": 15825,
											"name": "DUP9"
										},
										{
											"begin": 15771,
											"end": 15825,
											"name": "DUP9"
										},
										{
											"begin": 15771,
											"end": 15825,
											"name": "CALL"
										},
										{
											"begin": 15771,
											"end": 15825,
											"name": "SWAP4"
										},
										{
											"begin": 15771,
											"end": 15825,
											"name": "POP"
										},
										{
											"begin": 15771,
											"end": 15825,
											"name": "POP"
										},
										{
											"begin": 15771,
											"end": 15825,
											"name": "POP"
										},
										{
											"begin": 15771,
											"end": 15825,
											"name": "POP"
										},
										{
											"begin": 15771,
											"end": 15825,
											"name": "ISZERO"
										},
										{
											"begin": 15771,
											"end": 15825,
											"name": "ISZERO"
										},
										{
											"begin": 15771,
											"end": 15825,
											"name": "PUSH [tag]",
											"value": "132"
										},
										{
											"begin": 15771,
											"end": 15825,
											"name": "JUMPI"
										},
										{
											"begin": 15771,
											"end": 15825,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15771,
											"end": 15825,
											"name": "DUP1"
										},
										{
											"begin": 15771,
											"end": 15825,
											"name": "REVERT"
										},
										{
											"begin": 15771,
											"end": 15825,
											"name": "tag",
											"value": "132"
										},
										{
											"begin": 15771,
											"end": 15825,
											"name": "JUMPDEST"
										},
										{
											"begin": 15943,
											"end": 15958,
											"name": "TIMESTAMP"
										},
										{
											"begin": 15908,
											"end": 15929,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 15908,
											"end": 15941,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15930,
											"end": 15940,
											"name": "CALLER"
										},
										{
											"begin": 15908,
											"end": 15941,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15908,
											"end": 15941,
											"name": "AND"
										},
										{
											"begin": 15908,
											"end": 15941,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15908,
											"end": 15941,
											"name": "AND"
										},
										{
											"begin": 15908,
											"end": 15941,
											"name": "DUP2"
										},
										{
											"begin": 15908,
											"end": 15941,
											"name": "MSTORE"
										},
										{
											"begin": 15908,
											"end": 15941,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15908,
											"end": 15941,
											"name": "ADD"
										},
										{
											"begin": 15908,
											"end": 15941,
											"name": "SWAP1"
										},
										{
											"begin": 15908,
											"end": 15941,
											"name": "DUP2"
										},
										{
											"begin": 15908,
											"end": 15941,
											"name": "MSTORE"
										},
										{
											"begin": 15908,
											"end": 15941,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15908,
											"end": 15941,
											"name": "ADD"
										},
										{
											"begin": 15908,
											"end": 15941,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15908,
											"end": 15941,
											"name": "KECCAK256"
										},
										{
											"begin": 15908,
											"end": 15941,
											"name": "SLOAD"
										},
										{
											"begin": 15896,
											"end": 15906,
											"name": "CALLER"
										},
										{
											"begin": 15878,
											"end": 15959,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15878,
											"end": 15959,
											"name": "AND"
										},
										{
											"begin": 15878,
											"end": 15959,
											"name": "PUSH",
											"value": "71E252E33F19F0223F47F27D00910548D26488B9B55CB5B410B75E273152F8D6"
										},
										{
											"begin": 15878,
											"end": 15959,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15878,
											"end": 15959,
											"name": "MLOAD"
										},
										{
											"begin": 15878,
											"end": 15959,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15878,
											"end": 15959,
											"name": "MLOAD"
										},
										{
											"begin": 15878,
											"end": 15959,
											"name": "DUP1"
										},
										{
											"begin": 15878,
											"end": 15959,
											"name": "SWAP2"
										},
										{
											"begin": 15878,
											"end": 15959,
											"name": "SUB"
										},
										{
											"begin": 15878,
											"end": 15959,
											"name": "SWAP1"
										},
										{
											"begin": 15878,
											"end": 15959,
											"name": "LOG4"
										},
										{
											"begin": 16046,
											"end": 16047,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16030,
											"end": 16034,
											"name": "ADDRESS"
										},
										{
											"begin": 16030,
											"end": 16042,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16030,
											"end": 16042,
											"name": "AND"
										},
										{
											"begin": 16030,
											"end": 16042,
											"name": "BALANCE"
										},
										{
											"begin": 16030,
											"end": 16047,
											"name": "EQ"
										},
										{
											"begin": 16026,
											"end": 16461,
											"name": "ISZERO"
										},
										{
											"begin": 16026,
											"end": 16461,
											"name": "PUSH [tag]",
											"value": "133"
										},
										{
											"begin": 16026,
											"end": 16461,
											"name": "JUMPI"
										},
										{
											"begin": 16122,
											"end": 16127,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16113,
											"end": 16119,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 16113,
											"end": 16119,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16113,
											"end": 16127,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 16113,
											"end": 16127,
											"name": "EXP"
										},
										{
											"begin": 16113,
											"end": 16127,
											"name": "DUP2"
										},
										{
											"begin": 16113,
											"end": 16127,
											"name": "SLOAD"
										},
										{
											"begin": 16113,
											"end": 16127,
											"name": "DUP2"
										},
										{
											"begin": 16113,
											"end": 16127,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 16113,
											"end": 16127,
											"name": "MUL"
										},
										{
											"begin": 16113,
											"end": 16127,
											"name": "NOT"
										},
										{
											"begin": 16113,
											"end": 16127,
											"name": "AND"
										},
										{
											"begin": 16113,
											"end": 16127,
											"name": "SWAP1"
										},
										{
											"begin": 16113,
											"end": 16127,
											"name": "DUP4"
										},
										{
											"begin": 16113,
											"end": 16127,
											"name": "ISZERO"
										},
										{
											"begin": 16113,
											"end": 16127,
											"name": "ISZERO"
										},
										{
											"begin": 16113,
											"end": 16127,
											"name": "MUL"
										},
										{
											"begin": 16113,
											"end": 16127,
											"name": "OR"
										},
										{
											"begin": 16113,
											"end": 16127,
											"name": "SWAP1"
										},
										{
											"begin": 16113,
											"end": 16127,
											"name": "SSTORE"
										},
										{
											"begin": 16113,
											"end": 16127,
											"name": "POP"
										},
										{
											"begin": 16222,
											"end": 16237,
											"name": "TIMESTAMP"
										},
										{
											"begin": 16214,
											"end": 16220,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 16214,
											"end": 16220,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16214,
											"end": 16220,
											"name": "SWAP1"
										},
										{
											"begin": 16214,
											"end": 16220,
											"name": "SLOAD"
										},
										{
											"begin": 16214,
											"end": 16220,
											"name": "SWAP1"
										},
										{
											"begin": 16214,
											"end": 16220,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 16214,
											"end": 16220,
											"name": "EXP"
										},
										{
											"begin": 16214,
											"end": 16220,
											"name": "SWAP1"
										},
										{
											"begin": 16214,
											"end": 16220,
											"name": "DIV"
										},
										{
											"begin": 16214,
											"end": 16220,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 16214,
											"end": 16220,
											"name": "AND"
										},
										{
											"begin": 16186,
											"end": 16238,
											"name": "ISZERO"
										},
										{
											"begin": 16186,
											"end": 16238,
											"name": "ISZERO"
										},
										{
											"begin": 16186,
											"end": 16238,
											"name": "PUSH",
											"value": "160914EA27C60AA29A5F3A69D74E6069869DE36E38939DE1E0A66B921D8623D2"
										},
										{
											"begin": 16186,
											"end": 16238,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16186,
											"end": 16238,
											"name": "MLOAD"
										},
										{
											"begin": 16186,
											"end": 16238,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16186,
											"end": 16238,
											"name": "MLOAD"
										},
										{
											"begin": 16186,
											"end": 16238,
											"name": "DUP1"
										},
										{
											"begin": 16186,
											"end": 16238,
											"name": "SWAP2"
										},
										{
											"begin": 16186,
											"end": 16238,
											"name": "SUB"
										},
										{
											"begin": 16186,
											"end": 16238,
											"name": "SWAP1"
										},
										{
											"begin": 16186,
											"end": 16238,
											"name": "LOG3"
										},
										{
											"begin": 16340,
											"end": 16353,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 16332,
											"end": 16337,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 16332,
											"end": 16337,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16332,
											"end": 16353,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 16332,
											"end": 16353,
											"name": "EXP"
										},
										{
											"begin": 16332,
											"end": 16353,
											"name": "DUP2"
										},
										{
											"begin": 16332,
											"end": 16353,
											"name": "SLOAD"
										},
										{
											"begin": 16332,
											"end": 16353,
											"name": "DUP2"
										},
										{
											"begin": 16332,
											"end": 16353,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 16332,
											"end": 16353,
											"name": "MUL"
										},
										{
											"begin": 16332,
											"end": 16353,
											"name": "NOT"
										},
										{
											"begin": 16332,
											"end": 16353,
											"name": "AND"
										},
										{
											"begin": 16332,
											"end": 16353,
											"name": "SWAP1"
										},
										{
											"begin": 16332,
											"end": 16353,
											"name": "DUP4"
										},
										{
											"begin": 16332,
											"end": 16353,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 16332,
											"end": 16353,
											"name": "DUP2"
										},
										{
											"begin": 16332,
											"end": 16353,
											"name": "GT"
										},
										{
											"begin": 16332,
											"end": 16353,
											"name": "ISZERO"
										},
										{
											"begin": 16332,
											"end": 16353,
											"name": "PUSH [tag]",
											"value": "134"
										},
										{
											"begin": 16332,
											"end": 16353,
											"name": "JUMPI"
										},
										{
											"begin": 16332,
											"end": 16353,
											"name": "INVALID"
										},
										{
											"begin": 16332,
											"end": 16353,
											"name": "tag",
											"value": "134"
										},
										{
											"begin": 16332,
											"end": 16353,
											"name": "JUMPDEST"
										},
										{
											"begin": 16332,
											"end": 16353,
											"name": "MUL"
										},
										{
											"begin": 16332,
											"end": 16353,
											"name": "OR"
										},
										{
											"begin": 16332,
											"end": 16353,
											"name": "SWAP1"
										},
										{
											"begin": 16332,
											"end": 16353,
											"name": "SSTORE"
										},
										{
											"begin": 16332,
											"end": 16353,
											"name": "POP"
										},
										{
											"begin": 16433,
											"end": 16448,
											"name": "TIMESTAMP"
										},
										{
											"begin": 16426,
											"end": 16431,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 16426,
											"end": 16431,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16426,
											"end": 16431,
											"name": "SWAP1"
										},
										{
											"begin": 16426,
											"end": 16431,
											"name": "SLOAD"
										},
										{
											"begin": 16426,
											"end": 16431,
											"name": "SWAP1"
										},
										{
											"begin": 16426,
											"end": 16431,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 16426,
											"end": 16431,
											"name": "EXP"
										},
										{
											"begin": 16426,
											"end": 16431,
											"name": "SWAP1"
										},
										{
											"begin": 16426,
											"end": 16431,
											"name": "DIV"
										},
										{
											"begin": 16426,
											"end": 16431,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 16426,
											"end": 16431,
											"name": "AND"
										},
										{
											"begin": 16404,
											"end": 16449,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 16404,
											"end": 16449,
											"name": "DUP2"
										},
										{
											"begin": 16404,
											"end": 16449,
											"name": "GT"
										},
										{
											"begin": 16404,
											"end": 16449,
											"name": "ISZERO"
										},
										{
											"begin": 16404,
											"end": 16449,
											"name": "PUSH [tag]",
											"value": "135"
										},
										{
											"begin": 16404,
											"end": 16449,
											"name": "JUMPI"
										},
										{
											"begin": 16404,
											"end": 16449,
											"name": "INVALID"
										},
										{
											"begin": 16404,
											"end": 16449,
											"name": "tag",
											"value": "135"
										},
										{
											"begin": 16404,
											"end": 16449,
											"name": "JUMPDEST"
										},
										{
											"begin": 16404,
											"end": 16449,
											"name": "PUSH",
											"value": "AAAE373901E745122C2E0925AD006227969C6CD190B7D5EA2FB7FDBD1D955B35"
										},
										{
											"begin": 16404,
											"end": 16449,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16404,
											"end": 16449,
											"name": "MLOAD"
										},
										{
											"begin": 16404,
											"end": 16449,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16404,
											"end": 16449,
											"name": "MLOAD"
										},
										{
											"begin": 16404,
											"end": 16449,
											"name": "DUP1"
										},
										{
											"begin": 16404,
											"end": 16449,
											"name": "SWAP2"
										},
										{
											"begin": 16404,
											"end": 16449,
											"name": "SUB"
										},
										{
											"begin": 16404,
											"end": 16449,
											"name": "SWAP1"
										},
										{
											"begin": 16404,
											"end": 16449,
											"name": "LOG3"
										},
										{
											"begin": 16026,
											"end": 16461,
											"name": "tag",
											"value": "133"
										},
										{
											"begin": 16026,
											"end": 16461,
											"name": "JUMPDEST"
										},
										{
											"begin": 15514,
											"end": 16468,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 151,
											"end": 225,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 151,
											"end": 225,
											"name": "JUMPDEST"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "DUP1"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "SWAP1"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "SLOAD"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "SWAP1"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "EXP"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "SWAP1"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "DIV"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "AND"
										},
										{
											"begin": 218,
											"end": 237,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 218,
											"end": 237,
											"name": "AND"
										},
										{
											"begin": 218,
											"end": 228,
											"name": "CALLER"
										},
										{
											"begin": 218,
											"end": 237,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 218,
											"end": 237,
											"name": "AND"
										},
										{
											"begin": 218,
											"end": 237,
											"name": "EQ"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "ISZERO"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "ISZERO"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "PUSH [tag]",
											"value": "137"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "JUMPI"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "DUP1"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "REVERT"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "tag",
											"value": "137"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "JUMPDEST"
										},
										{
											"begin": 211,
											"end": 216,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 211,
											"end": 216,
											"name": "DUP1"
										},
										{
											"begin": 211,
											"end": 216,
											"name": "SWAP1"
										},
										{
											"begin": 211,
											"end": 216,
											"name": "SLOAD"
										},
										{
											"begin": 211,
											"end": 216,
											"name": "SWAP1"
										},
										{
											"begin": 211,
											"end": 216,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 211,
											"end": 216,
											"name": "EXP"
										},
										{
											"begin": 211,
											"end": 216,
											"name": "SWAP1"
										},
										{
											"begin": 211,
											"end": 216,
											"name": "DIV"
										},
										{
											"begin": 211,
											"end": 216,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 211,
											"end": 216,
											"name": "AND"
										},
										{
											"begin": 198,
											"end": 217,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 198,
											"end": 217,
											"name": "AND"
										},
										{
											"begin": 198,
											"end": 217,
											"name": "SELFDESTRUCT"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "JUMPDEST"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "DUP1"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "SWAP1"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "SLOAD"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "SWAP1"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "EXP"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "SWAP1"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "DIV"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "AND"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "DUP2"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 16546,
											"end": 17151,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 16546,
											"end": 17151,
											"name": "JUMPDEST"
										},
										{
											"begin": 16603,
											"end": 16607,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4007,
											"end": 4011,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3997,
											"end": 4011,
											"name": "ISZERO"
										},
										{
											"begin": 3997,
											"end": 4011,
											"name": "ISZERO"
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "SWAP1"
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "SLOAD"
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "SWAP1"
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "EXP"
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "SWAP1"
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "DIV"
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "AND"
										},
										{
											"begin": 3997,
											"end": 4011,
											"name": "ISZERO"
										},
										{
											"begin": 3997,
											"end": 4011,
											"name": "ISZERO"
										},
										{
											"begin": 3997,
											"end": 4011,
											"name": "EQ"
										},
										{
											"begin": 3989,
											"end": 4012,
											"name": "ISZERO"
										},
										{
											"begin": 3989,
											"end": 4012,
											"name": "ISZERO"
										},
										{
											"begin": 3989,
											"end": 4012,
											"name": "PUSH [tag]",
											"value": "140"
										},
										{
											"begin": 3989,
											"end": 4012,
											"name": "JUMPI"
										},
										{
											"begin": 3989,
											"end": 4012,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3989,
											"end": 4012,
											"name": "DUP1"
										},
										{
											"begin": 3989,
											"end": 4012,
											"name": "REVERT"
										},
										{
											"begin": 3989,
											"end": 4012,
											"name": "tag",
											"value": "140"
										},
										{
											"begin": 3989,
											"end": 4012,
											"name": "JUMPDEST"
										},
										{
											"begin": 4198,
											"end": 4202,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4175,
											"end": 4202,
											"name": "ISZERO"
										},
										{
											"begin": 4175,
											"end": 4202,
											"name": "ISZERO"
										},
										{
											"begin": 4175,
											"end": 4182,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4183,
											"end": 4193,
											"name": "CALLER"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "AND"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "AND"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "DUP2"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "MSTORE"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "ADD"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "SWAP1"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "DUP2"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "MSTORE"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "ADD"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "KECCAK256"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "SWAP1"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "SLOAD"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "SWAP1"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "EXP"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "SWAP1"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "DIV"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "AND"
										},
										{
											"begin": 4175,
											"end": 4202,
											"name": "ISZERO"
										},
										{
											"begin": 4175,
											"end": 4202,
											"name": "ISZERO"
										},
										{
											"begin": 4175,
											"end": 4202,
											"name": "EQ"
										},
										{
											"begin": 4167,
											"end": 4203,
											"name": "ISZERO"
										},
										{
											"begin": 4167,
											"end": 4203,
											"name": "ISZERO"
										},
										{
											"begin": 4167,
											"end": 4203,
											"name": "PUSH [tag]",
											"value": "142"
										},
										{
											"begin": 4167,
											"end": 4203,
											"name": "JUMPI"
										},
										{
											"begin": 4167,
											"end": 4203,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4167,
											"end": 4203,
											"name": "DUP1"
										},
										{
											"begin": 4167,
											"end": 4203,
											"name": "REVERT"
										},
										{
											"begin": 4167,
											"end": 4203,
											"name": "tag",
											"value": "142"
										},
										{
											"begin": 4167,
											"end": 4203,
											"name": "JUMPDEST"
										},
										{
											"begin": 16698,
											"end": 16703,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16671,
											"end": 16703,
											"name": "ISZERO"
										},
										{
											"begin": 16671,
											"end": 16703,
											"name": "ISZERO"
										},
										{
											"begin": 16671,
											"end": 16682,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 16671,
											"end": 16694,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16683,
											"end": 16693,
											"name": "CALLER"
										},
										{
											"begin": 16671,
											"end": 16694,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16671,
											"end": 16694,
											"name": "AND"
										},
										{
											"begin": 16671,
											"end": 16694,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16671,
											"end": 16694,
											"name": "AND"
										},
										{
											"begin": 16671,
											"end": 16694,
											"name": "DUP2"
										},
										{
											"begin": 16671,
											"end": 16694,
											"name": "MSTORE"
										},
										{
											"begin": 16671,
											"end": 16694,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16671,
											"end": 16694,
											"name": "ADD"
										},
										{
											"begin": 16671,
											"end": 16694,
											"name": "SWAP1"
										},
										{
											"begin": 16671,
											"end": 16694,
											"name": "DUP2"
										},
										{
											"begin": 16671,
											"end": 16694,
											"name": "MSTORE"
										},
										{
											"begin": 16671,
											"end": 16694,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16671,
											"end": 16694,
											"name": "ADD"
										},
										{
											"begin": 16671,
											"end": 16694,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16671,
											"end": 16694,
											"name": "KECCAK256"
										},
										{
											"begin": 16671,
											"end": 16694,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16671,
											"end": 16694,
											"name": "SWAP1"
										},
										{
											"begin": 16671,
											"end": 16694,
											"name": "SLOAD"
										},
										{
											"begin": 16671,
											"end": 16694,
											"name": "SWAP1"
										},
										{
											"begin": 16671,
											"end": 16694,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 16671,
											"end": 16694,
											"name": "EXP"
										},
										{
											"begin": 16671,
											"end": 16694,
											"name": "SWAP1"
										},
										{
											"begin": 16671,
											"end": 16694,
											"name": "DIV"
										},
										{
											"begin": 16671,
											"end": 16694,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 16671,
											"end": 16694,
											"name": "AND"
										},
										{
											"begin": 16671,
											"end": 16703,
											"name": "ISZERO"
										},
										{
											"begin": 16671,
											"end": 16703,
											"name": "ISZERO"
										},
										{
											"begin": 16671,
											"end": 16703,
											"name": "EQ"
										},
										{
											"begin": 16663,
											"end": 16704,
											"name": "ISZERO"
										},
										{
											"begin": 16663,
											"end": 16704,
											"name": "ISZERO"
										},
										{
											"begin": 16663,
											"end": 16704,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 16663,
											"end": 16704,
											"name": "JUMPI"
										},
										{
											"begin": 16663,
											"end": 16704,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16663,
											"end": 16704,
											"name": "DUP1"
										},
										{
											"begin": 16663,
											"end": 16704,
											"name": "REVERT"
										},
										{
											"begin": 16663,
											"end": 16704,
											"name": "tag",
											"value": "144"
										},
										{
											"begin": 16663,
											"end": 16704,
											"name": "JUMPDEST"
										},
										{
											"begin": 16757,
											"end": 16767,
											"name": "PUSH",
											"value": "13"
										},
										{
											"begin": 16757,
											"end": 16767,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16757,
											"end": 16769,
											"name": "DUP2"
										},
										{
											"begin": 16757,
											"end": 16769,
											"name": "SLOAD"
										},
										{
											"begin": 16757,
											"end": 16769,
											"name": "DUP1"
										},
										{
											"begin": 16757,
											"end": 16769,
											"name": "SWAP3"
										},
										{
											"begin": 16757,
											"end": 16769,
											"name": "SWAP2"
										},
										{
											"begin": 16757,
											"end": 16769,
											"name": "SWAP1"
										},
										{
											"begin": 16757,
											"end": 16769,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16757,
											"end": 16769,
											"name": "ADD"
										},
										{
											"begin": 16757,
											"end": 16769,
											"name": "SWAP2"
										},
										{
											"begin": 16757,
											"end": 16769,
											"name": "SWAP1"
										},
										{
											"begin": 16757,
											"end": 16769,
											"name": "POP"
										},
										{
											"begin": 16757,
											"end": 16769,
											"name": "SSTORE"
										},
										{
											"begin": 16757,
											"end": 16769,
											"name": "POP"
										},
										{
											"begin": 16848,
											"end": 16852,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16821,
											"end": 16852,
											"name": "ISZERO"
										},
										{
											"begin": 16821,
											"end": 16852,
											"name": "ISZERO"
										},
										{
											"begin": 16821,
											"end": 16832,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 16821,
											"end": 16844,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16833,
											"end": 16843,
											"name": "CALLER"
										},
										{
											"begin": 16821,
											"end": 16844,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16821,
											"end": 16844,
											"name": "AND"
										},
										{
											"begin": 16821,
											"end": 16844,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16821,
											"end": 16844,
											"name": "AND"
										},
										{
											"begin": 16821,
											"end": 16844,
											"name": "DUP2"
										},
										{
											"begin": 16821,
											"end": 16844,
											"name": "MSTORE"
										},
										{
											"begin": 16821,
											"end": 16844,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16821,
											"end": 16844,
											"name": "ADD"
										},
										{
											"begin": 16821,
											"end": 16844,
											"name": "SWAP1"
										},
										{
											"begin": 16821,
											"end": 16844,
											"name": "DUP2"
										},
										{
											"begin": 16821,
											"end": 16844,
											"name": "MSTORE"
										},
										{
											"begin": 16821,
											"end": 16844,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16821,
											"end": 16844,
											"name": "ADD"
										},
										{
											"begin": 16821,
											"end": 16844,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16821,
											"end": 16844,
											"name": "KECCAK256"
										},
										{
											"begin": 16821,
											"end": 16844,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16821,
											"end": 16844,
											"name": "SWAP1"
										},
										{
											"begin": 16821,
											"end": 16844,
											"name": "SLOAD"
										},
										{
											"begin": 16821,
											"end": 16844,
											"name": "SWAP1"
										},
										{
											"begin": 16821,
											"end": 16844,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 16821,
											"end": 16844,
											"name": "EXP"
										},
										{
											"begin": 16821,
											"end": 16844,
											"name": "SWAP1"
										},
										{
											"begin": 16821,
											"end": 16844,
											"name": "POP"
										},
										{
											"begin": 16821,
											"end": 16844,
											"name": "POP"
										},
										{
											"begin": 16821,
											"end": 16852,
											"name": "POP"
										},
										{
											"begin": 16938,
											"end": 16953,
											"name": "TIMESTAMP"
										},
										{
											"begin": 16926,
											"end": 16936,
											"name": "CALLER"
										},
										{
											"begin": 16904,
											"end": 16954,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16904,
											"end": 16954,
											"name": "AND"
										},
										{
											"begin": 16904,
											"end": 16954,
											"name": "PUSH",
											"value": "1DB613004119DDE2A638B639FBA9960C0E6064EE7C2D06F300E41C78920ED6DC"
										},
										{
											"begin": 16904,
											"end": 16954,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16904,
											"end": 16954,
											"name": "MLOAD"
										},
										{
											"begin": 16904,
											"end": 16954,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16904,
											"end": 16954,
											"name": "MLOAD"
										},
										{
											"begin": 16904,
											"end": 16954,
											"name": "DUP1"
										},
										{
											"begin": 16904,
											"end": 16954,
											"name": "SWAP2"
										},
										{
											"begin": 16904,
											"end": 16954,
											"name": "SUB"
										},
										{
											"begin": 16904,
											"end": 16954,
											"name": "SWAP1"
										},
										{
											"begin": 16904,
											"end": 16954,
											"name": "LOG3"
										},
										{
											"begin": 17030,
											"end": 17040,
											"name": "PUSH",
											"value": "13"
										},
										{
											"begin": 17030,
											"end": 17040,
											"name": "SLOAD"
										},
										{
											"begin": 17014,
											"end": 17026,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 17014,
											"end": 17026,
											"name": "SLOAD"
										},
										{
											"begin": 17014,
											"end": 17040,
											"name": "EQ"
										},
										{
											"begin": 17010,
											"end": 17122,
											"name": "ISZERO"
										},
										{
											"begin": 17010,
											"end": 17122,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 17010,
											"end": 17122,
											"name": "JUMPI"
										},
										{
											"begin": 17103,
											"end": 17110,
											"name": "PUSH [tag]",
											"value": "146"
										},
										{
											"begin": 17103,
											"end": 17108,
											"name": "PUSH [tag]",
											"value": "147"
										},
										{
											"begin": 17103,
											"end": 17110,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 17103,
											"end": 17110,
											"name": "tag",
											"value": "146"
										},
										{
											"begin": 17103,
											"end": 17110,
											"name": "JUMPDEST"
										},
										{
											"begin": 17096,
											"end": 17110,
											"name": "SWAP1"
										},
										{
											"begin": 17096,
											"end": 17110,
											"name": "POP"
										},
										{
											"begin": 17096,
											"end": 17110,
											"name": "PUSH [tag]",
											"value": "143"
										},
										{
											"begin": 17096,
											"end": 17110,
											"name": "JUMP"
										},
										{
											"begin": 17010,
											"end": 17122,
											"name": "tag",
											"value": "145"
										},
										{
											"begin": 17010,
											"end": 17122,
											"name": "JUMPDEST"
										},
										{
											"begin": 17139,
											"end": 17143,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 17132,
											"end": 17143,
											"name": "SWAP1"
										},
										{
											"begin": 17132,
											"end": 17143,
											"name": "POP"
										},
										{
											"begin": 4214,
											"end": 4215,
											"name": "tag",
											"value": "143"
										},
										{
											"begin": 4214,
											"end": 4215,
											"name": "JUMPDEST"
										},
										{
											"begin": 16546,
											"end": 17151,
											"name": "SWAP1"
										},
										{
											"begin": 16546,
											"end": 17151,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7124,
											"end": 8840,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 7124,
											"end": 8840,
											"name": "JUMPDEST"
										},
										{
											"begin": 7265,
											"end": 7280,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4444,
											"end": 4460,
											"name": "DUP1"
										},
										{
											"begin": 4435,
											"end": 4460,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 4435,
											"end": 4460,
											"name": "DUP2"
										},
										{
											"begin": 4435,
											"end": 4460,
											"name": "GT"
										},
										{
											"begin": 4435,
											"end": 4460,
											"name": "ISZERO"
										},
										{
											"begin": 4435,
											"end": 4460,
											"name": "PUSH [tag]",
											"value": "149"
										},
										{
											"begin": 4435,
											"end": 4460,
											"name": "JUMPI"
										},
										{
											"begin": 4435,
											"end": 4460,
											"name": "INVALID"
										},
										{
											"begin": 4435,
											"end": 4460,
											"name": "tag",
											"value": "149"
										},
										{
											"begin": 4435,
											"end": 4460,
											"name": "JUMPDEST"
										},
										{
											"begin": 4435,
											"end": 4440,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 4435,
											"end": 4440,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4435,
											"end": 4440,
											"name": "SWAP1"
										},
										{
											"begin": 4435,
											"end": 4440,
											"name": "SLOAD"
										},
										{
											"begin": 4435,
											"end": 4440,
											"name": "SWAP1"
										},
										{
											"begin": 4435,
											"end": 4440,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4435,
											"end": 4440,
											"name": "EXP"
										},
										{
											"begin": 4435,
											"end": 4440,
											"name": "SWAP1"
										},
										{
											"begin": 4435,
											"end": 4440,
											"name": "DIV"
										},
										{
											"begin": 4435,
											"end": 4440,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 4435,
											"end": 4440,
											"name": "AND"
										},
										{
											"begin": 4435,
											"end": 4460,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 4435,
											"end": 4460,
											"name": "DUP2"
										},
										{
											"begin": 4435,
											"end": 4460,
											"name": "GT"
										},
										{
											"begin": 4435,
											"end": 4460,
											"name": "ISZERO"
										},
										{
											"begin": 4435,
											"end": 4460,
											"name": "PUSH [tag]",
											"value": "150"
										},
										{
											"begin": 4435,
											"end": 4460,
											"name": "JUMPI"
										},
										{
											"begin": 4435,
											"end": 4460,
											"name": "INVALID"
										},
										{
											"begin": 4435,
											"end": 4460,
											"name": "tag",
											"value": "150"
										},
										{
											"begin": 4435,
											"end": 4460,
											"name": "JUMPDEST"
										},
										{
											"begin": 4435,
											"end": 4460,
											"name": "EQ"
										},
										{
											"begin": 4427,
											"end": 4461,
											"name": "ISZERO"
										},
										{
											"begin": 4427,
											"end": 4461,
											"name": "ISZERO"
										},
										{
											"begin": 4427,
											"end": 4461,
											"name": "PUSH [tag]",
											"value": "151"
										},
										{
											"begin": 4427,
											"end": 4461,
											"name": "JUMPI"
										},
										{
											"begin": 4427,
											"end": 4461,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4427,
											"end": 4461,
											"name": "DUP1"
										},
										{
											"begin": 4427,
											"end": 4461,
											"name": "REVERT"
										},
										{
											"begin": 4427,
											"end": 4461,
											"name": "tag",
											"value": "151"
										},
										{
											"begin": 4427,
											"end": 4461,
											"name": "JUMPDEST"
										},
										{
											"begin": 7283,
											"end": 7284,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7265,
											"end": 7284,
											"name": "SWAP1"
										},
										{
											"begin": 7265,
											"end": 7284,
											"name": "POP"
										},
										{
											"begin": 7388,
											"end": 7403,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 7388,
											"end": 7403,
											"name": "SLOAD"
										},
										{
											"begin": 7372,
											"end": 7376,
											"name": "ADDRESS"
										},
										{
											"begin": 7372,
											"end": 7384,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7372,
											"end": 7384,
											"name": "AND"
										},
										{
											"begin": 7372,
											"end": 7384,
											"name": "BALANCE"
										},
										{
											"begin": 7372,
											"end": 7403,
											"name": "LT"
										},
										{
											"begin": 7372,
											"end": 7403,
											"name": "ISZERO"
										},
										{
											"begin": 7368,
											"end": 8299,
											"name": "ISZERO"
										},
										{
											"begin": 7368,
											"end": 8299,
											"name": "PUSH [tag]",
											"value": "153"
										},
										{
											"begin": 7368,
											"end": 8299,
											"name": "JUMPI"
										},
										{
											"begin": 7502,
											"end": 7535,
											"name": "PUSH [tag]",
											"value": "154"
										},
										{
											"begin": 7519,
											"end": 7534,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 7519,
											"end": 7534,
											"name": "SLOAD"
										},
										{
											"begin": 7502,
											"end": 7506,
											"name": "ADDRESS"
										},
										{
											"begin": 7502,
											"end": 7514,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7502,
											"end": 7514,
											"name": "AND"
										},
										{
											"begin": 7502,
											"end": 7514,
											"name": "BALANCE"
										},
										{
											"begin": 7502,
											"end": 7518,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 7502,
											"end": 7518,
											"name": "SWAP1"
										},
										{
											"begin": 7502,
											"end": 7535,
											"name": "SWAP2"
										},
										{
											"begin": 7502,
											"end": 7535,
											"name": "SWAP1"
										},
										{
											"begin": 7502,
											"end": 7535,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 7502,
											"end": 7535,
											"name": "AND"
										},
										{
											"begin": 7502,
											"end": 7535,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7502,
											"end": 7535,
											"name": "tag",
											"value": "154"
										},
										{
											"begin": 7502,
											"end": 7535,
											"name": "JUMPDEST"
										},
										{
											"begin": 7489,
											"end": 7535,
											"name": "SWAP1"
										},
										{
											"begin": 7489,
											"end": 7535,
											"name": "POP"
										},
										{
											"begin": 7618,
											"end": 7646,
											"name": "PUSH [tag]",
											"value": "155"
										},
										{
											"begin": 7635,
											"end": 7645,
											"name": "DUP2"
										},
										{
											"begin": 7618,
											"end": 7622,
											"name": "ADDRESS"
										},
										{
											"begin": 7618,
											"end": 7630,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7618,
											"end": 7630,
											"name": "AND"
										},
										{
											"begin": 7618,
											"end": 7630,
											"name": "BALANCE"
										},
										{
											"begin": 7618,
											"end": 7634,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 7618,
											"end": 7634,
											"name": "SWAP1"
										},
										{
											"begin": 7618,
											"end": 7646,
											"name": "SWAP2"
										},
										{
											"begin": 7618,
											"end": 7646,
											"name": "SWAP1"
										},
										{
											"begin": 7618,
											"end": 7646,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 7618,
											"end": 7646,
											"name": "AND"
										},
										{
											"begin": 7618,
											"end": 7646,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7618,
											"end": 7646,
											"name": "tag",
											"value": "155"
										},
										{
											"begin": 7618,
											"end": 7646,
											"name": "JUMPDEST"
										},
										{
											"begin": 7599,
											"end": 7614,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 7599,
											"end": 7614,
											"name": "SLOAD"
										},
										{
											"begin": 7599,
											"end": 7646,
											"name": "EQ"
										},
										{
											"begin": 7592,
											"end": 7647,
											"name": "ISZERO"
										},
										{
											"begin": 7592,
											"end": 7647,
											"name": "ISZERO"
										},
										{
											"begin": 7592,
											"end": 7647,
											"name": "PUSH [tag]",
											"value": "156"
										},
										{
											"begin": 7592,
											"end": 7647,
											"name": "JUMPI"
										},
										{
											"begin": 7592,
											"end": 7647,
											"name": "INVALID"
										},
										{
											"begin": 7592,
											"end": 7647,
											"name": "tag",
											"value": "156"
										},
										{
											"begin": 7592,
											"end": 7647,
											"name": "JUMPDEST"
										},
										{
											"begin": 7742,
											"end": 7751,
											"name": "CALLVALUE"
										},
										{
											"begin": 7728,
											"end": 7738,
											"name": "DUP2"
										},
										{
											"begin": 7728,
											"end": 7751,
											"name": "GT"
										},
										{
											"begin": 7728,
											"end": 7751,
											"name": "ISZERO"
										},
										{
											"begin": 7721,
											"end": 7752,
											"name": "ISZERO"
										},
										{
											"begin": 7721,
											"end": 7752,
											"name": "ISZERO"
										},
										{
											"begin": 7721,
											"end": 7752,
											"name": "PUSH [tag]",
											"value": "157"
										},
										{
											"begin": 7721,
											"end": 7752,
											"name": "JUMPI"
										},
										{
											"begin": 7721,
											"end": 7752,
											"name": "INVALID"
										},
										{
											"begin": 7721,
											"end": 7752,
											"name": "tag",
											"value": "157"
										},
										{
											"begin": 7721,
											"end": 7752,
											"name": "JUMPDEST"
										},
										{
											"begin": 7846,
											"end": 7847,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7833,
											"end": 7843,
											"name": "DUP2"
										},
										{
											"begin": 7833,
											"end": 7847,
											"name": "GT"
										},
										{
											"begin": 7829,
											"end": 8099,
											"name": "ISZERO"
										},
										{
											"begin": 7829,
											"end": 8099,
											"name": "PUSH [tag]",
											"value": "158"
										},
										{
											"begin": 7829,
											"end": 8099,
											"name": "JUMPI"
										},
										{
											"begin": 7926,
											"end": 7936,
											"name": "CALLER"
										},
										{
											"begin": 7926,
											"end": 7945,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7926,
											"end": 7945,
											"name": "AND"
										},
										{
											"begin": 7926,
											"end": 7957,
											"name": "PUSH",
											"value": "8FC"
										},
										{
											"begin": 7946,
											"end": 7956,
											"name": "DUP3"
										},
										{
											"begin": 7926,
											"end": 7957,
											"name": "SWAP1"
										},
										{
											"begin": 7926,
											"end": 7957,
											"name": "DUP2"
										},
										{
											"begin": 7926,
											"end": 7957,
											"name": "ISZERO"
										},
										{
											"begin": 7926,
											"end": 7957,
											"name": "MUL"
										},
										{
											"begin": 7926,
											"end": 7957,
											"name": "SWAP1"
										},
										{
											"begin": 7926,
											"end": 7957,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7926,
											"end": 7957,
											"name": "MLOAD"
										},
										{
											"begin": 7926,
											"end": 7957,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7926,
											"end": 7957,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7926,
											"end": 7957,
											"name": "MLOAD"
										},
										{
											"begin": 7926,
											"end": 7957,
											"name": "DUP1"
										},
										{
											"begin": 7926,
											"end": 7957,
											"name": "DUP4"
										},
										{
											"begin": 7926,
											"end": 7957,
											"name": "SUB"
										},
										{
											"begin": 7926,
											"end": 7957,
											"name": "DUP2"
										},
										{
											"begin": 7926,
											"end": 7957,
											"name": "DUP6"
										},
										{
											"begin": 7926,
											"end": 7957,
											"name": "DUP9"
										},
										{
											"begin": 7926,
											"end": 7957,
											"name": "DUP9"
										},
										{
											"begin": 7926,
											"end": 7957,
											"name": "CALL"
										},
										{
											"begin": 7926,
											"end": 7957,
											"name": "SWAP4"
										},
										{
											"begin": 7926,
											"end": 7957,
											"name": "POP"
										},
										{
											"begin": 7926,
											"end": 7957,
											"name": "POP"
										},
										{
											"begin": 7926,
											"end": 7957,
											"name": "POP"
										},
										{
											"begin": 7926,
											"end": 7957,
											"name": "POP"
										},
										{
											"begin": 7926,
											"end": 7957,
											"name": "ISZERO"
										},
										{
											"begin": 7926,
											"end": 7957,
											"name": "ISZERO"
										},
										{
											"begin": 7926,
											"end": 7957,
											"name": "PUSH [tag]",
											"value": "159"
										},
										{
											"begin": 7926,
											"end": 7957,
											"name": "JUMPI"
										},
										{
											"begin": 7926,
											"end": 7957,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7926,
											"end": 7957,
											"name": "DUP1"
										},
										{
											"begin": 7926,
											"end": 7957,
											"name": "REVERT"
										},
										{
											"begin": 7926,
											"end": 7957,
											"name": "tag",
											"value": "159"
										},
										{
											"begin": 7926,
											"end": 7957,
											"name": "JUMPDEST"
										},
										{
											"begin": 8067,
											"end": 8082,
											"name": "TIMESTAMP"
										},
										{
											"begin": 8055,
											"end": 8065,
											"name": "DUP2"
										},
										{
											"begin": 8043,
											"end": 8053,
											"name": "CALLER"
										},
										{
											"begin": 8019,
											"end": 8083,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8019,
											"end": 8083,
											"name": "AND"
										},
										{
											"begin": 8019,
											"end": 8083,
											"name": "PUSH",
											"value": "566803F6E271B911C84F87631BCD310D6A6510BF8882577A96FC76975703E431"
										},
										{
											"begin": 8019,
											"end": 8083,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8019,
											"end": 8083,
											"name": "MLOAD"
										},
										{
											"begin": 8019,
											"end": 8083,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8019,
											"end": 8083,
											"name": "MLOAD"
										},
										{
											"begin": 8019,
											"end": 8083,
											"name": "DUP1"
										},
										{
											"begin": 8019,
											"end": 8083,
											"name": "SWAP2"
										},
										{
											"begin": 8019,
											"end": 8083,
											"name": "SUB"
										},
										{
											"begin": 8019,
											"end": 8083,
											"name": "SWAP1"
										},
										{
											"begin": 8019,
											"end": 8083,
											"name": "LOG4"
										},
										{
											"begin": 7829,
											"end": 8099,
											"name": "tag",
											"value": "158"
										},
										{
											"begin": 7829,
											"end": 8099,
											"name": "JUMPDEST"
										},
										{
											"begin": 8176,
											"end": 8191,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 8168,
											"end": 8173,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 8168,
											"end": 8173,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 8168,
											"end": 8191,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 8168,
											"end": 8191,
											"name": "EXP"
										},
										{
											"begin": 8168,
											"end": 8191,
											"name": "DUP2"
										},
										{
											"begin": 8168,
											"end": 8191,
											"name": "SLOAD"
										},
										{
											"begin": 8168,
											"end": 8191,
											"name": "DUP2"
										},
										{
											"begin": 8168,
											"end": 8191,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 8168,
											"end": 8191,
											"name": "MUL"
										},
										{
											"begin": 8168,
											"end": 8191,
											"name": "NOT"
										},
										{
											"begin": 8168,
											"end": 8191,
											"name": "AND"
										},
										{
											"begin": 8168,
											"end": 8191,
											"name": "SWAP1"
										},
										{
											"begin": 8168,
											"end": 8191,
											"name": "DUP4"
										},
										{
											"begin": 8168,
											"end": 8191,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 8168,
											"end": 8191,
											"name": "DUP2"
										},
										{
											"begin": 8168,
											"end": 8191,
											"name": "GT"
										},
										{
											"begin": 8168,
											"end": 8191,
											"name": "ISZERO"
										},
										{
											"begin": 8168,
											"end": 8191,
											"name": "PUSH [tag]",
											"value": "160"
										},
										{
											"begin": 8168,
											"end": 8191,
											"name": "JUMPI"
										},
										{
											"begin": 8168,
											"end": 8191,
											"name": "INVALID"
										},
										{
											"begin": 8168,
											"end": 8191,
											"name": "tag",
											"value": "160"
										},
										{
											"begin": 8168,
											"end": 8191,
											"name": "JUMPDEST"
										},
										{
											"begin": 8168,
											"end": 8191,
											"name": "MUL"
										},
										{
											"begin": 8168,
											"end": 8191,
											"name": "OR"
										},
										{
											"begin": 8168,
											"end": 8191,
											"name": "SWAP1"
										},
										{
											"begin": 8168,
											"end": 8191,
											"name": "SSTORE"
										},
										{
											"begin": 8168,
											"end": 8191,
											"name": "POP"
										},
										{
											"begin": 8271,
											"end": 8286,
											"name": "TIMESTAMP"
										},
										{
											"begin": 8264,
											"end": 8269,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 8264,
											"end": 8269,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 8264,
											"end": 8269,
											"name": "SWAP1"
										},
										{
											"begin": 8264,
											"end": 8269,
											"name": "SLOAD"
										},
										{
											"begin": 8264,
											"end": 8269,
											"name": "SWAP1"
										},
										{
											"begin": 8264,
											"end": 8269,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 8264,
											"end": 8269,
											"name": "EXP"
										},
										{
											"begin": 8264,
											"end": 8269,
											"name": "SWAP1"
										},
										{
											"begin": 8264,
											"end": 8269,
											"name": "DIV"
										},
										{
											"begin": 8264,
											"end": 8269,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 8264,
											"end": 8269,
											"name": "AND"
										},
										{
											"begin": 8242,
											"end": 8287,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 8242,
											"end": 8287,
											"name": "DUP2"
										},
										{
											"begin": 8242,
											"end": 8287,
											"name": "GT"
										},
										{
											"begin": 8242,
											"end": 8287,
											"name": "ISZERO"
										},
										{
											"begin": 8242,
											"end": 8287,
											"name": "PUSH [tag]",
											"value": "161"
										},
										{
											"begin": 8242,
											"end": 8287,
											"name": "JUMPI"
										},
										{
											"begin": 8242,
											"end": 8287,
											"name": "INVALID"
										},
										{
											"begin": 8242,
											"end": 8287,
											"name": "tag",
											"value": "161"
										},
										{
											"begin": 8242,
											"end": 8287,
											"name": "JUMPDEST"
										},
										{
											"begin": 8242,
											"end": 8287,
											"name": "PUSH",
											"value": "AAAE373901E745122C2E0925AD006227969C6CD190B7D5EA2FB7FDBD1D955B35"
										},
										{
											"begin": 8242,
											"end": 8287,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8242,
											"end": 8287,
											"name": "MLOAD"
										},
										{
											"begin": 8242,
											"end": 8287,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8242,
											"end": 8287,
											"name": "MLOAD"
										},
										{
											"begin": 8242,
											"end": 8287,
											"name": "DUP1"
										},
										{
											"begin": 8242,
											"end": 8287,
											"name": "SWAP2"
										},
										{
											"begin": 8242,
											"end": 8287,
											"name": "SUB"
										},
										{
											"begin": 8242,
											"end": 8287,
											"name": "SWAP1"
										},
										{
											"begin": 8242,
											"end": 8287,
											"name": "LOG3"
										},
										{
											"begin": 7368,
											"end": 8299,
											"name": "tag",
											"value": "153"
										},
										{
											"begin": 7368,
											"end": 8299,
											"name": "JUMPDEST"
										},
										{
											"begin": 8460,
											"end": 8464,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 8438,
											"end": 8445,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 8438,
											"end": 8457,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8446,
											"end": 8456,
											"name": "CALLER"
										},
										{
											"begin": 8438,
											"end": 8457,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8438,
											"end": 8457,
											"name": "AND"
										},
										{
											"begin": 8438,
											"end": 8457,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8438,
											"end": 8457,
											"name": "AND"
										},
										{
											"begin": 8438,
											"end": 8457,
											"name": "DUP2"
										},
										{
											"begin": 8438,
											"end": 8457,
											"name": "MSTORE"
										},
										{
											"begin": 8438,
											"end": 8457,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8438,
											"end": 8457,
											"name": "ADD"
										},
										{
											"begin": 8438,
											"end": 8457,
											"name": "SWAP1"
										},
										{
											"begin": 8438,
											"end": 8457,
											"name": "DUP2"
										},
										{
											"begin": 8438,
											"end": 8457,
											"name": "MSTORE"
										},
										{
											"begin": 8438,
											"end": 8457,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8438,
											"end": 8457,
											"name": "ADD"
										},
										{
											"begin": 8438,
											"end": 8457,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8438,
											"end": 8457,
											"name": "KECCAK256"
										},
										{
											"begin": 8438,
											"end": 8457,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8438,
											"end": 8464,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 8438,
											"end": 8464,
											"name": "EXP"
										},
										{
											"begin": 8438,
											"end": 8464,
											"name": "DUP2"
										},
										{
											"begin": 8438,
											"end": 8464,
											"name": "SLOAD"
										},
										{
											"begin": 8438,
											"end": 8464,
											"name": "DUP2"
										},
										{
											"begin": 8438,
											"end": 8464,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 8438,
											"end": 8464,
											"name": "MUL"
										},
										{
											"begin": 8438,
											"end": 8464,
											"name": "NOT"
										},
										{
											"begin": 8438,
											"end": 8464,
											"name": "AND"
										},
										{
											"begin": 8438,
											"end": 8464,
											"name": "SWAP1"
										},
										{
											"begin": 8438,
											"end": 8464,
											"name": "DUP4"
										},
										{
											"begin": 8438,
											"end": 8464,
											"name": "ISZERO"
										},
										{
											"begin": 8438,
											"end": 8464,
											"name": "ISZERO"
										},
										{
											"begin": 8438,
											"end": 8464,
											"name": "MUL"
										},
										{
											"begin": 8438,
											"end": 8464,
											"name": "OR"
										},
										{
											"begin": 8438,
											"end": 8464,
											"name": "SWAP1"
										},
										{
											"begin": 8438,
											"end": 8464,
											"name": "SSTORE"
										},
										{
											"begin": 8438,
											"end": 8464,
											"name": "POP"
										},
										{
											"begin": 8518,
											"end": 8530,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 8518,
											"end": 8530,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8518,
											"end": 8532,
											"name": "DUP2"
										},
										{
											"begin": 8518,
											"end": 8532,
											"name": "SLOAD"
										},
										{
											"begin": 8518,
											"end": 8532,
											"name": "DUP1"
										},
										{
											"begin": 8518,
											"end": 8532,
											"name": "SWAP3"
										},
										{
											"begin": 8518,
											"end": 8532,
											"name": "SWAP2"
										},
										{
											"begin": 8518,
											"end": 8532,
											"name": "SWAP1"
										},
										{
											"begin": 8518,
											"end": 8532,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 8518,
											"end": 8532,
											"name": "ADD"
										},
										{
											"begin": 8518,
											"end": 8532,
											"name": "SWAP2"
										},
										{
											"begin": 8518,
											"end": 8532,
											"name": "SWAP1"
										},
										{
											"begin": 8518,
											"end": 8532,
											"name": "POP"
										},
										{
											"begin": 8518,
											"end": 8532,
											"name": "SSTORE"
										},
										{
											"begin": 8518,
											"end": 8532,
											"name": "POP"
										},
										{
											"begin": 8640,
											"end": 8704,
											"name": "PUSH [tag]",
											"value": "162"
										},
										{
											"begin": 8678,
											"end": 8703,
											"name": "PUSH [tag]",
											"value": "163"
										},
										{
											"begin": 8692,
											"end": 8702,
											"name": "DUP3"
										},
										{
											"begin": 8678,
											"end": 8687,
											"name": "CALLVALUE"
										},
										{
											"begin": 8678,
											"end": 8691,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 8678,
											"end": 8691,
											"name": "SWAP1"
										},
										{
											"begin": 8678,
											"end": 8703,
											"name": "SWAP2"
										},
										{
											"begin": 8678,
											"end": 8703,
											"name": "SWAP1"
										},
										{
											"begin": 8678,
											"end": 8703,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8678,
											"end": 8703,
											"name": "AND"
										},
										{
											"begin": 8678,
											"end": 8703,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8678,
											"end": 8703,
											"name": "tag",
											"value": "163"
										},
										{
											"begin": 8678,
											"end": 8703,
											"name": "JUMPDEST"
										},
										{
											"begin": 8640,
											"end": 8661,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 8640,
											"end": 8673,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8662,
											"end": 8672,
											"name": "CALLER"
										},
										{
											"begin": 8640,
											"end": 8673,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8640,
											"end": 8673,
											"name": "AND"
										},
										{
											"begin": 8640,
											"end": 8673,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8640,
											"end": 8673,
											"name": "AND"
										},
										{
											"begin": 8640,
											"end": 8673,
											"name": "DUP2"
										},
										{
											"begin": 8640,
											"end": 8673,
											"name": "MSTORE"
										},
										{
											"begin": 8640,
											"end": 8673,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8640,
											"end": 8673,
											"name": "ADD"
										},
										{
											"begin": 8640,
											"end": 8673,
											"name": "SWAP1"
										},
										{
											"begin": 8640,
											"end": 8673,
											"name": "DUP2"
										},
										{
											"begin": 8640,
											"end": 8673,
											"name": "MSTORE"
										},
										{
											"begin": 8640,
											"end": 8673,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8640,
											"end": 8673,
											"name": "ADD"
										},
										{
											"begin": 8640,
											"end": 8673,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8640,
											"end": 8673,
											"name": "KECCAK256"
										},
										{
											"begin": 8640,
											"end": 8673,
											"name": "SLOAD"
										},
										{
											"begin": 8640,
											"end": 8677,
											"name": "PUSH [tag]",
											"value": "104"
										},
										{
											"begin": 8640,
											"end": 8677,
											"name": "SWAP1"
										},
										{
											"begin": 8640,
											"end": 8704,
											"name": "SWAP2"
										},
										{
											"begin": 8640,
											"end": 8704,
											"name": "SWAP1"
										},
										{
											"begin": 8640,
											"end": 8704,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8640,
											"end": 8704,
											"name": "AND"
										},
										{
											"begin": 8640,
											"end": 8704,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8640,
											"end": 8704,
											"name": "tag",
											"value": "162"
										},
										{
											"begin": 8640,
											"end": 8704,
											"name": "JUMPDEST"
										},
										{
											"begin": 8604,
											"end": 8625,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 8604,
											"end": 8637,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8626,
											"end": 8636,
											"name": "CALLER"
										},
										{
											"begin": 8604,
											"end": 8637,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8604,
											"end": 8637,
											"name": "AND"
										},
										{
											"begin": 8604,
											"end": 8637,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8604,
											"end": 8637,
											"name": "AND"
										},
										{
											"begin": 8604,
											"end": 8637,
											"name": "DUP2"
										},
										{
											"begin": 8604,
											"end": 8637,
											"name": "MSTORE"
										},
										{
											"begin": 8604,
											"end": 8637,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8604,
											"end": 8637,
											"name": "ADD"
										},
										{
											"begin": 8604,
											"end": 8637,
											"name": "SWAP1"
										},
										{
											"begin": 8604,
											"end": 8637,
											"name": "DUP2"
										},
										{
											"begin": 8604,
											"end": 8637,
											"name": "MSTORE"
										},
										{
											"begin": 8604,
											"end": 8637,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8604,
											"end": 8637,
											"name": "ADD"
										},
										{
											"begin": 8604,
											"end": 8637,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8604,
											"end": 8637,
											"name": "KECCAK256"
										},
										{
											"begin": 8604,
											"end": 8704,
											"name": "DUP2"
										},
										{
											"begin": 8604,
											"end": 8704,
											"name": "SWAP1"
										},
										{
											"begin": 8604,
											"end": 8704,
											"name": "SSTORE"
										},
										{
											"begin": 8604,
											"end": 8704,
											"name": "POP"
										},
										{
											"begin": 8816,
											"end": 8831,
											"name": "TIMESTAMP"
										},
										{
											"begin": 8789,
											"end": 8814,
											"name": "PUSH [tag]",
											"value": "164"
										},
										{
											"begin": 8803,
											"end": 8813,
											"name": "DUP3"
										},
										{
											"begin": 8789,
											"end": 8798,
											"name": "CALLVALUE"
										},
										{
											"begin": 8789,
											"end": 8802,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 8789,
											"end": 8802,
											"name": "SWAP1"
										},
										{
											"begin": 8789,
											"end": 8814,
											"name": "SWAP2"
										},
										{
											"begin": 8789,
											"end": 8814,
											"name": "SWAP1"
										},
										{
											"begin": 8789,
											"end": 8814,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8789,
											"end": 8814,
											"name": "AND"
										},
										{
											"begin": 8789,
											"end": 8814,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8789,
											"end": 8814,
											"name": "tag",
											"value": "164"
										},
										{
											"begin": 8789,
											"end": 8814,
											"name": "JUMPDEST"
										},
										{
											"begin": 8777,
											"end": 8787,
											"name": "CALLER"
										},
										{
											"begin": 8757,
											"end": 8832,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8757,
											"end": 8832,
											"name": "AND"
										},
										{
											"begin": 8757,
											"end": 8832,
											"name": "PUSH",
											"value": "1B0969CE7F5B05C5E0969329A05CDBD7E2E2F6CEE33BA26FD6E6BBCFF82312CD"
										},
										{
											"begin": 8757,
											"end": 8832,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8757,
											"end": 8832,
											"name": "MLOAD"
										},
										{
											"begin": 8757,
											"end": 8832,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8757,
											"end": 8832,
											"name": "MLOAD"
										},
										{
											"begin": 8757,
											"end": 8832,
											"name": "DUP1"
										},
										{
											"begin": 8757,
											"end": 8832,
											"name": "SWAP2"
										},
										{
											"begin": 8757,
											"end": 8832,
											"name": "SUB"
										},
										{
											"begin": 8757,
											"end": 8832,
											"name": "SWAP1"
										},
										{
											"begin": 8757,
											"end": 8832,
											"name": "LOG4"
										},
										{
											"begin": 7124,
											"end": 8840,
											"name": "POP"
										},
										{
											"begin": 7124,
											"end": 8840,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12530,
											"end": 13748,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 12530,
											"end": 13748,
											"name": "JUMPDEST"
										},
										{
											"begin": 12821,
											"end": 12844,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4007,
											"end": 4011,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3997,
											"end": 4011,
											"name": "ISZERO"
										},
										{
											"begin": 3997,
											"end": 4011,
											"name": "ISZERO"
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "SWAP1"
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "SLOAD"
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "SWAP1"
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "EXP"
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "SWAP1"
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "DIV"
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "AND"
										},
										{
											"begin": 3997,
											"end": 4011,
											"name": "ISZERO"
										},
										{
											"begin": 3997,
											"end": 4011,
											"name": "ISZERO"
										},
										{
											"begin": 3997,
											"end": 4011,
											"name": "EQ"
										},
										{
											"begin": 3989,
											"end": 4012,
											"name": "ISZERO"
										},
										{
											"begin": 3989,
											"end": 4012,
											"name": "ISZERO"
										},
										{
											"begin": 3989,
											"end": 4012,
											"name": "PUSH [tag]",
											"value": "166"
										},
										{
											"begin": 3989,
											"end": 4012,
											"name": "JUMPI"
										},
										{
											"begin": 3989,
											"end": 4012,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3989,
											"end": 4012,
											"name": "DUP1"
										},
										{
											"begin": 3989,
											"end": 4012,
											"name": "REVERT"
										},
										{
											"begin": 3989,
											"end": 4012,
											"name": "tag",
											"value": "166"
										},
										{
											"begin": 3989,
											"end": 4012,
											"name": "JUMPDEST"
										},
										{
											"begin": 4198,
											"end": 4202,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4175,
											"end": 4202,
											"name": "ISZERO"
										},
										{
											"begin": 4175,
											"end": 4202,
											"name": "ISZERO"
										},
										{
											"begin": 4175,
											"end": 4182,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4183,
											"end": 4193,
											"name": "CALLER"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "AND"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "AND"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "DUP2"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "MSTORE"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "ADD"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "SWAP1"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "DUP2"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "MSTORE"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "ADD"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "KECCAK256"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "SWAP1"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "SLOAD"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "SWAP1"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "EXP"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "SWAP1"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "DIV"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "AND"
										},
										{
											"begin": 4175,
											"end": 4202,
											"name": "ISZERO"
										},
										{
											"begin": 4175,
											"end": 4202,
											"name": "ISZERO"
										},
										{
											"begin": 4175,
											"end": 4202,
											"name": "EQ"
										},
										{
											"begin": 4167,
											"end": 4203,
											"name": "ISZERO"
										},
										{
											"begin": 4167,
											"end": 4203,
											"name": "ISZERO"
										},
										{
											"begin": 4167,
											"end": 4203,
											"name": "PUSH [tag]",
											"value": "168"
										},
										{
											"begin": 4167,
											"end": 4203,
											"name": "JUMPI"
										},
										{
											"begin": 4167,
											"end": 4203,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4167,
											"end": 4203,
											"name": "DUP1"
										},
										{
											"begin": 4167,
											"end": 4203,
											"name": "REVERT"
										},
										{
											"begin": 4167,
											"end": 4203,
											"name": "tag",
											"value": "168"
										},
										{
											"begin": 4167,
											"end": 4203,
											"name": "JUMPDEST"
										},
										{
											"begin": 4288,
											"end": 4309,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 4279,
											"end": 4309,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 4279,
											"end": 4309,
											"name": "DUP2"
										},
										{
											"begin": 4279,
											"end": 4309,
											"name": "GT"
										},
										{
											"begin": 4279,
											"end": 4309,
											"name": "ISZERO"
										},
										{
											"begin": 4279,
											"end": 4309,
											"name": "PUSH [tag]",
											"value": "170"
										},
										{
											"begin": 4279,
											"end": 4309,
											"name": "JUMPI"
										},
										{
											"begin": 4279,
											"end": 4309,
											"name": "INVALID"
										},
										{
											"begin": 4279,
											"end": 4309,
											"name": "tag",
											"value": "170"
										},
										{
											"begin": 4279,
											"end": 4309,
											"name": "JUMPDEST"
										},
										{
											"begin": 4279,
											"end": 4284,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 4279,
											"end": 4284,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4279,
											"end": 4284,
											"name": "SWAP1"
										},
										{
											"begin": 4279,
											"end": 4284,
											"name": "SLOAD"
										},
										{
											"begin": 4279,
											"end": 4284,
											"name": "SWAP1"
										},
										{
											"begin": 4279,
											"end": 4284,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4279,
											"end": 4284,
											"name": "EXP"
										},
										{
											"begin": 4279,
											"end": 4284,
											"name": "SWAP1"
										},
										{
											"begin": 4279,
											"end": 4284,
											"name": "DIV"
										},
										{
											"begin": 4279,
											"end": 4284,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 4279,
											"end": 4284,
											"name": "AND"
										},
										{
											"begin": 4279,
											"end": 4309,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 4279,
											"end": 4309,
											"name": "DUP2"
										},
										{
											"begin": 4279,
											"end": 4309,
											"name": "GT"
										},
										{
											"begin": 4279,
											"end": 4309,
											"name": "ISZERO"
										},
										{
											"begin": 4279,
											"end": 4309,
											"name": "PUSH [tag]",
											"value": "171"
										},
										{
											"begin": 4279,
											"end": 4309,
											"name": "JUMPI"
										},
										{
											"begin": 4279,
											"end": 4309,
											"name": "INVALID"
										},
										{
											"begin": 4279,
											"end": 4309,
											"name": "tag",
											"value": "171"
										},
										{
											"begin": 4279,
											"end": 4309,
											"name": "JUMPDEST"
										},
										{
											"begin": 4279,
											"end": 4309,
											"name": "EQ"
										},
										{
											"begin": 4271,
											"end": 4310,
											"name": "ISZERO"
										},
										{
											"begin": 4271,
											"end": 4310,
											"name": "ISZERO"
										},
										{
											"begin": 4271,
											"end": 4310,
											"name": "PUSH [tag]",
											"value": "172"
										},
										{
											"begin": 4271,
											"end": 4310,
											"name": "JUMPI"
										},
										{
											"begin": 4271,
											"end": 4310,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4271,
											"end": 4310,
											"name": "DUP1"
										},
										{
											"begin": 4271,
											"end": 4310,
											"name": "REVERT"
										},
										{
											"begin": 4271,
											"end": 4310,
											"name": "tag",
											"value": "172"
										},
										{
											"begin": 4271,
											"end": 4310,
											"name": "JUMPDEST"
										},
										{
											"begin": 4365,
											"end": 4366,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4329,
											"end": 4350,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 4329,
											"end": 4362,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4351,
											"end": 4361,
											"name": "CALLER"
										},
										{
											"begin": 4329,
											"end": 4362,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4329,
											"end": 4362,
											"name": "AND"
										},
										{
											"begin": 4329,
											"end": 4362,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4329,
											"end": 4362,
											"name": "AND"
										},
										{
											"begin": 4329,
											"end": 4362,
											"name": "DUP2"
										},
										{
											"begin": 4329,
											"end": 4362,
											"name": "MSTORE"
										},
										{
											"begin": 4329,
											"end": 4362,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4329,
											"end": 4362,
											"name": "ADD"
										},
										{
											"begin": 4329,
											"end": 4362,
											"name": "SWAP1"
										},
										{
											"begin": 4329,
											"end": 4362,
											"name": "DUP2"
										},
										{
											"begin": 4329,
											"end": 4362,
											"name": "MSTORE"
										},
										{
											"begin": 4329,
											"end": 4362,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4329,
											"end": 4362,
											"name": "ADD"
										},
										{
											"begin": 4329,
											"end": 4362,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4329,
											"end": 4362,
											"name": "KECCAK256"
										},
										{
											"begin": 4329,
											"end": 4362,
											"name": "SLOAD"
										},
										{
											"begin": 4329,
											"end": 4366,
											"name": "GT"
										},
										{
											"begin": 4321,
											"end": 4367,
											"name": "ISZERO"
										},
										{
											"begin": 4321,
											"end": 4367,
											"name": "ISZERO"
										},
										{
											"begin": 4321,
											"end": 4367,
											"name": "PUSH [tag]",
											"value": "173"
										},
										{
											"begin": 4321,
											"end": 4367,
											"name": "JUMPI"
										},
										{
											"begin": 4321,
											"end": 4367,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4321,
											"end": 4367,
											"name": "DUP1"
										},
										{
											"begin": 4321,
											"end": 4367,
											"name": "REVERT"
										},
										{
											"begin": 4321,
											"end": 4367,
											"name": "tag",
											"value": "173"
										},
										{
											"begin": 4321,
											"end": 4367,
											"name": "JUMPDEST"
										},
										{
											"begin": 12862,
											"end": 12874,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 12862,
											"end": 12874,
											"name": "SLOAD"
										},
										{
											"begin": 12847,
											"end": 12859,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 12847,
											"end": 12859,
											"name": "SLOAD"
										},
										{
											"begin": 12847,
											"end": 12874,
											"name": "DUP2"
										},
										{
											"begin": 12847,
											"end": 12874,
											"name": "ISZERO"
										},
										{
											"begin": 12847,
											"end": 12874,
											"name": "ISZERO"
										},
										{
											"begin": 12847,
											"end": 12874,
											"name": "PUSH [tag]",
											"value": "175"
										},
										{
											"begin": 12847,
											"end": 12874,
											"name": "JUMPI"
										},
										{
											"begin": 12847,
											"end": 12874,
											"name": "INVALID"
										},
										{
											"begin": 12847,
											"end": 12874,
											"name": "tag",
											"value": "175"
										},
										{
											"begin": 12847,
											"end": 12874,
											"name": "JUMPDEST"
										},
										{
											"begin": 12847,
											"end": 12874,
											"name": "DIV"
										},
										{
											"begin": 12821,
											"end": 12874,
											"name": "SWAP1"
										},
										{
											"begin": 12821,
											"end": 12874,
											"name": "POP"
										},
										{
											"begin": 12980,
											"end": 12998,
											"name": "DUP1"
										},
										{
											"begin": 12964,
											"end": 12968,
											"name": "ADDRESS"
										},
										{
											"begin": 12964,
											"end": 12976,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12964,
											"end": 12976,
											"name": "AND"
										},
										{
											"begin": 12964,
											"end": 12976,
											"name": "BALANCE"
										},
										{
											"begin": 12964,
											"end": 12998,
											"name": "LT"
										},
										{
											"begin": 12964,
											"end": 12998,
											"name": "ISZERO"
										},
										{
											"begin": 12957,
											"end": 12999,
											"name": "ISZERO"
										},
										{
											"begin": 12957,
											"end": 12999,
											"name": "ISZERO"
										},
										{
											"begin": 12957,
											"end": 12999,
											"name": "PUSH [tag]",
											"value": "176"
										},
										{
											"begin": 12957,
											"end": 12999,
											"name": "JUMPI"
										},
										{
											"begin": 12957,
											"end": 12999,
											"name": "INVALID"
										},
										{
											"begin": 12957,
											"end": 12999,
											"name": "tag",
											"value": "176"
										},
										{
											"begin": 12957,
											"end": 12999,
											"name": "JUMPDEST"
										},
										{
											"begin": 13080,
											"end": 13090,
											"name": "CALLER"
										},
										{
											"begin": 13080,
											"end": 13099,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13080,
											"end": 13099,
											"name": "AND"
										},
										{
											"begin": 13080,
											"end": 13119,
											"name": "PUSH",
											"value": "8FC"
										},
										{
											"begin": 13100,
											"end": 13118,
											"name": "DUP3"
										},
										{
											"begin": 13080,
											"end": 13119,
											"name": "SWAP1"
										},
										{
											"begin": 13080,
											"end": 13119,
											"name": "DUP2"
										},
										{
											"begin": 13080,
											"end": 13119,
											"name": "ISZERO"
										},
										{
											"begin": 13080,
											"end": 13119,
											"name": "MUL"
										},
										{
											"begin": 13080,
											"end": 13119,
											"name": "SWAP1"
										},
										{
											"begin": 13080,
											"end": 13119,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13080,
											"end": 13119,
											"name": "MLOAD"
										},
										{
											"begin": 13080,
											"end": 13119,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13080,
											"end": 13119,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13080,
											"end": 13119,
											"name": "MLOAD"
										},
										{
											"begin": 13080,
											"end": 13119,
											"name": "DUP1"
										},
										{
											"begin": 13080,
											"end": 13119,
											"name": "DUP4"
										},
										{
											"begin": 13080,
											"end": 13119,
											"name": "SUB"
										},
										{
											"begin": 13080,
											"end": 13119,
											"name": "DUP2"
										},
										{
											"begin": 13080,
											"end": 13119,
											"name": "DUP6"
										},
										{
											"begin": 13080,
											"end": 13119,
											"name": "DUP9"
										},
										{
											"begin": 13080,
											"end": 13119,
											"name": "DUP9"
										},
										{
											"begin": 13080,
											"end": 13119,
											"name": "CALL"
										},
										{
											"begin": 13080,
											"end": 13119,
											"name": "SWAP4"
										},
										{
											"begin": 13080,
											"end": 13119,
											"name": "POP"
										},
										{
											"begin": 13080,
											"end": 13119,
											"name": "POP"
										},
										{
											"begin": 13080,
											"end": 13119,
											"name": "POP"
										},
										{
											"begin": 13080,
											"end": 13119,
											"name": "POP"
										},
										{
											"begin": 13080,
											"end": 13119,
											"name": "ISZERO"
										},
										{
											"begin": 13080,
											"end": 13119,
											"name": "ISZERO"
										},
										{
											"begin": 13080,
											"end": 13119,
											"name": "PUSH [tag]",
											"value": "177"
										},
										{
											"begin": 13080,
											"end": 13119,
											"name": "JUMPI"
										},
										{
											"begin": 13080,
											"end": 13119,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13080,
											"end": 13119,
											"name": "DUP1"
										},
										{
											"begin": 13080,
											"end": 13119,
											"name": "REVERT"
										},
										{
											"begin": 13080,
											"end": 13119,
											"name": "tag",
											"value": "177"
										},
										{
											"begin": 13080,
											"end": 13119,
											"name": "JUMPDEST"
										},
										{
											"begin": 13224,
											"end": 13239,
											"name": "TIMESTAMP"
										},
										{
											"begin": 13204,
											"end": 13222,
											"name": "DUP2"
										},
										{
											"begin": 13192,
											"end": 13202,
											"name": "CALLER"
										},
										{
											"begin": 13172,
											"end": 13240,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13172,
											"end": 13240,
											"name": "AND"
										},
										{
											"begin": 13172,
											"end": 13240,
											"name": "PUSH",
											"value": "52F6685DF2F773F854B17DB1D82E2352E222010DAAF8175761F02EF8782C403"
										},
										{
											"begin": 13172,
											"end": 13240,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13172,
											"end": 13240,
											"name": "MLOAD"
										},
										{
											"begin": 13172,
											"end": 13240,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13172,
											"end": 13240,
											"name": "MLOAD"
										},
										{
											"begin": 13172,
											"end": 13240,
											"name": "DUP1"
										},
										{
											"begin": 13172,
											"end": 13240,
											"name": "SWAP2"
										},
										{
											"begin": 13172,
											"end": 13240,
											"name": "SUB"
										},
										{
											"begin": 13172,
											"end": 13240,
											"name": "SWAP1"
										},
										{
											"begin": 13172,
											"end": 13240,
											"name": "LOG4"
										},
										{
											"begin": 13327,
											"end": 13328,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13311,
											"end": 13315,
											"name": "ADDRESS"
										},
										{
											"begin": 13311,
											"end": 13323,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13311,
											"end": 13323,
											"name": "AND"
										},
										{
											"begin": 13311,
											"end": 13323,
											"name": "BALANCE"
										},
										{
											"begin": 13311,
											"end": 13328,
											"name": "EQ"
										},
										{
											"begin": 13307,
											"end": 13741,
											"name": "ISZERO"
										},
										{
											"begin": 13307,
											"end": 13741,
											"name": "PUSH [tag]",
											"value": "178"
										},
										{
											"begin": 13307,
											"end": 13741,
											"name": "JUMPI"
										},
										{
											"begin": 13403,
											"end": 13408,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13394,
											"end": 13400,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 13394,
											"end": 13400,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13394,
											"end": 13408,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 13394,
											"end": 13408,
											"name": "EXP"
										},
										{
											"begin": 13394,
											"end": 13408,
											"name": "DUP2"
										},
										{
											"begin": 13394,
											"end": 13408,
											"name": "SLOAD"
										},
										{
											"begin": 13394,
											"end": 13408,
											"name": "DUP2"
										},
										{
											"begin": 13394,
											"end": 13408,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 13394,
											"end": 13408,
											"name": "MUL"
										},
										{
											"begin": 13394,
											"end": 13408,
											"name": "NOT"
										},
										{
											"begin": 13394,
											"end": 13408,
											"name": "AND"
										},
										{
											"begin": 13394,
											"end": 13408,
											"name": "SWAP1"
										},
										{
											"begin": 13394,
											"end": 13408,
											"name": "DUP4"
										},
										{
											"begin": 13394,
											"end": 13408,
											"name": "ISZERO"
										},
										{
											"begin": 13394,
											"end": 13408,
											"name": "ISZERO"
										},
										{
											"begin": 13394,
											"end": 13408,
											"name": "MUL"
										},
										{
											"begin": 13394,
											"end": 13408,
											"name": "OR"
										},
										{
											"begin": 13394,
											"end": 13408,
											"name": "SWAP1"
										},
										{
											"begin": 13394,
											"end": 13408,
											"name": "SSTORE"
										},
										{
											"begin": 13394,
											"end": 13408,
											"name": "POP"
										},
										{
											"begin": 13502,
											"end": 13517,
											"name": "TIMESTAMP"
										},
										{
											"begin": 13494,
											"end": 13500,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 13494,
											"end": 13500,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13494,
											"end": 13500,
											"name": "SWAP1"
										},
										{
											"begin": 13494,
											"end": 13500,
											"name": "SLOAD"
										},
										{
											"begin": 13494,
											"end": 13500,
											"name": "SWAP1"
										},
										{
											"begin": 13494,
											"end": 13500,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 13494,
											"end": 13500,
											"name": "EXP"
										},
										{
											"begin": 13494,
											"end": 13500,
											"name": "SWAP1"
										},
										{
											"begin": 13494,
											"end": 13500,
											"name": "DIV"
										},
										{
											"begin": 13494,
											"end": 13500,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 13494,
											"end": 13500,
											"name": "AND"
										},
										{
											"begin": 13466,
											"end": 13518,
											"name": "ISZERO"
										},
										{
											"begin": 13466,
											"end": 13518,
											"name": "ISZERO"
										},
										{
											"begin": 13466,
											"end": 13518,
											"name": "PUSH",
											"value": "160914EA27C60AA29A5F3A69D74E6069869DE36E38939DE1E0A66B921D8623D2"
										},
										{
											"begin": 13466,
											"end": 13518,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13466,
											"end": 13518,
											"name": "MLOAD"
										},
										{
											"begin": 13466,
											"end": 13518,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13466,
											"end": 13518,
											"name": "MLOAD"
										},
										{
											"begin": 13466,
											"end": 13518,
											"name": "DUP1"
										},
										{
											"begin": 13466,
											"end": 13518,
											"name": "SWAP2"
										},
										{
											"begin": 13466,
											"end": 13518,
											"name": "SUB"
										},
										{
											"begin": 13466,
											"end": 13518,
											"name": "SWAP1"
										},
										{
											"begin": 13466,
											"end": 13518,
											"name": "LOG3"
										},
										{
											"begin": 13620,
											"end": 13633,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 13612,
											"end": 13617,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 13612,
											"end": 13617,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13612,
											"end": 13633,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 13612,
											"end": 13633,
											"name": "EXP"
										},
										{
											"begin": 13612,
											"end": 13633,
											"name": "DUP2"
										},
										{
											"begin": 13612,
											"end": 13633,
											"name": "SLOAD"
										},
										{
											"begin": 13612,
											"end": 13633,
											"name": "DUP2"
										},
										{
											"begin": 13612,
											"end": 13633,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 13612,
											"end": 13633,
											"name": "MUL"
										},
										{
											"begin": 13612,
											"end": 13633,
											"name": "NOT"
										},
										{
											"begin": 13612,
											"end": 13633,
											"name": "AND"
										},
										{
											"begin": 13612,
											"end": 13633,
											"name": "SWAP1"
										},
										{
											"begin": 13612,
											"end": 13633,
											"name": "DUP4"
										},
										{
											"begin": 13612,
											"end": 13633,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 13612,
											"end": 13633,
											"name": "DUP2"
										},
										{
											"begin": 13612,
											"end": 13633,
											"name": "GT"
										},
										{
											"begin": 13612,
											"end": 13633,
											"name": "ISZERO"
										},
										{
											"begin": 13612,
											"end": 13633,
											"name": "PUSH [tag]",
											"value": "179"
										},
										{
											"begin": 13612,
											"end": 13633,
											"name": "JUMPI"
										},
										{
											"begin": 13612,
											"end": 13633,
											"name": "INVALID"
										},
										{
											"begin": 13612,
											"end": 13633,
											"name": "tag",
											"value": "179"
										},
										{
											"begin": 13612,
											"end": 13633,
											"name": "JUMPDEST"
										},
										{
											"begin": 13612,
											"end": 13633,
											"name": "MUL"
										},
										{
											"begin": 13612,
											"end": 13633,
											"name": "OR"
										},
										{
											"begin": 13612,
											"end": 13633,
											"name": "SWAP1"
										},
										{
											"begin": 13612,
											"end": 13633,
											"name": "SSTORE"
										},
										{
											"begin": 13612,
											"end": 13633,
											"name": "POP"
										},
										{
											"begin": 13713,
											"end": 13728,
											"name": "TIMESTAMP"
										},
										{
											"begin": 13706,
											"end": 13711,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 13706,
											"end": 13711,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13706,
											"end": 13711,
											"name": "SWAP1"
										},
										{
											"begin": 13706,
											"end": 13711,
											"name": "SLOAD"
										},
										{
											"begin": 13706,
											"end": 13711,
											"name": "SWAP1"
										},
										{
											"begin": 13706,
											"end": 13711,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 13706,
											"end": 13711,
											"name": "EXP"
										},
										{
											"begin": 13706,
											"end": 13711,
											"name": "SWAP1"
										},
										{
											"begin": 13706,
											"end": 13711,
											"name": "DIV"
										},
										{
											"begin": 13706,
											"end": 13711,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 13706,
											"end": 13711,
											"name": "AND"
										},
										{
											"begin": 13684,
											"end": 13729,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 13684,
											"end": 13729,
											"name": "DUP2"
										},
										{
											"begin": 13684,
											"end": 13729,
											"name": "GT"
										},
										{
											"begin": 13684,
											"end": 13729,
											"name": "ISZERO"
										},
										{
											"begin": 13684,
											"end": 13729,
											"name": "PUSH [tag]",
											"value": "180"
										},
										{
											"begin": 13684,
											"end": 13729,
											"name": "JUMPI"
										},
										{
											"begin": 13684,
											"end": 13729,
											"name": "INVALID"
										},
										{
											"begin": 13684,
											"end": 13729,
											"name": "tag",
											"value": "180"
										},
										{
											"begin": 13684,
											"end": 13729,
											"name": "JUMPDEST"
										},
										{
											"begin": 13684,
											"end": 13729,
											"name": "PUSH",
											"value": "AAAE373901E745122C2E0925AD006227969C6CD190B7D5EA2FB7FDBD1D955B35"
										},
										{
											"begin": 13684,
											"end": 13729,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13684,
											"end": 13729,
											"name": "MLOAD"
										},
										{
											"begin": 13684,
											"end": 13729,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13684,
											"end": 13729,
											"name": "MLOAD"
										},
										{
											"begin": 13684,
											"end": 13729,
											"name": "DUP1"
										},
										{
											"begin": 13684,
											"end": 13729,
											"name": "SWAP2"
										},
										{
											"begin": 13684,
											"end": 13729,
											"name": "SUB"
										},
										{
											"begin": 13684,
											"end": 13729,
											"name": "SWAP1"
										},
										{
											"begin": 13684,
											"end": 13729,
											"name": "LOG3"
										},
										{
											"begin": 13307,
											"end": 13741,
											"name": "tag",
											"value": "178"
										},
										{
											"begin": 13307,
											"end": 13741,
											"name": "JUMPDEST"
										},
										{
											"begin": 12530,
											"end": 13748,
											"name": "POP"
										},
										{
											"begin": 12530,
											"end": 13748,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "JUMPDEST"
										},
										{
											"begin": 14157,
											"end": 14164,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14166,
											"end": 14173,
											"name": "DUP1"
										},
										{
											"begin": 14175,
											"end": 14179,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14181,
											"end": 14185,
											"name": "DUP1"
										},
										{
											"begin": 14187,
											"end": 14191,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14193,
											"end": 14197,
											"name": "DUP1"
										},
										{
											"begin": 14199,
											"end": 14203,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14205,
											"end": 14209,
											"name": "DUP1"
										},
										{
											"begin": 14211,
											"end": 14216,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14218,
											"end": 14222,
											"name": "DUP1"
										},
										{
											"begin": 14224,
											"end": 14228,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14259,
											"end": 14267,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 14259,
											"end": 14267,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14259,
											"end": 14267,
											"name": "SWAP1"
										},
										{
											"begin": 14259,
											"end": 14267,
											"name": "SLOAD"
										},
										{
											"begin": 14259,
											"end": 14267,
											"name": "SWAP1"
										},
										{
											"begin": 14259,
											"end": 14267,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 14259,
											"end": 14267,
											"name": "EXP"
										},
										{
											"begin": 14259,
											"end": 14267,
											"name": "SWAP1"
										},
										{
											"begin": 14259,
											"end": 14267,
											"name": "DIV"
										},
										{
											"begin": 14259,
											"end": 14267,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14259,
											"end": 14267,
											"name": "AND"
										},
										{
											"begin": 14278,
											"end": 14289,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 14278,
											"end": 14289,
											"name": "SLOAD"
										},
										{
											"begin": 14300,
											"end": 14315,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 14300,
											"end": 14315,
											"name": "SLOAD"
										},
										{
											"begin": 14326,
											"end": 14345,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 14326,
											"end": 14345,
											"name": "SLOAD"
										},
										{
											"begin": 14356,
											"end": 14376,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 14356,
											"end": 14376,
											"name": "SLOAD"
										},
										{
											"begin": 14387,
											"end": 14406,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 14387,
											"end": 14406,
											"name": "SLOAD"
										},
										{
											"begin": 14417,
											"end": 14425,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 14417,
											"end": 14425,
											"name": "SLOAD"
										},
										{
											"begin": 14436,
											"end": 14448,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 14436,
											"end": 14448,
											"name": "SLOAD"
										},
										{
											"begin": 14459,
											"end": 14464,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 14459,
											"end": 14464,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 14459,
											"end": 14464,
											"name": "SWAP1"
										},
										{
											"begin": 14459,
											"end": 14464,
											"name": "SLOAD"
										},
										{
											"begin": 14459,
											"end": 14464,
											"name": "SWAP1"
										},
										{
											"begin": 14459,
											"end": 14464,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 14459,
											"end": 14464,
											"name": "EXP"
										},
										{
											"begin": 14459,
											"end": 14464,
											"name": "SWAP1"
										},
										{
											"begin": 14459,
											"end": 14464,
											"name": "DIV"
										},
										{
											"begin": 14459,
											"end": 14464,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 14459,
											"end": 14464,
											"name": "AND"
										},
										{
											"begin": 14475,
											"end": 14481,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 14475,
											"end": 14481,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14475,
											"end": 14481,
											"name": "SWAP1"
										},
										{
											"begin": 14475,
											"end": 14481,
											"name": "SLOAD"
										},
										{
											"begin": 14475,
											"end": 14481,
											"name": "SWAP1"
										},
										{
											"begin": 14475,
											"end": 14481,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 14475,
											"end": 14481,
											"name": "EXP"
										},
										{
											"begin": 14475,
											"end": 14481,
											"name": "SWAP1"
										},
										{
											"begin": 14475,
											"end": 14481,
											"name": "DIV"
										},
										{
											"begin": 14475,
											"end": 14481,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 14475,
											"end": 14481,
											"name": "AND"
										},
										{
											"begin": 14492,
											"end": 14496,
											"name": "ADDRESS"
										},
										{
											"begin": 14492,
											"end": 14504,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14492,
											"end": 14504,
											"name": "AND"
										},
										{
											"begin": 14492,
											"end": 14504,
											"name": "BALANCE"
										},
										{
											"begin": 14241,
											"end": 14515,
											"name": "SWAP11"
										},
										{
											"begin": 14241,
											"end": 14515,
											"name": "POP"
										},
										{
											"begin": 14241,
											"end": 14515,
											"name": "SWAP11"
										},
										{
											"begin": 14241,
											"end": 14515,
											"name": "POP"
										},
										{
											"begin": 14241,
											"end": 14515,
											"name": "SWAP11"
										},
										{
											"begin": 14241,
											"end": 14515,
											"name": "POP"
										},
										{
											"begin": 14241,
											"end": 14515,
											"name": "SWAP11"
										},
										{
											"begin": 14241,
											"end": 14515,
											"name": "POP"
										},
										{
											"begin": 14241,
											"end": 14515,
											"name": "SWAP11"
										},
										{
											"begin": 14241,
											"end": 14515,
											"name": "POP"
										},
										{
											"begin": 14241,
											"end": 14515,
											"name": "SWAP11"
										},
										{
											"begin": 14241,
											"end": 14515,
											"name": "POP"
										},
										{
											"begin": 14241,
											"end": 14515,
											"name": "SWAP11"
										},
										{
											"begin": 14241,
											"end": 14515,
											"name": "POP"
										},
										{
											"begin": 14241,
											"end": 14515,
											"name": "SWAP11"
										},
										{
											"begin": 14241,
											"end": 14515,
											"name": "POP"
										},
										{
											"begin": 14241,
											"end": 14515,
											"name": "SWAP11"
										},
										{
											"begin": 14241,
											"end": 14515,
											"name": "POP"
										},
										{
											"begin": 14241,
											"end": 14515,
											"name": "SWAP11"
										},
										{
											"begin": 14241,
											"end": 14515,
											"name": "POP"
										},
										{
											"begin": 14241,
											"end": 14515,
											"name": "SWAP11"
										},
										{
											"begin": 14241,
											"end": 14515,
											"name": "POP"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "SWAP1"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "SWAP2"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "SWAP3"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "SWAP4"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "SWAP5"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "SWAP6"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "SWAP7"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "SWAP8"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "SWAP9"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "SWAP10"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "SWAP11"
										},
										{
											"begin": 14111,
											"end": 14523,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "JUMPDEST"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "DUP1"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "SWAP1"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "SLOAD"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "SWAP1"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "EXP"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "SWAP1"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "DIV"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "AND"
										},
										{
											"begin": 218,
											"end": 237,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 218,
											"end": 237,
											"name": "AND"
										},
										{
											"begin": 218,
											"end": 228,
											"name": "CALLER"
										},
										{
											"begin": 218,
											"end": 237,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 218,
											"end": 237,
											"name": "AND"
										},
										{
											"begin": 218,
											"end": 237,
											"name": "EQ"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "ISZERO"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "ISZERO"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "PUSH [tag]",
											"value": "183"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "JUMPI"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "DUP1"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "REVERT"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "tag",
											"value": "183"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "JUMPDEST"
										},
										{
											"begin": 322,
											"end": 332,
											"name": "DUP1"
										},
										{
											"begin": 309,
											"end": 333,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 309,
											"end": 333,
											"name": "AND"
										},
										{
											"begin": 309,
											"end": 333,
											"name": "SELFDESTRUCT"
										},
										{
											"begin": 481,
											"end": 604,
											"name": "tag",
											"value": "96"
										},
										{
											"begin": 481,
											"end": 604,
											"name": "JUMPDEST"
										},
										{
											"begin": 539,
											"end": 546,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 571,
											"end": 572,
											"name": "DUP3"
										},
										{
											"begin": 566,
											"end": 567,
											"name": "DUP3"
										},
										{
											"begin": 566,
											"end": 572,
											"name": "GT"
										},
										{
											"begin": 566,
											"end": 572,
											"name": "ISZERO"
										},
										{
											"begin": 559,
											"end": 573,
											"name": "ISZERO"
										},
										{
											"begin": 559,
											"end": 573,
											"name": "ISZERO"
										},
										{
											"begin": 559,
											"end": 573,
											"name": "PUSH [tag]",
											"value": "186"
										},
										{
											"begin": 559,
											"end": 573,
											"name": "JUMPI"
										},
										{
											"begin": 559,
											"end": 573,
											"name": "INVALID"
										},
										{
											"begin": 559,
											"end": 573,
											"name": "tag",
											"value": "186"
										},
										{
											"begin": 559,
											"end": 573,
											"name": "JUMPDEST"
										},
										{
											"begin": 595,
											"end": 596,
											"name": "DUP2"
										},
										{
											"begin": 591,
											"end": 592,
											"name": "DUP4"
										},
										{
											"begin": 591,
											"end": 596,
											"name": "SUB"
										},
										{
											"begin": 584,
											"end": 596,
											"name": "SWAP1"
										},
										{
											"begin": 584,
											"end": 596,
											"name": "POP"
										},
										{
											"begin": 481,
											"end": 604,
											"name": "SWAP3"
										},
										{
											"begin": 481,
											"end": 604,
											"name": "SWAP2"
										},
										{
											"begin": 481,
											"end": 604,
											"name": "POP"
										},
										{
											"begin": 481,
											"end": 604,
											"name": "POP"
										},
										{
											"begin": 481,
											"end": 604,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 622,
											"end": 769,
											"name": "tag",
											"value": "104"
										},
										{
											"begin": 622,
											"end": 769,
											"name": "JUMPDEST"
										},
										{
											"begin": 680,
											"end": 687,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 700,
											"end": 709,
											"name": "DUP1"
										},
										{
											"begin": 716,
											"end": 717,
											"name": "DUP3"
										},
										{
											"begin": 712,
											"end": 713,
											"name": "DUP5"
										},
										{
											"begin": 712,
											"end": 717,
											"name": "ADD"
										},
										{
											"begin": 700,
											"end": 717,
											"name": "SWAP1"
										},
										{
											"begin": 700,
											"end": 717,
											"name": "POP"
										},
										{
											"begin": 740,
											"end": 741,
											"name": "DUP4"
										},
										{
											"begin": 735,
											"end": 736,
											"name": "DUP2"
										},
										{
											"begin": 735,
											"end": 741,
											"name": "LT"
										},
										{
											"begin": 735,
											"end": 741,
											"name": "ISZERO"
										},
										{
											"begin": 728,
											"end": 742,
											"name": "ISZERO"
										},
										{
											"begin": 728,
											"end": 742,
											"name": "ISZERO"
										},
										{
											"begin": 728,
											"end": 742,
											"name": "PUSH [tag]",
											"value": "188"
										},
										{
											"begin": 728,
											"end": 742,
											"name": "JUMPI"
										},
										{
											"begin": 728,
											"end": 742,
											"name": "INVALID"
										},
										{
											"begin": 728,
											"end": 742,
											"name": "tag",
											"value": "188"
										},
										{
											"begin": 728,
											"end": 742,
											"name": "JUMPDEST"
										},
										{
											"begin": 760,
											"end": 761,
											"name": "DUP1"
										},
										{
											"begin": 753,
											"end": 761,
											"name": "SWAP2"
										},
										{
											"begin": 753,
											"end": 761,
											"name": "POP"
										},
										{
											"begin": 622,
											"end": 769,
											"name": "POP"
										},
										{
											"begin": 622,
											"end": 769,
											"name": "SWAP3"
										},
										{
											"begin": 622,
											"end": 769,
											"name": "SWAP2"
										},
										{
											"begin": 622,
											"end": 769,
											"name": "POP"
										},
										{
											"begin": 622,
											"end": 769,
											"name": "POP"
										},
										{
											"begin": 622,
											"end": 769,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 15260,
											"end": 15458,
											"name": "tag",
											"value": "121"
										},
										{
											"begin": 15260,
											"end": 15458,
											"name": "JUMPDEST"
										},
										{
											"begin": 15347,
											"end": 15360,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 15339,
											"end": 15344,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 15339,
											"end": 15344,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 15339,
											"end": 15360,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 15339,
											"end": 15360,
											"name": "EXP"
										},
										{
											"begin": 15339,
											"end": 15360,
											"name": "DUP2"
										},
										{
											"begin": 15339,
											"end": 15360,
											"name": "SLOAD"
										},
										{
											"begin": 15339,
											"end": 15360,
											"name": "DUP2"
										},
										{
											"begin": 15339,
											"end": 15360,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 15339,
											"end": 15360,
											"name": "MUL"
										},
										{
											"begin": 15339,
											"end": 15360,
											"name": "NOT"
										},
										{
											"begin": 15339,
											"end": 15360,
											"name": "AND"
										},
										{
											"begin": 15339,
											"end": 15360,
											"name": "SWAP1"
										},
										{
											"begin": 15339,
											"end": 15360,
											"name": "DUP4"
										},
										{
											"begin": 15339,
											"end": 15360,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 15339,
											"end": 15360,
											"name": "DUP2"
										},
										{
											"begin": 15339,
											"end": 15360,
											"name": "GT"
										},
										{
											"begin": 15339,
											"end": 15360,
											"name": "ISZERO"
										},
										{
											"begin": 15339,
											"end": 15360,
											"name": "PUSH [tag]",
											"value": "190"
										},
										{
											"begin": 15339,
											"end": 15360,
											"name": "JUMPI"
										},
										{
											"begin": 15339,
											"end": 15360,
											"name": "INVALID"
										},
										{
											"begin": 15339,
											"end": 15360,
											"name": "tag",
											"value": "190"
										},
										{
											"begin": 15339,
											"end": 15360,
											"name": "JUMPDEST"
										},
										{
											"begin": 15339,
											"end": 15360,
											"name": "MUL"
										},
										{
											"begin": 15339,
											"end": 15360,
											"name": "OR"
										},
										{
											"begin": 15339,
											"end": 15360,
											"name": "SWAP1"
										},
										{
											"begin": 15339,
											"end": 15360,
											"name": "SSTORE"
										},
										{
											"begin": 15339,
											"end": 15360,
											"name": "POP"
										},
										{
											"begin": 15434,
											"end": 15449,
											"name": "TIMESTAMP"
										},
										{
											"begin": 15427,
											"end": 15432,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 15427,
											"end": 15432,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 15427,
											"end": 15432,
											"name": "SWAP1"
										},
										{
											"begin": 15427,
											"end": 15432,
											"name": "SLOAD"
										},
										{
											"begin": 15427,
											"end": 15432,
											"name": "SWAP1"
										},
										{
											"begin": 15427,
											"end": 15432,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 15427,
											"end": 15432,
											"name": "EXP"
										},
										{
											"begin": 15427,
											"end": 15432,
											"name": "SWAP1"
										},
										{
											"begin": 15427,
											"end": 15432,
											"name": "DIV"
										},
										{
											"begin": 15427,
											"end": 15432,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 15427,
											"end": 15432,
											"name": "AND"
										},
										{
											"begin": 15405,
											"end": 15450,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 15405,
											"end": 15450,
											"name": "DUP2"
										},
										{
											"begin": 15405,
											"end": 15450,
											"name": "GT"
										},
										{
											"begin": 15405,
											"end": 15450,
											"name": "ISZERO"
										},
										{
											"begin": 15405,
											"end": 15450,
											"name": "PUSH [tag]",
											"value": "191"
										},
										{
											"begin": 15405,
											"end": 15450,
											"name": "JUMPI"
										},
										{
											"begin": 15405,
											"end": 15450,
											"name": "INVALID"
										},
										{
											"begin": 15405,
											"end": 15450,
											"name": "tag",
											"value": "191"
										},
										{
											"begin": 15405,
											"end": 15450,
											"name": "JUMPDEST"
										},
										{
											"begin": 15405,
											"end": 15450,
											"name": "PUSH",
											"value": "AAAE373901E745122C2E0925AD006227969C6CD190B7D5EA2FB7FDBD1D955B35"
										},
										{
											"begin": 15405,
											"end": 15450,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15405,
											"end": 15450,
											"name": "MLOAD"
										},
										{
											"begin": 15405,
											"end": 15450,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15405,
											"end": 15450,
											"name": "MLOAD"
										},
										{
											"begin": 15405,
											"end": 15450,
											"name": "DUP1"
										},
										{
											"begin": 15405,
											"end": 15450,
											"name": "SWAP2"
										},
										{
											"begin": 15405,
											"end": 15450,
											"name": "SUB"
										},
										{
											"begin": 15405,
											"end": 15450,
											"name": "SWAP1"
										},
										{
											"begin": 15405,
											"end": 15450,
											"name": "LOG3"
										},
										{
											"begin": 15260,
											"end": 15458,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 17286,
											"end": 17663,
											"name": "tag",
											"value": "147"
										},
										{
											"begin": 17286,
											"end": 17663,
											"name": "JUMPDEST"
										},
										{
											"begin": 17321,
											"end": 17325,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17412,
											"end": 17434,
											"name": "DUP1"
										},
										{
											"begin": 17437,
											"end": 17442,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17437,
											"end": 17442,
											"name": "DUP1"
										},
										{
											"begin": 17437,
											"end": 17442,
											"name": "SWAP1"
										},
										{
											"begin": 17437,
											"end": 17442,
											"name": "SLOAD"
										},
										{
											"begin": 17437,
											"end": 17442,
											"name": "SWAP1"
										},
										{
											"begin": 17437,
											"end": 17442,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 17437,
											"end": 17442,
											"name": "EXP"
										},
										{
											"begin": 17437,
											"end": 17442,
											"name": "SWAP1"
										},
										{
											"begin": 17437,
											"end": 17442,
											"name": "DIV"
										},
										{
											"begin": 17437,
											"end": 17442,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17437,
											"end": 17442,
											"name": "AND"
										},
										{
											"begin": 17437,
											"end": 17447,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17437,
											"end": 17447,
											"name": "AND"
										},
										{
											"begin": 17455,
											"end": 17491,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17455,
											"end": 17491,
											"name": "MLOAD"
										},
										{
											"begin": 17455,
											"end": 17491,
											"name": "DUP1"
										},
										{
											"begin": 17455,
											"end": 17491,
											"name": "DUP1"
										},
										{
											"begin": 17455,
											"end": 17491,
											"name": "PUSH",
											"value": "7365744672617564537461747573286164647265737329000000000000000000"
										},
										{
											"begin": 17455,
											"end": 17491,
											"name": "DUP2"
										},
										{
											"begin": 17455,
											"end": 17491,
											"name": "MSTORE"
										},
										{
											"begin": 17455,
											"end": 17491,
											"name": "POP"
										},
										{
											"begin": 17455,
											"end": 17491,
											"name": "PUSH",
											"value": "17"
										},
										{
											"begin": 17455,
											"end": 17491,
											"name": "ADD"
										},
										{
											"begin": 17455,
											"end": 17491,
											"name": "SWAP1"
										},
										{
											"begin": 17455,
											"end": 17491,
											"name": "POP"
										},
										{
											"begin": 17455,
											"end": 17491,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17455,
											"end": 17491,
											"name": "MLOAD"
										},
										{
											"begin": 17455,
											"end": 17491,
											"name": "DUP1"
										},
										{
											"begin": 17455,
											"end": 17491,
											"name": "SWAP2"
										},
										{
											"begin": 17455,
											"end": 17491,
											"name": "SUB"
										},
										{
											"begin": 17455,
											"end": 17491,
											"name": "SWAP1"
										},
										{
											"begin": 17455,
											"end": 17491,
											"name": "KECCAK256"
										},
										{
											"begin": 17437,
											"end": 17503,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17437,
											"end": 17503,
											"name": "SWAP1"
										},
										{
											"begin": 17437,
											"end": 17503,
											"name": "DIV"
										},
										{
											"begin": 17494,
											"end": 17502,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 17494,
											"end": 17502,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17494,
											"end": 17502,
											"name": "SWAP1"
										},
										{
											"begin": 17494,
											"end": 17502,
											"name": "SLOAD"
										},
										{
											"begin": 17494,
											"end": 17502,
											"name": "SWAP1"
										},
										{
											"begin": 17494,
											"end": 17502,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 17494,
											"end": 17502,
											"name": "EXP"
										},
										{
											"begin": 17494,
											"end": 17502,
											"name": "SWAP1"
										},
										{
											"begin": 17494,
											"end": 17502,
											"name": "DIV"
										},
										{
											"begin": 17494,
											"end": 17502,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17494,
											"end": 17502,
											"name": "AND"
										},
										{
											"begin": 17437,
											"end": 17503,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17437,
											"end": 17503,
											"name": "MLOAD"
										},
										{
											"begin": 17437,
											"end": 17503,
											"name": "DUP3"
										},
										{
											"begin": 17437,
											"end": 17503,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 17437,
											"end": 17503,
											"name": "AND"
										},
										{
											"begin": 17437,
											"end": 17503,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17437,
											"end": 17503,
											"name": "MUL"
										},
										{
											"begin": 17437,
											"end": 17503,
											"name": "DUP2"
										},
										{
											"begin": 17437,
											"end": 17503,
											"name": "MSTORE"
										},
										{
											"begin": 17437,
											"end": 17503,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 17437,
											"end": 17503,
											"name": "ADD"
										},
										{
											"begin": 17437,
											"end": 17503,
											"name": "DUP1"
										},
										{
											"begin": 17437,
											"end": 17503,
											"name": "DUP3"
										},
										{
											"begin": 17437,
											"end": 17503,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17437,
											"end": 17503,
											"name": "AND"
										},
										{
											"begin": 17437,
											"end": 17503,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17437,
											"end": 17503,
											"name": "AND"
										},
										{
											"begin": 17437,
											"end": 17503,
											"name": "DUP2"
										},
										{
											"begin": 17437,
											"end": 17503,
											"name": "MSTORE"
										},
										{
											"begin": 17437,
											"end": 17503,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17437,
											"end": 17503,
											"name": "ADD"
										},
										{
											"begin": 17437,
											"end": 17503,
											"name": "SWAP2"
										},
										{
											"begin": 17437,
											"end": 17503,
											"name": "POP"
										},
										{
											"begin": 17437,
											"end": 17503,
											"name": "POP"
										},
										{
											"begin": 17437,
											"end": 17503,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17437,
											"end": 17503,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17437,
											"end": 17503,
											"name": "MLOAD"
										},
										{
											"begin": 17437,
											"end": 17503,
											"name": "DUP1"
										},
										{
											"begin": 17437,
											"end": 17503,
											"name": "DUP4"
										},
										{
											"begin": 17437,
											"end": 17503,
											"name": "SUB"
										},
										{
											"begin": 17437,
											"end": 17503,
											"name": "DUP2"
										},
										{
											"begin": 17437,
											"end": 17503,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17437,
											"end": 17503,
											"name": "DUP8"
										},
										{
											"begin": 17437,
											"end": 17503,
											"name": "PUSH",
											"value": "646E"
										},
										{
											"begin": 17437,
											"end": 17503,
											"name": "GAS"
										},
										{
											"begin": 17437,
											"end": 17503,
											"name": "SUB"
										},
										{
											"begin": 17437,
											"end": 17503,
											"name": "CALL"
										},
										{
											"begin": 17437,
											"end": 17503,
											"name": "SWAP3"
										},
										{
											"begin": 17437,
											"end": 17503,
											"name": "POP"
										},
										{
											"begin": 17437,
											"end": 17503,
											"name": "POP"
										},
										{
											"begin": 17437,
											"end": 17503,
											"name": "POP"
										},
										{
											"begin": 17412,
											"end": 17503,
											"name": "SWAP1"
										},
										{
											"begin": 17412,
											"end": 17503,
											"name": "POP"
										},
										{
											"begin": 17602,
											"end": 17617,
											"name": "TIMESTAMP"
										},
										{
											"begin": 17583,
											"end": 17600,
											"name": "DUP2"
										},
										{
											"begin": 17554,
											"end": 17618,
											"name": "ISZERO"
										},
										{
											"begin": 17554,
											"end": 17618,
											"name": "ISZERO"
										},
										{
											"begin": 17573,
											"end": 17581,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 17573,
											"end": 17581,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17573,
											"end": 17581,
											"name": "SWAP1"
										},
										{
											"begin": 17573,
											"end": 17581,
											"name": "SLOAD"
										},
										{
											"begin": 17573,
											"end": 17581,
											"name": "SWAP1"
										},
										{
											"begin": 17573,
											"end": 17581,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 17573,
											"end": 17581,
											"name": "EXP"
										},
										{
											"begin": 17573,
											"end": 17581,
											"name": "SWAP1"
										},
										{
											"begin": 17573,
											"end": 17581,
											"name": "DIV"
										},
										{
											"begin": 17573,
											"end": 17581,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17573,
											"end": 17581,
											"name": "AND"
										},
										{
											"begin": 17554,
											"end": 17618,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17554,
											"end": 17618,
											"name": "AND"
										},
										{
											"begin": 17554,
											"end": 17618,
											"name": "PUSH",
											"value": "C1BB1D1E99D1E8D2705BA85717226A3FD9A86E4DE2284B00DFE6F33538D5249F"
										},
										{
											"begin": 17554,
											"end": 17618,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17554,
											"end": 17618,
											"name": "MLOAD"
										},
										{
											"begin": 17554,
											"end": 17618,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17554,
											"end": 17618,
											"name": "MLOAD"
										},
										{
											"begin": 17554,
											"end": 17618,
											"name": "DUP1"
										},
										{
											"begin": 17554,
											"end": 17618,
											"name": "SWAP2"
										},
										{
											"begin": 17554,
											"end": 17618,
											"name": "SUB"
										},
										{
											"begin": 17554,
											"end": 17618,
											"name": "SWAP1"
										},
										{
											"begin": 17554,
											"end": 17618,
											"name": "LOG4"
										},
										{
											"begin": 17638,
											"end": 17655,
											"name": "DUP1"
										},
										{
											"begin": 17631,
											"end": 17655,
											"name": "SWAP2"
										},
										{
											"begin": 17631,
											"end": 17655,
											"name": "POP"
										},
										{
											"begin": 17286,
											"end": 17663,
											"name": "POP"
										},
										{
											"begin": 17286,
											"end": 17663,
											"name": "SWAP1"
										},
										{
											"begin": 17286,
											"end": 17663,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 270,
											"end": 463,
											"name": "tag",
											"value": "193"
										},
										{
											"begin": 270,
											"end": 463,
											"name": "JUMPDEST"
										},
										{
											"begin": 328,
											"end": 335,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 419,
											"end": 428,
											"name": "DUP1"
										},
										{
											"begin": 435,
											"end": 436,
											"name": "DUP3"
										},
										{
											"begin": 431,
											"end": 432,
											"name": "DUP5"
										},
										{
											"begin": 431,
											"end": 436,
											"name": "DUP2"
										},
										{
											"begin": 431,
											"end": 436,
											"name": "ISZERO"
										},
										{
											"begin": 431,
											"end": 436,
											"name": "ISZERO"
										},
										{
											"begin": 431,
											"end": 436,
											"name": "PUSH [tag]",
											"value": "195"
										},
										{
											"begin": 431,
											"end": 436,
											"name": "JUMPI"
										},
										{
											"begin": 431,
											"end": 436,
											"name": "INVALID"
										},
										{
											"begin": 431,
											"end": 436,
											"name": "tag",
											"value": "195"
										},
										{
											"begin": 431,
											"end": 436,
											"name": "JUMPDEST"
										},
										{
											"begin": 431,
											"end": 436,
											"name": "DIV"
										},
										{
											"begin": 419,
											"end": 436,
											"name": "SWAP1"
										},
										{
											"begin": 419,
											"end": 436,
											"name": "POP"
										},
										{
											"begin": 454,
											"end": 455,
											"name": "DUP1"
										},
										{
											"begin": 447,
											"end": 455,
											"name": "SWAP2"
										},
										{
											"begin": 447,
											"end": 455,
											"name": "POP"
										},
										{
											"begin": 270,
											"end": 463,
											"name": "POP"
										},
										{
											"begin": 270,
											"end": 463,
											"name": "SWAP3"
										},
										{
											"begin": 270,
											"end": 463,
											"name": "SWAP2"
										},
										{
											"begin": 270,
											"end": 463,
											"name": "POP"
										},
										{
											"begin": 270,
											"end": 463,
											"name": "POP"
										},
										{
											"begin": 270,
											"end": 463,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"changeState(uint8)": "268f1153",
							"destroy()": "83197ef0",
							"destroyAndSend(address)": "f5074f41",
							"fraudVote()": "d85da7b6",
							"getBalance()": "12065fe0",
							"getCreditInfo()": "f06817cf",
							"invest()": "e8b5e51f",
							"lenders(address)": "28fd10d7",
							"owner()": "8da5cb5b",
							"refund()": "590e1ae3",
							"repay()": "402d8883",
							"requestInterest()": "efd475ab",
							"revokeVote()": "43c14b22",
							"toggleActive()": "29c68dc1",
							"withdraw()": "3ccfd60b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.18+commit.9cf6e910\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_state\",\"type\":\"uint8\"}],\"name\":\"changeState\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"lenders\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"toggleActive\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"repay\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"revokeVote\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"refund\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"destroy\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"fraudVote\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"invest\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"requestInterest\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCreditInfo\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"bytes32\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint8\"},{\"name\":\"\",\"type\":\"bool\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_recipient\",\"type\":\"address\"}],\"name\":\"destroyAndSend\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_requestedAmount\",\"type\":\"uint256\"},{\"name\":\"_requestedRepayments\",\"type\":\"uint256\"},{\"name\":\"_interest\",\"type\":\"uint256\"},{\"name\":\"_description\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"LogCreditInitialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"state\",\"type\":\"uint8\"},{\"indexed\":true,\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"LogCreditStateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"active\",\"type\":\"bool\"},{\"indexed\":true,\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"LogCreditStateActiveChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"LogBorrowerWithdrawal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"LogBorrowerRepaymentInstallment\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"LogBorrowerRepaymentFinished\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"LogBorrowerChangeReturned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"fraudStatus\",\"type\":\"bool\"},{\"indexed\":true,\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"LogBorrowerIsFraud\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"LogLenderInvestment\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"LogLenderWithdrawal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"LogLenderChangeReturned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"LogLenderVoteForRevoking\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"LogLenderVoteForFraud\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"LogLenderRefunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_currentOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"LogOwnershipTransfered\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"changeState(uint8)\":{\"details\":\"Change state function.\\r\",\"params\":{\"_state\":\"New state.\\r Only accessible to the owner of the contract.\\r Changes the state of the contract.\\r\"}},\"fraudVote()\":{\"details\":\"Function for voting the borrower as fraudster.\\r\"},\"getBalance()\":{\"details\":\"Get current balance.\\r return this.balance.\\r\"},\"getCreditInfo()\":{\"details\":\"Function to get the whole credit information.\\r return borrower\\r return description\\r return requestedAmount\\r return requestedRepayments\\r return remainingRepayments\\r return interest\\r return returnAmount\\r return state\\r return active\\r return this.balance\\r\"},\"invest()\":{\"details\":\"Invest function.\\r Provides functionality for person to invest in someone's credit,\\r incentivised by the return of interest.\\r\"},\"refund()\":{\"details\":\"Function for refunding people. \"},\"repay()\":{\"details\":\"Repayment function.\\r Allows borrower to make repayment installments.\\r\"},\"requestInterest()\":{\"details\":\"Request interest function.\\r It can only be executed while contract is in active state.\\r It is only accessible to lenders.\\r It is only accessible if lender funded 1 or more wei.\\r It can only be executed once.\\r Transfers the lended amount + interest to the lender.\\r\"},\"revokeVote()\":{\"details\":\"Function for revoking the credit.\\r\"},\"toggleActive()\":{\"details\":\"Toggle active state function.\\r Only accessible to the owner of the contract.\\r Toggles the active state of the contract.\\r return bool\\r\"},\"withdraw()\":{\"details\":\"Withdraw function.\\r It can only be executed while contract is in active state.\\r It is only accessible to the borrower.\\r It is only accessible if the needed amount is gathered in the contract.\\r It can only be executed once.\\r Transfers the gathered amount to the borrower.\\r\"}},\"title\":\"Credit contract.\\r Inherits the Ownable and Destructible contracts.\\r\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"smart-contracts/contracts/Credit.sol\":\"Credit\"},\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"smart-contracts/contracts/Credit.sol\":{\"keccak256\":\"0x0b5b9913f0799bfa99f975ef9ac53fbb2c61b777edd074c0f0cb8ea1c58404b7\",\"urls\":[\"bzzr://ff4bc1d1896e78e0cfbf02ec9b264453de4621319b975b4b55c33f7c20d60271\"]},\"smart-contracts/contracts/common/Destructible.sol\":{\"keccak256\":\"0x6bca3c39c4d48228e82a513b1647f6f0a64b18c9b3c6e16fe3413711656eda7d\",\"urls\":[\"bzzr://42ca9998600eeb5d9e5266df144db191509b03b58dd43fafbf03ec60f1a522a8\"]},\"smart-contracts/contracts/common/Ownable.sol\":{\"keccak256\":\"0xfffa53788eb7e34abd06c6b9b0b6346eb7069a7bd88a69e0ad1ebc9cca2e2919\",\"urls\":[\"bzzr://dea0861e0acf65dd49668bb6c94911b884f475e785b2ee9fa15d5de12627bc3a\"]},\"smart-contracts/contracts/common/SafeMath.sol\":{\"keccak256\":\"0x583337e75e9e16e04f784c01d4509cc8f7b36025b34e20cddc644dba8f39a7c2\",\"urls\":[\"bzzr://9ac10c82bfac80571ebaf5679b607b105ea7529035f07757e8595ba38191c548\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"smart-contracts/contracts/common/Destructible.sol": {
				"Destructible": {
					"abi": [
						{
							"constant": false,
							"inputs": [],
							"name": "destroy",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_recipient",
									"type": "address"
								}
							],
							"name": "destroyAndSend",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"payable": true,
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "_currentOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "_newOwner",
									"type": "address"
								}
							],
							"name": "LogOwnershipTransfered",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"smart-contracts/contracts/common/Destructible.sol\":55:344  contract Destructible is Ownable {\r... */\n  mstore(0x40, 0x60)\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"smart-contracts/contracts/common/Destructible.sol\":55:344  contract Destructible is Ownable {\r... */\n      mstore(0x40, 0x60)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x83197ef0\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xf5074f41\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"smart-contracts/contracts/common/Destructible.sol\":151:225  function destroy() public onlyOwner {\r... */\n    tag_2:\n      jumpi(tag_5, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_5:\n      tag_6\n      jump(tag_7)\n    tag_6:\n      stop\n        /* \"smart-contracts/contracts/common/Ownable.sol\":54:74  address public owner */\n    tag_3:\n      jumpi(tag_8, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_8:\n      tag_9\n      jump(tag_10)\n    tag_9:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"smart-contracts/contracts/common/Destructible.sol\":237:341  function destroyAndSend(address _recipient) public onlyOwner {\r... */\n    tag_4:\n      jumpi(tag_11, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_11:\n      tag_12\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_13)\n    tag_12:\n      stop\n        /* \"smart-contracts/contracts/common/Destructible.sol\":151:225  function destroy() public onlyOwner {\r... */\n    tag_7:\n        /* \"smart-contracts/contracts/common/Ownable.sol\":232:237  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"smart-contracts/contracts/common/Ownable.sol\":218:237  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"smart-contracts/contracts/common/Ownable.sol\":218:228  msg.sender */\n      caller\n        /* \"smart-contracts/contracts/common/Ownable.sol\":218:237  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"smart-contracts/contracts/common/Ownable.sol\":210:238  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_15\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_15:\n        /* \"smart-contracts/contracts/common/Destructible.sol\":211:216  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"smart-contracts/contracts/common/Destructible.sol\":198:217  selfdestruct(owner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      selfdestruct\n        /* \"smart-contracts/contracts/common/Ownable.sol\":54:74  address public owner */\n    tag_10:\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"smart-contracts/contracts/common/Destructible.sol\":237:341  function destroyAndSend(address _recipient) public onlyOwner {\r... */\n    tag_13:\n        /* \"smart-contracts/contracts/common/Ownable.sol\":232:237  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"smart-contracts/contracts/common/Ownable.sol\":218:237  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"smart-contracts/contracts/common/Ownable.sol\":218:228  msg.sender */\n      caller\n        /* \"smart-contracts/contracts/common/Ownable.sol\":218:237  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"smart-contracts/contracts/common/Ownable.sol\":210:238  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_18\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_18:\n        /* \"smart-contracts/contracts/common/Destructible.sol\":322:332  _recipient */\n      dup1\n        /* \"smart-contracts/contracts/common/Destructible.sol\":309:333  selfdestruct(_recipient) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      selfdestruct\n\n    auxdata: 0xa165627a7a723058209b306ccf0690861a9c063f349f16157fd341b9ddde5b2e86be99cf943c20f8e70029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6060604052610259806100136000396000f300606060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806383197ef01461005c5780638da5cb5b14610071578063f5074f41146100c6575b600080fd5b341561006757600080fd5b61006f6100ff565b005b341561007c57600080fd5b610084610194565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156100d157600080fd5b6100fd600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506101b9565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561015a57600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561021457600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16ff00a165627a7a723058209b306ccf0690861a9c063f349f16157fd341b9ddde5b2e86be99cf943c20f8e70029",
							"opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE PUSH2 0x259 DUP1 PUSH2 0x13 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x83197EF0 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x71 JUMPI DUP1 PUSH4 0xF5074F41 EQ PUSH2 0xC6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0x67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F PUSH2 0xFF JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x84 PUSH2 0x194 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0xD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFD PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1B9 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x15A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x214 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 SWAP12 ADDRESS PUSH13 0xCF0690861A9C063F349F16157F 0xd3 COINBASE 0xb9 0xdd 0xde JUMPDEST 0x2e DUP7 0xbe SWAP10 0xcf SWAP5 EXTCODECOPY KECCAK256 0xf8 0xe7 STOP 0x29 ",
							"sourceMap": "55:289:1:-;;;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "606060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806383197ef01461005c5780638da5cb5b14610071578063f5074f41146100c6575b600080fd5b341561006757600080fd5b61006f6100ff565b005b341561007c57600080fd5b610084610194565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156100d157600080fd5b6100fd600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506101b9565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561015a57600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561021457600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16ff00a165627a7a723058209b306ccf0690861a9c063f349f16157fd341b9ddde5b2e86be99cf943c20f8e70029",
							"opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x83197EF0 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x71 JUMPI DUP1 PUSH4 0xF5074F41 EQ PUSH2 0xC6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0x67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F PUSH2 0xFF JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x84 PUSH2 0x194 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0xD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFD PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1B9 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x15A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x214 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 SWAP12 ADDRESS PUSH13 0xCF0690861A9C063F349F16157F 0xd3 COINBASE 0xb9 0xdd 0xde JUMPDEST 0x2e DUP7 0xbe SWAP10 0xcf SWAP5 EXTCODECOPY KECCAK256 0xf8 0xe7 STOP 0x29 ",
							"sourceMap": "55:289:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;151:74;;;;;;;;;;;;;;54:20:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;237:104:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;151:74;232:5:2;;;;;;;;;;;218:19;;:10;:19;;;210:28;;;;;;;;211:5:1;;;;;;;;;;;198:19;;;54:20:2;;;;;;;;;;;;;:::o;237:104:1:-;232:5:2;;;;;;;;;;;218:19;;:10;:19;;;210:28;;;;;;;;322:10:1;309:24;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "120200",
								"executionCost": "141",
								"totalCost": "120341"
							},
							"external": {
								"destroy()": "30640",
								"destroyAndSend(address)": "30488",
								"owner()": "456"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 55,
									"end": 344,
									"name": "PUSH",
									"value": "60"
								},
								{
									"begin": 55,
									"end": 344,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 55,
									"end": 344,
									"name": "MSTORE"
								},
								{
									"begin": 55,
									"end": 344,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 55,
									"end": 344,
									"name": "DUP1"
								},
								{
									"begin": 55,
									"end": 344,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 55,
									"end": 344,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 55,
									"end": 344,
									"name": "CODECOPY"
								},
								{
									"begin": 55,
									"end": 344,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 55,
									"end": 344,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a723058209b306ccf0690861a9c063f349f16157fd341b9ddde5b2e86be99cf943c20f8e70029",
									".code": [
										{
											"begin": 55,
											"end": 344,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 55,
											"end": 344,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 55,
											"end": 344,
											"name": "MSTORE"
										},
										{
											"begin": 55,
											"end": 344,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 55,
											"end": 344,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 55,
											"end": 344,
											"name": "LT"
										},
										{
											"begin": 55,
											"end": 344,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 55,
											"end": 344,
											"name": "JUMPI"
										},
										{
											"begin": 55,
											"end": 344,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 55,
											"end": 344,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 55,
											"end": 344,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 55,
											"end": 344,
											"name": "SWAP1"
										},
										{
											"begin": 55,
											"end": 344,
											"name": "DIV"
										},
										{
											"begin": 55,
											"end": 344,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 55,
											"end": 344,
											"name": "AND"
										},
										{
											"begin": 55,
											"end": 344,
											"name": "DUP1"
										},
										{
											"begin": 55,
											"end": 344,
											"name": "PUSH",
											"value": "83197EF0"
										},
										{
											"begin": 55,
											"end": 344,
											"name": "EQ"
										},
										{
											"begin": 55,
											"end": 344,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 55,
											"end": 344,
											"name": "JUMPI"
										},
										{
											"begin": 55,
											"end": 344,
											"name": "DUP1"
										},
										{
											"begin": 55,
											"end": 344,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 55,
											"end": 344,
											"name": "EQ"
										},
										{
											"begin": 55,
											"end": 344,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 55,
											"end": 344,
											"name": "JUMPI"
										},
										{
											"begin": 55,
											"end": 344,
											"name": "DUP1"
										},
										{
											"begin": 55,
											"end": 344,
											"name": "PUSH",
											"value": "F5074F41"
										},
										{
											"begin": 55,
											"end": 344,
											"name": "EQ"
										},
										{
											"begin": 55,
											"end": 344,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 55,
											"end": 344,
											"name": "JUMPI"
										},
										{
											"begin": 55,
											"end": 344,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 55,
											"end": 344,
											"name": "JUMPDEST"
										},
										{
											"begin": 55,
											"end": 344,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 55,
											"end": 344,
											"name": "DUP1"
										},
										{
											"begin": 55,
											"end": 344,
											"name": "REVERT"
										},
										{
											"begin": 151,
											"end": 225,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 151,
											"end": 225,
											"name": "JUMPDEST"
										},
										{
											"begin": 151,
											"end": 225,
											"name": "CALLVALUE"
										},
										{
											"begin": 151,
											"end": 225,
											"name": "ISZERO"
										},
										{
											"begin": 151,
											"end": 225,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 151,
											"end": 225,
											"name": "JUMPI"
										},
										{
											"begin": 151,
											"end": 225,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 151,
											"end": 225,
											"name": "DUP1"
										},
										{
											"begin": 151,
											"end": 225,
											"name": "REVERT"
										},
										{
											"begin": 151,
											"end": 225,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 151,
											"end": 225,
											"name": "JUMPDEST"
										},
										{
											"begin": 151,
											"end": 225,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 151,
											"end": 225,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 151,
											"end": 225,
											"name": "JUMP"
										},
										{
											"begin": 151,
											"end": 225,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 151,
											"end": 225,
											"name": "JUMPDEST"
										},
										{
											"begin": 151,
											"end": 225,
											"name": "STOP"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "JUMPDEST"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "CALLVALUE"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "ISZERO"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "JUMPI"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "DUP1"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "REVERT"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "JUMPDEST"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "JUMP"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "JUMPDEST"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "MLOAD"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "DUP1"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "DUP3"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "AND"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "AND"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "DUP2"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "MSTORE"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "ADD"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "SWAP2"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "POP"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "POP"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "MLOAD"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "DUP1"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "SWAP2"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "SUB"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "SWAP1"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "RETURN"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "JUMPDEST"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "CALLVALUE"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "ISZERO"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "JUMPI"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "DUP1"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "REVERT"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "JUMPDEST"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "DUP1"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "DUP1"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "AND"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "SWAP1"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "ADD"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "SWAP1"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "SWAP2"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "SWAP1"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "POP"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "POP"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "JUMP"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "JUMPDEST"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "STOP"
										},
										{
											"begin": 151,
											"end": 225,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 151,
											"end": 225,
											"name": "JUMPDEST"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "DUP1"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "SWAP1"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "SLOAD"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "SWAP1"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "EXP"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "SWAP1"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "DIV"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "AND"
										},
										{
											"begin": 218,
											"end": 237,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 218,
											"end": 237,
											"name": "AND"
										},
										{
											"begin": 218,
											"end": 228,
											"name": "CALLER"
										},
										{
											"begin": 218,
											"end": 237,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 218,
											"end": 237,
											"name": "AND"
										},
										{
											"begin": 218,
											"end": 237,
											"name": "EQ"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "ISZERO"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "ISZERO"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "JUMPI"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "DUP1"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "REVERT"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "JUMPDEST"
										},
										{
											"begin": 211,
											"end": 216,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 211,
											"end": 216,
											"name": "DUP1"
										},
										{
											"begin": 211,
											"end": 216,
											"name": "SWAP1"
										},
										{
											"begin": 211,
											"end": 216,
											"name": "SLOAD"
										},
										{
											"begin": 211,
											"end": 216,
											"name": "SWAP1"
										},
										{
											"begin": 211,
											"end": 216,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 211,
											"end": 216,
											"name": "EXP"
										},
										{
											"begin": 211,
											"end": 216,
											"name": "SWAP1"
										},
										{
											"begin": 211,
											"end": 216,
											"name": "DIV"
										},
										{
											"begin": 211,
											"end": 216,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 211,
											"end": 216,
											"name": "AND"
										},
										{
											"begin": 198,
											"end": 217,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 198,
											"end": 217,
											"name": "AND"
										},
										{
											"begin": 198,
											"end": 217,
											"name": "SELFDESTRUCT"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "JUMPDEST"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "DUP1"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "SWAP1"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "SLOAD"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "SWAP1"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "EXP"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "SWAP1"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "DIV"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "AND"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "DUP2"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 237,
											"end": 341,
											"name": "JUMPDEST"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "DUP1"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "SWAP1"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "SLOAD"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "SWAP1"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "EXP"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "SWAP1"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "DIV"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "AND"
										},
										{
											"begin": 218,
											"end": 237,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 218,
											"end": 237,
											"name": "AND"
										},
										{
											"begin": 218,
											"end": 228,
											"name": "CALLER"
										},
										{
											"begin": 218,
											"end": 237,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 218,
											"end": 237,
											"name": "AND"
										},
										{
											"begin": 218,
											"end": 237,
											"name": "EQ"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "ISZERO"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "ISZERO"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "JUMPI"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "DUP1"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "REVERT"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "JUMPDEST"
										},
										{
											"begin": 322,
											"end": 332,
											"name": "DUP1"
										},
										{
											"begin": 309,
											"end": 333,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 309,
											"end": 333,
											"name": "AND"
										},
										{
											"begin": 309,
											"end": 333,
											"name": "SELFDESTRUCT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"destroy()": "83197ef0",
							"destroyAndSend(address)": "f5074f41",
							"owner()": "8da5cb5b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.18+commit.9cf6e910\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[],\"name\":\"destroy\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_recipient\",\"type\":\"address\"}],\"name\":\"destroyAndSend\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_currentOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"LogOwnershipTransfered\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"smart-contracts/contracts/common/Destructible.sol\":\"Destructible\"},\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"smart-contracts/contracts/common/Destructible.sol\":{\"keccak256\":\"0x6bca3c39c4d48228e82a513b1647f6f0a64b18c9b3c6e16fe3413711656eda7d\",\"urls\":[\"bzzr://42ca9998600eeb5d9e5266df144db191509b03b58dd43fafbf03ec60f1a522a8\"]},\"smart-contracts/contracts/common/Ownable.sol\":{\"keccak256\":\"0xfffa53788eb7e34abd06c6b9b0b6346eb7069a7bd88a69e0ad1ebc9cca2e2919\",\"urls\":[\"bzzr://dea0861e0acf65dd49668bb6c94911b884f475e785b2ee9fa15d5de12627bc3a\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"smart-contracts/contracts/common/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "_currentOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "_newOwner",
									"type": "address"
								}
							],
							"name": "LogOwnershipTransfered",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"smart-contracts/contracts/common/Ownable.sol\":30:535  contract Ownable {\r... */\n  mstore(0x40, 0x60)\n  jumpi(tag_1, iszero(callvalue))\n  0x0\n  dup1\n  revert\ntag_1:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"smart-contracts/contracts/common/Ownable.sol\":30:535  contract Ownable {\r... */\n      mstore(0x40, 0x60)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x8da5cb5b\n      eq\n      tag_2\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"smart-contracts/contracts/common/Ownable.sol\":54:74  address public owner */\n    tag_2:\n      jumpi(tag_3, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_3:\n      tag_4\n      jump(tag_5)\n    tag_4:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_5:\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n\n    auxdata: 0xa165627a7a72305820db6d904709b365fb36fbbc4606bc5b661d7bdfe574aa0b58cdb051e0294a1b3f0029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6060604052341561000f57600080fd5b60e78061001d6000396000f300606060405260043610603f576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680638da5cb5b146044575b600080fd5b3415604e57600080fd5b60546096565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16815600a165627a7a72305820db6d904709b365fb36fbbc4606bc5b661d7bdfe574aa0b58cdb051e0294a1b3f0029",
							"opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE CALLVALUE ISZERO PUSH2 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xE7 DUP1 PUSH2 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x3F JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x8DA5CB5B EQ PUSH1 0x44 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH1 0x4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x54 PUSH1 0x96 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xdb PUSH14 0x904709B365FB36FBBC4606BC5B66 0x1d PUSH28 0xDFE574AA0B58CDB051E0294A1B3F0029000000000000000000000000 ",
							"sourceMap": "30:505:2:-;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "606060405260043610603f576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680638da5cb5b146044575b600080fd5b3415604e57600080fd5b60546096565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16815600a165627a7a72305820db6d904709b365fb36fbbc4606bc5b661d7bdfe574aa0b58cdb051e0294a1b3f0029",
							"opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x3F JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x8DA5CB5B EQ PUSH1 0x44 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH1 0x4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x54 PUSH1 0x96 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xdb PUSH14 0x904709B365FB36FBBC4606BC5B66 0x1d PUSH28 0xDFE574AA0B58CDB051E0294A1B3F0029000000000000000000000000 ",
							"sourceMap": "30:505:2:-;;;;;;;;;;;;;;;;;;;;;;;;54:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "46200",
								"executionCost": "94",
								"totalCost": "46294"
							},
							"external": {
								"owner()": "434"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 30,
									"end": 535,
									"name": "PUSH",
									"value": "60"
								},
								{
									"begin": 30,
									"end": 535,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 30,
									"end": 535,
									"name": "MSTORE"
								},
								{
									"begin": 30,
									"end": 535,
									"name": "CALLVALUE"
								},
								{
									"begin": 30,
									"end": 535,
									"name": "ISZERO"
								},
								{
									"begin": 30,
									"end": 535,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 30,
									"end": 535,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 535,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 30,
									"end": 535,
									"name": "DUP1"
								},
								{
									"begin": 30,
									"end": 535,
									"name": "REVERT"
								},
								{
									"begin": 30,
									"end": 535,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 30,
									"end": 535,
									"name": "JUMPDEST"
								},
								{
									"begin": 30,
									"end": 535,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 30,
									"end": 535,
									"name": "DUP1"
								},
								{
									"begin": 30,
									"end": 535,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 30,
									"end": 535,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 30,
									"end": 535,
									"name": "CODECOPY"
								},
								{
									"begin": 30,
									"end": 535,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 30,
									"end": 535,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a72305820db6d904709b365fb36fbbc4606bc5b661d7bdfe574aa0b58cdb051e0294a1b3f0029",
									".code": [
										{
											"begin": 30,
											"end": 535,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 30,
											"end": 535,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 30,
											"end": 535,
											"name": "MSTORE"
										},
										{
											"begin": 30,
											"end": 535,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 30,
											"end": 535,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 30,
											"end": 535,
											"name": "LT"
										},
										{
											"begin": 30,
											"end": 535,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 30,
											"end": 535,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 535,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 30,
											"end": 535,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 30,
											"end": 535,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 30,
											"end": 535,
											"name": "SWAP1"
										},
										{
											"begin": 30,
											"end": 535,
											"name": "DIV"
										},
										{
											"begin": 30,
											"end": 535,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 30,
											"end": 535,
											"name": "AND"
										},
										{
											"begin": 30,
											"end": 535,
											"name": "DUP1"
										},
										{
											"begin": 30,
											"end": 535,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 30,
											"end": 535,
											"name": "EQ"
										},
										{
											"begin": 30,
											"end": 535,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 30,
											"end": 535,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 535,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 30,
											"end": 535,
											"name": "JUMPDEST"
										},
										{
											"begin": 30,
											"end": 535,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 30,
											"end": 535,
											"name": "DUP1"
										},
										{
											"begin": 30,
											"end": 535,
											"name": "REVERT"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "JUMPDEST"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "CALLVALUE"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "ISZERO"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "JUMPI"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "DUP1"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "REVERT"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "JUMPDEST"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "JUMP"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "JUMPDEST"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "MLOAD"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "DUP1"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "DUP3"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "AND"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "AND"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "DUP2"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "MSTORE"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "ADD"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "SWAP2"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "POP"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "POP"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "MLOAD"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "DUP1"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "SWAP2"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "SUB"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "SWAP1"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "RETURN"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "JUMPDEST"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "DUP1"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "SWAP1"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "SLOAD"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "SWAP1"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "EXP"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "SWAP1"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "DIV"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "AND"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "DUP2"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"owner()": "8da5cb5b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.18+commit.9cf6e910\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_currentOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"LogOwnershipTransfered\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"smart-contracts/contracts/common/Ownable.sol\":\"Ownable\"},\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"smart-contracts/contracts/common/Ownable.sol\":{\"keccak256\":\"0xfffa53788eb7e34abd06c6b9b0b6346eb7069a7bd88a69e0ad1ebc9cca2e2919\",\"urls\":[\"bzzr://dea0861e0acf65dd49668bb6c94911b884f475e785b2ee9fa15d5de12627bc3a\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"smart-contracts/contracts/common/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"smart-contracts/contracts/common/SafeMath.sol\":30:772  library SafeMath {\r... */\n  mstore(0x40, 0x60)\n  jumpi(tag_1, iszero(callvalue))\n  0x0\n  dup1\n  revert\ntag_1:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"smart-contracts/contracts/common/SafeMath.sol\":30:772  library SafeMath {\r... */\n      mstore(0x40, 0x60)\n      0x0\n      dup1\n      revert\n\n    auxdata: 0xa165627a7a7230582053eb3d720bdf5e6fcad1140f5fe8bf4e3fcaee3657a75da8189f660ecc0c6d3d0029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60606040523415600e57600080fd5b603580601b6000396000f3006060604052600080fd00a165627a7a7230582053eb3d720bdf5e6fcad1140f5fe8bf4e3fcaee3657a75da8189f660ecc0c6d3d0029",
							"opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE CALLVALUE ISZERO PUSH1 0xE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x35 DUP1 PUSH1 0x1B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 MSTORE8 0xeb RETURNDATASIZE PUSH19 0xBDF5E6FCAD1140F5FE8BF4E3FCAEE3657A75D 0xa8 XOR SWAP16 PUSH7 0xECC0C6D3D0029 ",
							"sourceMap": "30:742:3:-;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6060604052600080fd00a165627a7a7230582053eb3d720bdf5e6fcad1140f5fe8bf4e3fcaee3657a75da8189f660ecc0c6d3d0029",
							"opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 MSTORE8 0xeb RETURNDATASIZE PUSH19 0xBDF5E6FCAD1140F5FE8BF4E3FCAEE3657A75D 0xa8 XOR SWAP16 PUSH7 0xECC0C6D3D0029 ",
							"sourceMap": "30:742:3:-;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "10600",
								"executionCost": "61",
								"totalCost": "10661"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 30,
									"end": 772,
									"name": "PUSH",
									"value": "60"
								},
								{
									"begin": 30,
									"end": 772,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 30,
									"end": 772,
									"name": "MSTORE"
								},
								{
									"begin": 30,
									"end": 772,
									"name": "CALLVALUE"
								},
								{
									"begin": 30,
									"end": 772,
									"name": "ISZERO"
								},
								{
									"begin": 30,
									"end": 772,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 30,
									"end": 772,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 772,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 30,
									"end": 772,
									"name": "DUP1"
								},
								{
									"begin": 30,
									"end": 772,
									"name": "REVERT"
								},
								{
									"begin": 30,
									"end": 772,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 30,
									"end": 772,
									"name": "JUMPDEST"
								},
								{
									"begin": 30,
									"end": 772,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 30,
									"end": 772,
									"name": "DUP1"
								},
								{
									"begin": 30,
									"end": 772,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 30,
									"end": 772,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 30,
									"end": 772,
									"name": "CODECOPY"
								},
								{
									"begin": 30,
									"end": 772,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 30,
									"end": 772,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a7230582053eb3d720bdf5e6fcad1140f5fe8bf4e3fcaee3657a75da8189f660ecc0c6d3d0029",
									".code": [
										{
											"begin": 30,
											"end": 772,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 30,
											"end": 772,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 30,
											"end": 772,
											"name": "MSTORE"
										},
										{
											"begin": 30,
											"end": 772,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 30,
											"end": 772,
											"name": "DUP1"
										},
										{
											"begin": 30,
											"end": 772,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.18+commit.9cf6e910\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"smart-contracts/contracts/common/SafeMath.sol\":\"SafeMath\"},\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"smart-contracts/contracts/common/SafeMath.sol\":{\"keccak256\":\"0x583337e75e9e16e04f784c01d4509cc8f7b36025b34e20cddc644dba8f39a7c2\",\"urls\":[\"bzzr://9ac10c82bfac80571ebaf5679b607b105ea7529035f07757e8595ba38191c548\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"smart-contracts/contracts/Credit.sol": {
				"ast": {
					"absolutePath": "smart-contracts/contracts/Credit.sol",
					"exportedSymbols": {
						"Credit": [
							1003
						]
					},
					"id": 1004,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:0"
						},
						{
							"absolutePath": "smart-contracts/contracts/common/SafeMath.sol",
							"file": "./common/SafeMath.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 1004,
							"sourceUnit": 1156,
							"src": "28:31:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "smart-contracts/contracts/common/Destructible.sol",
							"file": "./common/Destructible.sol",
							"id": 3,
							"nodeType": "ImportDirective",
							"scope": 1004,
							"sourceUnit": 1036,
							"src": "61:35:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": [],
									"baseName": {
										"contractScope": null,
										"id": 4,
										"name": "Destructible",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1035,
										"src": "208:12:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Destructible_$1035",
											"typeString": "contract Destructible"
										}
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "208:12:0"
								}
							],
							"contractDependencies": [
								1035,
								1057
							],
							"contractKind": "contract",
							"documentation": "@title Credit contract.\r\nInherits the Ownable and Destructible contracts.\r",
							"fullyImplemented": true,
							"id": 1003,
							"linearizedBaseContracts": [
								1003,
								1035,
								1057
							],
							"name": "Credit",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 8,
									"libraryName": {
										"contractScope": null,
										"id": 6,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1155,
										"src": "316:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$1155",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "310:24:0",
									"typeName": {
										"id": 7,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "329:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 10,
									"name": "borrower",
									"nodeType": "VariableDeclaration",
									"scope": 1003,
									"src": "441:16:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 9,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "441:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 12,
									"name": "requestedAmount",
									"nodeType": "VariableDeclaration",
									"scope": 1003,
									"src": "514:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 11,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "514:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 14,
									"name": "returnAmount",
									"nodeType": "VariableDeclaration",
									"scope": 1003,
									"src": "622:17:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 13,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "622:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 16,
									"name": "repaidAmount",
									"nodeType": "VariableDeclaration",
									"scope": 1003,
									"src": "681:17:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 15,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "681:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 18,
									"name": "interest",
									"nodeType": "VariableDeclaration",
									"scope": 1003,
									"src": "732:13:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 17,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "732:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 20,
									"name": "requestedRepayments",
									"nodeType": "VariableDeclaration",
									"scope": 1003,
									"src": "806:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 19,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "806:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 22,
									"name": "remainingRepayments",
									"nodeType": "VariableDeclaration",
									"scope": 1003,
									"src": "881:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 21,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "881:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 24,
									"name": "repaymentInstallment",
									"nodeType": "VariableDeclaration",
									"scope": 1003,
									"src": "962:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 23,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "962:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 26,
									"name": "requestedDate",
									"nodeType": "VariableDeclaration",
									"scope": 1003,
									"src": "1038:18:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 25,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1038:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 28,
									"name": "lastRepaymentDate",
									"nodeType": "VariableDeclaration",
									"scope": 1003,
									"src": "1111:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 27,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1111:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 30,
									"name": "description",
									"nodeType": "VariableDeclaration",
									"scope": 1003,
									"src": "1177:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 29,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1177:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 33,
									"name": "active",
									"nodeType": "VariableDeclaration",
									"scope": 1003,
									"src": "1241:18:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 31,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1241:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "74727565",
										"id": 32,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1255:4:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "true"
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "Credit.State",
									"id": 40,
									"members": [
										{
											"id": 34,
											"name": "investment",
											"nodeType": "EnumValue",
											"src": "1716:10:0"
										},
										{
											"id": 35,
											"name": "repayment",
											"nodeType": "EnumValue",
											"src": "1728:9:0"
										},
										{
											"id": 36,
											"name": "interestReturns",
											"nodeType": "EnumValue",
											"src": "1739:15:0"
										},
										{
											"id": 37,
											"name": "expired",
											"nodeType": "EnumValue",
											"src": "1756:7:0"
										},
										{
											"id": 38,
											"name": "revoked",
											"nodeType": "EnumValue",
											"src": "1765:7:0"
										},
										{
											"id": 39,
											"name": "fraud",
											"nodeType": "EnumValue",
											"src": "1774:5:0"
										}
									],
									"name": "State",
									"nodeType": "EnumDefinition",
									"src": "1703:78:0"
								},
								{
									"constant": false,
									"id": 42,
									"name": "state",
									"nodeType": "VariableDeclaration",
									"scope": 1003,
									"src": "1787:11:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_enum$_State_$40",
										"typeString": "enum Credit.State"
									},
									"typeName": {
										"contractScope": null,
										"id": 41,
										"name": "State",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 40,
										"src": "1787:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_State_$40",
											"typeString": "enum Credit.State"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 46,
									"name": "lenders",
									"nodeType": "VariableDeclaration",
									"scope": 1003,
									"src": "1852:39:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 45,
										"keyType": {
											"id": 43,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1860:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1852:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 44,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "1871:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 50,
									"name": "lendersInvestedAmount",
									"nodeType": "VariableDeclaration",
									"scope": 1003,
									"src": "1952:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 49,
										"keyType": {
											"id": 47,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1960:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1952:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 48,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "1971:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 53,
									"name": "lendersCount",
									"nodeType": "VariableDeclaration",
									"scope": 1003,
									"src": "2070:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 51,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "2070:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30",
										"id": 52,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2090:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 56,
									"name": "revokeVotes",
									"nodeType": "VariableDeclaration",
									"scope": 1003,
									"src": "2128:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 54,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "2128:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30",
										"id": 55,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2147:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 60,
									"name": "revokeVoters",
									"nodeType": "VariableDeclaration",
									"scope": 1003,
									"src": "2180:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 59,
										"keyType": {
											"id": 57,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2188:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2180:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 58,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "2199:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 66,
									"name": "revokeTimeNeeded",
									"nodeType": "VariableDeclaration",
									"scope": 1003,
									"src": "2325:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 61,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "2325:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 65,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"argumentTypes": null,
											"expression": {
												"argumentTypes": null,
												"id": 62,
												"name": "block",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1159,
												"src": "2349:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_magic_block",
													"typeString": "block"
												}
											},
											"id": 63,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "timestamp",
											"nodeType": "MemberAccess",
											"referencedDeclaration": null,
											"src": "2349:15:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "+",
										"rightExpression": {
											"argumentTypes": null,
											"hexValue": "31",
											"id": 64,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2367:9:0",
											"subdenomination": "seconds",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "2349:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 69,
									"name": "fraudVotes",
									"nodeType": "VariableDeclaration",
									"scope": 1003,
									"src": "2413:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 67,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "2413:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30",
										"id": 68,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2431:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 73,
									"name": "fraudVoters",
									"nodeType": "VariableDeclaration",
									"scope": 1003,
									"src": "2464:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 72,
										"keyType": {
											"id": 70,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2472:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2464:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 71,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "2483:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"id": 79,
									"name": "LogCreditInitialized",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 75,
												"indexed": true,
												"name": "_address",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2574:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 74,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2574:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"indexed": true,
												"name": "timestamp",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2600:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 76,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2600:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2573:50:0"
									},
									"src": "2547:77:0"
								},
								{
									"anonymous": false,
									"id": 85,
									"name": "LogCreditStateChanged",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"indexed": true,
												"name": "state",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "2658:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_State_$40",
													"typeString": "enum Credit.State"
												},
												"typeName": {
													"contractScope": null,
													"id": 80,
													"name": "State",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 40,
													"src": "2658:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_State_$40",
														"typeString": "enum Credit.State"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 83,
												"indexed": true,
												"name": "timestamp",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "2679:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 82,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2679:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2657:45:0"
									},
									"src": "2630:73:0"
								},
								{
									"anonymous": false,
									"id": 91,
									"name": "LogCreditStateActiveChanged",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"indexed": true,
												"name": "active",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2743:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 86,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2743:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"indexed": true,
												"name": "timestamp",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2764:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 88,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2764:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2742:45:0"
									},
									"src": "2709:79:0"
								},
								{
									"anonymous": false,
									"id": 99,
									"name": "LogBorrowerWithdrawal",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"indexed": true,
												"name": "_address",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "2824:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2824:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"indexed": true,
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "2850:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2850:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"indexed": true,
												"name": "timestamp",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "2872:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2872:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2823:72:0"
									},
									"src": "2796:100:0"
								},
								{
									"anonymous": false,
									"id": 107,
									"name": "LogBorrowerRepaymentInstallment",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"indexed": true,
												"name": "_address",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "2940:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 103,
												"indexed": true,
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "2966:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 102,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2966:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 105,
												"indexed": true,
												"name": "timestamp",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "2988:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 104,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2988:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2939:72:0"
									},
									"src": "2902:110:0"
								},
								{
									"anonymous": false,
									"id": 113,
									"name": "LogBorrowerRepaymentFinished",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"indexed": true,
												"name": "_address",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "3053:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3053:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 111,
												"indexed": true,
												"name": "timestamp",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "3079:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 110,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3079:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3052:50:0"
									},
									"src": "3018:85:0"
								},
								{
									"anonymous": false,
									"id": 121,
									"name": "LogBorrowerChangeReturned",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"indexed": true,
												"name": "_address",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "3141:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3141:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"indexed": true,
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "3167:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3167:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 119,
												"indexed": true,
												"name": "timestamp",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "3189:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 118,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3189:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3140:72:0"
									},
									"src": "3109:104:0"
								},
								{
									"anonymous": false,
									"id": 129,
									"name": "LogBorrowerIsFraud",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"indexed": true,
												"name": "_address",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "3244:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3244:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 125,
												"indexed": true,
												"name": "fraudStatus",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "3270:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 124,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3270:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 127,
												"indexed": true,
												"name": "timestamp",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "3296:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 126,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3296:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3243:76:0"
									},
									"src": "3219:101:0"
								},
								{
									"anonymous": false,
									"id": 137,
									"name": "LogLenderInvestment",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"indexed": true,
												"name": "_address",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "3354:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 130,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3354:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"indexed": true,
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "3380:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3380:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 135,
												"indexed": true,
												"name": "timestamp",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "3402:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3402:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3353:72:0"
									},
									"src": "3328:98:0"
								},
								{
									"anonymous": false,
									"id": 145,
									"name": "LogLenderWithdrawal",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"indexed": true,
												"name": "_address",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "3458:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3458:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 141,
												"indexed": true,
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "3484:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 140,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3484:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 143,
												"indexed": true,
												"name": "timestamp",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "3506:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 142,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3506:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3457:72:0"
									},
									"src": "3432:98:0"
								},
								{
									"anonymous": false,
									"id": 153,
									"name": "LogLenderChangeReturned",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"indexed": true,
												"name": "_address",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "3566:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3566:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 149,
												"indexed": true,
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "3592:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 148,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3592:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 151,
												"indexed": true,
												"name": "timestamp",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "3614:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 150,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3614:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3565:72:0"
									},
									"src": "3536:102:0"
								},
								{
									"anonymous": false,
									"id": 159,
									"name": "LogLenderVoteForRevoking",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"indexed": true,
												"name": "_address",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "3675:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3675:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"indexed": true,
												"name": "timestamp",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "3701:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3701:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3674:50:0"
									},
									"src": "3644:81:0"
								},
								{
									"anonymous": false,
									"id": 165,
									"name": "LogLenderVoteForFraud",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"indexed": true,
												"name": "_address",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "3759:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3759:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"indexed": true,
												"name": "timestamp",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "3785:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3785:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3758:50:0"
									},
									"src": "3731:78:0"
								},
								{
									"anonymous": false,
									"id": 173,
									"name": "LogLenderRefunded",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"indexed": true,
												"name": "_address",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "3839:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3839:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 169,
												"indexed": true,
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "3865:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 168,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3865:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"indexed": true,
												"name": "timestamp",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "3887:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 170,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3887:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3838:72:0"
									},
									"src": "3815:96:0"
								},
								{
									"body": {
										"id": 182,
										"nodeType": "Block",
										"src": "3978:54:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 178,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 176,
																"name": "active",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 33,
																"src": "3997:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "74727565",
																"id": 177,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4007:4:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "3997:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 175,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1170,
														"src": "3989:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3989:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 180,
												"nodeType": "ExpressionStatement",
												"src": "3989:23:0"
											},
											{
												"id": 181,
												"nodeType": "PlaceholderStatement",
												"src": "4023:1:0"
											}
										]
									},
									"id": 183,
									"name": "isActive",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3975:2:0"
									},
									"src": "3958:74:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 193,
										"nodeType": "Block",
										"src": "4064:62:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 189,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 186,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1167,
																	"src": "4083:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 187,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "4083:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 188,
																"name": "borrower",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "4097:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4083:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 185,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1170,
														"src": "4075:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4075:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 191,
												"nodeType": "ExpressionStatement",
												"src": "4075:31:0"
											},
											{
												"id": 192,
												"nodeType": "PlaceholderStatement",
												"src": "4117:1:0"
											}
										]
									},
									"id": 194,
									"name": "onlyBorrower",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4061:2:0"
									},
									"src": "4040:86:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 206,
										"nodeType": "Block",
										"src": "4156:67:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 202,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 197,
																	"name": "lenders",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 46,
																	"src": "4175:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 200,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 198,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1167,
																		"src": "4183:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 199,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "4183:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4175:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "74727565",
																"id": 201,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4198:4:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "4175:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 196,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1170,
														"src": "4167:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4167:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 204,
												"nodeType": "ExpressionStatement",
												"src": "4167:36:0"
											},
											{
												"id": 205,
												"nodeType": "PlaceholderStatement",
												"src": "4214:1:0"
											}
										]
									},
									"id": 207,
									"name": "onlyLender",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4153:2:0"
									},
									"src": "4134:89:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 226,
										"nodeType": "Block",
										"src": "4260:127:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_enum$_State_$40",
																"typeString": "enum Credit.State"
															},
															"id": 213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 210,
																"name": "state",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 42,
																"src": "4279:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_State_$40",
																	"typeString": "enum Credit.State"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 211,
																	"name": "State",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "4288:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_State_$40_$",
																		"typeString": "type(enum Credit.State)"
																	}
																},
																"id": 212,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "interestReturns",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "4288:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_State_$40",
																	"typeString": "enum Credit.State"
																}
															},
															"src": "4279:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 209,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1170,
														"src": "4271:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4271:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 215,
												"nodeType": "ExpressionStatement",
												"src": "4271:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 217,
																	"name": "lendersInvestedAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 50,
																	"src": "4329:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 220,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 218,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1167,
																		"src": "4351:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 219,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "4351:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4329:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 221,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4365:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4329:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 216,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1170,
														"src": "4321:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4321:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 224,
												"nodeType": "ExpressionStatement",
												"src": "4321:46:0"
											},
											{
												"id": 225,
												"nodeType": "PlaceholderStatement",
												"src": "4378:1:0"
											}
										]
									},
									"id": 227,
									"name": "canAskForInterest",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4257:2:0"
									},
									"src": "4231:156:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 237,
										"nodeType": "Block",
										"src": "4416:65:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_enum$_State_$40",
																"typeString": "enum Credit.State"
															},
															"id": 233,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 230,
																"name": "state",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 42,
																"src": "4435:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_State_$40",
																	"typeString": "enum Credit.State"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 231,
																	"name": "State",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "4444:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_State_$40_$",
																		"typeString": "type(enum Credit.State)"
																	}
																},
																"id": 232,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "investment",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "4444:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_State_$40",
																	"typeString": "enum Credit.State"
																}
															},
															"src": "4435:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 229,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1170,
														"src": "4427:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4427:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 235,
												"nodeType": "ExpressionStatement",
												"src": "4427:34:0"
											},
											{
												"id": 236,
												"nodeType": "PlaceholderStatement",
												"src": "4472:1:0"
											}
										]
									},
									"id": 238,
									"name": "canInvest",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4413:2:0"
									},
									"src": "4395:86:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 248,
										"nodeType": "Block",
										"src": "4509:64:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_enum$_State_$40",
																"typeString": "enum Credit.State"
															},
															"id": 244,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 241,
																"name": "state",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 42,
																"src": "4528:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_State_$40",
																	"typeString": "enum Credit.State"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 242,
																	"name": "State",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "4537:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_State_$40_$",
																		"typeString": "type(enum Credit.State)"
																	}
																},
																"id": 243,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "repayment",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "4537:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_State_$40",
																	"typeString": "enum Credit.State"
																}
															},
															"src": "4528:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 240,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1170,
														"src": "4520:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4520:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 246,
												"nodeType": "ExpressionStatement",
												"src": "4520:33:0"
											},
											{
												"id": 247,
												"nodeType": "PlaceholderStatement",
												"src": "4564:1:0"
											}
										]
									},
									"id": 249,
									"name": "canRepay",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4506:2:0"
									},
									"src": "4489:84:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 259,
										"nodeType": "Block",
										"src": "4604:71:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 255,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 252,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1184,
																	"src": "4623:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Credit_$1003",
																		"typeString": "contract Credit"
																	}
																},
																"id": 253,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "4623:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 254,
																"name": "requestedAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 12,
																"src": "4639:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4623:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 251,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1170,
														"src": "4615:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4615:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "4615:40:0"
											},
											{
												"id": 258,
												"nodeType": "PlaceholderStatement",
												"src": "4666:1:0"
											}
										]
									},
									"id": 260,
									"name": "canWithdraw",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4601:2:0"
									},
									"src": "4581:94:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 270,
										"nodeType": "Block",
										"src": "4705:60:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_enum$_State_$40",
																"typeString": "enum Credit.State"
															},
															"id": 266,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 263,
																"name": "state",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 42,
																"src": "4724:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_State_$40",
																	"typeString": "enum Credit.State"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 264,
																	"name": "State",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "4733:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_State_$40_$",
																		"typeString": "type(enum Credit.State)"
																	}
																},
																"id": 265,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "fraud",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "4733:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_State_$40",
																	"typeString": "enum Credit.State"
																}
															},
															"src": "4724:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 262,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1170,
														"src": "4716:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4716:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 268,
												"nodeType": "ExpressionStatement",
												"src": "4716:29:0"
											},
											{
												"id": 269,
												"nodeType": "PlaceholderStatement",
												"src": "4756:1:0"
											}
										]
									},
									"id": 271,
									"name": "isNotFraud",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4702:2:0"
									},
									"src": "4683:82:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 288,
										"nodeType": "Block",
										"src": "4796:120:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 274,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1159,
																	"src": "4815:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 275,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "4815:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 276,
																"name": "revokeTimeNeeded",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 66,
																"src": "4834:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4815:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 273,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1170,
														"src": "4807:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4807:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 279,
												"nodeType": "ExpressionStatement",
												"src": "4807:44:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_enum$_State_$40",
																"typeString": "enum Credit.State"
															},
															"id": 284,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 281,
																"name": "state",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 42,
																"src": "4870:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_State_$40",
																	"typeString": "enum Credit.State"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 282,
																	"name": "State",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "4879:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_State_$40_$",
																		"typeString": "type(enum Credit.State)"
																	}
																},
																"id": 283,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "investment",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "4879:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_State_$40",
																	"typeString": "enum Credit.State"
																}
															},
															"src": "4870:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 280,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1170,
														"src": "4862:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4862:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 286,
												"nodeType": "ExpressionStatement",
												"src": "4862:34:0"
											},
											{
												"id": 287,
												"nodeType": "PlaceholderStatement",
												"src": "4907:1:0"
											}
										]
									},
									"id": 289,
									"name": "isRevokable",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4793:2:0"
									},
									"src": "4773:143:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 299,
										"nodeType": "Block",
										"src": "4945:62:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_enum$_State_$40",
																"typeString": "enum Credit.State"
															},
															"id": 295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 292,
																"name": "state",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 42,
																"src": "4964:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_State_$40",
																	"typeString": "enum Credit.State"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 293,
																	"name": "State",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "4973:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_State_$40_$",
																		"typeString": "type(enum Credit.State)"
																	}
																},
																"id": 294,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "revoked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "4973:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_State_$40",
																	"typeString": "enum Credit.State"
																}
															},
															"src": "4964:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 291,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1170,
														"src": "4956:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4956:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 297,
												"nodeType": "ExpressionStatement",
												"src": "4956:31:0"
											},
											{
												"id": 298,
												"nodeType": "PlaceholderStatement",
												"src": "4998:1:0"
											}
										]
									},
									"id": 300,
									"name": "isRevoked",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4942:2:0"
									},
									"src": "4924:83:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 361,
										"nodeType": "Block",
										"src": "5348:1431:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 311,
														"name": "borrower",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "5590:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 312,
															"name": "tx",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1177,
															"src": "5601:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_transaction",
																"typeString": "tx"
															}
														},
														"id": 313,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "origin",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "5601:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5590:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 315,
												"nodeType": "ExpressionStatement",
												"src": "5590:20:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 316,
														"name": "interest",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 18,
														"src": "5668:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 317,
														"name": "_interest",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 306,
														"src": "5679:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5668:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 319,
												"nodeType": "ExpressionStatement",
												"src": "5668:20:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 320,
														"name": "requestedAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 12,
														"src": "5739:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 321,
														"name": "_requestedAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "5757:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5739:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 323,
												"nodeType": "ExpressionStatement",
												"src": "5739:34:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 324,
														"name": "requestedRepayments",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "5828:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 325,
														"name": "_requestedRepayments",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 304,
														"src": "5850:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5828:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 327,
												"nodeType": "ExpressionStatement",
												"src": "5828:42:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 328,
														"name": "remainingRepayments",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 22,
														"src": "6006:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 329,
														"name": "_requestedRepayments",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 304,
														"src": "6028:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6006:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 331,
												"nodeType": "ExpressionStatement",
												"src": "6006:42:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 332,
														"name": "returnAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "6231:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 335,
																"name": "interest",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 18,
																"src": "6266:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 333,
																"name": "requestedAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 12,
																"src": "6246:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1154,
															"src": "6246:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 336,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6246:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6231:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 338,
												"nodeType": "ExpressionStatement",
												"src": "6231:44:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 339,
														"name": "repaymentInstallment",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "6448:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 342,
																"name": "requestedRepayments",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 20,
																"src": "6488:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 340,
																"name": "returnAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 14,
																"src": "6471:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 341,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1110,
															"src": "6471:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 343,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6471:37:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6448:60:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 345,
												"nodeType": "ExpressionStatement",
												"src": "6448:60:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 346,
														"name": "description",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "6561:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 347,
														"name": "_description",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "6575:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "6561:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 349,
												"nodeType": "ExpressionStatement",
												"src": "6561:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 350,
														"name": "requestedDate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "6641:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 351,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1159,
															"src": "6657:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 352,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "6657:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6641:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 354,
												"nodeType": "ExpressionStatement",
												"src": "6641:31:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 356,
															"name": "borrower",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 10,
															"src": "6745:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 357,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1159,
																"src": "6755:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 358,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "6755:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 355,
														"name": "LogCreditInitialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "6724:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6724:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 360,
												"nodeType": "ExpressionStatement",
												"src": "6724:47:0"
											}
										]
									},
									"id": 362,
									"implemented": true,
									"isConstructor": true,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "Credit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"name": "_requestedAmount",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "5253:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 301,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5253:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 304,
												"name": "_requestedRepayments",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "5276:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 303,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5276:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 306,
												"name": "_interest",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "5303:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 305,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5303:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 308,
												"name": "_description",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "5319:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 307,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5319:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5252:88:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5348:0:0"
									},
									"scope": 1003,
									"src": "5237:1542:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 370,
										"nodeType": "Block",
										"src": "6914:38:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 367,
														"name": "this",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1184,
														"src": "6932:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_Credit_$1003",
															"typeString": "contract Credit"
														}
													},
													"id": 368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "6932:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 366,
												"id": 369,
												"nodeType": "Return",
												"src": "6925:19:0"
											}
										]
									},
									"id": 371,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "getBalance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6881:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "6905:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6905:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6904:9:0"
									},
									"scope": 1003,
									"src": "6862:90:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 482,
										"nodeType": "Block",
										"src": "7167:1673:0",
										"statements": [
											{
												"assignments": [
													377
												],
												"declarations": [
													{
														"constant": false,
														"id": 377,
														"name": "extraMoney",
														"nodeType": "VariableDeclaration",
														"scope": 483,
														"src": "7265:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 376,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "7265:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 379,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "30",
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7283:1:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7265:19:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 380,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1184,
															"src": "7372:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Credit_$1003",
																"typeString": "contract Credit"
															}
														},
														"id": 381,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "7372:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 382,
														"name": "requestedAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 12,
														"src": "7388:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7372:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 442,
												"nodeType": "IfStatement",
												"src": "7368:931:0",
												"trueBody": {
													"id": 441,
													"nodeType": "Block",
													"src": "7405:894:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 390,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 384,
																	"name": "extraMoney",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 377,
																	"src": "7489:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 388,
																			"name": "requestedAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 12,
																			"src": "7519:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 385,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1184,
																				"src": "7502:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Credit_$1003",
																					"typeString": "contract Credit"
																				}
																			},
																			"id": 386,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "balance",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "7502:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1130,
																		"src": "7502:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 389,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7502:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7489:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 391,
															"nodeType": "ExpressionStatement",
															"src": "7489:46:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 399,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 393,
																			"name": "requestedAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 12,
																			"src": "7599:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 397,
																					"name": "extraMoney",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 377,
																					"src": "7635:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"expression": {
																						"argumentTypes": null,
																						"id": 394,
																						"name": "this",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1184,
																						"src": "7618:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_Credit_$1003",
																							"typeString": "contract Credit"
																						}
																					},
																					"id": 395,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "balance",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": null,
																					"src": "7618:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 396,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sub",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1130,
																				"src": "7618:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 398,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7618:28:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7599:47:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 392,
																	"name": "assert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1158,
																	"src": "7592:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
																		"typeString": "function (bool) pure"
																	}
																},
																"id": 400,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7592:55:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 401,
															"nodeType": "ExpressionStatement",
															"src": "7592:55:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 406,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 403,
																			"name": "extraMoney",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 377,
																			"src": "7728:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 404,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1167,
																				"src": "7742:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 405,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "value",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "7742:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7728:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 402,
																	"name": "assert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1158,
																	"src": "7721:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
																		"typeString": "function (bool) pure"
																	}
																},
																"id": 407,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7721:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 408,
															"nodeType": "ExpressionStatement",
															"src": "7721:31:0"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 409,
																	"name": "extraMoney",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 377,
																	"src": "7833:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 410,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7846:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7833:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 429,
															"nodeType": "IfStatement",
															"src": "7829:270:0",
															"trueBody": {
																"id": 428,
																"nodeType": "Block",
																"src": "7849:250:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 417,
																					"name": "extraMoney",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 377,
																					"src": "7946:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"expression": {
																						"argumentTypes": null,
																						"id": 412,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1167,
																						"src": "7926:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 415,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": null,
																					"src": "7926:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"id": 416,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "transfer",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "7926:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																					"typeString": "function (uint256)"
																				}
																			},
																			"id": 418,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7926:31:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 419,
																		"nodeType": "ExpressionStatement",
																		"src": "7926:31:0"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"expression": {
																						"argumentTypes": null,
																						"id": 421,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1167,
																						"src": "8043:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 422,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": null,
																					"src": "8043:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 423,
																					"name": "extraMoney",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 377,
																					"src": "8055:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"expression": {
																						"argumentTypes": null,
																						"id": 424,
																						"name": "block",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1159,
																						"src": "8067:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_block",
																							"typeString": "block"
																						}
																					},
																					"id": 425,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "timestamp",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": null,
																					"src": "8067:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 420,
																				"name": "LogLenderChangeReturned",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 153,
																				"src": "8019:23:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256)"
																				}
																			},
																			"id": 426,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8019:64:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 427,
																		"nodeType": "ExpressionStatement",
																		"src": "8019:64:0"
																	}
																]
															}
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 430,
																	"name": "state",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 42,
																	"src": "8168:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_State_$40",
																		"typeString": "enum Credit.State"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 431,
																		"name": "State",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 40,
																		"src": "8176:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_State_$40_$",
																			"typeString": "type(enum Credit.State)"
																		}
																	},
																	"id": 432,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "repayment",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "8176:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_State_$40",
																		"typeString": "enum Credit.State"
																	}
																},
																"src": "8168:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_State_$40",
																	"typeString": "enum Credit.State"
																}
															},
															"id": 434,
															"nodeType": "ExpressionStatement",
															"src": "8168:23:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 436,
																		"name": "state",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 42,
																		"src": "8264:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_State_$40",
																			"typeString": "enum Credit.State"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 437,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1159,
																			"src": "8271:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "8271:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_enum$_State_$40",
																			"typeString": "enum Credit.State"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 435,
																	"name": "LogCreditStateChanged",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 85,
																	"src": "8242:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_enum$_State_$40_$_t_uint256_$returns$__$",
																		"typeString": "function (enum Credit.State,uint256)"
																	}
																},
																"id": 439,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8242:45:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 440,
															"nodeType": "ExpressionStatement",
															"src": "8242:45:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 443,
															"name": "lenders",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 46,
															"src": "8438:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 446,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 444,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1167,
																"src": "8446:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 445,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "8446:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8438:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 447,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8460:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "8438:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 449,
												"nodeType": "ExpressionStatement",
												"src": "8438:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "8518:14:0",
													"subExpression": {
														"argumentTypes": null,
														"id": 450,
														"name": "lendersCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 53,
														"src": "8518:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 452,
												"nodeType": "ExpressionStatement",
												"src": "8518:14:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 453,
															"name": "lendersInvestedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 50,
															"src": "8604:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 456,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 454,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1167,
																"src": "8626:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 455,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "8626:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8604:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 465,
																		"name": "extraMoney",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 377,
																		"src": "8692:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 462,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1167,
																			"src": "8678:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 463,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "value",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "8678:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 464,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1130,
																	"src": "8678:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 466,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8678:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 457,
																	"name": "lendersInvestedAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 50,
																	"src": "8640:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 460,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 458,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1167,
																		"src": "8662:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 459,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "8662:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8640:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 461,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1154,
															"src": "8640:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 467,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8640:64:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8604:100:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 469,
												"nodeType": "ExpressionStatement",
												"src": "8604:100:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 471,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1167,
																"src": "8777:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 472,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "8777:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 476,
																	"name": "extraMoney",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 377,
																	"src": "8803:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 473,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1167,
																		"src": "8789:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 474,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "8789:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 475,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1130,
																"src": "8789:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 477,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8789:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 478,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1159,
																"src": "8816:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 479,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "8816:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 470,
														"name": "LogLenderInvestment",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 137,
														"src": "8757:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8757:75:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 481,
												"nodeType": "ExpressionStatement",
												"src": "8757:75:0"
											}
										]
									},
									"id": 483,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 374,
											"modifierName": {
												"argumentTypes": null,
												"id": 373,
												"name": "canInvest",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 238,
												"src": "7149:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "7149:9:0"
										}
									],
									"name": "invest",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7139:2:0"
									},
									"payable": true,
									"returnParameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7167:0:0"
									},
									"scope": 1003,
									"src": "7124:1716:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 614,
										"nodeType": "Block",
										"src": "9003:2357:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 493,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 491,
																"name": "remainingRepayments",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "9097:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 492,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9119:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9097:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 490,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1170,
														"src": "9089:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9089:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 495,
												"nodeType": "ExpressionStatement",
												"src": "9089:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 500,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 497,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1167,
																	"src": "9219:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 498,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "9219:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 499,
																"name": "repaymentInstallment",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "9232:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9219:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 496,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1170,
														"src": "9211:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9211:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 502,
												"nodeType": "ExpressionStatement",
												"src": "9211:42:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 506,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 504,
																"name": "repaidAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 16,
																"src": "9458:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"id": 505,
																"name": "returnAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 14,
																"src": "9473:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9458:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 503,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1158,
														"src": "9451:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9451:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 508,
												"nodeType": "ExpressionStatement",
												"src": "9451:35:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "--",
													"prefix": false,
													"src": "9547:21:0",
													"subExpression": {
														"argumentTypes": null,
														"id": 509,
														"name": "remainingRepayments",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 22,
														"src": "9547:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 511,
												"nodeType": "ExpressionStatement",
												"src": "9547:21:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 512,
														"name": "lastRepaymentDate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 28,
														"src": "9621:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 513,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1159,
															"src": "9641:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 514,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "9641:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9621:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 516,
												"nodeType": "ExpressionStatement",
												"src": "9621:35:0"
											},
											{
												"assignments": [
													518
												],
												"declarations": [
													{
														"constant": false,
														"id": 518,
														"name": "extraMoney",
														"nodeType": "VariableDeclaration",
														"scope": 615,
														"src": "9756:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 517,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "9756:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 520,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "30",
													"id": 519,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9774:1:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9756:19:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 521,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1167,
															"src": "9983:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 522,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "9983:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"id": 523,
														"name": "repaymentInstallment",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "9995:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9983:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 567,
												"nodeType": "IfStatement",
												"src": "9979:636:0",
												"trueBody": {
													"id": 566,
													"nodeType": "Block",
													"src": "10017:598:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 531,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 525,
																	"name": "extraMoney",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 518,
																	"src": "10107:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 529,
																			"name": "repaymentInstallment",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 24,
																			"src": "10134:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 526,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1167,
																				"src": "10120:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 527,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "value",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "10120:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 528,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1130,
																		"src": "10120:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 530,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10120:35:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10107:48:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 532,
															"nodeType": "ExpressionStatement",
															"src": "10107:48:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 540,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 534,
																			"name": "repaymentInstallment",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 24,
																			"src": "10220:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 538,
																					"name": "extraMoney",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 518,
																					"src": "10258:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"expression": {
																						"argumentTypes": null,
																						"id": 535,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1167,
																						"src": "10244:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 536,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "value",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": null,
																					"src": "10244:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 537,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sub",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1130,
																				"src": "10244:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 539,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10244:25:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "10220:49:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 533,
																	"name": "assert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1158,
																	"src": "10213:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
																		"typeString": "function (bool) pure"
																	}
																},
																"id": 541,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10213:57:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 542,
															"nodeType": "ExpressionStatement",
															"src": "10213:57:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 547,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 544,
																			"name": "extraMoney",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 518,
																			"src": "10332:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 545,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1167,
																				"src": "10346:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 546,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "value",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "10346:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "10332:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 543,
																	"name": "assert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1158,
																	"src": "10325:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
																		"typeString": "function (bool) pure"
																	}
																},
																"id": 548,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10325:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 549,
															"nodeType": "ExpressionStatement",
															"src": "10325:31:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 555,
																		"name": "extraMoney",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 518,
																		"src": "10458:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 550,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1167,
																			"src": "10438:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 553,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "10438:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 554,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "10438:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 556,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10438:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 557,
															"nodeType": "ExpressionStatement",
															"src": "10438:31:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 559,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1167,
																			"src": "10563:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 560,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "10563:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 561,
																		"name": "extraMoney",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 518,
																		"src": "10575:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 562,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1159,
																			"src": "10587:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 563,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "10587:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 558,
																	"name": "LogBorrowerChangeReturned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 121,
																	"src": "10537:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256,uint256)"
																	}
																},
																"id": 564,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10537:66:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 565,
															"nodeType": "ExpressionStatement",
															"src": "10537:66:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 569,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1167,
																"src": "10706:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 570,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "10706:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 574,
																	"name": "extraMoney",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 518,
																	"src": "10732:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 571,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1167,
																		"src": "10718:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 572,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "10718:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 573,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1130,
																"src": "10718:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 575,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10718:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 576,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1159,
																"src": "10745:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 577,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "10745:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 568,
														"name": "LogBorrowerRepaymentInstallment",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 107,
														"src": "10674:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10674:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 579,
												"nodeType": "ExpressionStatement",
												"src": "10674:87:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 580,
														"name": "repaidAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 16,
														"src": "10851:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 586,
																		"name": "extraMoney",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 518,
																		"src": "10897:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 583,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1167,
																			"src": "10883:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 584,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "value",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "10883:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 585,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1130,
																	"src": "10883:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 587,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10883:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 581,
																"name": "repaidAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 16,
																"src": "10866:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 582,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1154,
															"src": "10866:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 588,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10866:43:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10851:58:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 590,
												"nodeType": "ExpressionStatement",
												"src": "10851:58:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 591,
														"name": "repaidAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 16,
														"src": "10997:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"id": 592,
														"name": "returnAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "11013:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10997:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 613,
												"nodeType": "IfStatement",
												"src": "10993:360:0",
												"trueBody": {
													"id": 612,
													"nodeType": "Block",
													"src": "11027:326:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 595,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1167,
																			"src": "11108:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "11108:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 597,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1159,
																			"src": "11120:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 598,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "11120:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 594,
																	"name": "LogBorrowerRepaymentFinished",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 113,
																	"src": "11079:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 599,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11079:57:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 600,
															"nodeType": "ExpressionStatement",
															"src": "11079:57:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 604,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 601,
																	"name": "state",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 42,
																	"src": "11216:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_State_$40",
																		"typeString": "enum Credit.State"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 602,
																		"name": "State",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 40,
																		"src": "11224:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_State_$40_$",
																			"typeString": "type(enum Credit.State)"
																		}
																	},
																	"id": 603,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "interestReturns",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "11224:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_State_$40",
																		"typeString": "enum Credit.State"
																	}
																},
																"src": "11216:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_State_$40",
																	"typeString": "enum Credit.State"
																}
															},
															"id": 605,
															"nodeType": "ExpressionStatement",
															"src": "11216:29:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 607,
																		"name": "state",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 42,
																		"src": "11318:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_State_$40",
																			"typeString": "enum Credit.State"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 608,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1159,
																			"src": "11325:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 609,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "11325:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_enum$_State_$40",
																			"typeString": "enum Credit.State"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 606,
																	"name": "LogCreditStateChanged",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 85,
																	"src": "11296:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_enum$_State_$40_$_t_uint256_$returns$__$",
																		"typeString": "function (enum Credit.State,uint256)"
																	}
																},
																"id": 610,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11296:45:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 611,
															"nodeType": "ExpressionStatement",
															"src": "11296:45:0"
														}
													]
												}
											}
										]
									},
									"id": 615,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 486,
											"modifierName": {
												"argumentTypes": null,
												"id": 485,
												"name": "onlyBorrower",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 194,
												"src": "8973:12:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "8973:12:0"
										},
										{
											"arguments": [],
											"id": 488,
											"modifierName": {
												"argumentTypes": null,
												"id": 487,
												"name": "canRepay",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 249,
												"src": "8986:8:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "8986:8:0"
										}
									],
									"name": "repay",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8963:2:0"
									},
									"payable": true,
									"returnParameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9003:0:0"
									},
									"scope": 1003,
									"src": "8949:2411:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 653,
										"nodeType": "Block",
										"src": "11775:420:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 626,
														"name": "state",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 42,
														"src": "11853:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_State_$40",
															"typeString": "enum Credit.State"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 627,
															"name": "State",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 40,
															"src": "11861:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_State_$40_$",
																"typeString": "type(enum Credit.State)"
															}
														},
														"id": 628,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "repayment",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "11861:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_State_$40",
															"typeString": "enum Credit.State"
														}
													},
													"src": "11853:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_State_$40",
														"typeString": "enum Credit.State"
													}
												},
												"id": 630,
												"nodeType": "ExpressionStatement",
												"src": "11853:23:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 632,
															"name": "state",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 42,
															"src": "11941:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_State_$40",
																"typeString": "enum Credit.State"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 633,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1159,
																"src": "11948:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 634,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "11948:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_State_$40",
																"typeString": "enum Credit.State"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 631,
														"name": "LogCreditStateChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 85,
														"src": "11919:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_enum$_State_$40_$_t_uint256_$returns$__$",
															"typeString": "function (enum Credit.State,uint256)"
														}
													},
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11919:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 636,
												"nodeType": "ExpressionStatement",
												"src": "11919:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 638,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1167,
																"src": "12036:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 639,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "12036:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 640,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1184,
																"src": "12048:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_Credit_$1003",
																	"typeString": "contract Credit"
																}
															},
															"id": 641,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "12048:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 642,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1159,
																"src": "12062:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 643,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "12062:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 637,
														"name": "LogBorrowerWithdrawal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 99,
														"src": "12014:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12014:64:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 645,
												"nodeType": "ExpressionStatement",
												"src": "12014:64:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 649,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1184,
																"src": "12174:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_Credit_$1003",
																	"typeString": "contract Credit"
																}
															},
															"id": 650,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "12174:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 646,
															"name": "borrower",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 10,
															"src": "12156:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 648,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "12156:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12156:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 652,
												"nodeType": "ExpressionStatement",
												"src": "12156:31:0"
											}
										]
									},
									"id": 654,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 618,
											"modifierName": {
												"argumentTypes": null,
												"id": 617,
												"name": "isActive",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 183,
												"src": "11730:8:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "11730:8:0"
										},
										{
											"arguments": [],
											"id": 620,
											"modifierName": {
												"argumentTypes": null,
												"id": 619,
												"name": "onlyBorrower",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 194,
												"src": "11739:12:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "11739:12:0"
										},
										{
											"arguments": [],
											"id": 622,
											"modifierName": {
												"argumentTypes": null,
												"id": 621,
												"name": "canWithdraw",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 260,
												"src": "11752:11:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "11752:11:0"
										},
										{
											"arguments": [],
											"id": 624,
											"modifierName": {
												"argumentTypes": null,
												"id": 623,
												"name": "isNotFraud",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 271,
												"src": "11764:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "11764:10:0"
										}
									],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11720:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11775:0:0"
									},
									"scope": 1003,
									"src": "11703:492:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 719,
										"nodeType": "Block",
										"src": "12602:1146:0",
										"statements": [
											{
												"assignments": [
													664
												],
												"declarations": [
													{
														"constant": false,
														"id": 664,
														"name": "lenderReturnAmount",
														"nodeType": "VariableDeclaration",
														"scope": 720,
														"src": "12821:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 663,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "12821:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 668,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 665,
														"name": "returnAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "12847:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 666,
														"name": "lendersCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 53,
														"src": "12862:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12847:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12821:53:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 673,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 670,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1184,
																	"src": "12964:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Credit_$1003",
																		"typeString": "contract Credit"
																	}
																},
																"id": 671,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "12964:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 672,
																"name": "lenderReturnAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 664,
																"src": "12980:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12964:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 669,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1158,
														"src": "12957:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12957:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 675,
												"nodeType": "ExpressionStatement",
												"src": "12957:42:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 681,
															"name": "lenderReturnAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 664,
															"src": "13100:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 676,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1167,
																"src": "13080:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 679,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "13080:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 680,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "13080:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13080:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 683,
												"nodeType": "ExpressionStatement",
												"src": "13080:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 685,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1167,
																"src": "13192:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "13192:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 687,
															"name": "lenderReturnAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 664,
															"src": "13204:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 688,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1159,
																"src": "13224:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 689,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "13224:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 684,
														"name": "LogLenderWithdrawal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 145,
														"src": "13172:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13172:68:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 691,
												"nodeType": "ExpressionStatement",
												"src": "13172:68:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 692,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1184,
															"src": "13311:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Credit_$1003",
																"typeString": "contract Credit"
															}
														},
														"id": 693,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "13311:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 694,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13327:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "13311:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 718,
												"nodeType": "IfStatement",
												"src": "13307:434:0",
												"trueBody": {
													"id": 717,
													"nodeType": "Block",
													"src": "13330:411:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 698,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 696,
																	"name": "active",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 33,
																	"src": "13394:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "66616c7365",
																	"id": 697,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13403:5:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "13394:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 699,
															"nodeType": "ExpressionStatement",
															"src": "13394:14:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 701,
																		"name": "active",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 33,
																		"src": "13494:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 702,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1159,
																			"src": "13502:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 703,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "13502:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 700,
																	"name": "LogCreditStateActiveChanged",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 91,
																	"src": "13466:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bool_$_t_uint256_$returns$__$",
																		"typeString": "function (bool,uint256)"
																	}
																},
																"id": 704,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13466:52:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 705,
															"nodeType": "ExpressionStatement",
															"src": "13466:52:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 709,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 706,
																	"name": "state",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 42,
																	"src": "13612:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_State_$40",
																		"typeString": "enum Credit.State"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 707,
																		"name": "State",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 40,
																		"src": "13620:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_State_$40_$",
																			"typeString": "type(enum Credit.State)"
																		}
																	},
																	"id": 708,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "expired",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "13620:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_State_$40",
																		"typeString": "enum Credit.State"
																	}
																},
																"src": "13612:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_State_$40",
																	"typeString": "enum Credit.State"
																}
															},
															"id": 710,
															"nodeType": "ExpressionStatement",
															"src": "13612:21:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 712,
																		"name": "state",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 42,
																		"src": "13706:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_State_$40",
																			"typeString": "enum Credit.State"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 713,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1159,
																			"src": "13713:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 714,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "13713:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_enum$_State_$40",
																			"typeString": "enum Credit.State"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 711,
																	"name": "LogCreditStateChanged",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 85,
																	"src": "13684:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_enum$_State_$40_$_t_uint256_$returns$__$",
																		"typeString": "function (enum Credit.State,uint256)"
																	}
																},
																"id": 715,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13684:45:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 716,
															"nodeType": "ExpressionStatement",
															"src": "13684:45:0"
														}
													]
												}
											}
										]
									},
									"id": 720,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 657,
											"modifierName": {
												"argumentTypes": null,
												"id": 656,
												"name": "isActive",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 183,
												"src": "12564:8:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "12564:8:0"
										},
										{
											"arguments": [],
											"id": 659,
											"modifierName": {
												"argumentTypes": null,
												"id": 658,
												"name": "onlyLender",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 207,
												"src": "12573:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "12573:10:0"
										},
										{
											"arguments": [],
											"id": 661,
											"modifierName": {
												"argumentTypes": null,
												"id": 660,
												"name": "canAskForInterest",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 227,
												"src": "12584:17:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "12584:17:0"
										}
									],
									"name": "requestInterest",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12554:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12602:0:0"
									},
									"scope": 1003,
									"src": "12530:1218:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 759,
										"nodeType": "Block",
										"src": "14230:293:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"id": 745,
															"name": "borrower",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 10,
															"src": "14259:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 746,
															"name": "description",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "14278:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 747,
															"name": "requestedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 12,
															"src": "14300:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 748,
															"name": "requestedRepayments",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 20,
															"src": "14326:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 749,
															"name": "repaymentInstallment",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 24,
															"src": "14356:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 750,
															"name": "remainingRepayments",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 22,
															"src": "14387:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 751,
															"name": "interest",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "14417:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 752,
															"name": "returnAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 14,
															"src": "14436:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 753,
															"name": "state",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 42,
															"src": "14459:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_State_$40",
																"typeString": "enum Credit.State"
															}
														},
														{
															"argumentTypes": null,
															"id": 754,
															"name": "active",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 33,
															"src": "14475:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 755,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1184,
																"src": "14492:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_Credit_$1003",
																	"typeString": "contract Credit"
																}
															},
															"id": 756,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "14492:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 757,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "14248:267:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_bytes32_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_enum$_State_$40_$_t_bool_$_t_uint256_$",
														"typeString": "tuple(address,bytes32,uint256,uint256,uint256,uint256,uint256,uint256,enum Credit.State,bool,uint256)"
													}
												},
												"functionReturnParameters": 744,
												"id": 758,
												"nodeType": "Return",
												"src": "14241:274:0"
											}
										]
									},
									"id": 760,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "getCreditInfo",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14133:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 723,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "14157:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 722,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14157:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 725,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "14166:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 724,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "14166:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 727,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "14175:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 726,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "14175:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 729,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "14181:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 728,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "14181:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 731,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "14187:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 730,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "14187:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 733,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "14193:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 732,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "14193:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 735,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "14199:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 734,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "14199:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 737,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "14205:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 736,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "14205:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 739,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "14211:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_State_$40",
													"typeString": "enum Credit.State"
												},
												"typeName": {
													"contractScope": null,
													"id": 738,
													"name": "State",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 40,
													"src": "14211:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_State_$40",
														"typeString": "enum Credit.State"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 741,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "14218:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 740,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14218:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 743,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "14224:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 742,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "14224:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14156:73:0"
									},
									"scope": 1003,
									"src": "14111:412:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 803,
										"nodeType": "Block",
										"src": "14650:552:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 775,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 770,
																	"name": "revokeVoters",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 60,
																	"src": "14715:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 773,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 771,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1167,
																		"src": "14728:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 772,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "14728:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "14715:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 774,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14743:5:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"src": "14715:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 769,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1170,
														"src": "14707:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14707:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 777,
												"nodeType": "ExpressionStatement",
												"src": "14707:42:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 779,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "14801:13:0",
													"subExpression": {
														"argumentTypes": null,
														"id": 778,
														"name": "revokeVotes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "14801:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 780,
												"nodeType": "ExpressionStatement",
												"src": "14801:13:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 781,
															"name": "revokeVoters",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 60,
															"src": "14866:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 784,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 782,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1167,
																"src": "14879:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 783,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "14879:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "14866:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 785,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14894:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "14866:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 787,
												"nodeType": "ExpressionStatement",
												"src": "14866:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 789,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1167,
																"src": "14998:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 790,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "14998:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 791,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1159,
																"src": "15010:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 792,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "15010:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 788,
														"name": "LogLenderVoteForRevoking",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "14973:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14973:53:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 794,
												"nodeType": "ExpressionStatement",
												"src": "14973:53:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 795,
														"name": "lendersCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 53,
														"src": "15084:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"id": 796,
														"name": "revokeVotes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "15100:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15084:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 802,
												"nodeType": "IfStatement",
												"src": "15080:115:0",
												"trueBody": {
													"id": 801,
													"nodeType": "Block",
													"src": "15113:82:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 798,
																	"name": "revoke",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 819,
																	"src": "15175:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 799,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15175:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 800,
															"nodeType": "ExpressionStatement",
															"src": "15175:8:0"
														}
													]
												}
											}
										]
									},
									"id": 804,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 763,
											"modifierName": {
												"argumentTypes": null,
												"id": 762,
												"name": "isActive",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 183,
												"src": "14618:8:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "14618:8:0"
										},
										{
											"arguments": [],
											"id": 765,
											"modifierName": {
												"argumentTypes": null,
												"id": 764,
												"name": "isRevokable",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 289,
												"src": "14627:11:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "14627:11:0"
										},
										{
											"arguments": [],
											"id": 767,
											"modifierName": {
												"argumentTypes": null,
												"id": 766,
												"name": "onlyLender",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 207,
												"src": "14639:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "14639:10:0"
										}
									],
									"name": "revokeVote",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 761,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14608:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14650:0:0"
									},
									"scope": 1003,
									"src": "14589:613:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 818,
										"nodeType": "Block",
										"src": "15287:171:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 807,
														"name": "state",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 42,
														"src": "15339:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_State_$40",
															"typeString": "enum Credit.State"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 808,
															"name": "State",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 40,
															"src": "15347:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_State_$40_$",
																"typeString": "type(enum Credit.State)"
															}
														},
														"id": 809,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "revoked",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "15347:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_State_$40",
															"typeString": "enum Credit.State"
														}
													},
													"src": "15339:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_State_$40",
														"typeString": "enum Credit.State"
													}
												},
												"id": 811,
												"nodeType": "ExpressionStatement",
												"src": "15339:21:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 813,
															"name": "state",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 42,
															"src": "15427:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_State_$40",
																"typeString": "enum Credit.State"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 814,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1159,
																"src": "15434:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 815,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "15434:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_State_$40",
																"typeString": "enum Credit.State"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 812,
														"name": "LogCreditStateChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 85,
														"src": "15405:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_enum$_State_$40_$_t_uint256_$returns$__$",
															"typeString": "function (enum Credit.State,uint256)"
														}
													},
													"id": 816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15405:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 817,
												"nodeType": "ExpressionStatement",
												"src": "15405:45:0"
											}
										]
									},
									"id": 819,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "revoke",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 805,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15275:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15287:0:0"
									},
									"scope": 1003,
									"src": "15260:198:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 887,
										"nodeType": "Block",
										"src": "15569:899:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 835,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 829,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1184,
																	"src": "15640:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Credit_$1003",
																		"typeString": "contract Credit"
																	}
																},
																"id": 830,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "15640:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 831,
																	"name": "lendersInvestedAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 50,
																	"src": "15656:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 834,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 832,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1167,
																		"src": "15678:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 833,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "15678:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "15656:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "15640:49:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 828,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1158,
														"src": "15633:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15633:57:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 837,
												"nodeType": "ExpressionStatement",
												"src": "15633:57:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 843,
																"name": "lendersInvestedAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 50,
																"src": "15791:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 846,
															"indexExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 844,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1167,
																	"src": "15813:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 845,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "15813:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15791:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 838,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1167,
																"src": "15771:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 841,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "15771:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 842,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "15771:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15771:54:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 848,
												"nodeType": "ExpressionStatement",
												"src": "15771:54:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 850,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1167,
																"src": "15896:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 851,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "15896:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 852,
																"name": "lendersInvestedAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 50,
																"src": "15908:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 855,
															"indexExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 853,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1167,
																	"src": "15930:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 854,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "15930:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15908:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 856,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1159,
																"src": "15943:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 857,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "15943:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 849,
														"name": "LogLenderRefunded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 173,
														"src": "15878:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15878:81:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 859,
												"nodeType": "ExpressionStatement",
												"src": "15878:81:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 863,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 860,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1184,
															"src": "16030:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Credit_$1003",
																"typeString": "contract Credit"
															}
														},
														"id": 861,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "16030:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 862,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16046:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "16030:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 886,
												"nodeType": "IfStatement",
												"src": "16026:435:0",
												"trueBody": {
													"id": 885,
													"nodeType": "Block",
													"src": "16049:412:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 866,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 864,
																	"name": "active",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 33,
																	"src": "16113:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "66616c7365",
																	"id": 865,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16122:5:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "16113:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 867,
															"nodeType": "ExpressionStatement",
															"src": "16113:14:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 869,
																		"name": "active",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 33,
																		"src": "16214:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 870,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1159,
																			"src": "16222:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 871,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "16222:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 868,
																	"name": "LogCreditStateActiveChanged",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 91,
																	"src": "16186:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bool_$_t_uint256_$returns$__$",
																		"typeString": "function (bool,uint256)"
																	}
																},
																"id": 872,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16186:52:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 873,
															"nodeType": "ExpressionStatement",
															"src": "16186:52:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 877,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 874,
																	"name": "state",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 42,
																	"src": "16332:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_State_$40",
																		"typeString": "enum Credit.State"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 875,
																		"name": "State",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 40,
																		"src": "16340:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_State_$40_$",
																			"typeString": "type(enum Credit.State)"
																		}
																	},
																	"id": 876,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "expired",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "16340:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_State_$40",
																		"typeString": "enum Credit.State"
																	}
																},
																"src": "16332:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_State_$40",
																	"typeString": "enum Credit.State"
																}
															},
															"id": 878,
															"nodeType": "ExpressionStatement",
															"src": "16332:21:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 880,
																		"name": "state",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 42,
																		"src": "16426:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_State_$40",
																			"typeString": "enum Credit.State"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 881,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1159,
																			"src": "16433:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 882,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "16433:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_enum$_State_$40",
																			"typeString": "enum Credit.State"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 879,
																	"name": "LogCreditStateChanged",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 85,
																	"src": "16404:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_enum$_State_$40_$_t_uint256_$returns$__$",
																		"typeString": "function (enum Credit.State,uint256)"
																	}
																},
																"id": 883,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16404:45:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 884,
															"nodeType": "ExpressionStatement",
															"src": "16404:45:0"
														}
													]
												}
											}
										]
									},
									"id": 888,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 822,
											"modifierName": {
												"argumentTypes": null,
												"id": 821,
												"name": "isActive",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 183,
												"src": "15539:8:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "15539:8:0"
										},
										{
											"arguments": [],
											"id": 824,
											"modifierName": {
												"argumentTypes": null,
												"id": 823,
												"name": "onlyLender",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 207,
												"src": "15548:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "15548:10:0"
										},
										{
											"arguments": [],
											"id": 826,
											"modifierName": {
												"argumentTypes": null,
												"id": 825,
												"name": "isRevoked",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 300,
												"src": "15559:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "15559:9:0"
										}
									],
									"name": "refund",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15529:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15569:0:0"
									},
									"scope": 1003,
									"src": "15514:954:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 933,
										"nodeType": "Block",
										"src": "16609:542:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 903,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 898,
																	"name": "fraudVoters",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 73,
																	"src": "16671:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 901,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 899,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1167,
																		"src": "16683:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 900,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "16683:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "16671:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 902,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16698:5:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"src": "16671:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 897,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1170,
														"src": "16663:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16663:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 905,
												"nodeType": "ExpressionStatement",
												"src": "16663:41:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 907,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "16757:12:0",
													"subExpression": {
														"argumentTypes": null,
														"id": 906,
														"name": "fraudVotes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 69,
														"src": "16757:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 908,
												"nodeType": "ExpressionStatement",
												"src": "16757:12:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 909,
															"name": "fraudVoters",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 73,
															"src": "16821:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 912,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 910,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1167,
																"src": "16833:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 911,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "16833:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "16821:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 913,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16848:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "16821:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 915,
												"nodeType": "ExpressionStatement",
												"src": "16821:31:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 917,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1167,
																"src": "16926:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 918,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "16926:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 919,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1159,
																"src": "16938:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 920,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "16938:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 916,
														"name": "LogLenderVoteForFraud",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "16904:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16904:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 922,
												"nodeType": "ExpressionStatement",
												"src": "16904:50:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 925,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 923,
														"name": "lendersCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 53,
														"src": "17014:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"id": 924,
														"name": "fraudVotes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 69,
														"src": "17030:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17014:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 930,
												"nodeType": "IfStatement",
												"src": "17010:112:0",
												"trueBody": {
													"id": 929,
													"nodeType": "Block",
													"src": "17042:80:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 926,
																	"name": "fraud",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 961,
																	"src": "17103:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bool_$",
																		"typeString": "function () returns (bool)"
																	}
																},
																"id": 927,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17103:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"functionReturnParameters": 896,
															"id": 928,
															"nodeType": "Return",
															"src": "17096:14:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 931,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "17139:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 896,
												"id": 932,
												"nodeType": "Return",
												"src": "17132:11:0"
											}
										]
									},
									"id": 934,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 891,
											"modifierName": {
												"argumentTypes": null,
												"id": 890,
												"name": "isActive",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 183,
												"src": "16574:8:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "16574:8:0"
										},
										{
											"arguments": [],
											"id": 893,
											"modifierName": {
												"argumentTypes": null,
												"id": 892,
												"name": "onlyLender",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 207,
												"src": "16583:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "16583:10:0"
										}
									],
									"name": "fraudVote",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16564:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 895,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "16603:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 894,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16603:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16602:6:0"
									},
									"scope": 1003,
									"src": "16546:605:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 960,
										"nodeType": "Block",
										"src": "17327:336:0",
										"statements": [
											{
												"assignments": [
													940
												],
												"declarations": [
													{
														"constant": false,
														"id": 940,
														"name": "fraudStatusResult",
														"nodeType": "VariableDeclaration",
														"scope": 961,
														"src": "17412:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 939,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "17412:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 950,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "7365744672617564537461747573286164647265737329",
																			"id": 945,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "17465:25:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_bb9e4247a9737512c22376911ad76d2ccb7492c06067f8baea333b4b5fcfe910",
																				"typeString": "literal_string \"setFraudStatus(address)\""
																			},
																			"value": "setFraudStatus(address)"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_bb9e4247a9737512c22376911ad76d2ccb7492c06067f8baea333b4b5fcfe910",
																				"typeString": "literal_string \"setFraudStatus(address)\""
																			}
																		],
																		"id": 944,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1161,
																		"src": "17455:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
																			"typeString": "function () pure returns (bytes32)"
																		}
																	},
																	"id": 946,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "17455:36:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 943,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "17448:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes4_$",
																	"typeString": "type(bytes4)"
																},
																"typeName": "bytes4"
															},
															"id": 947,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17448:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														{
															"argumentTypes": null,
															"id": 948,
															"name": "borrower",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 10,
															"src": "17494:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 941,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1039,
															"src": "17437:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 942,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "17437:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$__$returns$_t_bool_$",
															"typeString": "function () payable returns (bool)"
														}
													},
													"id": 949,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17437:66:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17412:91:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 952,
															"name": "borrower",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 10,
															"src": "17573:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 953,
															"name": "fraudStatusResult",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 940,
															"src": "17583:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 954,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1159,
																"src": "17602:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 955,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "17602:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 951,
														"name": "LogBorrowerIsFraud",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "17554:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$_t_uint256_$returns$__$",
															"typeString": "function (address,bool,uint256)"
														}
													},
													"id": 956,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17554:64:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 957,
												"nodeType": "ExpressionStatement",
												"src": "17554:64:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 958,
													"name": "fraudStatusResult",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 940,
													"src": "17638:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 938,
												"id": 959,
												"nodeType": "Return",
												"src": "17631:24:0"
											}
										]
									},
									"id": 961,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "fraud",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 935,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17300:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 937,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "17321:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 936,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17321:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17320:6:0"
									},
									"scope": 1003,
									"src": "17286:377:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 980,
										"nodeType": "Block",
										"src": "17920:121:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 972,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 970,
														"name": "state",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 42,
														"src": "17931:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_State_$40",
															"typeString": "enum Credit.State"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 971,
														"name": "_state",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 963,
														"src": "17939:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_State_$40",
															"typeString": "enum Credit.State"
														}
													},
													"src": "17931:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_State_$40",
														"typeString": "enum Credit.State"
													}
												},
												"id": 973,
												"nodeType": "ExpressionStatement",
												"src": "17931:14:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 975,
															"name": "state",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 42,
															"src": "18010:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_State_$40",
																"typeString": "enum Credit.State"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 976,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1159,
																"src": "18017:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 977,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "18017:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_State_$40",
																"typeString": "enum Credit.State"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 974,
														"name": "LogCreditStateChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 85,
														"src": "17988:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_enum$_State_$40_$_t_uint256_$returns$__$",
															"typeString": "function (enum Credit.State,uint256)"
														}
													},
													"id": 978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17988:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 979,
												"nodeType": "ExpressionStatement",
												"src": "17988:45:0"
											}
										]
									},
									"id": 981,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 966,
											"modifierName": {
												"argumentTypes": null,
												"id": 965,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1056,
												"src": "17895:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "17895:9:0"
										}
									],
									"name": "changeState",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 963,
												"name": "_state",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "17872:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_State_$40",
													"typeString": "enum Credit.State"
												},
												"typeName": {
													"contractScope": null,
													"id": 962,
													"name": "State",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 40,
													"src": "17872:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_State_$40",
														"typeString": "enum Credit.State"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17871:14:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 968,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "17914:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 967,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "17914:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17913:6:0"
									},
									"scope": 1003,
									"src": "17851:190:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1001,
										"nodeType": "Block",
										"src": "18288:164:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 988,
														"name": "active",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 33,
														"src": "18299:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 990,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "18308:7:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 989,
															"name": "active",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 33,
															"src": "18309:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "18299:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 992,
												"nodeType": "ExpressionStatement",
												"src": "18299:16:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 994,
															"name": "active",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 33,
															"src": "18394:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 995,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1159,
																"src": "18402:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 996,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "18402:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 993,
														"name": "LogCreditStateActiveChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 91,
														"src": "18366:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bool_$_t_uint256_$returns$__$",
															"typeString": "function (bool,uint256)"
														}
													},
													"id": 997,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18366:52:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 998,
												"nodeType": "ExpressionStatement",
												"src": "18366:52:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 999,
													"name": "active",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 33,
													"src": "18438:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 987,
												"id": 1000,
												"nodeType": "Return",
												"src": "18431:13:0"
											}
										]
									},
									"id": 1002,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 984,
											"modifierName": {
												"argumentTypes": null,
												"id": 983,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1056,
												"src": "18263:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "18263:9:0"
										}
									],
									"name": "toggleActive",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 982,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18251:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 986,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1002,
												"src": "18282:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 985,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "18282:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "18281:6:0"
									},
									"scope": 1003,
									"src": "18230:222:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 1004,
							"src": "189:18268:0"
						}
					],
					"src": "0:18457:0"
				},
				"id": 0,
				"legacyAST": {
					"attributes": {
						"absolutePath": "smart-contracts/contracts/Credit.sol",
						"exportedSymbols": {
							"Credit": [
								1003
							]
						}
					},
					"children": [
						{
							"attributes": {
								"literals": [
									"solidity",
									"^",
									"0.4",
									".18"
								]
							},
							"id": 1,
							"name": "PragmaDirective",
							"src": "0:24:0"
						},
						{
							"attributes": {
								"SourceUnit": 1156,
								"absolutePath": "smart-contracts/contracts/common/SafeMath.sol",
								"file": "./common/SafeMath.sol",
								"scope": 1004,
								"symbolAliases": [
									null
								],
								"unitAlias": ""
							},
							"id": 2,
							"name": "ImportDirective",
							"src": "28:31:0"
						},
						{
							"attributes": {
								"SourceUnit": 1036,
								"absolutePath": "smart-contracts/contracts/common/Destructible.sol",
								"file": "./common/Destructible.sol",
								"scope": 1004,
								"symbolAliases": [
									null
								],
								"unitAlias": ""
							},
							"id": 3,
							"name": "ImportDirective",
							"src": "61:35:0"
						},
						{
							"attributes": {
								"contractDependencies": [
									1035,
									1057
								],
								"contractKind": "contract",
								"documentation": "@title Credit contract.\r\nInherits the Ownable and Destructible contracts.\r",
								"fullyImplemented": true,
								"linearizedBaseContracts": [
									1003,
									1035,
									1057
								],
								"name": "Credit",
								"scope": 1004
							},
							"children": [
								{
									"attributes": {
										"arguments": [
											null
										]
									},
									"children": [
										{
											"attributes": {
												"contractScope": null,
												"name": "Destructible",
												"referencedDeclaration": 1035,
												"type": "contract Destructible"
											},
											"id": 4,
											"name": "UserDefinedTypeName",
											"src": "208:12:0"
										}
									],
									"id": 5,
									"name": "InheritanceSpecifier",
									"src": "208:12:0"
								},
								{
									"children": [
										{
											"attributes": {
												"contractScope": null,
												"name": "SafeMath",
												"referencedDeclaration": 1155,
												"type": "library SafeMath"
											},
											"id": 6,
											"name": "UserDefinedTypeName",
											"src": "316:8:0"
										},
										{
											"attributes": {
												"name": "uint",
												"type": "uint256"
											},
											"id": 7,
											"name": "ElementaryTypeName",
											"src": "329:4:0"
										}
									],
									"id": 8,
									"name": "UsingForDirective",
									"src": "310:24:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "borrower",
										"scope": 1003,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "address",
										"value": null,
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"name": "address",
												"type": "address"
											},
											"id": 9,
											"name": "ElementaryTypeName",
											"src": "441:7:0"
										}
									],
									"id": 10,
									"name": "VariableDeclaration",
									"src": "441:16:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "requestedAmount",
										"scope": 1003,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "uint256",
										"value": null,
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"name": "uint",
												"type": "uint256"
											},
											"id": 11,
											"name": "ElementaryTypeName",
											"src": "514:4:0"
										}
									],
									"id": 12,
									"name": "VariableDeclaration",
									"src": "514:20:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "returnAmount",
										"scope": 1003,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "uint256",
										"value": null,
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"name": "uint",
												"type": "uint256"
											},
											"id": 13,
											"name": "ElementaryTypeName",
											"src": "622:4:0"
										}
									],
									"id": 14,
									"name": "VariableDeclaration",
									"src": "622:17:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "repaidAmount",
										"scope": 1003,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "uint256",
										"value": null,
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"name": "uint",
												"type": "uint256"
											},
											"id": 15,
											"name": "ElementaryTypeName",
											"src": "681:4:0"
										}
									],
									"id": 16,
									"name": "VariableDeclaration",
									"src": "681:17:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "interest",
										"scope": 1003,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "uint256",
										"value": null,
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"name": "uint",
												"type": "uint256"
											},
											"id": 17,
											"name": "ElementaryTypeName",
											"src": "732:4:0"
										}
									],
									"id": 18,
									"name": "VariableDeclaration",
									"src": "732:13:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "requestedRepayments",
										"scope": 1003,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "uint256",
										"value": null,
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"name": "uint",
												"type": "uint256"
											},
											"id": 19,
											"name": "ElementaryTypeName",
											"src": "806:4:0"
										}
									],
									"id": 20,
									"name": "VariableDeclaration",
									"src": "806:24:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "remainingRepayments",
										"scope": 1003,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "uint256",
										"value": null,
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"name": "uint",
												"type": "uint256"
											},
											"id": 21,
											"name": "ElementaryTypeName",
											"src": "881:4:0"
										}
									],
									"id": 22,
									"name": "VariableDeclaration",
									"src": "881:24:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "repaymentInstallment",
										"scope": 1003,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "uint256",
										"value": null,
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"name": "uint",
												"type": "uint256"
											},
											"id": 23,
											"name": "ElementaryTypeName",
											"src": "962:4:0"
										}
									],
									"id": 24,
									"name": "VariableDeclaration",
									"src": "962:25:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "requestedDate",
										"scope": 1003,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "uint256",
										"value": null,
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"name": "uint",
												"type": "uint256"
											},
											"id": 25,
											"name": "ElementaryTypeName",
											"src": "1038:4:0"
										}
									],
									"id": 26,
									"name": "VariableDeclaration",
									"src": "1038:18:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "lastRepaymentDate",
										"scope": 1003,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "uint256",
										"value": null,
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"name": "uint",
												"type": "uint256"
											},
											"id": 27,
											"name": "ElementaryTypeName",
											"src": "1111:4:0"
										}
									],
									"id": 28,
									"name": "VariableDeclaration",
									"src": "1111:22:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "description",
										"scope": 1003,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "bytes32",
										"value": null,
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"name": "bytes32",
												"type": "bytes32"
											},
											"id": 29,
											"name": "ElementaryTypeName",
											"src": "1177:7:0"
										}
									],
									"id": 30,
									"name": "VariableDeclaration",
									"src": "1177:19:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "active",
										"scope": 1003,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "bool",
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"name": "bool",
												"type": "bool"
											},
											"id": 31,
											"name": "ElementaryTypeName",
											"src": "1241:4:0"
										},
										{
											"attributes": {
												"argumentTypes": null,
												"hexvalue": "74727565",
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"subdenomination": null,
												"token": "bool",
												"type": "bool",
												"value": "true"
											},
											"id": 32,
											"name": "Literal",
											"src": "1255:4:0"
										}
									],
									"id": 33,
									"name": "VariableDeclaration",
									"src": "1241:18:0"
								},
								{
									"attributes": {
										"canonicalName": "Credit.State",
										"name": "State"
									},
									"children": [
										{
											"attributes": {
												"name": "investment"
											},
											"id": 34,
											"name": "EnumValue",
											"src": "1716:10:0"
										},
										{
											"attributes": {
												"name": "repayment"
											},
											"id": 35,
											"name": "EnumValue",
											"src": "1728:9:0"
										},
										{
											"attributes": {
												"name": "interestReturns"
											},
											"id": 36,
											"name": "EnumValue",
											"src": "1739:15:0"
										},
										{
											"attributes": {
												"name": "expired"
											},
											"id": 37,
											"name": "EnumValue",
											"src": "1756:7:0"
										},
										{
											"attributes": {
												"name": "revoked"
											},
											"id": 38,
											"name": "EnumValue",
											"src": "1765:7:0"
										},
										{
											"attributes": {
												"name": "fraud"
											},
											"id": 39,
											"name": "EnumValue",
											"src": "1774:5:0"
										}
									],
									"id": 40,
									"name": "EnumDefinition",
									"src": "1703:78:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "state",
										"scope": 1003,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "enum Credit.State",
										"value": null,
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"contractScope": null,
												"name": "State",
												"referencedDeclaration": 40,
												"type": "enum Credit.State"
											},
											"id": 41,
											"name": "UserDefinedTypeName",
											"src": "1787:5:0"
										}
									],
									"id": 42,
									"name": "VariableDeclaration",
									"src": "1787:11:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "lenders",
										"scope": 1003,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "mapping(address => bool)",
										"value": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"type": "mapping(address => bool)"
											},
											"children": [
												{
													"attributes": {
														"name": "address",
														"type": "address"
													},
													"id": 43,
													"name": "ElementaryTypeName",
													"src": "1860:7:0"
												},
												{
													"attributes": {
														"name": "bool",
														"type": "bool"
													},
													"id": 44,
													"name": "ElementaryTypeName",
													"src": "1871:4:0"
												}
											],
											"id": 45,
											"name": "Mapping",
											"src": "1852:24:0"
										}
									],
									"id": 46,
									"name": "VariableDeclaration",
									"src": "1852:39:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "lendersInvestedAmount",
										"scope": 1003,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "mapping(address => uint256)",
										"value": null,
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"type": "mapping(address => uint256)"
											},
											"children": [
												{
													"attributes": {
														"name": "address",
														"type": "address"
													},
													"id": 47,
													"name": "ElementaryTypeName",
													"src": "1960:7:0"
												},
												{
													"attributes": {
														"name": "uint",
														"type": "uint256"
													},
													"id": 48,
													"name": "ElementaryTypeName",
													"src": "1971:4:0"
												}
											],
											"id": 49,
											"name": "Mapping",
											"src": "1952:24:0"
										}
									],
									"id": 50,
									"name": "VariableDeclaration",
									"src": "1952:46:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "lendersCount",
										"scope": 1003,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "uint256",
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"name": "uint",
												"type": "uint256"
											},
											"id": 51,
											"name": "ElementaryTypeName",
											"src": "2070:4:0"
										},
										{
											"attributes": {
												"argumentTypes": null,
												"hexvalue": "30",
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"subdenomination": null,
												"token": "number",
												"type": "int_const 0",
												"value": "0"
											},
											"id": 52,
											"name": "Literal",
											"src": "2090:1:0"
										}
									],
									"id": 53,
									"name": "VariableDeclaration",
									"src": "2070:21:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "revokeVotes",
										"scope": 1003,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "uint256",
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"name": "uint",
												"type": "uint256"
											},
											"id": 54,
											"name": "ElementaryTypeName",
											"src": "2128:4:0"
										},
										{
											"attributes": {
												"argumentTypes": null,
												"hexvalue": "30",
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"subdenomination": null,
												"token": "number",
												"type": "int_const 0",
												"value": "0"
											},
											"id": 55,
											"name": "Literal",
											"src": "2147:1:0"
										}
									],
									"id": 56,
									"name": "VariableDeclaration",
									"src": "2128:20:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "revokeVoters",
										"scope": 1003,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "mapping(address => bool)",
										"value": null,
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"type": "mapping(address => bool)"
											},
											"children": [
												{
													"attributes": {
														"name": "address",
														"type": "address"
													},
													"id": 57,
													"name": "ElementaryTypeName",
													"src": "2188:7:0"
												},
												{
													"attributes": {
														"name": "bool",
														"type": "bool"
													},
													"id": 58,
													"name": "ElementaryTypeName",
													"src": "2199:4:0"
												}
											],
											"id": 59,
											"name": "Mapping",
											"src": "2180:24:0"
										}
									],
									"id": 60,
									"name": "VariableDeclaration",
									"src": "2180:37:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "revokeTimeNeeded",
										"scope": 1003,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "uint256",
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"name": "uint",
												"type": "uint256"
											},
											"id": 61,
											"name": "ElementaryTypeName",
											"src": "2325:4:0"
										},
										{
											"attributes": {
												"argumentTypes": null,
												"commonType": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"operator": "+",
												"type": "uint256"
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"member_name": "timestamp",
														"referencedDeclaration": null,
														"type": "uint256"
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"overloadedDeclarations": [
																	null
																],
																"referencedDeclaration": 1159,
																"type": "block",
																"value": "block"
															},
															"id": 62,
															"name": "Identifier",
															"src": "2349:5:0"
														}
													],
													"id": 63,
													"name": "MemberAccess",
													"src": "2349:15:0"
												},
												{
													"attributes": {
														"argumentTypes": null,
														"hexvalue": "31",
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"subdenomination": "seconds",
														"token": "number",
														"type": "int_const 1",
														"value": "1"
													},
													"id": 64,
													"name": "Literal",
													"src": "2367:9:0"
												}
											],
											"id": 65,
											"name": "BinaryOperation",
											"src": "2349:27:0"
										}
									],
									"id": 66,
									"name": "VariableDeclaration",
									"src": "2325:51:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "fraudVotes",
										"scope": 1003,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "uint256",
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"name": "uint",
												"type": "uint256"
											},
											"id": 67,
											"name": "ElementaryTypeName",
											"src": "2413:4:0"
										},
										{
											"attributes": {
												"argumentTypes": null,
												"hexvalue": "30",
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"subdenomination": null,
												"token": "number",
												"type": "int_const 0",
												"value": "0"
											},
											"id": 68,
											"name": "Literal",
											"src": "2431:1:0"
										}
									],
									"id": 69,
									"name": "VariableDeclaration",
									"src": "2413:19:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "fraudVoters",
										"scope": 1003,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "mapping(address => bool)",
										"value": null,
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"type": "mapping(address => bool)"
											},
											"children": [
												{
													"attributes": {
														"name": "address",
														"type": "address"
													},
													"id": 70,
													"name": "ElementaryTypeName",
													"src": "2472:7:0"
												},
												{
													"attributes": {
														"name": "bool",
														"type": "bool"
													},
													"id": 71,
													"name": "ElementaryTypeName",
													"src": "2483:4:0"
												}
											],
											"id": 72,
											"name": "Mapping",
											"src": "2464:24:0"
										}
									],
									"id": 73,
									"name": "VariableDeclaration",
									"src": "2464:36:0"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "LogCreditInitialized"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "_address",
														"scope": 79,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 74,
															"name": "ElementaryTypeName",
															"src": "2574:7:0"
														}
													],
													"id": 75,
													"name": "VariableDeclaration",
													"src": "2574:24:0"
												},
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "timestamp",
														"scope": 79,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 76,
															"name": "ElementaryTypeName",
															"src": "2600:4:0"
														}
													],
													"id": 77,
													"name": "VariableDeclaration",
													"src": "2600:22:0"
												}
											],
											"id": 78,
											"name": "ParameterList",
											"src": "2573:50:0"
										}
									],
									"id": 79,
									"name": "EventDefinition",
									"src": "2547:77:0"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "LogCreditStateChanged"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "state",
														"scope": 85,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "enum Credit.State",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"contractScope": null,
																"name": "State",
																"referencedDeclaration": 40,
																"type": "enum Credit.State"
															},
															"id": 80,
															"name": "UserDefinedTypeName",
															"src": "2658:5:0"
														}
													],
													"id": 81,
													"name": "VariableDeclaration",
													"src": "2658:19:0"
												},
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "timestamp",
														"scope": 85,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 82,
															"name": "ElementaryTypeName",
															"src": "2679:4:0"
														}
													],
													"id": 83,
													"name": "VariableDeclaration",
													"src": "2679:22:0"
												}
											],
											"id": 84,
											"name": "ParameterList",
											"src": "2657:45:0"
										}
									],
									"id": 85,
									"name": "EventDefinition",
									"src": "2630:73:0"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "LogCreditStateActiveChanged"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "active",
														"scope": 91,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "bool",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "bool",
																"type": "bool"
															},
															"id": 86,
															"name": "ElementaryTypeName",
															"src": "2743:4:0"
														}
													],
													"id": 87,
													"name": "VariableDeclaration",
													"src": "2743:19:0"
												},
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "timestamp",
														"scope": 91,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 88,
															"name": "ElementaryTypeName",
															"src": "2764:4:0"
														}
													],
													"id": 89,
													"name": "VariableDeclaration",
													"src": "2764:22:0"
												}
											],
											"id": 90,
											"name": "ParameterList",
											"src": "2742:45:0"
										}
									],
									"id": 91,
									"name": "EventDefinition",
									"src": "2709:79:0"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "LogBorrowerWithdrawal"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "_address",
														"scope": 99,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 92,
															"name": "ElementaryTypeName",
															"src": "2824:7:0"
														}
													],
													"id": 93,
													"name": "VariableDeclaration",
													"src": "2824:24:0"
												},
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "_amount",
														"scope": 99,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 94,
															"name": "ElementaryTypeName",
															"src": "2850:4:0"
														}
													],
													"id": 95,
													"name": "VariableDeclaration",
													"src": "2850:20:0"
												},
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "timestamp",
														"scope": 99,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 96,
															"name": "ElementaryTypeName",
															"src": "2872:4:0"
														}
													],
													"id": 97,
													"name": "VariableDeclaration",
													"src": "2872:22:0"
												}
											],
											"id": 98,
											"name": "ParameterList",
											"src": "2823:72:0"
										}
									],
									"id": 99,
									"name": "EventDefinition",
									"src": "2796:100:0"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "LogBorrowerRepaymentInstallment"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "_address",
														"scope": 107,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 100,
															"name": "ElementaryTypeName",
															"src": "2940:7:0"
														}
													],
													"id": 101,
													"name": "VariableDeclaration",
													"src": "2940:24:0"
												},
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "_amount",
														"scope": 107,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 102,
															"name": "ElementaryTypeName",
															"src": "2966:4:0"
														}
													],
													"id": 103,
													"name": "VariableDeclaration",
													"src": "2966:20:0"
												},
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "timestamp",
														"scope": 107,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 104,
															"name": "ElementaryTypeName",
															"src": "2988:4:0"
														}
													],
													"id": 105,
													"name": "VariableDeclaration",
													"src": "2988:22:0"
												}
											],
											"id": 106,
											"name": "ParameterList",
											"src": "2939:72:0"
										}
									],
									"id": 107,
									"name": "EventDefinition",
									"src": "2902:110:0"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "LogBorrowerRepaymentFinished"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "_address",
														"scope": 113,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 108,
															"name": "ElementaryTypeName",
															"src": "3053:7:0"
														}
													],
													"id": 109,
													"name": "VariableDeclaration",
													"src": "3053:24:0"
												},
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "timestamp",
														"scope": 113,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 110,
															"name": "ElementaryTypeName",
															"src": "3079:4:0"
														}
													],
													"id": 111,
													"name": "VariableDeclaration",
													"src": "3079:22:0"
												}
											],
											"id": 112,
											"name": "ParameterList",
											"src": "3052:50:0"
										}
									],
									"id": 113,
									"name": "EventDefinition",
									"src": "3018:85:0"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "LogBorrowerChangeReturned"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "_address",
														"scope": 121,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 114,
															"name": "ElementaryTypeName",
															"src": "3141:7:0"
														}
													],
													"id": 115,
													"name": "VariableDeclaration",
													"src": "3141:24:0"
												},
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "_amount",
														"scope": 121,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 116,
															"name": "ElementaryTypeName",
															"src": "3167:4:0"
														}
													],
													"id": 117,
													"name": "VariableDeclaration",
													"src": "3167:20:0"
												},
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "timestamp",
														"scope": 121,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 118,
															"name": "ElementaryTypeName",
															"src": "3189:4:0"
														}
													],
													"id": 119,
													"name": "VariableDeclaration",
													"src": "3189:22:0"
												}
											],
											"id": 120,
											"name": "ParameterList",
											"src": "3140:72:0"
										}
									],
									"id": 121,
									"name": "EventDefinition",
									"src": "3109:104:0"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "LogBorrowerIsFraud"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "_address",
														"scope": 129,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 122,
															"name": "ElementaryTypeName",
															"src": "3244:7:0"
														}
													],
													"id": 123,
													"name": "VariableDeclaration",
													"src": "3244:24:0"
												},
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "fraudStatus",
														"scope": 129,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "bool",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "bool",
																"type": "bool"
															},
															"id": 124,
															"name": "ElementaryTypeName",
															"src": "3270:4:0"
														}
													],
													"id": 125,
													"name": "VariableDeclaration",
													"src": "3270:24:0"
												},
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "timestamp",
														"scope": 129,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 126,
															"name": "ElementaryTypeName",
															"src": "3296:4:0"
														}
													],
													"id": 127,
													"name": "VariableDeclaration",
													"src": "3296:22:0"
												}
											],
											"id": 128,
											"name": "ParameterList",
											"src": "3243:76:0"
										}
									],
									"id": 129,
									"name": "EventDefinition",
									"src": "3219:101:0"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "LogLenderInvestment"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "_address",
														"scope": 137,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 130,
															"name": "ElementaryTypeName",
															"src": "3354:7:0"
														}
													],
													"id": 131,
													"name": "VariableDeclaration",
													"src": "3354:24:0"
												},
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "_amount",
														"scope": 137,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 132,
															"name": "ElementaryTypeName",
															"src": "3380:4:0"
														}
													],
													"id": 133,
													"name": "VariableDeclaration",
													"src": "3380:20:0"
												},
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "timestamp",
														"scope": 137,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 134,
															"name": "ElementaryTypeName",
															"src": "3402:4:0"
														}
													],
													"id": 135,
													"name": "VariableDeclaration",
													"src": "3402:22:0"
												}
											],
											"id": 136,
											"name": "ParameterList",
											"src": "3353:72:0"
										}
									],
									"id": 137,
									"name": "EventDefinition",
									"src": "3328:98:0"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "LogLenderWithdrawal"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "_address",
														"scope": 145,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 138,
															"name": "ElementaryTypeName",
															"src": "3458:7:0"
														}
													],
													"id": 139,
													"name": "VariableDeclaration",
													"src": "3458:24:0"
												},
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "_amount",
														"scope": 145,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 140,
															"name": "ElementaryTypeName",
															"src": "3484:4:0"
														}
													],
													"id": 141,
													"name": "VariableDeclaration",
													"src": "3484:20:0"
												},
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "timestamp",
														"scope": 145,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 142,
															"name": "ElementaryTypeName",
															"src": "3506:4:0"
														}
													],
													"id": 143,
													"name": "VariableDeclaration",
													"src": "3506:22:0"
												}
											],
											"id": 144,
											"name": "ParameterList",
											"src": "3457:72:0"
										}
									],
									"id": 145,
									"name": "EventDefinition",
									"src": "3432:98:0"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "LogLenderChangeReturned"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "_address",
														"scope": 153,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 146,
															"name": "ElementaryTypeName",
															"src": "3566:7:0"
														}
													],
													"id": 147,
													"name": "VariableDeclaration",
													"src": "3566:24:0"
												},
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "_amount",
														"scope": 153,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 148,
															"name": "ElementaryTypeName",
															"src": "3592:4:0"
														}
													],
													"id": 149,
													"name": "VariableDeclaration",
													"src": "3592:20:0"
												},
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "timestamp",
														"scope": 153,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 150,
															"name": "ElementaryTypeName",
															"src": "3614:4:0"
														}
													],
													"id": 151,
													"name": "VariableDeclaration",
													"src": "3614:22:0"
												}
											],
											"id": 152,
											"name": "ParameterList",
											"src": "3565:72:0"
										}
									],
									"id": 153,
									"name": "EventDefinition",
									"src": "3536:102:0"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "LogLenderVoteForRevoking"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "_address",
														"scope": 159,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 154,
															"name": "ElementaryTypeName",
															"src": "3675:7:0"
														}
													],
													"id": 155,
													"name": "VariableDeclaration",
													"src": "3675:24:0"
												},
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "timestamp",
														"scope": 159,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 156,
															"name": "ElementaryTypeName",
															"src": "3701:4:0"
														}
													],
													"id": 157,
													"name": "VariableDeclaration",
													"src": "3701:22:0"
												}
											],
											"id": 158,
											"name": "ParameterList",
											"src": "3674:50:0"
										}
									],
									"id": 159,
									"name": "EventDefinition",
									"src": "3644:81:0"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "LogLenderVoteForFraud"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "_address",
														"scope": 165,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 160,
															"name": "ElementaryTypeName",
															"src": "3759:7:0"
														}
													],
													"id": 161,
													"name": "VariableDeclaration",
													"src": "3759:24:0"
												},
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "timestamp",
														"scope": 165,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 162,
															"name": "ElementaryTypeName",
															"src": "3785:4:0"
														}
													],
													"id": 163,
													"name": "VariableDeclaration",
													"src": "3785:22:0"
												}
											],
											"id": 164,
											"name": "ParameterList",
											"src": "3758:50:0"
										}
									],
									"id": 165,
									"name": "EventDefinition",
									"src": "3731:78:0"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "LogLenderRefunded"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "_address",
														"scope": 173,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 166,
															"name": "ElementaryTypeName",
															"src": "3839:7:0"
														}
													],
													"id": 167,
													"name": "VariableDeclaration",
													"src": "3839:24:0"
												},
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "_amount",
														"scope": 173,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 168,
															"name": "ElementaryTypeName",
															"src": "3865:4:0"
														}
													],
													"id": 169,
													"name": "VariableDeclaration",
													"src": "3865:20:0"
												},
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "timestamp",
														"scope": 173,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 170,
															"name": "ElementaryTypeName",
															"src": "3887:4:0"
														}
													],
													"id": 171,
													"name": "VariableDeclaration",
													"src": "3887:22:0"
												}
											],
											"id": 172,
											"name": "ParameterList",
											"src": "3838:72:0"
										}
									],
									"id": 173,
									"name": "EventDefinition",
									"src": "3815:96:0"
								},
								{
									"attributes": {
										"name": "isActive",
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 174,
											"name": "ParameterList",
											"src": "3975:2:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1170,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 175,
																	"name": "Identifier",
																	"src": "3989:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "==",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 33,
																				"type": "bool",
																				"value": "active"
																			},
																			"id": 176,
																			"name": "Identifier",
																			"src": "3997:6:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"hexvalue": "74727565",
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"subdenomination": null,
																				"token": "bool",
																				"type": "bool",
																				"value": "true"
																			},
																			"id": 177,
																			"name": "Literal",
																			"src": "4007:4:0"
																		}
																	],
																	"id": 178,
																	"name": "BinaryOperation",
																	"src": "3997:14:0"
																}
															],
															"id": 179,
															"name": "FunctionCall",
															"src": "3989:23:0"
														}
													],
													"id": 180,
													"name": "ExpressionStatement",
													"src": "3989:23:0"
												},
												{
													"id": 181,
													"name": "PlaceholderStatement",
													"src": "4023:1:0"
												}
											],
											"id": 182,
											"name": "Block",
											"src": "3978:54:0"
										}
									],
									"id": 183,
									"name": "ModifierDefinition",
									"src": "3958:74:0"
								},
								{
									"attributes": {
										"name": "onlyBorrower",
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 184,
											"name": "ParameterList",
											"src": "4061:2:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1170,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 185,
																	"name": "Identifier",
																	"src": "4075:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "==",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"member_name": "sender",
																				"referencedDeclaration": null,
																				"type": "address"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 1167,
																						"type": "msg",
																						"value": "msg"
																					},
																					"id": 186,
																					"name": "Identifier",
																					"src": "4083:3:0"
																				}
																			],
																			"id": 187,
																			"name": "MemberAccess",
																			"src": "4083:10:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 10,
																				"type": "address",
																				"value": "borrower"
																			},
																			"id": 188,
																			"name": "Identifier",
																			"src": "4097:8:0"
																		}
																	],
																	"id": 189,
																	"name": "BinaryOperation",
																	"src": "4083:22:0"
																}
															],
															"id": 190,
															"name": "FunctionCall",
															"src": "4075:31:0"
														}
													],
													"id": 191,
													"name": "ExpressionStatement",
													"src": "4075:31:0"
												},
												{
													"id": 192,
													"name": "PlaceholderStatement",
													"src": "4117:1:0"
												}
											],
											"id": 193,
											"name": "Block",
											"src": "4064:62:0"
										}
									],
									"id": 194,
									"name": "ModifierDefinition",
									"src": "4040:86:0"
								},
								{
									"attributes": {
										"name": "onlyLender",
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 195,
											"name": "ParameterList",
											"src": "4153:2:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1170,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 196,
																	"name": "Identifier",
																	"src": "4167:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "==",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"type": "bool"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 46,
																						"type": "mapping(address => bool)",
																						"value": "lenders"
																					},
																					"id": 197,
																					"name": "Identifier",
																					"src": "4175:7:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "sender",
																						"referencedDeclaration": null,
																						"type": "address"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1167,
																								"type": "msg",
																								"value": "msg"
																							},
																							"id": 198,
																							"name": "Identifier",
																							"src": "4183:3:0"
																						}
																					],
																					"id": 199,
																					"name": "MemberAccess",
																					"src": "4183:10:0"
																				}
																			],
																			"id": 200,
																			"name": "IndexAccess",
																			"src": "4175:19:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"hexvalue": "74727565",
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"subdenomination": null,
																				"token": "bool",
																				"type": "bool",
																				"value": "true"
																			},
																			"id": 201,
																			"name": "Literal",
																			"src": "4198:4:0"
																		}
																	],
																	"id": 202,
																	"name": "BinaryOperation",
																	"src": "4175:27:0"
																}
															],
															"id": 203,
															"name": "FunctionCall",
															"src": "4167:36:0"
														}
													],
													"id": 204,
													"name": "ExpressionStatement",
													"src": "4167:36:0"
												},
												{
													"id": 205,
													"name": "PlaceholderStatement",
													"src": "4214:1:0"
												}
											],
											"id": 206,
											"name": "Block",
											"src": "4156:67:0"
										}
									],
									"id": 207,
									"name": "ModifierDefinition",
									"src": "4134:89:0"
								},
								{
									"attributes": {
										"name": "canAskForInterest",
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 208,
											"name": "ParameterList",
											"src": "4257:2:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1170,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 209,
																	"name": "Identifier",
																	"src": "4271:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_enum$_State_$40",
																			"typeString": "enum Credit.State"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "==",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 42,
																				"type": "enum Credit.State",
																				"value": "state"
																			},
																			"id": 210,
																			"name": "Identifier",
																			"src": "4279:5:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"member_name": "interestReturns",
																				"referencedDeclaration": null,
																				"type": "enum Credit.State"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 40,
																						"type": "type(enum Credit.State)",
																						"value": "State"
																					},
																					"id": 211,
																					"name": "Identifier",
																					"src": "4288:5:0"
																				}
																			],
																			"id": 212,
																			"name": "MemberAccess",
																			"src": "4288:21:0"
																		}
																	],
																	"id": 213,
																	"name": "BinaryOperation",
																	"src": "4279:30:0"
																}
															],
															"id": 214,
															"name": "FunctionCall",
															"src": "4271:39:0"
														}
													],
													"id": 215,
													"name": "ExpressionStatement",
													"src": "4271:39:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1170,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 216,
																	"name": "Identifier",
																	"src": "4321:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": ">",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 50,
																						"type": "mapping(address => uint256)",
																						"value": "lendersInvestedAmount"
																					},
																					"id": 217,
																					"name": "Identifier",
																					"src": "4329:21:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "sender",
																						"referencedDeclaration": null,
																						"type": "address"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1167,
																								"type": "msg",
																								"value": "msg"
																							},
																							"id": 218,
																							"name": "Identifier",
																							"src": "4351:3:0"
																						}
																					],
																					"id": 219,
																					"name": "MemberAccess",
																					"src": "4351:10:0"
																				}
																			],
																			"id": 220,
																			"name": "IndexAccess",
																			"src": "4329:33:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"hexvalue": "30",
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"subdenomination": null,
																				"token": "number",
																				"type": "int_const 0",
																				"value": "0"
																			},
																			"id": 221,
																			"name": "Literal",
																			"src": "4365:1:0"
																		}
																	],
																	"id": 222,
																	"name": "BinaryOperation",
																	"src": "4329:37:0"
																}
															],
															"id": 223,
															"name": "FunctionCall",
															"src": "4321:46:0"
														}
													],
													"id": 224,
													"name": "ExpressionStatement",
													"src": "4321:46:0"
												},
												{
													"id": 225,
													"name": "PlaceholderStatement",
													"src": "4378:1:0"
												}
											],
											"id": 226,
											"name": "Block",
											"src": "4260:127:0"
										}
									],
									"id": 227,
									"name": "ModifierDefinition",
									"src": "4231:156:0"
								},
								{
									"attributes": {
										"name": "canInvest",
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 228,
											"name": "ParameterList",
											"src": "4413:2:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1170,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 229,
																	"name": "Identifier",
																	"src": "4427:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_enum$_State_$40",
																			"typeString": "enum Credit.State"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "==",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 42,
																				"type": "enum Credit.State",
																				"value": "state"
																			},
																			"id": 230,
																			"name": "Identifier",
																			"src": "4435:5:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"member_name": "investment",
																				"referencedDeclaration": null,
																				"type": "enum Credit.State"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 40,
																						"type": "type(enum Credit.State)",
																						"value": "State"
																					},
																					"id": 231,
																					"name": "Identifier",
																					"src": "4444:5:0"
																				}
																			],
																			"id": 232,
																			"name": "MemberAccess",
																			"src": "4444:16:0"
																		}
																	],
																	"id": 233,
																	"name": "BinaryOperation",
																	"src": "4435:25:0"
																}
															],
															"id": 234,
															"name": "FunctionCall",
															"src": "4427:34:0"
														}
													],
													"id": 235,
													"name": "ExpressionStatement",
													"src": "4427:34:0"
												},
												{
													"id": 236,
													"name": "PlaceholderStatement",
													"src": "4472:1:0"
												}
											],
											"id": 237,
											"name": "Block",
											"src": "4416:65:0"
										}
									],
									"id": 238,
									"name": "ModifierDefinition",
									"src": "4395:86:0"
								},
								{
									"attributes": {
										"name": "canRepay",
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 239,
											"name": "ParameterList",
											"src": "4506:2:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1170,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 240,
																	"name": "Identifier",
																	"src": "4520:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_enum$_State_$40",
																			"typeString": "enum Credit.State"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "==",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 42,
																				"type": "enum Credit.State",
																				"value": "state"
																			},
																			"id": 241,
																			"name": "Identifier",
																			"src": "4528:5:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"member_name": "repayment",
																				"referencedDeclaration": null,
																				"type": "enum Credit.State"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 40,
																						"type": "type(enum Credit.State)",
																						"value": "State"
																					},
																					"id": 242,
																					"name": "Identifier",
																					"src": "4537:5:0"
																				}
																			],
																			"id": 243,
																			"name": "MemberAccess",
																			"src": "4537:15:0"
																		}
																	],
																	"id": 244,
																	"name": "BinaryOperation",
																	"src": "4528:24:0"
																}
															],
															"id": 245,
															"name": "FunctionCall",
															"src": "4520:33:0"
														}
													],
													"id": 246,
													"name": "ExpressionStatement",
													"src": "4520:33:0"
												},
												{
													"id": 247,
													"name": "PlaceholderStatement",
													"src": "4564:1:0"
												}
											],
											"id": 248,
											"name": "Block",
											"src": "4509:64:0"
										}
									],
									"id": 249,
									"name": "ModifierDefinition",
									"src": "4489:84:0"
								},
								{
									"attributes": {
										"name": "canWithdraw",
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 250,
											"name": "ParameterList",
											"src": "4601:2:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1170,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 251,
																	"name": "Identifier",
																	"src": "4615:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": ">=",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"member_name": "balance",
																				"referencedDeclaration": null,
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 1184,
																						"type": "contract Credit",
																						"value": "this"
																					},
																					"id": 252,
																					"name": "Identifier",
																					"src": "4623:4:0"
																				}
																			],
																			"id": 253,
																			"name": "MemberAccess",
																			"src": "4623:12:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 12,
																				"type": "uint256",
																				"value": "requestedAmount"
																			},
																			"id": 254,
																			"name": "Identifier",
																			"src": "4639:15:0"
																		}
																	],
																	"id": 255,
																	"name": "BinaryOperation",
																	"src": "4623:31:0"
																}
															],
															"id": 256,
															"name": "FunctionCall",
															"src": "4615:40:0"
														}
													],
													"id": 257,
													"name": "ExpressionStatement",
													"src": "4615:40:0"
												},
												{
													"id": 258,
													"name": "PlaceholderStatement",
													"src": "4666:1:0"
												}
											],
											"id": 259,
											"name": "Block",
											"src": "4604:71:0"
										}
									],
									"id": 260,
									"name": "ModifierDefinition",
									"src": "4581:94:0"
								},
								{
									"attributes": {
										"name": "isNotFraud",
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 261,
											"name": "ParameterList",
											"src": "4702:2:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1170,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 262,
																	"name": "Identifier",
																	"src": "4716:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_enum$_State_$40",
																			"typeString": "enum Credit.State"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "!=",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 42,
																				"type": "enum Credit.State",
																				"value": "state"
																			},
																			"id": 263,
																			"name": "Identifier",
																			"src": "4724:5:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"member_name": "fraud",
																				"referencedDeclaration": null,
																				"type": "enum Credit.State"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 40,
																						"type": "type(enum Credit.State)",
																						"value": "State"
																					},
																					"id": 264,
																					"name": "Identifier",
																					"src": "4733:5:0"
																				}
																			],
																			"id": 265,
																			"name": "MemberAccess",
																			"src": "4733:11:0"
																		}
																	],
																	"id": 266,
																	"name": "BinaryOperation",
																	"src": "4724:20:0"
																}
															],
															"id": 267,
															"name": "FunctionCall",
															"src": "4716:29:0"
														}
													],
													"id": 268,
													"name": "ExpressionStatement",
													"src": "4716:29:0"
												},
												{
													"id": 269,
													"name": "PlaceholderStatement",
													"src": "4756:1:0"
												}
											],
											"id": 270,
											"name": "Block",
											"src": "4705:60:0"
										}
									],
									"id": 271,
									"name": "ModifierDefinition",
									"src": "4683:82:0"
								},
								{
									"attributes": {
										"name": "isRevokable",
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 272,
											"name": "ParameterList",
											"src": "4793:2:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1170,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 273,
																	"name": "Identifier",
																	"src": "4807:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": ">=",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"member_name": "timestamp",
																				"referencedDeclaration": null,
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 1159,
																						"type": "block",
																						"value": "block"
																					},
																					"id": 274,
																					"name": "Identifier",
																					"src": "4815:5:0"
																				}
																			],
																			"id": 275,
																			"name": "MemberAccess",
																			"src": "4815:15:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 66,
																				"type": "uint256",
																				"value": "revokeTimeNeeded"
																			},
																			"id": 276,
																			"name": "Identifier",
																			"src": "4834:16:0"
																		}
																	],
																	"id": 277,
																	"name": "BinaryOperation",
																	"src": "4815:35:0"
																}
															],
															"id": 278,
															"name": "FunctionCall",
															"src": "4807:44:0"
														}
													],
													"id": 279,
													"name": "ExpressionStatement",
													"src": "4807:44:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1170,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 280,
																	"name": "Identifier",
																	"src": "4862:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_enum$_State_$40",
																			"typeString": "enum Credit.State"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "==",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 42,
																				"type": "enum Credit.State",
																				"value": "state"
																			},
																			"id": 281,
																			"name": "Identifier",
																			"src": "4870:5:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"member_name": "investment",
																				"referencedDeclaration": null,
																				"type": "enum Credit.State"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 40,
																						"type": "type(enum Credit.State)",
																						"value": "State"
																					},
																					"id": 282,
																					"name": "Identifier",
																					"src": "4879:5:0"
																				}
																			],
																			"id": 283,
																			"name": "MemberAccess",
																			"src": "4879:16:0"
																		}
																	],
																	"id": 284,
																	"name": "BinaryOperation",
																	"src": "4870:25:0"
																}
															],
															"id": 285,
															"name": "FunctionCall",
															"src": "4862:34:0"
														}
													],
													"id": 286,
													"name": "ExpressionStatement",
													"src": "4862:34:0"
												},
												{
													"id": 287,
													"name": "PlaceholderStatement",
													"src": "4907:1:0"
												}
											],
											"id": 288,
											"name": "Block",
											"src": "4796:120:0"
										}
									],
									"id": 289,
									"name": "ModifierDefinition",
									"src": "4773:143:0"
								},
								{
									"attributes": {
										"name": "isRevoked",
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 290,
											"name": "ParameterList",
											"src": "4942:2:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1170,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 291,
																	"name": "Identifier",
																	"src": "4956:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_enum$_State_$40",
																			"typeString": "enum Credit.State"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "==",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 42,
																				"type": "enum Credit.State",
																				"value": "state"
																			},
																			"id": 292,
																			"name": "Identifier",
																			"src": "4964:5:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"member_name": "revoked",
																				"referencedDeclaration": null,
																				"type": "enum Credit.State"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 40,
																						"type": "type(enum Credit.State)",
																						"value": "State"
																					},
																					"id": 293,
																					"name": "Identifier",
																					"src": "4973:5:0"
																				}
																			],
																			"id": 294,
																			"name": "MemberAccess",
																			"src": "4973:13:0"
																		}
																	],
																	"id": 295,
																	"name": "BinaryOperation",
																	"src": "4964:22:0"
																}
															],
															"id": 296,
															"name": "FunctionCall",
															"src": "4956:31:0"
														}
													],
													"id": 297,
													"name": "ExpressionStatement",
													"src": "4956:31:0"
												},
												{
													"id": 298,
													"name": "PlaceholderStatement",
													"src": "4998:1:0"
												}
											],
											"id": 299,
											"name": "Block",
											"src": "4945:62:0"
										}
									],
									"id": 300,
									"name": "ModifierDefinition",
									"src": "4924:83:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": true,
										"modifiers": [
											null
										],
										"name": "Credit",
										"payable": false,
										"scope": 1003,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_requestedAmount",
														"scope": 362,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 301,
															"name": "ElementaryTypeName",
															"src": "5253:4:0"
														}
													],
													"id": 302,
													"name": "VariableDeclaration",
													"src": "5253:21:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "_requestedRepayments",
														"scope": 362,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 303,
															"name": "ElementaryTypeName",
															"src": "5276:4:0"
														}
													],
													"id": 304,
													"name": "VariableDeclaration",
													"src": "5276:25:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "_interest",
														"scope": 362,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 305,
															"name": "ElementaryTypeName",
															"src": "5303:4:0"
														}
													],
													"id": 306,
													"name": "VariableDeclaration",
													"src": "5303:14:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "_description",
														"scope": 362,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "bytes32",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "bytes32",
																"type": "bytes32"
															},
															"id": 307,
															"name": "ElementaryTypeName",
															"src": "5319:7:0"
														}
													],
													"id": 308,
													"name": "VariableDeclaration",
													"src": "5319:20:0"
												}
											],
											"id": 309,
											"name": "ParameterList",
											"src": "5252:88:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 310,
											"name": "ParameterList",
											"src": "5348:0:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "address"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 10,
																		"type": "address",
																		"value": "borrower"
																	},
																	"id": 311,
																	"name": "Identifier",
																	"src": "5590:8:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "origin",
																		"referencedDeclaration": null,
																		"type": "address"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1177,
																				"type": "tx",
																				"value": "tx"
																			},
																			"id": 312,
																			"name": "Identifier",
																			"src": "5601:2:0"
																		}
																	],
																	"id": 313,
																	"name": "MemberAccess",
																	"src": "5601:9:0"
																}
															],
															"id": 314,
															"name": "Assignment",
															"src": "5590:20:0"
														}
													],
													"id": 315,
													"name": "ExpressionStatement",
													"src": "5590:20:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 18,
																		"type": "uint256",
																		"value": "interest"
																	},
																	"id": 316,
																	"name": "Identifier",
																	"src": "5668:8:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 306,
																		"type": "uint256",
																		"value": "_interest"
																	},
																	"id": 317,
																	"name": "Identifier",
																	"src": "5679:9:0"
																}
															],
															"id": 318,
															"name": "Assignment",
															"src": "5668:20:0"
														}
													],
													"id": 319,
													"name": "ExpressionStatement",
													"src": "5668:20:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 12,
																		"type": "uint256",
																		"value": "requestedAmount"
																	},
																	"id": 320,
																	"name": "Identifier",
																	"src": "5739:15:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 302,
																		"type": "uint256",
																		"value": "_requestedAmount"
																	},
																	"id": 321,
																	"name": "Identifier",
																	"src": "5757:16:0"
																}
															],
															"id": 322,
															"name": "Assignment",
															"src": "5739:34:0"
														}
													],
													"id": 323,
													"name": "ExpressionStatement",
													"src": "5739:34:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 20,
																		"type": "uint256",
																		"value": "requestedRepayments"
																	},
																	"id": 324,
																	"name": "Identifier",
																	"src": "5828:19:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 304,
																		"type": "uint256",
																		"value": "_requestedRepayments"
																	},
																	"id": 325,
																	"name": "Identifier",
																	"src": "5850:20:0"
																}
															],
															"id": 326,
															"name": "Assignment",
															"src": "5828:42:0"
														}
													],
													"id": 327,
													"name": "ExpressionStatement",
													"src": "5828:42:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 22,
																		"type": "uint256",
																		"value": "remainingRepayments"
																	},
																	"id": 328,
																	"name": "Identifier",
																	"src": "6006:19:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 304,
																		"type": "uint256",
																		"value": "_requestedRepayments"
																	},
																	"id": 329,
																	"name": "Identifier",
																	"src": "6028:20:0"
																}
															],
															"id": 330,
															"name": "Assignment",
															"src": "6006:42:0"
														}
													],
													"id": 331,
													"name": "ExpressionStatement",
													"src": "6006:42:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 14,
																		"type": "uint256",
																		"value": "returnAmount"
																	},
																	"id": 332,
																	"name": "Identifier",
																	"src": "6231:12:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"isStructConstructorCall": false,
																		"lValueRequested": false,
																		"names": [
																			null
																		],
																		"type": "uint256",
																		"type_conversion": false
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"member_name": "add",
																				"referencedDeclaration": 1154,
																				"type": "function (uint256,uint256) pure returns (uint256)"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 12,
																						"type": "uint256",
																						"value": "requestedAmount"
																					},
																					"id": 333,
																					"name": "Identifier",
																					"src": "6246:15:0"
																				}
																			],
																			"id": 334,
																			"name": "MemberAccess",
																			"src": "6246:19:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 18,
																				"type": "uint256",
																				"value": "interest"
																			},
																			"id": 335,
																			"name": "Identifier",
																			"src": "6266:8:0"
																		}
																	],
																	"id": 336,
																	"name": "FunctionCall",
																	"src": "6246:29:0"
																}
															],
															"id": 337,
															"name": "Assignment",
															"src": "6231:44:0"
														}
													],
													"id": 338,
													"name": "ExpressionStatement",
													"src": "6231:44:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 24,
																		"type": "uint256",
																		"value": "repaymentInstallment"
																	},
																	"id": 339,
																	"name": "Identifier",
																	"src": "6448:20:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"isStructConstructorCall": false,
																		"lValueRequested": false,
																		"names": [
																			null
																		],
																		"type": "uint256",
																		"type_conversion": false
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"member_name": "div",
																				"referencedDeclaration": 1110,
																				"type": "function (uint256,uint256) pure returns (uint256)"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 14,
																						"type": "uint256",
																						"value": "returnAmount"
																					},
																					"id": 340,
																					"name": "Identifier",
																					"src": "6471:12:0"
																				}
																			],
																			"id": 341,
																			"name": "MemberAccess",
																			"src": "6471:16:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 20,
																				"type": "uint256",
																				"value": "requestedRepayments"
																			},
																			"id": 342,
																			"name": "Identifier",
																			"src": "6488:19:0"
																		}
																	],
																	"id": 343,
																	"name": "FunctionCall",
																	"src": "6471:37:0"
																}
															],
															"id": 344,
															"name": "Assignment",
															"src": "6448:60:0"
														}
													],
													"id": 345,
													"name": "ExpressionStatement",
													"src": "6448:60:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "bytes32"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 30,
																		"type": "bytes32",
																		"value": "description"
																	},
																	"id": 346,
																	"name": "Identifier",
																	"src": "6561:11:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 308,
																		"type": "bytes32",
																		"value": "_description"
																	},
																	"id": 347,
																	"name": "Identifier",
																	"src": "6575:12:0"
																}
															],
															"id": 348,
															"name": "Assignment",
															"src": "6561:26:0"
														}
													],
													"id": 349,
													"name": "ExpressionStatement",
													"src": "6561:26:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 26,
																		"type": "uint256",
																		"value": "requestedDate"
																	},
																	"id": 350,
																	"name": "Identifier",
																	"src": "6641:13:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "timestamp",
																		"referencedDeclaration": null,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1159,
																				"type": "block",
																				"value": "block"
																			},
																			"id": 351,
																			"name": "Identifier",
																			"src": "6657:5:0"
																		}
																	],
																	"id": 352,
																	"name": "MemberAccess",
																	"src": "6657:15:0"
																}
															],
															"id": 353,
															"name": "Assignment",
															"src": "6641:31:0"
														}
													],
													"id": 354,
													"name": "ExpressionStatement",
													"src": "6641:31:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 79,
																		"type": "function (address,uint256)",
																		"value": "LogCreditInitialized"
																	},
																	"id": 355,
																	"name": "Identifier",
																	"src": "6724:20:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 10,
																		"type": "address",
																		"value": "borrower"
																	},
																	"id": 356,
																	"name": "Identifier",
																	"src": "6745:8:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "timestamp",
																		"referencedDeclaration": null,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1159,
																				"type": "block",
																				"value": "block"
																			},
																			"id": 357,
																			"name": "Identifier",
																			"src": "6755:5:0"
																		}
																	],
																	"id": 358,
																	"name": "MemberAccess",
																	"src": "6755:15:0"
																}
															],
															"id": 359,
															"name": "FunctionCall",
															"src": "6724:47:0"
														}
													],
													"id": 360,
													"name": "ExpressionStatement",
													"src": "6724:47:0"
												}
											],
											"id": 361,
											"name": "Block",
											"src": "5348:1431:0"
										}
									],
									"id": 362,
									"name": "FunctionDefinition",
									"src": "5237:1542:0"
								},
								{
									"attributes": {
										"constant": true,
										"implemented": true,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "getBalance",
										"payable": false,
										"scope": 1003,
										"stateMutability": "view",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 363,
											"name": "ParameterList",
											"src": "6881:2:0"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 371,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 364,
															"name": "ElementaryTypeName",
															"src": "6905:7:0"
														}
													],
													"id": 365,
													"name": "VariableDeclaration",
													"src": "6905:7:0"
												}
											],
											"id": 366,
											"name": "ParameterList",
											"src": "6904:9:0"
										},
										{
											"children": [
												{
													"attributes": {
														"functionReturnParameters": 366
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"member_name": "balance",
																"referencedDeclaration": null,
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1184,
																		"type": "contract Credit",
																		"value": "this"
																	},
																	"id": 367,
																	"name": "Identifier",
																	"src": "6932:4:0"
																}
															],
															"id": 368,
															"name": "MemberAccess",
															"src": "6932:12:0"
														}
													],
													"id": 369,
													"name": "Return",
													"src": "6925:19:0"
												}
											],
											"id": 370,
											"name": "Block",
											"src": "6914:38:0"
										}
									],
									"id": 371,
									"name": "FunctionDefinition",
									"src": "6862:90:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "invest",
										"payable": true,
										"scope": 1003,
										"stateMutability": "payable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 372,
											"name": "ParameterList",
											"src": "7139:2:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 375,
											"name": "ParameterList",
											"src": "7167:0:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 238,
														"type": "modifier ()",
														"value": "canInvest"
													},
													"id": 373,
													"name": "Identifier",
													"src": "7149:9:0"
												}
											],
											"id": 374,
											"name": "ModifierInvocation",
											"src": "7149:9:0"
										},
										{
											"children": [
												{
													"attributes": {
														"assignments": [
															377
														]
													},
													"children": [
														{
															"attributes": {
																"constant": false,
																"name": "extraMoney",
																"scope": 483,
																"stateVariable": false,
																"storageLocation": "default",
																"type": "uint256",
																"value": null,
																"visibility": "internal"
															},
															"children": [
																{
																	"attributes": {
																		"name": "uint",
																		"type": "uint256"
																	},
																	"id": 376,
																	"name": "ElementaryTypeName",
																	"src": "7265:4:0"
																}
															],
															"id": 377,
															"name": "VariableDeclaration",
															"src": "7265:15:0"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"hexvalue": "30",
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"subdenomination": null,
																"token": "number",
																"type": "int_const 0",
																"value": "0"
															},
															"id": 378,
															"name": "Literal",
															"src": "7283:1:0"
														}
													],
													"id": 379,
													"name": "VariableDeclarationStatement",
													"src": "7265:19:0"
												},
												{
													"attributes": {
														"falseBody": null
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": ">=",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "balance",
																		"referencedDeclaration": null,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1184,
																				"type": "contract Credit",
																				"value": "this"
																			},
																			"id": 380,
																			"name": "Identifier",
																			"src": "7372:4:0"
																		}
																	],
																	"id": 381,
																	"name": "MemberAccess",
																	"src": "7372:12:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 12,
																		"type": "uint256",
																		"value": "requestedAmount"
																	},
																	"id": 382,
																	"name": "Identifier",
																	"src": "7388:15:0"
																}
															],
															"id": 383,
															"name": "BinaryOperation",
															"src": "7372:31:0"
														},
														{
															"children": [
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"operator": "=",
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 377,
																						"type": "uint256",
																						"value": "extraMoney"
																					},
																					"id": 384,
																					"name": "Identifier",
																					"src": "7489:10:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"isStructConstructorCall": false,
																						"lValueRequested": false,
																						"names": [
																							null
																						],
																						"type": "uint256",
																						"type_conversion": false
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"member_name": "sub",
																								"referencedDeclaration": 1130,
																								"type": "function (uint256,uint256) pure returns (uint256)"
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"member_name": "balance",
																										"referencedDeclaration": null,
																										"type": "uint256"
																									},
																									"children": [
																										{
																											"attributes": {
																												"argumentTypes": null,
																												"overloadedDeclarations": [
																													null
																												],
																												"referencedDeclaration": 1184,
																												"type": "contract Credit",
																												"value": "this"
																											},
																											"id": 385,
																											"name": "Identifier",
																											"src": "7502:4:0"
																										}
																									],
																									"id": 386,
																									"name": "MemberAccess",
																									"src": "7502:12:0"
																								}
																							],
																							"id": 387,
																							"name": "MemberAccess",
																							"src": "7502:16:0"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 12,
																								"type": "uint256",
																								"value": "requestedAmount"
																							},
																							"id": 388,
																							"name": "Identifier",
																							"src": "7519:15:0"
																						}
																					],
																					"id": 389,
																					"name": "FunctionCall",
																					"src": "7502:33:0"
																				}
																			],
																			"id": 390,
																			"name": "Assignment",
																			"src": "7489:46:0"
																		}
																	],
																	"id": 391,
																	"name": "ExpressionStatement",
																	"src": "7489:46:0"
																},
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "tuple()",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						],
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 1158,
																						"type": "function (bool) pure",
																						"value": "assert"
																					},
																					"id": 392,
																					"name": "Identifier",
																					"src": "7592:6:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"operator": "==",
																						"type": "bool"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 12,
																								"type": "uint256",
																								"value": "requestedAmount"
																							},
																							"id": 393,
																							"name": "Identifier",
																							"src": "7599:15:0"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"isStructConstructorCall": false,
																								"lValueRequested": false,
																								"names": [
																									null
																								],
																								"type": "uint256",
																								"type_conversion": false
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										],
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"member_name": "sub",
																										"referencedDeclaration": 1130,
																										"type": "function (uint256,uint256) pure returns (uint256)"
																									},
																									"children": [
																										{
																											"attributes": {
																												"argumentTypes": null,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"lValueRequested": false,
																												"member_name": "balance",
																												"referencedDeclaration": null,
																												"type": "uint256"
																											},
																											"children": [
																												{
																													"attributes": {
																														"argumentTypes": null,
																														"overloadedDeclarations": [
																															null
																														],
																														"referencedDeclaration": 1184,
																														"type": "contract Credit",
																														"value": "this"
																													},
																													"id": 394,
																													"name": "Identifier",
																													"src": "7618:4:0"
																												}
																											],
																											"id": 395,
																											"name": "MemberAccess",
																											"src": "7618:12:0"
																										}
																									],
																									"id": 396,
																									"name": "MemberAccess",
																									"src": "7618:16:0"
																								},
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 377,
																										"type": "uint256",
																										"value": "extraMoney"
																									},
																									"id": 397,
																									"name": "Identifier",
																									"src": "7635:10:0"
																								}
																							],
																							"id": 398,
																							"name": "FunctionCall",
																							"src": "7618:28:0"
																						}
																					],
																					"id": 399,
																					"name": "BinaryOperation",
																					"src": "7599:47:0"
																				}
																			],
																			"id": 400,
																			"name": "FunctionCall",
																			"src": "7592:55:0"
																		}
																	],
																	"id": 401,
																	"name": "ExpressionStatement",
																	"src": "7592:55:0"
																},
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "tuple()",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						],
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 1158,
																						"type": "function (bool) pure",
																						"value": "assert"
																					},
																					"id": 402,
																					"name": "Identifier",
																					"src": "7721:6:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"operator": "<=",
																						"type": "bool"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 377,
																								"type": "uint256",
																								"value": "extraMoney"
																							},
																							"id": 403,
																							"name": "Identifier",
																							"src": "7728:10:0"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"member_name": "value",
																								"referencedDeclaration": null,
																								"type": "uint256"
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 1167,
																										"type": "msg",
																										"value": "msg"
																									},
																									"id": 404,
																									"name": "Identifier",
																									"src": "7742:3:0"
																								}
																							],
																							"id": 405,
																							"name": "MemberAccess",
																							"src": "7742:9:0"
																						}
																					],
																					"id": 406,
																					"name": "BinaryOperation",
																					"src": "7728:23:0"
																				}
																			],
																			"id": 407,
																			"name": "FunctionCall",
																			"src": "7721:31:0"
																		}
																	],
																	"id": 408,
																	"name": "ExpressionStatement",
																	"src": "7721:31:0"
																},
																{
																	"attributes": {
																		"falseBody": null
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"operator": ">",
																				"type": "bool"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 377,
																						"type": "uint256",
																						"value": "extraMoney"
																					},
																					"id": 409,
																					"name": "Identifier",
																					"src": "7833:10:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"hexvalue": "30",
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"subdenomination": null,
																						"token": "number",
																						"type": "int_const 0",
																						"value": "0"
																					},
																					"id": 410,
																					"name": "Literal",
																					"src": "7846:1:0"
																				}
																			],
																			"id": 411,
																			"name": "BinaryOperation",
																			"src": "7833:14:0"
																		},
																		{
																			"children": [
																				{
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"isStructConstructorCall": false,
																								"lValueRequested": false,
																								"names": [
																									null
																								],
																								"type": "tuple()",
																								"type_conversion": false
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										],
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"member_name": "transfer",
																										"referencedDeclaration": null,
																										"type": "function (uint256)"
																									},
																									"children": [
																										{
																											"attributes": {
																												"argumentTypes": null,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"lValueRequested": false,
																												"member_name": "sender",
																												"referencedDeclaration": null,
																												"type": "address"
																											},
																											"children": [
																												{
																													"attributes": {
																														"argumentTypes": null,
																														"overloadedDeclarations": [
																															null
																														],
																														"referencedDeclaration": 1167,
																														"type": "msg",
																														"value": "msg"
																													},
																													"id": 412,
																													"name": "Identifier",
																													"src": "7926:3:0"
																												}
																											],
																											"id": 415,
																											"name": "MemberAccess",
																											"src": "7926:10:0"
																										}
																									],
																									"id": 416,
																									"name": "MemberAccess",
																									"src": "7926:19:0"
																								},
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 377,
																										"type": "uint256",
																										"value": "extraMoney"
																									},
																									"id": 417,
																									"name": "Identifier",
																									"src": "7946:10:0"
																								}
																							],
																							"id": 418,
																							"name": "FunctionCall",
																							"src": "7926:31:0"
																						}
																					],
																					"id": 419,
																					"name": "ExpressionStatement",
																					"src": "7926:31:0"
																				},
																				{
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"isStructConstructorCall": false,
																								"lValueRequested": false,
																								"names": [
																									null
																								],
																								"type": "tuple()",
																								"type_conversion": false
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_address",
																												"typeString": "address"
																											},
																											{
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											},
																											{
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										],
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 153,
																										"type": "function (address,uint256,uint256)",
																										"value": "LogLenderChangeReturned"
																									},
																									"id": 420,
																									"name": "Identifier",
																									"src": "8019:23:0"
																								},
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"member_name": "sender",
																										"referencedDeclaration": null,
																										"type": "address"
																									},
																									"children": [
																										{
																											"attributes": {
																												"argumentTypes": null,
																												"overloadedDeclarations": [
																													null
																												],
																												"referencedDeclaration": 1167,
																												"type": "msg",
																												"value": "msg"
																											},
																											"id": 421,
																											"name": "Identifier",
																											"src": "8043:3:0"
																										}
																									],
																									"id": 422,
																									"name": "MemberAccess",
																									"src": "8043:10:0"
																								},
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 377,
																										"type": "uint256",
																										"value": "extraMoney"
																									},
																									"id": 423,
																									"name": "Identifier",
																									"src": "8055:10:0"
																								},
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"member_name": "timestamp",
																										"referencedDeclaration": null,
																										"type": "uint256"
																									},
																									"children": [
																										{
																											"attributes": {
																												"argumentTypes": null,
																												"overloadedDeclarations": [
																													null
																												],
																												"referencedDeclaration": 1159,
																												"type": "block",
																												"value": "block"
																											},
																											"id": 424,
																											"name": "Identifier",
																											"src": "8067:5:0"
																										}
																									],
																									"id": 425,
																									"name": "MemberAccess",
																									"src": "8067:15:0"
																								}
																							],
																							"id": 426,
																							"name": "FunctionCall",
																							"src": "8019:64:0"
																						}
																					],
																					"id": 427,
																					"name": "ExpressionStatement",
																					"src": "8019:64:0"
																				}
																			],
																			"id": 428,
																			"name": "Block",
																			"src": "7849:250:0"
																		}
																	],
																	"id": 429,
																	"name": "IfStatement",
																	"src": "7829:270:0"
																},
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"operator": "=",
																				"type": "enum Credit.State"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 42,
																						"type": "enum Credit.State",
																						"value": "state"
																					},
																					"id": 430,
																					"name": "Identifier",
																					"src": "8168:5:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"member_name": "repayment",
																						"referencedDeclaration": null,
																						"type": "enum Credit.State"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 40,
																								"type": "type(enum Credit.State)",
																								"value": "State"
																							},
																							"id": 431,
																							"name": "Identifier",
																							"src": "8176:5:0"
																						}
																					],
																					"id": 432,
																					"name": "MemberAccess",
																					"src": "8176:15:0"
																				}
																			],
																			"id": 433,
																			"name": "Assignment",
																			"src": "8168:23:0"
																		}
																	],
																	"id": 434,
																	"name": "ExpressionStatement",
																	"src": "8168:23:0"
																},
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "tuple()",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_enum$_State_$40",
																								"typeString": "enum Credit.State"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 85,
																						"type": "function (enum Credit.State,uint256)",
																						"value": "LogCreditStateChanged"
																					},
																					"id": 435,
																					"name": "Identifier",
																					"src": "8242:21:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 42,
																						"type": "enum Credit.State",
																						"value": "state"
																					},
																					"id": 436,
																					"name": "Identifier",
																					"src": "8264:5:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "timestamp",
																						"referencedDeclaration": null,
																						"type": "uint256"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1159,
																								"type": "block",
																								"value": "block"
																							},
																							"id": 437,
																							"name": "Identifier",
																							"src": "8271:5:0"
																						}
																					],
																					"id": 438,
																					"name": "MemberAccess",
																					"src": "8271:15:0"
																				}
																			],
																			"id": 439,
																			"name": "FunctionCall",
																			"src": "8242:45:0"
																		}
																	],
																	"id": 440,
																	"name": "ExpressionStatement",
																	"src": "8242:45:0"
																}
															],
															"id": 441,
															"name": "Block",
															"src": "7405:894:0"
														}
													],
													"id": 442,
													"name": "IfStatement",
													"src": "7368:931:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 46,
																				"type": "mapping(address => bool)",
																				"value": "lenders"
																			},
																			"id": 443,
																			"name": "Identifier",
																			"src": "8438:7:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"member_name": "sender",
																				"referencedDeclaration": null,
																				"type": "address"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 1167,
																						"type": "msg",
																						"value": "msg"
																					},
																					"id": 444,
																					"name": "Identifier",
																					"src": "8446:3:0"
																				}
																			],
																			"id": 445,
																			"name": "MemberAccess",
																			"src": "8446:10:0"
																		}
																	],
																	"id": 446,
																	"name": "IndexAccess",
																	"src": "8438:19:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "74727565",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "bool",
																		"type": "bool",
																		"value": "true"
																	},
																	"id": 447,
																	"name": "Literal",
																	"src": "8460:4:0"
																}
															],
															"id": 448,
															"name": "Assignment",
															"src": "8438:26:0"
														}
													],
													"id": 449,
													"name": "ExpressionStatement",
													"src": "8438:26:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "++",
																"prefix": false,
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 53,
																		"type": "uint256",
																		"value": "lendersCount"
																	},
																	"id": 450,
																	"name": "Identifier",
																	"src": "8518:12:0"
																}
															],
															"id": 451,
															"name": "UnaryOperation",
															"src": "8518:14:0"
														}
													],
													"id": 452,
													"name": "ExpressionStatement",
													"src": "8518:14:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 50,
																				"type": "mapping(address => uint256)",
																				"value": "lendersInvestedAmount"
																			},
																			"id": 453,
																			"name": "Identifier",
																			"src": "8604:21:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"member_name": "sender",
																				"referencedDeclaration": null,
																				"type": "address"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 1167,
																						"type": "msg",
																						"value": "msg"
																					},
																					"id": 454,
																					"name": "Identifier",
																					"src": "8626:3:0"
																				}
																			],
																			"id": 455,
																			"name": "MemberAccess",
																			"src": "8626:10:0"
																		}
																	],
																	"id": 456,
																	"name": "IndexAccess",
																	"src": "8604:33:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"isStructConstructorCall": false,
																		"lValueRequested": false,
																		"names": [
																			null
																		],
																		"type": "uint256",
																		"type_conversion": false
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"member_name": "add",
																				"referencedDeclaration": 1154,
																				"type": "function (uint256,uint256) pure returns (uint256)"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"type": "uint256"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 50,
																								"type": "mapping(address => uint256)",
																								"value": "lendersInvestedAmount"
																							},
																							"id": 457,
																							"name": "Identifier",
																							"src": "8640:21:0"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"member_name": "sender",
																								"referencedDeclaration": null,
																								"type": "address"
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 1167,
																										"type": "msg",
																										"value": "msg"
																									},
																									"id": 458,
																									"name": "Identifier",
																									"src": "8662:3:0"
																								}
																							],
																							"id": 459,
																							"name": "MemberAccess",
																							"src": "8662:10:0"
																						}
																					],
																					"id": 460,
																					"name": "IndexAccess",
																					"src": "8640:33:0"
																				}
																			],
																			"id": 461,
																			"name": "MemberAccess",
																			"src": "8640:37:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "uint256",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "sub",
																						"referencedDeclaration": 1130,
																						"type": "function (uint256,uint256) pure returns (uint256)"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"member_name": "value",
																								"referencedDeclaration": null,
																								"type": "uint256"
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 1167,
																										"type": "msg",
																										"value": "msg"
																									},
																									"id": 462,
																									"name": "Identifier",
																									"src": "8678:3:0"
																								}
																							],
																							"id": 463,
																							"name": "MemberAccess",
																							"src": "8678:9:0"
																						}
																					],
																					"id": 464,
																					"name": "MemberAccess",
																					"src": "8678:13:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 377,
																						"type": "uint256",
																						"value": "extraMoney"
																					},
																					"id": 465,
																					"name": "Identifier",
																					"src": "8692:10:0"
																				}
																			],
																			"id": 466,
																			"name": "FunctionCall",
																			"src": "8678:25:0"
																		}
																	],
																	"id": 467,
																	"name": "FunctionCall",
																	"src": "8640:64:0"
																}
															],
															"id": 468,
															"name": "Assignment",
															"src": "8604:100:0"
														}
													],
													"id": 469,
													"name": "ExpressionStatement",
													"src": "8604:100:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 137,
																		"type": "function (address,uint256,uint256)",
																		"value": "LogLenderInvestment"
																	},
																	"id": 470,
																	"name": "Identifier",
																	"src": "8757:19:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "sender",
																		"referencedDeclaration": null,
																		"type": "address"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1167,
																				"type": "msg",
																				"value": "msg"
																			},
																			"id": 471,
																			"name": "Identifier",
																			"src": "8777:3:0"
																		}
																	],
																	"id": 472,
																	"name": "MemberAccess",
																	"src": "8777:10:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"isStructConstructorCall": false,
																		"lValueRequested": false,
																		"names": [
																			null
																		],
																		"type": "uint256",
																		"type_conversion": false
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"member_name": "sub",
																				"referencedDeclaration": 1130,
																				"type": "function (uint256,uint256) pure returns (uint256)"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "value",
																						"referencedDeclaration": null,
																						"type": "uint256"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1167,
																								"type": "msg",
																								"value": "msg"
																							},
																							"id": 473,
																							"name": "Identifier",
																							"src": "8789:3:0"
																						}
																					],
																					"id": 474,
																					"name": "MemberAccess",
																					"src": "8789:9:0"
																				}
																			],
																			"id": 475,
																			"name": "MemberAccess",
																			"src": "8789:13:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 377,
																				"type": "uint256",
																				"value": "extraMoney"
																			},
																			"id": 476,
																			"name": "Identifier",
																			"src": "8803:10:0"
																		}
																	],
																	"id": 477,
																	"name": "FunctionCall",
																	"src": "8789:25:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "timestamp",
																		"referencedDeclaration": null,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1159,
																				"type": "block",
																				"value": "block"
																			},
																			"id": 478,
																			"name": "Identifier",
																			"src": "8816:5:0"
																		}
																	],
																	"id": 479,
																	"name": "MemberAccess",
																	"src": "8816:15:0"
																}
															],
															"id": 480,
															"name": "FunctionCall",
															"src": "8757:75:0"
														}
													],
													"id": 481,
													"name": "ExpressionStatement",
													"src": "8757:75:0"
												}
											],
											"id": 482,
											"name": "Block",
											"src": "7167:1673:0"
										}
									],
									"id": 483,
									"name": "FunctionDefinition",
									"src": "7124:1716:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "repay",
										"payable": true,
										"scope": 1003,
										"stateMutability": "payable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 484,
											"name": "ParameterList",
											"src": "8963:2:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 489,
											"name": "ParameterList",
											"src": "9003:0:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 194,
														"type": "modifier ()",
														"value": "onlyBorrower"
													},
													"id": 485,
													"name": "Identifier",
													"src": "8973:12:0"
												}
											],
											"id": 486,
											"name": "ModifierInvocation",
											"src": "8973:12:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 249,
														"type": "modifier ()",
														"value": "canRepay"
													},
													"id": 487,
													"name": "Identifier",
													"src": "8986:8:0"
												}
											],
											"id": 488,
											"name": "ModifierInvocation",
											"src": "8986:8:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1170,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 490,
																	"name": "Identifier",
																	"src": "9089:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": ">",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 22,
																				"type": "uint256",
																				"value": "remainingRepayments"
																			},
																			"id": 491,
																			"name": "Identifier",
																			"src": "9097:19:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"hexvalue": "30",
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"subdenomination": null,
																				"token": "number",
																				"type": "int_const 0",
																				"value": "0"
																			},
																			"id": 492,
																			"name": "Literal",
																			"src": "9119:1:0"
																		}
																	],
																	"id": 493,
																	"name": "BinaryOperation",
																	"src": "9097:23:0"
																}
															],
															"id": 494,
															"name": "FunctionCall",
															"src": "9089:32:0"
														}
													],
													"id": 495,
													"name": "ExpressionStatement",
													"src": "9089:32:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1170,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 496,
																	"name": "Identifier",
																	"src": "9211:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": ">=",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"member_name": "value",
																				"referencedDeclaration": null,
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 1167,
																						"type": "msg",
																						"value": "msg"
																					},
																					"id": 497,
																					"name": "Identifier",
																					"src": "9219:3:0"
																				}
																			],
																			"id": 498,
																			"name": "MemberAccess",
																			"src": "9219:9:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 24,
																				"type": "uint256",
																				"value": "repaymentInstallment"
																			},
																			"id": 499,
																			"name": "Identifier",
																			"src": "9232:20:0"
																		}
																	],
																	"id": 500,
																	"name": "BinaryOperation",
																	"src": "9219:33:0"
																}
															],
															"id": 501,
															"name": "FunctionCall",
															"src": "9211:42:0"
														}
													],
													"id": 502,
													"name": "ExpressionStatement",
													"src": "9211:42:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1158,
																		"type": "function (bool) pure",
																		"value": "assert"
																	},
																	"id": 503,
																	"name": "Identifier",
																	"src": "9451:6:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "<",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 16,
																				"type": "uint256",
																				"value": "repaidAmount"
																			},
																			"id": 504,
																			"name": "Identifier",
																			"src": "9458:12:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 14,
																				"type": "uint256",
																				"value": "returnAmount"
																			},
																			"id": 505,
																			"name": "Identifier",
																			"src": "9473:12:0"
																		}
																	],
																	"id": 506,
																	"name": "BinaryOperation",
																	"src": "9458:27:0"
																}
															],
															"id": 507,
															"name": "FunctionCall",
															"src": "9451:35:0"
														}
													],
													"id": 508,
													"name": "ExpressionStatement",
													"src": "9451:35:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "--",
																"prefix": false,
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 22,
																		"type": "uint256",
																		"value": "remainingRepayments"
																	},
																	"id": 509,
																	"name": "Identifier",
																	"src": "9547:19:0"
																}
															],
															"id": 510,
															"name": "UnaryOperation",
															"src": "9547:21:0"
														}
													],
													"id": 511,
													"name": "ExpressionStatement",
													"src": "9547:21:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 28,
																		"type": "uint256",
																		"value": "lastRepaymentDate"
																	},
																	"id": 512,
																	"name": "Identifier",
																	"src": "9621:17:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "timestamp",
																		"referencedDeclaration": null,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1159,
																				"type": "block",
																				"value": "block"
																			},
																			"id": 513,
																			"name": "Identifier",
																			"src": "9641:5:0"
																		}
																	],
																	"id": 514,
																	"name": "MemberAccess",
																	"src": "9641:15:0"
																}
															],
															"id": 515,
															"name": "Assignment",
															"src": "9621:35:0"
														}
													],
													"id": 516,
													"name": "ExpressionStatement",
													"src": "9621:35:0"
												},
												{
													"attributes": {
														"assignments": [
															518
														]
													},
													"children": [
														{
															"attributes": {
																"constant": false,
																"name": "extraMoney",
																"scope": 615,
																"stateVariable": false,
																"storageLocation": "default",
																"type": "uint256",
																"value": null,
																"visibility": "internal"
															},
															"children": [
																{
																	"attributes": {
																		"name": "uint",
																		"type": "uint256"
																	},
																	"id": 517,
																	"name": "ElementaryTypeName",
																	"src": "9756:4:0"
																}
															],
															"id": 518,
															"name": "VariableDeclaration",
															"src": "9756:15:0"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"hexvalue": "30",
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"subdenomination": null,
																"token": "number",
																"type": "int_const 0",
																"value": "0"
															},
															"id": 519,
															"name": "Literal",
															"src": "9774:1:0"
														}
													],
													"id": 520,
													"name": "VariableDeclarationStatement",
													"src": "9756:19:0"
												},
												{
													"attributes": {
														"falseBody": null
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": ">",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "value",
																		"referencedDeclaration": null,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1167,
																				"type": "msg",
																				"value": "msg"
																			},
																			"id": 521,
																			"name": "Identifier",
																			"src": "9983:3:0"
																		}
																	],
																	"id": 522,
																	"name": "MemberAccess",
																	"src": "9983:9:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 24,
																		"type": "uint256",
																		"value": "repaymentInstallment"
																	},
																	"id": 523,
																	"name": "Identifier",
																	"src": "9995:20:0"
																}
															],
															"id": 524,
															"name": "BinaryOperation",
															"src": "9983:32:0"
														},
														{
															"children": [
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"operator": "=",
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 518,
																						"type": "uint256",
																						"value": "extraMoney"
																					},
																					"id": 525,
																					"name": "Identifier",
																					"src": "10107:10:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"isStructConstructorCall": false,
																						"lValueRequested": false,
																						"names": [
																							null
																						],
																						"type": "uint256",
																						"type_conversion": false
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"member_name": "sub",
																								"referencedDeclaration": 1130,
																								"type": "function (uint256,uint256) pure returns (uint256)"
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"member_name": "value",
																										"referencedDeclaration": null,
																										"type": "uint256"
																									},
																									"children": [
																										{
																											"attributes": {
																												"argumentTypes": null,
																												"overloadedDeclarations": [
																													null
																												],
																												"referencedDeclaration": 1167,
																												"type": "msg",
																												"value": "msg"
																											},
																											"id": 526,
																											"name": "Identifier",
																											"src": "10120:3:0"
																										}
																									],
																									"id": 527,
																									"name": "MemberAccess",
																									"src": "10120:9:0"
																								}
																							],
																							"id": 528,
																							"name": "MemberAccess",
																							"src": "10120:13:0"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 24,
																								"type": "uint256",
																								"value": "repaymentInstallment"
																							},
																							"id": 529,
																							"name": "Identifier",
																							"src": "10134:20:0"
																						}
																					],
																					"id": 530,
																					"name": "FunctionCall",
																					"src": "10120:35:0"
																				}
																			],
																			"id": 531,
																			"name": "Assignment",
																			"src": "10107:48:0"
																		}
																	],
																	"id": 532,
																	"name": "ExpressionStatement",
																	"src": "10107:48:0"
																},
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "tuple()",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						],
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 1158,
																						"type": "function (bool) pure",
																						"value": "assert"
																					},
																					"id": 533,
																					"name": "Identifier",
																					"src": "10213:6:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"operator": "==",
																						"type": "bool"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 24,
																								"type": "uint256",
																								"value": "repaymentInstallment"
																							},
																							"id": 534,
																							"name": "Identifier",
																							"src": "10220:20:0"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"isStructConstructorCall": false,
																								"lValueRequested": false,
																								"names": [
																									null
																								],
																								"type": "uint256",
																								"type_conversion": false
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										],
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"member_name": "sub",
																										"referencedDeclaration": 1130,
																										"type": "function (uint256,uint256) pure returns (uint256)"
																									},
																									"children": [
																										{
																											"attributes": {
																												"argumentTypes": null,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"lValueRequested": false,
																												"member_name": "value",
																												"referencedDeclaration": null,
																												"type": "uint256"
																											},
																											"children": [
																												{
																													"attributes": {
																														"argumentTypes": null,
																														"overloadedDeclarations": [
																															null
																														],
																														"referencedDeclaration": 1167,
																														"type": "msg",
																														"value": "msg"
																													},
																													"id": 535,
																													"name": "Identifier",
																													"src": "10244:3:0"
																												}
																											],
																											"id": 536,
																											"name": "MemberAccess",
																											"src": "10244:9:0"
																										}
																									],
																									"id": 537,
																									"name": "MemberAccess",
																									"src": "10244:13:0"
																								},
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 518,
																										"type": "uint256",
																										"value": "extraMoney"
																									},
																									"id": 538,
																									"name": "Identifier",
																									"src": "10258:10:0"
																								}
																							],
																							"id": 539,
																							"name": "FunctionCall",
																							"src": "10244:25:0"
																						}
																					],
																					"id": 540,
																					"name": "BinaryOperation",
																					"src": "10220:49:0"
																				}
																			],
																			"id": 541,
																			"name": "FunctionCall",
																			"src": "10213:57:0"
																		}
																	],
																	"id": 542,
																	"name": "ExpressionStatement",
																	"src": "10213:57:0"
																},
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "tuple()",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						],
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 1158,
																						"type": "function (bool) pure",
																						"value": "assert"
																					},
																					"id": 543,
																					"name": "Identifier",
																					"src": "10325:6:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"operator": "<=",
																						"type": "bool"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 518,
																								"type": "uint256",
																								"value": "extraMoney"
																							},
																							"id": 544,
																							"name": "Identifier",
																							"src": "10332:10:0"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"member_name": "value",
																								"referencedDeclaration": null,
																								"type": "uint256"
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 1167,
																										"type": "msg",
																										"value": "msg"
																									},
																									"id": 545,
																									"name": "Identifier",
																									"src": "10346:3:0"
																								}
																							],
																							"id": 546,
																							"name": "MemberAccess",
																							"src": "10346:9:0"
																						}
																					],
																					"id": 547,
																					"name": "BinaryOperation",
																					"src": "10332:23:0"
																				}
																			],
																			"id": 548,
																			"name": "FunctionCall",
																			"src": "10325:31:0"
																		}
																	],
																	"id": 549,
																	"name": "ExpressionStatement",
																	"src": "10325:31:0"
																},
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "tuple()",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "transfer",
																						"referencedDeclaration": null,
																						"type": "function (uint256)"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"member_name": "sender",
																								"referencedDeclaration": null,
																								"type": "address"
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 1167,
																										"type": "msg",
																										"value": "msg"
																									},
																									"id": 550,
																									"name": "Identifier",
																									"src": "10438:3:0"
																								}
																							],
																							"id": 553,
																							"name": "MemberAccess",
																							"src": "10438:10:0"
																						}
																					],
																					"id": 554,
																					"name": "MemberAccess",
																					"src": "10438:19:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 518,
																						"type": "uint256",
																						"value": "extraMoney"
																					},
																					"id": 555,
																					"name": "Identifier",
																					"src": "10458:10:0"
																				}
																			],
																			"id": 556,
																			"name": "FunctionCall",
																			"src": "10438:31:0"
																		}
																	],
																	"id": 557,
																	"name": "ExpressionStatement",
																	"src": "10438:31:0"
																},
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "tuple()",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 121,
																						"type": "function (address,uint256,uint256)",
																						"value": "LogBorrowerChangeReturned"
																					},
																					"id": 558,
																					"name": "Identifier",
																					"src": "10537:25:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "sender",
																						"referencedDeclaration": null,
																						"type": "address"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1167,
																								"type": "msg",
																								"value": "msg"
																							},
																							"id": 559,
																							"name": "Identifier",
																							"src": "10563:3:0"
																						}
																					],
																					"id": 560,
																					"name": "MemberAccess",
																					"src": "10563:10:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 518,
																						"type": "uint256",
																						"value": "extraMoney"
																					},
																					"id": 561,
																					"name": "Identifier",
																					"src": "10575:10:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "timestamp",
																						"referencedDeclaration": null,
																						"type": "uint256"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1159,
																								"type": "block",
																								"value": "block"
																							},
																							"id": 562,
																							"name": "Identifier",
																							"src": "10587:5:0"
																						}
																					],
																					"id": 563,
																					"name": "MemberAccess",
																					"src": "10587:15:0"
																				}
																			],
																			"id": 564,
																			"name": "FunctionCall",
																			"src": "10537:66:0"
																		}
																	],
																	"id": 565,
																	"name": "ExpressionStatement",
																	"src": "10537:66:0"
																}
															],
															"id": 566,
															"name": "Block",
															"src": "10017:598:0"
														}
													],
													"id": 567,
													"name": "IfStatement",
													"src": "9979:636:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 107,
																		"type": "function (address,uint256,uint256)",
																		"value": "LogBorrowerRepaymentInstallment"
																	},
																	"id": 568,
																	"name": "Identifier",
																	"src": "10674:31:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "sender",
																		"referencedDeclaration": null,
																		"type": "address"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1167,
																				"type": "msg",
																				"value": "msg"
																			},
																			"id": 569,
																			"name": "Identifier",
																			"src": "10706:3:0"
																		}
																	],
																	"id": 570,
																	"name": "MemberAccess",
																	"src": "10706:10:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"isStructConstructorCall": false,
																		"lValueRequested": false,
																		"names": [
																			null
																		],
																		"type": "uint256",
																		"type_conversion": false
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"member_name": "sub",
																				"referencedDeclaration": 1130,
																				"type": "function (uint256,uint256) pure returns (uint256)"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "value",
																						"referencedDeclaration": null,
																						"type": "uint256"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1167,
																								"type": "msg",
																								"value": "msg"
																							},
																							"id": 571,
																							"name": "Identifier",
																							"src": "10718:3:0"
																						}
																					],
																					"id": 572,
																					"name": "MemberAccess",
																					"src": "10718:9:0"
																				}
																			],
																			"id": 573,
																			"name": "MemberAccess",
																			"src": "10718:13:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 518,
																				"type": "uint256",
																				"value": "extraMoney"
																			},
																			"id": 574,
																			"name": "Identifier",
																			"src": "10732:10:0"
																		}
																	],
																	"id": 575,
																	"name": "FunctionCall",
																	"src": "10718:25:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "timestamp",
																		"referencedDeclaration": null,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1159,
																				"type": "block",
																				"value": "block"
																			},
																			"id": 576,
																			"name": "Identifier",
																			"src": "10745:5:0"
																		}
																	],
																	"id": 577,
																	"name": "MemberAccess",
																	"src": "10745:15:0"
																}
															],
															"id": 578,
															"name": "FunctionCall",
															"src": "10674:87:0"
														}
													],
													"id": 579,
													"name": "ExpressionStatement",
													"src": "10674:87:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 16,
																		"type": "uint256",
																		"value": "repaidAmount"
																	},
																	"id": 580,
																	"name": "Identifier",
																	"src": "10851:12:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"isStructConstructorCall": false,
																		"lValueRequested": false,
																		"names": [
																			null
																		],
																		"type": "uint256",
																		"type_conversion": false
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"member_name": "add",
																				"referencedDeclaration": 1154,
																				"type": "function (uint256,uint256) pure returns (uint256)"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 16,
																						"type": "uint256",
																						"value": "repaidAmount"
																					},
																					"id": 581,
																					"name": "Identifier",
																					"src": "10866:12:0"
																				}
																			],
																			"id": 582,
																			"name": "MemberAccess",
																			"src": "10866:16:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "uint256",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "sub",
																						"referencedDeclaration": 1130,
																						"type": "function (uint256,uint256) pure returns (uint256)"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"member_name": "value",
																								"referencedDeclaration": null,
																								"type": "uint256"
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 1167,
																										"type": "msg",
																										"value": "msg"
																									},
																									"id": 583,
																									"name": "Identifier",
																									"src": "10883:3:0"
																								}
																							],
																							"id": 584,
																							"name": "MemberAccess",
																							"src": "10883:9:0"
																						}
																					],
																					"id": 585,
																					"name": "MemberAccess",
																					"src": "10883:13:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 518,
																						"type": "uint256",
																						"value": "extraMoney"
																					},
																					"id": 586,
																					"name": "Identifier",
																					"src": "10897:10:0"
																				}
																			],
																			"id": 587,
																			"name": "FunctionCall",
																			"src": "10883:25:0"
																		}
																	],
																	"id": 588,
																	"name": "FunctionCall",
																	"src": "10866:43:0"
																}
															],
															"id": 589,
															"name": "Assignment",
															"src": "10851:58:0"
														}
													],
													"id": 590,
													"name": "ExpressionStatement",
													"src": "10851:58:0"
												},
												{
													"attributes": {
														"falseBody": null
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "==",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 16,
																		"type": "uint256",
																		"value": "repaidAmount"
																	},
																	"id": 591,
																	"name": "Identifier",
																	"src": "10997:12:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 14,
																		"type": "uint256",
																		"value": "returnAmount"
																	},
																	"id": 592,
																	"name": "Identifier",
																	"src": "11013:12:0"
																}
															],
															"id": 593,
															"name": "BinaryOperation",
															"src": "10997:28:0"
														},
														{
															"children": [
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "tuple()",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 113,
																						"type": "function (address,uint256)",
																						"value": "LogBorrowerRepaymentFinished"
																					},
																					"id": 594,
																					"name": "Identifier",
																					"src": "11079:28:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "sender",
																						"referencedDeclaration": null,
																						"type": "address"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1167,
																								"type": "msg",
																								"value": "msg"
																							},
																							"id": 595,
																							"name": "Identifier",
																							"src": "11108:3:0"
																						}
																					],
																					"id": 596,
																					"name": "MemberAccess",
																					"src": "11108:10:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "timestamp",
																						"referencedDeclaration": null,
																						"type": "uint256"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1159,
																								"type": "block",
																								"value": "block"
																							},
																							"id": 597,
																							"name": "Identifier",
																							"src": "11120:5:0"
																						}
																					],
																					"id": 598,
																					"name": "MemberAccess",
																					"src": "11120:15:0"
																				}
																			],
																			"id": 599,
																			"name": "FunctionCall",
																			"src": "11079:57:0"
																		}
																	],
																	"id": 600,
																	"name": "ExpressionStatement",
																	"src": "11079:57:0"
																},
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"operator": "=",
																				"type": "enum Credit.State"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 42,
																						"type": "enum Credit.State",
																						"value": "state"
																					},
																					"id": 601,
																					"name": "Identifier",
																					"src": "11216:5:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"member_name": "interestReturns",
																						"referencedDeclaration": null,
																						"type": "enum Credit.State"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 40,
																								"type": "type(enum Credit.State)",
																								"value": "State"
																							},
																							"id": 602,
																							"name": "Identifier",
																							"src": "11224:5:0"
																						}
																					],
																					"id": 603,
																					"name": "MemberAccess",
																					"src": "11224:21:0"
																				}
																			],
																			"id": 604,
																			"name": "Assignment",
																			"src": "11216:29:0"
																		}
																	],
																	"id": 605,
																	"name": "ExpressionStatement",
																	"src": "11216:29:0"
																},
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "tuple()",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_enum$_State_$40",
																								"typeString": "enum Credit.State"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 85,
																						"type": "function (enum Credit.State,uint256)",
																						"value": "LogCreditStateChanged"
																					},
																					"id": 606,
																					"name": "Identifier",
																					"src": "11296:21:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 42,
																						"type": "enum Credit.State",
																						"value": "state"
																					},
																					"id": 607,
																					"name": "Identifier",
																					"src": "11318:5:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "timestamp",
																						"referencedDeclaration": null,
																						"type": "uint256"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1159,
																								"type": "block",
																								"value": "block"
																							},
																							"id": 608,
																							"name": "Identifier",
																							"src": "11325:5:0"
																						}
																					],
																					"id": 609,
																					"name": "MemberAccess",
																					"src": "11325:15:0"
																				}
																			],
																			"id": 610,
																			"name": "FunctionCall",
																			"src": "11296:45:0"
																		}
																	],
																	"id": 611,
																	"name": "ExpressionStatement",
																	"src": "11296:45:0"
																}
															],
															"id": 612,
															"name": "Block",
															"src": "11027:326:0"
														}
													],
													"id": 613,
													"name": "IfStatement",
													"src": "10993:360:0"
												}
											],
											"id": 614,
											"name": "Block",
											"src": "9003:2357:0"
										}
									],
									"id": 615,
									"name": "FunctionDefinition",
									"src": "8949:2411:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "withdraw",
										"payable": false,
										"scope": 1003,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 616,
											"name": "ParameterList",
											"src": "11720:2:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 625,
											"name": "ParameterList",
											"src": "11775:0:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 183,
														"type": "modifier ()",
														"value": "isActive"
													},
													"id": 617,
													"name": "Identifier",
													"src": "11730:8:0"
												}
											],
											"id": 618,
											"name": "ModifierInvocation",
											"src": "11730:8:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 194,
														"type": "modifier ()",
														"value": "onlyBorrower"
													},
													"id": 619,
													"name": "Identifier",
													"src": "11739:12:0"
												}
											],
											"id": 620,
											"name": "ModifierInvocation",
											"src": "11739:12:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 260,
														"type": "modifier ()",
														"value": "canWithdraw"
													},
													"id": 621,
													"name": "Identifier",
													"src": "11752:11:0"
												}
											],
											"id": 622,
											"name": "ModifierInvocation",
											"src": "11752:11:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 271,
														"type": "modifier ()",
														"value": "isNotFraud"
													},
													"id": 623,
													"name": "Identifier",
													"src": "11764:10:0"
												}
											],
											"id": 624,
											"name": "ModifierInvocation",
											"src": "11764:10:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "enum Credit.State"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 42,
																		"type": "enum Credit.State",
																		"value": "state"
																	},
																	"id": 626,
																	"name": "Identifier",
																	"src": "11853:5:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"member_name": "repayment",
																		"referencedDeclaration": null,
																		"type": "enum Credit.State"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 40,
																				"type": "type(enum Credit.State)",
																				"value": "State"
																			},
																			"id": 627,
																			"name": "Identifier",
																			"src": "11861:5:0"
																		}
																	],
																	"id": 628,
																	"name": "MemberAccess",
																	"src": "11861:15:0"
																}
															],
															"id": 629,
															"name": "Assignment",
															"src": "11853:23:0"
														}
													],
													"id": 630,
													"name": "ExpressionStatement",
													"src": "11853:23:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_enum$_State_$40",
																				"typeString": "enum Credit.State"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 85,
																		"type": "function (enum Credit.State,uint256)",
																		"value": "LogCreditStateChanged"
																	},
																	"id": 631,
																	"name": "Identifier",
																	"src": "11919:21:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 42,
																		"type": "enum Credit.State",
																		"value": "state"
																	},
																	"id": 632,
																	"name": "Identifier",
																	"src": "11941:5:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "timestamp",
																		"referencedDeclaration": null,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1159,
																				"type": "block",
																				"value": "block"
																			},
																			"id": 633,
																			"name": "Identifier",
																			"src": "11948:5:0"
																		}
																	],
																	"id": 634,
																	"name": "MemberAccess",
																	"src": "11948:15:0"
																}
															],
															"id": 635,
															"name": "FunctionCall",
															"src": "11919:45:0"
														}
													],
													"id": 636,
													"name": "ExpressionStatement",
													"src": "11919:45:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 99,
																		"type": "function (address,uint256,uint256)",
																		"value": "LogBorrowerWithdrawal"
																	},
																	"id": 637,
																	"name": "Identifier",
																	"src": "12014:21:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "sender",
																		"referencedDeclaration": null,
																		"type": "address"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1167,
																				"type": "msg",
																				"value": "msg"
																			},
																			"id": 638,
																			"name": "Identifier",
																			"src": "12036:3:0"
																		}
																	],
																	"id": 639,
																	"name": "MemberAccess",
																	"src": "12036:10:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "balance",
																		"referencedDeclaration": null,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1184,
																				"type": "contract Credit",
																				"value": "this"
																			},
																			"id": 640,
																			"name": "Identifier",
																			"src": "12048:4:0"
																		}
																	],
																	"id": 641,
																	"name": "MemberAccess",
																	"src": "12048:12:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "timestamp",
																		"referencedDeclaration": null,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1159,
																				"type": "block",
																				"value": "block"
																			},
																			"id": 642,
																			"name": "Identifier",
																			"src": "12062:5:0"
																		}
																	],
																	"id": 643,
																	"name": "MemberAccess",
																	"src": "12062:15:0"
																}
															],
															"id": 644,
															"name": "FunctionCall",
															"src": "12014:64:0"
														}
													],
													"id": 645,
													"name": "ExpressionStatement",
													"src": "12014:64:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "transfer",
																		"referencedDeclaration": null,
																		"type": "function (uint256)"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 10,
																				"type": "address",
																				"value": "borrower"
																			},
																			"id": 646,
																			"name": "Identifier",
																			"src": "12156:8:0"
																		}
																	],
																	"id": 648,
																	"name": "MemberAccess",
																	"src": "12156:17:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "balance",
																		"referencedDeclaration": null,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1184,
																				"type": "contract Credit",
																				"value": "this"
																			},
																			"id": 649,
																			"name": "Identifier",
																			"src": "12174:4:0"
																		}
																	],
																	"id": 650,
																	"name": "MemberAccess",
																	"src": "12174:12:0"
																}
															],
															"id": 651,
															"name": "FunctionCall",
															"src": "12156:31:0"
														}
													],
													"id": 652,
													"name": "ExpressionStatement",
													"src": "12156:31:0"
												}
											],
											"id": 653,
											"name": "Block",
											"src": "11775:420:0"
										}
									],
									"id": 654,
									"name": "FunctionDefinition",
									"src": "11703:492:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "requestInterest",
										"payable": false,
										"scope": 1003,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 655,
											"name": "ParameterList",
											"src": "12554:2:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 662,
											"name": "ParameterList",
											"src": "12602:0:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 183,
														"type": "modifier ()",
														"value": "isActive"
													},
													"id": 656,
													"name": "Identifier",
													"src": "12564:8:0"
												}
											],
											"id": 657,
											"name": "ModifierInvocation",
											"src": "12564:8:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 207,
														"type": "modifier ()",
														"value": "onlyLender"
													},
													"id": 658,
													"name": "Identifier",
													"src": "12573:10:0"
												}
											],
											"id": 659,
											"name": "ModifierInvocation",
											"src": "12573:10:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 227,
														"type": "modifier ()",
														"value": "canAskForInterest"
													},
													"id": 660,
													"name": "Identifier",
													"src": "12584:17:0"
												}
											],
											"id": 661,
											"name": "ModifierInvocation",
											"src": "12584:17:0"
										},
										{
											"children": [
												{
													"attributes": {
														"assignments": [
															664
														]
													},
													"children": [
														{
															"attributes": {
																"constant": false,
																"name": "lenderReturnAmount",
																"scope": 720,
																"stateVariable": false,
																"storageLocation": "default",
																"type": "uint256",
																"value": null,
																"visibility": "internal"
															},
															"children": [
																{
																	"attributes": {
																		"name": "uint",
																		"type": "uint256"
																	},
																	"id": 663,
																	"name": "ElementaryTypeName",
																	"src": "12821:4:0"
																}
															],
															"id": 664,
															"name": "VariableDeclaration",
															"src": "12821:23:0"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "/",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 14,
																		"type": "uint256",
																		"value": "returnAmount"
																	},
																	"id": 665,
																	"name": "Identifier",
																	"src": "12847:12:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 53,
																		"type": "uint256",
																		"value": "lendersCount"
																	},
																	"id": 666,
																	"name": "Identifier",
																	"src": "12862:12:0"
																}
															],
															"id": 667,
															"name": "BinaryOperation",
															"src": "12847:27:0"
														}
													],
													"id": 668,
													"name": "VariableDeclarationStatement",
													"src": "12821:53:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1158,
																		"type": "function (bool) pure",
																		"value": "assert"
																	},
																	"id": 669,
																	"name": "Identifier",
																	"src": "12957:6:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": ">=",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"member_name": "balance",
																				"referencedDeclaration": null,
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 1184,
																						"type": "contract Credit",
																						"value": "this"
																					},
																					"id": 670,
																					"name": "Identifier",
																					"src": "12964:4:0"
																				}
																			],
																			"id": 671,
																			"name": "MemberAccess",
																			"src": "12964:12:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 664,
																				"type": "uint256",
																				"value": "lenderReturnAmount"
																			},
																			"id": 672,
																			"name": "Identifier",
																			"src": "12980:18:0"
																		}
																	],
																	"id": 673,
																	"name": "BinaryOperation",
																	"src": "12964:34:0"
																}
															],
															"id": 674,
															"name": "FunctionCall",
															"src": "12957:42:0"
														}
													],
													"id": 675,
													"name": "ExpressionStatement",
													"src": "12957:42:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "transfer",
																		"referencedDeclaration": null,
																		"type": "function (uint256)"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"member_name": "sender",
																				"referencedDeclaration": null,
																				"type": "address"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 1167,
																						"type": "msg",
																						"value": "msg"
																					},
																					"id": 676,
																					"name": "Identifier",
																					"src": "13080:3:0"
																				}
																			],
																			"id": 679,
																			"name": "MemberAccess",
																			"src": "13080:10:0"
																		}
																	],
																	"id": 680,
																	"name": "MemberAccess",
																	"src": "13080:19:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 664,
																		"type": "uint256",
																		"value": "lenderReturnAmount"
																	},
																	"id": 681,
																	"name": "Identifier",
																	"src": "13100:18:0"
																}
															],
															"id": 682,
															"name": "FunctionCall",
															"src": "13080:39:0"
														}
													],
													"id": 683,
													"name": "ExpressionStatement",
													"src": "13080:39:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 145,
																		"type": "function (address,uint256,uint256)",
																		"value": "LogLenderWithdrawal"
																	},
																	"id": 684,
																	"name": "Identifier",
																	"src": "13172:19:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "sender",
																		"referencedDeclaration": null,
																		"type": "address"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1167,
																				"type": "msg",
																				"value": "msg"
																			},
																			"id": 685,
																			"name": "Identifier",
																			"src": "13192:3:0"
																		}
																	],
																	"id": 686,
																	"name": "MemberAccess",
																	"src": "13192:10:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 664,
																		"type": "uint256",
																		"value": "lenderReturnAmount"
																	},
																	"id": 687,
																	"name": "Identifier",
																	"src": "13204:18:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "timestamp",
																		"referencedDeclaration": null,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1159,
																				"type": "block",
																				"value": "block"
																			},
																			"id": 688,
																			"name": "Identifier",
																			"src": "13224:5:0"
																		}
																	],
																	"id": 689,
																	"name": "MemberAccess",
																	"src": "13224:15:0"
																}
															],
															"id": 690,
															"name": "FunctionCall",
															"src": "13172:68:0"
														}
													],
													"id": 691,
													"name": "ExpressionStatement",
													"src": "13172:68:0"
												},
												{
													"attributes": {
														"falseBody": null
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "==",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "balance",
																		"referencedDeclaration": null,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1184,
																				"type": "contract Credit",
																				"value": "this"
																			},
																			"id": 692,
																			"name": "Identifier",
																			"src": "13311:4:0"
																		}
																	],
																	"id": 693,
																	"name": "MemberAccess",
																	"src": "13311:12:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "30",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "number",
																		"type": "int_const 0",
																		"value": "0"
																	},
																	"id": 694,
																	"name": "Literal",
																	"src": "13327:1:0"
																}
															],
															"id": 695,
															"name": "BinaryOperation",
															"src": "13311:17:0"
														},
														{
															"children": [
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"operator": "=",
																				"type": "bool"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 33,
																						"type": "bool",
																						"value": "active"
																					},
																					"id": 696,
																					"name": "Identifier",
																					"src": "13394:6:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"hexvalue": "66616c7365",
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"subdenomination": null,
																						"token": "bool",
																						"type": "bool",
																						"value": "false"
																					},
																					"id": 697,
																					"name": "Literal",
																					"src": "13403:5:0"
																				}
																			],
																			"id": 698,
																			"name": "Assignment",
																			"src": "13394:14:0"
																		}
																	],
																	"id": 699,
																	"name": "ExpressionStatement",
																	"src": "13394:14:0"
																},
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "tuple()",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 91,
																						"type": "function (bool,uint256)",
																						"value": "LogCreditStateActiveChanged"
																					},
																					"id": 700,
																					"name": "Identifier",
																					"src": "13466:27:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 33,
																						"type": "bool",
																						"value": "active"
																					},
																					"id": 701,
																					"name": "Identifier",
																					"src": "13494:6:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "timestamp",
																						"referencedDeclaration": null,
																						"type": "uint256"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1159,
																								"type": "block",
																								"value": "block"
																							},
																							"id": 702,
																							"name": "Identifier",
																							"src": "13502:5:0"
																						}
																					],
																					"id": 703,
																					"name": "MemberAccess",
																					"src": "13502:15:0"
																				}
																			],
																			"id": 704,
																			"name": "FunctionCall",
																			"src": "13466:52:0"
																		}
																	],
																	"id": 705,
																	"name": "ExpressionStatement",
																	"src": "13466:52:0"
																},
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"operator": "=",
																				"type": "enum Credit.State"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 42,
																						"type": "enum Credit.State",
																						"value": "state"
																					},
																					"id": 706,
																					"name": "Identifier",
																					"src": "13612:5:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"member_name": "expired",
																						"referencedDeclaration": null,
																						"type": "enum Credit.State"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 40,
																								"type": "type(enum Credit.State)",
																								"value": "State"
																							},
																							"id": 707,
																							"name": "Identifier",
																							"src": "13620:5:0"
																						}
																					],
																					"id": 708,
																					"name": "MemberAccess",
																					"src": "13620:13:0"
																				}
																			],
																			"id": 709,
																			"name": "Assignment",
																			"src": "13612:21:0"
																		}
																	],
																	"id": 710,
																	"name": "ExpressionStatement",
																	"src": "13612:21:0"
																},
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "tuple()",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_enum$_State_$40",
																								"typeString": "enum Credit.State"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 85,
																						"type": "function (enum Credit.State,uint256)",
																						"value": "LogCreditStateChanged"
																					},
																					"id": 711,
																					"name": "Identifier",
																					"src": "13684:21:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 42,
																						"type": "enum Credit.State",
																						"value": "state"
																					},
																					"id": 712,
																					"name": "Identifier",
																					"src": "13706:5:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "timestamp",
																						"referencedDeclaration": null,
																						"type": "uint256"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1159,
																								"type": "block",
																								"value": "block"
																							},
																							"id": 713,
																							"name": "Identifier",
																							"src": "13713:5:0"
																						}
																					],
																					"id": 714,
																					"name": "MemberAccess",
																					"src": "13713:15:0"
																				}
																			],
																			"id": 715,
																			"name": "FunctionCall",
																			"src": "13684:45:0"
																		}
																	],
																	"id": 716,
																	"name": "ExpressionStatement",
																	"src": "13684:45:0"
																}
															],
															"id": 717,
															"name": "Block",
															"src": "13330:411:0"
														}
													],
													"id": 718,
													"name": "IfStatement",
													"src": "13307:434:0"
												}
											],
											"id": 719,
											"name": "Block",
											"src": "12602:1146:0"
										}
									],
									"id": 720,
									"name": "FunctionDefinition",
									"src": "12530:1218:0"
								},
								{
									"attributes": {
										"constant": true,
										"implemented": true,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "getCreditInfo",
										"payable": false,
										"scope": 1003,
										"stateMutability": "view",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 721,
											"name": "ParameterList",
											"src": "14133:2:0"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 760,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 722,
															"name": "ElementaryTypeName",
															"src": "14157:7:0"
														}
													],
													"id": 723,
													"name": "VariableDeclaration",
													"src": "14157:7:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 760,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "bytes32",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "bytes32",
																"type": "bytes32"
															},
															"id": 724,
															"name": "ElementaryTypeName",
															"src": "14166:7:0"
														}
													],
													"id": 725,
													"name": "VariableDeclaration",
													"src": "14166:7:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 760,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 726,
															"name": "ElementaryTypeName",
															"src": "14175:4:0"
														}
													],
													"id": 727,
													"name": "VariableDeclaration",
													"src": "14175:4:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 760,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 728,
															"name": "ElementaryTypeName",
															"src": "14181:4:0"
														}
													],
													"id": 729,
													"name": "VariableDeclaration",
													"src": "14181:4:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 760,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 730,
															"name": "ElementaryTypeName",
															"src": "14187:4:0"
														}
													],
													"id": 731,
													"name": "VariableDeclaration",
													"src": "14187:4:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 760,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 732,
															"name": "ElementaryTypeName",
															"src": "14193:4:0"
														}
													],
													"id": 733,
													"name": "VariableDeclaration",
													"src": "14193:4:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 760,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 734,
															"name": "ElementaryTypeName",
															"src": "14199:4:0"
														}
													],
													"id": 735,
													"name": "VariableDeclaration",
													"src": "14199:4:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 760,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 736,
															"name": "ElementaryTypeName",
															"src": "14205:4:0"
														}
													],
													"id": 737,
													"name": "VariableDeclaration",
													"src": "14205:4:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 760,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "enum Credit.State",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"contractScope": null,
																"name": "State",
																"referencedDeclaration": 40,
																"type": "enum Credit.State"
															},
															"id": 738,
															"name": "UserDefinedTypeName",
															"src": "14211:5:0"
														}
													],
													"id": 739,
													"name": "VariableDeclaration",
													"src": "14211:5:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 760,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "bool",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "bool",
																"type": "bool"
															},
															"id": 740,
															"name": "ElementaryTypeName",
															"src": "14218:4:0"
														}
													],
													"id": 741,
													"name": "VariableDeclaration",
													"src": "14218:4:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 760,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 742,
															"name": "ElementaryTypeName",
															"src": "14224:4:0"
														}
													],
													"id": 743,
													"name": "VariableDeclaration",
													"src": "14224:4:0"
												}
											],
											"id": 744,
											"name": "ParameterList",
											"src": "14156:73:0"
										},
										{
											"children": [
												{
													"attributes": {
														"functionReturnParameters": 744
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"type": "tuple(address,bytes32,uint256,uint256,uint256,uint256,uint256,uint256,enum Credit.State,bool,uint256)"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 10,
																		"type": "address",
																		"value": "borrower"
																	},
																	"id": 745,
																	"name": "Identifier",
																	"src": "14259:8:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 30,
																		"type": "bytes32",
																		"value": "description"
																	},
																	"id": 746,
																	"name": "Identifier",
																	"src": "14278:11:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 12,
																		"type": "uint256",
																		"value": "requestedAmount"
																	},
																	"id": 747,
																	"name": "Identifier",
																	"src": "14300:15:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 20,
																		"type": "uint256",
																		"value": "requestedRepayments"
																	},
																	"id": 748,
																	"name": "Identifier",
																	"src": "14326:19:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 24,
																		"type": "uint256",
																		"value": "repaymentInstallment"
																	},
																	"id": 749,
																	"name": "Identifier",
																	"src": "14356:20:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 22,
																		"type": "uint256",
																		"value": "remainingRepayments"
																	},
																	"id": 750,
																	"name": "Identifier",
																	"src": "14387:19:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 18,
																		"type": "uint256",
																		"value": "interest"
																	},
																	"id": 751,
																	"name": "Identifier",
																	"src": "14417:8:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 14,
																		"type": "uint256",
																		"value": "returnAmount"
																	},
																	"id": 752,
																	"name": "Identifier",
																	"src": "14436:12:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 42,
																		"type": "enum Credit.State",
																		"value": "state"
																	},
																	"id": 753,
																	"name": "Identifier",
																	"src": "14459:5:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 33,
																		"type": "bool",
																		"value": "active"
																	},
																	"id": 754,
																	"name": "Identifier",
																	"src": "14475:6:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "balance",
																		"referencedDeclaration": null,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1184,
																				"type": "contract Credit",
																				"value": "this"
																			},
																			"id": 755,
																			"name": "Identifier",
																			"src": "14492:4:0"
																		}
																	],
																	"id": 756,
																	"name": "MemberAccess",
																	"src": "14492:12:0"
																}
															],
															"id": 757,
															"name": "TupleExpression",
															"src": "14248:267:0"
														}
													],
													"id": 758,
													"name": "Return",
													"src": "14241:274:0"
												}
											],
											"id": 759,
											"name": "Block",
											"src": "14230:293:0"
										}
									],
									"id": 760,
									"name": "FunctionDefinition",
									"src": "14111:412:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "revokeVote",
										"payable": false,
										"scope": 1003,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 761,
											"name": "ParameterList",
											"src": "14608:2:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 768,
											"name": "ParameterList",
											"src": "14650:0:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 183,
														"type": "modifier ()",
														"value": "isActive"
													},
													"id": 762,
													"name": "Identifier",
													"src": "14618:8:0"
												}
											],
											"id": 763,
											"name": "ModifierInvocation",
											"src": "14618:8:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 289,
														"type": "modifier ()",
														"value": "isRevokable"
													},
													"id": 764,
													"name": "Identifier",
													"src": "14627:11:0"
												}
											],
											"id": 765,
											"name": "ModifierInvocation",
											"src": "14627:11:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 207,
														"type": "modifier ()",
														"value": "onlyLender"
													},
													"id": 766,
													"name": "Identifier",
													"src": "14639:10:0"
												}
											],
											"id": 767,
											"name": "ModifierInvocation",
											"src": "14639:10:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1170,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 769,
																	"name": "Identifier",
																	"src": "14707:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "==",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"type": "bool"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 60,
																						"type": "mapping(address => bool)",
																						"value": "revokeVoters"
																					},
																					"id": 770,
																					"name": "Identifier",
																					"src": "14715:12:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "sender",
																						"referencedDeclaration": null,
																						"type": "address"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1167,
																								"type": "msg",
																								"value": "msg"
																							},
																							"id": 771,
																							"name": "Identifier",
																							"src": "14728:3:0"
																						}
																					],
																					"id": 772,
																					"name": "MemberAccess",
																					"src": "14728:10:0"
																				}
																			],
																			"id": 773,
																			"name": "IndexAccess",
																			"src": "14715:24:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"hexvalue": "66616c7365",
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"subdenomination": null,
																				"token": "bool",
																				"type": "bool",
																				"value": "false"
																			},
																			"id": 774,
																			"name": "Literal",
																			"src": "14743:5:0"
																		}
																	],
																	"id": 775,
																	"name": "BinaryOperation",
																	"src": "14715:33:0"
																}
															],
															"id": 776,
															"name": "FunctionCall",
															"src": "14707:42:0"
														}
													],
													"id": 777,
													"name": "ExpressionStatement",
													"src": "14707:42:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "++",
																"prefix": false,
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 56,
																		"type": "uint256",
																		"value": "revokeVotes"
																	},
																	"id": 778,
																	"name": "Identifier",
																	"src": "14801:11:0"
																}
															],
															"id": 779,
															"name": "UnaryOperation",
															"src": "14801:13:0"
														}
													],
													"id": 780,
													"name": "ExpressionStatement",
													"src": "14801:13:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "==",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 60,
																				"type": "mapping(address => bool)",
																				"value": "revokeVoters"
																			},
																			"id": 781,
																			"name": "Identifier",
																			"src": "14866:12:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"member_name": "sender",
																				"referencedDeclaration": null,
																				"type": "address"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 1167,
																						"type": "msg",
																						"value": "msg"
																					},
																					"id": 782,
																					"name": "Identifier",
																					"src": "14879:3:0"
																				}
																			],
																			"id": 783,
																			"name": "MemberAccess",
																			"src": "14879:10:0"
																		}
																	],
																	"id": 784,
																	"name": "IndexAccess",
																	"src": "14866:24:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "74727565",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "bool",
																		"type": "bool",
																		"value": "true"
																	},
																	"id": 785,
																	"name": "Literal",
																	"src": "14894:4:0"
																}
															],
															"id": 786,
															"name": "BinaryOperation",
															"src": "14866:32:0"
														}
													],
													"id": 787,
													"name": "ExpressionStatement",
													"src": "14866:32:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 159,
																		"type": "function (address,uint256)",
																		"value": "LogLenderVoteForRevoking"
																	},
																	"id": 788,
																	"name": "Identifier",
																	"src": "14973:24:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "sender",
																		"referencedDeclaration": null,
																		"type": "address"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1167,
																				"type": "msg",
																				"value": "msg"
																			},
																			"id": 789,
																			"name": "Identifier",
																			"src": "14998:3:0"
																		}
																	],
																	"id": 790,
																	"name": "MemberAccess",
																	"src": "14998:10:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "timestamp",
																		"referencedDeclaration": null,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1159,
																				"type": "block",
																				"value": "block"
																			},
																			"id": 791,
																			"name": "Identifier",
																			"src": "15010:5:0"
																		}
																	],
																	"id": 792,
																	"name": "MemberAccess",
																	"src": "15010:15:0"
																}
															],
															"id": 793,
															"name": "FunctionCall",
															"src": "14973:53:0"
														}
													],
													"id": 794,
													"name": "ExpressionStatement",
													"src": "14973:53:0"
												},
												{
													"attributes": {
														"falseBody": null
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "==",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 53,
																		"type": "uint256",
																		"value": "lendersCount"
																	},
																	"id": 795,
																	"name": "Identifier",
																	"src": "15084:12:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 56,
																		"type": "uint256",
																		"value": "revokeVotes"
																	},
																	"id": 796,
																	"name": "Identifier",
																	"src": "15100:11:0"
																}
															],
															"id": 797,
															"name": "BinaryOperation",
															"src": "15084:27:0"
														},
														{
															"children": [
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"arguments": [
																					null
																				],
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "tuple()",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							null
																						],
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 819,
																						"type": "function ()",
																						"value": "revoke"
																					},
																					"id": 798,
																					"name": "Identifier",
																					"src": "15175:6:0"
																				}
																			],
																			"id": 799,
																			"name": "FunctionCall",
																			"src": "15175:8:0"
																		}
																	],
																	"id": 800,
																	"name": "ExpressionStatement",
																	"src": "15175:8:0"
																}
															],
															"id": 801,
															"name": "Block",
															"src": "15113:82:0"
														}
													],
													"id": 802,
													"name": "IfStatement",
													"src": "15080:115:0"
												}
											],
											"id": 803,
											"name": "Block",
											"src": "14650:552:0"
										}
									],
									"id": 804,
									"name": "FunctionDefinition",
									"src": "14589:613:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "revoke",
										"payable": false,
										"scope": 1003,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 805,
											"name": "ParameterList",
											"src": "15275:2:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 806,
											"name": "ParameterList",
											"src": "15287:0:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "enum Credit.State"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 42,
																		"type": "enum Credit.State",
																		"value": "state"
																	},
																	"id": 807,
																	"name": "Identifier",
																	"src": "15339:5:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"member_name": "revoked",
																		"referencedDeclaration": null,
																		"type": "enum Credit.State"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 40,
																				"type": "type(enum Credit.State)",
																				"value": "State"
																			},
																			"id": 808,
																			"name": "Identifier",
																			"src": "15347:5:0"
																		}
																	],
																	"id": 809,
																	"name": "MemberAccess",
																	"src": "15347:13:0"
																}
															],
															"id": 810,
															"name": "Assignment",
															"src": "15339:21:0"
														}
													],
													"id": 811,
													"name": "ExpressionStatement",
													"src": "15339:21:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_enum$_State_$40",
																				"typeString": "enum Credit.State"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 85,
																		"type": "function (enum Credit.State,uint256)",
																		"value": "LogCreditStateChanged"
																	},
																	"id": 812,
																	"name": "Identifier",
																	"src": "15405:21:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 42,
																		"type": "enum Credit.State",
																		"value": "state"
																	},
																	"id": 813,
																	"name": "Identifier",
																	"src": "15427:5:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "timestamp",
																		"referencedDeclaration": null,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1159,
																				"type": "block",
																				"value": "block"
																			},
																			"id": 814,
																			"name": "Identifier",
																			"src": "15434:5:0"
																		}
																	],
																	"id": 815,
																	"name": "MemberAccess",
																	"src": "15434:15:0"
																}
															],
															"id": 816,
															"name": "FunctionCall",
															"src": "15405:45:0"
														}
													],
													"id": 817,
													"name": "ExpressionStatement",
													"src": "15405:45:0"
												}
											],
											"id": 818,
											"name": "Block",
											"src": "15287:171:0"
										}
									],
									"id": 819,
									"name": "FunctionDefinition",
									"src": "15260:198:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "refund",
										"payable": false,
										"scope": 1003,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 820,
											"name": "ParameterList",
											"src": "15529:2:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 827,
											"name": "ParameterList",
											"src": "15569:0:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 183,
														"type": "modifier ()",
														"value": "isActive"
													},
													"id": 821,
													"name": "Identifier",
													"src": "15539:8:0"
												}
											],
											"id": 822,
											"name": "ModifierInvocation",
											"src": "15539:8:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 207,
														"type": "modifier ()",
														"value": "onlyLender"
													},
													"id": 823,
													"name": "Identifier",
													"src": "15548:10:0"
												}
											],
											"id": 824,
											"name": "ModifierInvocation",
											"src": "15548:10:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 300,
														"type": "modifier ()",
														"value": "isRevoked"
													},
													"id": 825,
													"name": "Identifier",
													"src": "15559:9:0"
												}
											],
											"id": 826,
											"name": "ModifierInvocation",
											"src": "15559:9:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1158,
																		"type": "function (bool) pure",
																		"value": "assert"
																	},
																	"id": 828,
																	"name": "Identifier",
																	"src": "15633:6:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": ">=",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"member_name": "balance",
																				"referencedDeclaration": null,
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 1184,
																						"type": "contract Credit",
																						"value": "this"
																					},
																					"id": 829,
																					"name": "Identifier",
																					"src": "15640:4:0"
																				}
																			],
																			"id": 830,
																			"name": "MemberAccess",
																			"src": "15640:12:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 50,
																						"type": "mapping(address => uint256)",
																						"value": "lendersInvestedAmount"
																					},
																					"id": 831,
																					"name": "Identifier",
																					"src": "15656:21:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "sender",
																						"referencedDeclaration": null,
																						"type": "address"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1167,
																								"type": "msg",
																								"value": "msg"
																							},
																							"id": 832,
																							"name": "Identifier",
																							"src": "15678:3:0"
																						}
																					],
																					"id": 833,
																					"name": "MemberAccess",
																					"src": "15678:10:0"
																				}
																			],
																			"id": 834,
																			"name": "IndexAccess",
																			"src": "15656:33:0"
																		}
																	],
																	"id": 835,
																	"name": "BinaryOperation",
																	"src": "15640:49:0"
																}
															],
															"id": 836,
															"name": "FunctionCall",
															"src": "15633:57:0"
														}
													],
													"id": 837,
													"name": "ExpressionStatement",
													"src": "15633:57:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "transfer",
																		"referencedDeclaration": null,
																		"type": "function (uint256)"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"member_name": "sender",
																				"referencedDeclaration": null,
																				"type": "address"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 1167,
																						"type": "msg",
																						"value": "msg"
																					},
																					"id": 838,
																					"name": "Identifier",
																					"src": "15771:3:0"
																				}
																			],
																			"id": 841,
																			"name": "MemberAccess",
																			"src": "15771:10:0"
																		}
																	],
																	"id": 842,
																	"name": "MemberAccess",
																	"src": "15771:19:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 50,
																				"type": "mapping(address => uint256)",
																				"value": "lendersInvestedAmount"
																			},
																			"id": 843,
																			"name": "Identifier",
																			"src": "15791:21:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"member_name": "sender",
																				"referencedDeclaration": null,
																				"type": "address"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 1167,
																						"type": "msg",
																						"value": "msg"
																					},
																					"id": 844,
																					"name": "Identifier",
																					"src": "15813:3:0"
																				}
																			],
																			"id": 845,
																			"name": "MemberAccess",
																			"src": "15813:10:0"
																		}
																	],
																	"id": 846,
																	"name": "IndexAccess",
																	"src": "15791:33:0"
																}
															],
															"id": 847,
															"name": "FunctionCall",
															"src": "15771:54:0"
														}
													],
													"id": 848,
													"name": "ExpressionStatement",
													"src": "15771:54:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 173,
																		"type": "function (address,uint256,uint256)",
																		"value": "LogLenderRefunded"
																	},
																	"id": 849,
																	"name": "Identifier",
																	"src": "15878:17:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "sender",
																		"referencedDeclaration": null,
																		"type": "address"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1167,
																				"type": "msg",
																				"value": "msg"
																			},
																			"id": 850,
																			"name": "Identifier",
																			"src": "15896:3:0"
																		}
																	],
																	"id": 851,
																	"name": "MemberAccess",
																	"src": "15896:10:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 50,
																				"type": "mapping(address => uint256)",
																				"value": "lendersInvestedAmount"
																			},
																			"id": 852,
																			"name": "Identifier",
																			"src": "15908:21:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"member_name": "sender",
																				"referencedDeclaration": null,
																				"type": "address"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 1167,
																						"type": "msg",
																						"value": "msg"
																					},
																					"id": 853,
																					"name": "Identifier",
																					"src": "15930:3:0"
																				}
																			],
																			"id": 854,
																			"name": "MemberAccess",
																			"src": "15930:10:0"
																		}
																	],
																	"id": 855,
																	"name": "IndexAccess",
																	"src": "15908:33:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "timestamp",
																		"referencedDeclaration": null,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1159,
																				"type": "block",
																				"value": "block"
																			},
																			"id": 856,
																			"name": "Identifier",
																			"src": "15943:5:0"
																		}
																	],
																	"id": 857,
																	"name": "MemberAccess",
																	"src": "15943:15:0"
																}
															],
															"id": 858,
															"name": "FunctionCall",
															"src": "15878:81:0"
														}
													],
													"id": 859,
													"name": "ExpressionStatement",
													"src": "15878:81:0"
												},
												{
													"attributes": {
														"falseBody": null
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "==",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "balance",
																		"referencedDeclaration": null,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1184,
																				"type": "contract Credit",
																				"value": "this"
																			},
																			"id": 860,
																			"name": "Identifier",
																			"src": "16030:4:0"
																		}
																	],
																	"id": 861,
																	"name": "MemberAccess",
																	"src": "16030:12:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "30",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "number",
																		"type": "int_const 0",
																		"value": "0"
																	},
																	"id": 862,
																	"name": "Literal",
																	"src": "16046:1:0"
																}
															],
															"id": 863,
															"name": "BinaryOperation",
															"src": "16030:17:0"
														},
														{
															"children": [
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"operator": "=",
																				"type": "bool"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 33,
																						"type": "bool",
																						"value": "active"
																					},
																					"id": 864,
																					"name": "Identifier",
																					"src": "16113:6:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"hexvalue": "66616c7365",
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"subdenomination": null,
																						"token": "bool",
																						"type": "bool",
																						"value": "false"
																					},
																					"id": 865,
																					"name": "Literal",
																					"src": "16122:5:0"
																				}
																			],
																			"id": 866,
																			"name": "Assignment",
																			"src": "16113:14:0"
																		}
																	],
																	"id": 867,
																	"name": "ExpressionStatement",
																	"src": "16113:14:0"
																},
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "tuple()",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 91,
																						"type": "function (bool,uint256)",
																						"value": "LogCreditStateActiveChanged"
																					},
																					"id": 868,
																					"name": "Identifier",
																					"src": "16186:27:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 33,
																						"type": "bool",
																						"value": "active"
																					},
																					"id": 869,
																					"name": "Identifier",
																					"src": "16214:6:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "timestamp",
																						"referencedDeclaration": null,
																						"type": "uint256"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1159,
																								"type": "block",
																								"value": "block"
																							},
																							"id": 870,
																							"name": "Identifier",
																							"src": "16222:5:0"
																						}
																					],
																					"id": 871,
																					"name": "MemberAccess",
																					"src": "16222:15:0"
																				}
																			],
																			"id": 872,
																			"name": "FunctionCall",
																			"src": "16186:52:0"
																		}
																	],
																	"id": 873,
																	"name": "ExpressionStatement",
																	"src": "16186:52:0"
																},
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"operator": "=",
																				"type": "enum Credit.State"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 42,
																						"type": "enum Credit.State",
																						"value": "state"
																					},
																					"id": 874,
																					"name": "Identifier",
																					"src": "16332:5:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"member_name": "expired",
																						"referencedDeclaration": null,
																						"type": "enum Credit.State"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 40,
																								"type": "type(enum Credit.State)",
																								"value": "State"
																							},
																							"id": 875,
																							"name": "Identifier",
																							"src": "16340:5:0"
																						}
																					],
																					"id": 876,
																					"name": "MemberAccess",
																					"src": "16340:13:0"
																				}
																			],
																			"id": 877,
																			"name": "Assignment",
																			"src": "16332:21:0"
																		}
																	],
																	"id": 878,
																	"name": "ExpressionStatement",
																	"src": "16332:21:0"
																},
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "tuple()",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_enum$_State_$40",
																								"typeString": "enum Credit.State"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 85,
																						"type": "function (enum Credit.State,uint256)",
																						"value": "LogCreditStateChanged"
																					},
																					"id": 879,
																					"name": "Identifier",
																					"src": "16404:21:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 42,
																						"type": "enum Credit.State",
																						"value": "state"
																					},
																					"id": 880,
																					"name": "Identifier",
																					"src": "16426:5:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "timestamp",
																						"referencedDeclaration": null,
																						"type": "uint256"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1159,
																								"type": "block",
																								"value": "block"
																							},
																							"id": 881,
																							"name": "Identifier",
																							"src": "16433:5:0"
																						}
																					],
																					"id": 882,
																					"name": "MemberAccess",
																					"src": "16433:15:0"
																				}
																			],
																			"id": 883,
																			"name": "FunctionCall",
																			"src": "16404:45:0"
																		}
																	],
																	"id": 884,
																	"name": "ExpressionStatement",
																	"src": "16404:45:0"
																}
															],
															"id": 885,
															"name": "Block",
															"src": "16049:412:0"
														}
													],
													"id": 886,
													"name": "IfStatement",
													"src": "16026:435:0"
												}
											],
											"id": 887,
											"name": "Block",
											"src": "15569:899:0"
										}
									],
									"id": 888,
									"name": "FunctionDefinition",
									"src": "15514:954:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "fraudVote",
										"payable": false,
										"scope": 1003,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 889,
											"name": "ParameterList",
											"src": "16564:2:0"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 934,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "bool",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "bool",
																"type": "bool"
															},
															"id": 894,
															"name": "ElementaryTypeName",
															"src": "16603:4:0"
														}
													],
													"id": 895,
													"name": "VariableDeclaration",
													"src": "16603:4:0"
												}
											],
											"id": 896,
											"name": "ParameterList",
											"src": "16602:6:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 183,
														"type": "modifier ()",
														"value": "isActive"
													},
													"id": 890,
													"name": "Identifier",
													"src": "16574:8:0"
												}
											],
											"id": 891,
											"name": "ModifierInvocation",
											"src": "16574:8:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 207,
														"type": "modifier ()",
														"value": "onlyLender"
													},
													"id": 892,
													"name": "Identifier",
													"src": "16583:10:0"
												}
											],
											"id": 893,
											"name": "ModifierInvocation",
											"src": "16583:10:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1170,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 897,
																	"name": "Identifier",
																	"src": "16663:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "==",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"type": "bool"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 73,
																						"type": "mapping(address => bool)",
																						"value": "fraudVoters"
																					},
																					"id": 898,
																					"name": "Identifier",
																					"src": "16671:11:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "sender",
																						"referencedDeclaration": null,
																						"type": "address"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1167,
																								"type": "msg",
																								"value": "msg"
																							},
																							"id": 899,
																							"name": "Identifier",
																							"src": "16683:3:0"
																						}
																					],
																					"id": 900,
																					"name": "MemberAccess",
																					"src": "16683:10:0"
																				}
																			],
																			"id": 901,
																			"name": "IndexAccess",
																			"src": "16671:23:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"hexvalue": "66616c7365",
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"subdenomination": null,
																				"token": "bool",
																				"type": "bool",
																				"value": "false"
																			},
																			"id": 902,
																			"name": "Literal",
																			"src": "16698:5:0"
																		}
																	],
																	"id": 903,
																	"name": "BinaryOperation",
																	"src": "16671:32:0"
																}
															],
															"id": 904,
															"name": "FunctionCall",
															"src": "16663:41:0"
														}
													],
													"id": 905,
													"name": "ExpressionStatement",
													"src": "16663:41:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "++",
																"prefix": false,
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 69,
																		"type": "uint256",
																		"value": "fraudVotes"
																	},
																	"id": 906,
																	"name": "Identifier",
																	"src": "16757:10:0"
																}
															],
															"id": 907,
															"name": "UnaryOperation",
															"src": "16757:12:0"
														}
													],
													"id": 908,
													"name": "ExpressionStatement",
													"src": "16757:12:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "==",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 73,
																				"type": "mapping(address => bool)",
																				"value": "fraudVoters"
																			},
																			"id": 909,
																			"name": "Identifier",
																			"src": "16821:11:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"member_name": "sender",
																				"referencedDeclaration": null,
																				"type": "address"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 1167,
																						"type": "msg",
																						"value": "msg"
																					},
																					"id": 910,
																					"name": "Identifier",
																					"src": "16833:3:0"
																				}
																			],
																			"id": 911,
																			"name": "MemberAccess",
																			"src": "16833:10:0"
																		}
																	],
																	"id": 912,
																	"name": "IndexAccess",
																	"src": "16821:23:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "74727565",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "bool",
																		"type": "bool",
																		"value": "true"
																	},
																	"id": 913,
																	"name": "Literal",
																	"src": "16848:4:0"
																}
															],
															"id": 914,
															"name": "BinaryOperation",
															"src": "16821:31:0"
														}
													],
													"id": 915,
													"name": "ExpressionStatement",
													"src": "16821:31:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 165,
																		"type": "function (address,uint256)",
																		"value": "LogLenderVoteForFraud"
																	},
																	"id": 916,
																	"name": "Identifier",
																	"src": "16904:21:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "sender",
																		"referencedDeclaration": null,
																		"type": "address"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1167,
																				"type": "msg",
																				"value": "msg"
																			},
																			"id": 917,
																			"name": "Identifier",
																			"src": "16926:3:0"
																		}
																	],
																	"id": 918,
																	"name": "MemberAccess",
																	"src": "16926:10:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "timestamp",
																		"referencedDeclaration": null,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1159,
																				"type": "block",
																				"value": "block"
																			},
																			"id": 919,
																			"name": "Identifier",
																			"src": "16938:5:0"
																		}
																	],
																	"id": 920,
																	"name": "MemberAccess",
																	"src": "16938:15:0"
																}
															],
															"id": 921,
															"name": "FunctionCall",
															"src": "16904:50:0"
														}
													],
													"id": 922,
													"name": "ExpressionStatement",
													"src": "16904:50:0"
												},
												{
													"attributes": {
														"falseBody": null
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "==",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 53,
																		"type": "uint256",
																		"value": "lendersCount"
																	},
																	"id": 923,
																	"name": "Identifier",
																	"src": "17014:12:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 69,
																		"type": "uint256",
																		"value": "fraudVotes"
																	},
																	"id": 924,
																	"name": "Identifier",
																	"src": "17030:10:0"
																}
															],
															"id": 925,
															"name": "BinaryOperation",
															"src": "17014:26:0"
														},
														{
															"children": [
																{
																	"attributes": {
																		"functionReturnParameters": 896
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"arguments": [
																					null
																				],
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "bool",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							null
																						],
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 961,
																						"type": "function () returns (bool)",
																						"value": "fraud"
																					},
																					"id": 926,
																					"name": "Identifier",
																					"src": "17103:5:0"
																				}
																			],
																			"id": 927,
																			"name": "FunctionCall",
																			"src": "17103:7:0"
																		}
																	],
																	"id": 928,
																	"name": "Return",
																	"src": "17096:14:0"
																}
															],
															"id": 929,
															"name": "Block",
															"src": "17042:80:0"
														}
													],
													"id": 930,
													"name": "IfStatement",
													"src": "17010:112:0"
												},
												{
													"attributes": {
														"functionReturnParameters": 896
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"hexvalue": "74727565",
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"subdenomination": null,
																"token": "bool",
																"type": "bool",
																"value": "true"
															},
															"id": 931,
															"name": "Literal",
															"src": "17139:4:0"
														}
													],
													"id": 932,
													"name": "Return",
													"src": "17132:11:0"
												}
											],
											"id": 933,
											"name": "Block",
											"src": "16609:542:0"
										}
									],
									"id": 934,
									"name": "FunctionDefinition",
									"src": "16546:605:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "fraud",
										"payable": false,
										"scope": 1003,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 935,
											"name": "ParameterList",
											"src": "17300:2:0"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 961,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "bool",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "bool",
																"type": "bool"
															},
															"id": 936,
															"name": "ElementaryTypeName",
															"src": "17321:4:0"
														}
													],
													"id": 937,
													"name": "VariableDeclaration",
													"src": "17321:4:0"
												}
											],
											"id": 938,
											"name": "ParameterList",
											"src": "17320:6:0"
										},
										{
											"children": [
												{
													"attributes": {
														"assignments": [
															940
														]
													},
													"children": [
														{
															"attributes": {
																"constant": false,
																"name": "fraudStatusResult",
																"scope": 961,
																"stateVariable": false,
																"storageLocation": "default",
																"type": "bool",
																"value": null,
																"visibility": "internal"
															},
															"children": [
																{
																	"attributes": {
																		"name": "bool",
																		"type": "bool"
																	},
																	"id": 939,
																	"name": "ElementaryTypeName",
																	"src": "17412:4:0"
																}
															],
															"id": 940,
															"name": "VariableDeclaration",
															"src": "17412:22:0"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "bool",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "call",
																		"referencedDeclaration": null,
																		"type": "function () payable returns (bool)"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1039,
																				"type": "address",
																				"value": "owner"
																			},
																			"id": 941,
																			"name": "Identifier",
																			"src": "17437:5:0"
																		}
																	],
																	"id": 942,
																	"name": "MemberAccess",
																	"src": "17437:10:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"isStructConstructorCall": false,
																		"lValueRequested": false,
																		"names": [
																			null
																		],
																		"type": "bytes4",
																		"type_conversion": true
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"type": "type(bytes4)",
																				"value": "bytes4"
																			},
																			"id": 943,
																			"name": "ElementaryTypeNameExpression",
																			"src": "17448:6:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "bytes32",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_bb9e4247a9737512c22376911ad76d2ccb7492c06067f8baea333b4b5fcfe910",
																								"typeString": "literal_string \"setFraudStatus(address)\""
																							}
																						],
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 1161,
																						"type": "function () pure returns (bytes32)",
																						"value": "keccak256"
																					},
																					"id": 944,
																					"name": "Identifier",
																					"src": "17455:9:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"hexvalue": "7365744672617564537461747573286164647265737329",
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"subdenomination": null,
																						"token": "string",
																						"type": "literal_string \"setFraudStatus(address)\"",
																						"value": "setFraudStatus(address)"
																					},
																					"id": 945,
																					"name": "Literal",
																					"src": "17465:25:0"
																				}
																			],
																			"id": 946,
																			"name": "FunctionCall",
																			"src": "17455:36:0"
																		}
																	],
																	"id": 947,
																	"name": "FunctionCall",
																	"src": "17448:44:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 10,
																		"type": "address",
																		"value": "borrower"
																	},
																	"id": 948,
																	"name": "Identifier",
																	"src": "17494:8:0"
																}
															],
															"id": 949,
															"name": "FunctionCall",
															"src": "17437:66:0"
														}
													],
													"id": 950,
													"name": "VariableDeclarationStatement",
													"src": "17412:91:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 129,
																		"type": "function (address,bool,uint256)",
																		"value": "LogBorrowerIsFraud"
																	},
																	"id": 951,
																	"name": "Identifier",
																	"src": "17554:18:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 10,
																		"type": "address",
																		"value": "borrower"
																	},
																	"id": 952,
																	"name": "Identifier",
																	"src": "17573:8:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 940,
																		"type": "bool",
																		"value": "fraudStatusResult"
																	},
																	"id": 953,
																	"name": "Identifier",
																	"src": "17583:17:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "timestamp",
																		"referencedDeclaration": null,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1159,
																				"type": "block",
																				"value": "block"
																			},
																			"id": 954,
																			"name": "Identifier",
																			"src": "17602:5:0"
																		}
																	],
																	"id": 955,
																	"name": "MemberAccess",
																	"src": "17602:15:0"
																}
															],
															"id": 956,
															"name": "FunctionCall",
															"src": "17554:64:0"
														}
													],
													"id": 957,
													"name": "ExpressionStatement",
													"src": "17554:64:0"
												},
												{
													"attributes": {
														"functionReturnParameters": 938
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"overloadedDeclarations": [
																	null
																],
																"referencedDeclaration": 940,
																"type": "bool",
																"value": "fraudStatusResult"
															},
															"id": 958,
															"name": "Identifier",
															"src": "17638:17:0"
														}
													],
													"id": 959,
													"name": "Return",
													"src": "17631:24:0"
												}
											],
											"id": 960,
											"name": "Block",
											"src": "17327:336:0"
										}
									],
									"id": 961,
									"name": "FunctionDefinition",
									"src": "17286:377:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "changeState",
										"payable": false,
										"scope": 1003,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "external"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_state",
														"scope": 981,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "enum Credit.State",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"contractScope": null,
																"name": "State",
																"referencedDeclaration": 40,
																"type": "enum Credit.State"
															},
															"id": 962,
															"name": "UserDefinedTypeName",
															"src": "17872:5:0"
														}
													],
													"id": 963,
													"name": "VariableDeclaration",
													"src": "17872:12:0"
												}
											],
											"id": 964,
											"name": "ParameterList",
											"src": "17871:14:0"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 981,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 967,
															"name": "ElementaryTypeName",
															"src": "17914:4:0"
														}
													],
													"id": 968,
													"name": "VariableDeclaration",
													"src": "17914:4:0"
												}
											],
											"id": 969,
											"name": "ParameterList",
											"src": "17913:6:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 1056,
														"type": "modifier ()",
														"value": "onlyOwner"
													},
													"id": 965,
													"name": "Identifier",
													"src": "17895:9:0"
												}
											],
											"id": 966,
											"name": "ModifierInvocation",
											"src": "17895:9:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "enum Credit.State"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 42,
																		"type": "enum Credit.State",
																		"value": "state"
																	},
																	"id": 970,
																	"name": "Identifier",
																	"src": "17931:5:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 963,
																		"type": "enum Credit.State",
																		"value": "_state"
																	},
																	"id": 971,
																	"name": "Identifier",
																	"src": "17939:6:0"
																}
															],
															"id": 972,
															"name": "Assignment",
															"src": "17931:14:0"
														}
													],
													"id": 973,
													"name": "ExpressionStatement",
													"src": "17931:14:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_enum$_State_$40",
																				"typeString": "enum Credit.State"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 85,
																		"type": "function (enum Credit.State,uint256)",
																		"value": "LogCreditStateChanged"
																	},
																	"id": 974,
																	"name": "Identifier",
																	"src": "17988:21:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 42,
																		"type": "enum Credit.State",
																		"value": "state"
																	},
																	"id": 975,
																	"name": "Identifier",
																	"src": "18010:5:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "timestamp",
																		"referencedDeclaration": null,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1159,
																				"type": "block",
																				"value": "block"
																			},
																			"id": 976,
																			"name": "Identifier",
																			"src": "18017:5:0"
																		}
																	],
																	"id": 977,
																	"name": "MemberAccess",
																	"src": "18017:15:0"
																}
															],
															"id": 978,
															"name": "FunctionCall",
															"src": "17988:45:0"
														}
													],
													"id": 979,
													"name": "ExpressionStatement",
													"src": "17988:45:0"
												}
											],
											"id": 980,
											"name": "Block",
											"src": "17920:121:0"
										}
									],
									"id": 981,
									"name": "FunctionDefinition",
									"src": "17851:190:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "toggleActive",
										"payable": false,
										"scope": 1003,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "external"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 982,
											"name": "ParameterList",
											"src": "18251:2:0"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 1002,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "bool",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "bool",
																"type": "bool"
															},
															"id": 985,
															"name": "ElementaryTypeName",
															"src": "18282:4:0"
														}
													],
													"id": 986,
													"name": "VariableDeclaration",
													"src": "18282:4:0"
												}
											],
											"id": 987,
											"name": "ParameterList",
											"src": "18281:6:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 1056,
														"type": "modifier ()",
														"value": "onlyOwner"
													},
													"id": 983,
													"name": "Identifier",
													"src": "18263:9:0"
												}
											],
											"id": 984,
											"name": "ModifierInvocation",
											"src": "18263:9:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 33,
																		"type": "bool",
																		"value": "active"
																	},
																	"id": 988,
																	"name": "Identifier",
																	"src": "18299:6:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "!",
																		"prefix": true,
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 33,
																				"type": "bool",
																				"value": "active"
																			},
																			"id": 989,
																			"name": "Identifier",
																			"src": "18309:6:0"
																		}
																	],
																	"id": 990,
																	"name": "UnaryOperation",
																	"src": "18308:7:0"
																}
															],
															"id": 991,
															"name": "Assignment",
															"src": "18299:16:0"
														}
													],
													"id": 992,
													"name": "ExpressionStatement",
													"src": "18299:16:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 91,
																		"type": "function (bool,uint256)",
																		"value": "LogCreditStateActiveChanged"
																	},
																	"id": 993,
																	"name": "Identifier",
																	"src": "18366:27:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 33,
																		"type": "bool",
																		"value": "active"
																	},
																	"id": 994,
																	"name": "Identifier",
																	"src": "18394:6:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "timestamp",
																		"referencedDeclaration": null,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1159,
																				"type": "block",
																				"value": "block"
																			},
																			"id": 995,
																			"name": "Identifier",
																			"src": "18402:5:0"
																		}
																	],
																	"id": 996,
																	"name": "MemberAccess",
																	"src": "18402:15:0"
																}
															],
															"id": 997,
															"name": "FunctionCall",
															"src": "18366:52:0"
														}
													],
													"id": 998,
													"name": "ExpressionStatement",
													"src": "18366:52:0"
												},
												{
													"attributes": {
														"functionReturnParameters": 987
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"overloadedDeclarations": [
																	null
																],
																"referencedDeclaration": 33,
																"type": "bool",
																"value": "active"
															},
															"id": 999,
															"name": "Identifier",
															"src": "18438:6:0"
														}
													],
													"id": 1000,
													"name": "Return",
													"src": "18431:13:0"
												}
											],
											"id": 1001,
											"name": "Block",
											"src": "18288:164:0"
										}
									],
									"id": 1002,
									"name": "FunctionDefinition",
									"src": "18230:222:0"
								}
							],
							"id": 1003,
							"name": "ContractDefinition",
							"src": "189:18268:0"
						}
					],
					"id": 1004,
					"name": "SourceUnit",
					"src": "0:18457:0"
				}
			},
			"smart-contracts/contracts/common/Destructible.sol": {
				"ast": {
					"absolutePath": "smart-contracts/contracts/common/Destructible.sol",
					"exportedSymbols": {
						"Destructible": [
							1035
						]
					},
					"id": 1036,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1005,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:1"
						},
						{
							"absolutePath": "smart-contracts/contracts/common/Ownable.sol",
							"file": "./Ownable.sol",
							"id": 1006,
							"nodeType": "ImportDirective",
							"scope": 1036,
							"sourceUnit": 1058,
							"src": "28:23:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": [],
									"baseName": {
										"contractScope": null,
										"id": 1007,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1057,
										"src": "80:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$1057",
											"typeString": "contract Ownable"
										}
									},
									"id": 1008,
									"nodeType": "InheritanceSpecifier",
									"src": "80:7:1"
								}
							],
							"contractDependencies": [
								1057
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1035,
							"linearizedBaseContracts": [
								1035,
								1057
							],
							"name": "Destructible",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1011,
										"nodeType": "Block",
										"src": "140:3:1",
										"statements": []
									},
									"id": 1012,
									"implemented": true,
									"isConstructor": true,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "Destructible",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1009,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "122:2:1"
									},
									"payable": true,
									"returnParameters": {
										"id": 1010,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "140:0:1"
									},
									"scope": 1035,
									"src": "101:42:1",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1021,
										"nodeType": "Block",
										"src": "187:38:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1018,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1039,
															"src": "211:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1017,
														"name": "selfdestruct",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1173,
														"src": "198:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "198:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1020,
												"nodeType": "ExpressionStatement",
												"src": "198:19:1"
											}
										]
									},
									"id": 1022,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 1015,
											"modifierName": {
												"argumentTypes": null,
												"id": 1014,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1056,
												"src": "177:9:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "177:9:1"
										}
									],
									"name": "destroy",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "167:2:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "187:0:1"
									},
									"scope": 1035,
									"src": "151:74:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1033,
										"nodeType": "Block",
										"src": "298:43:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1030,
															"name": "_recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1024,
															"src": "322:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1029,
														"name": "selfdestruct",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1173,
														"src": "309:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1031,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "309:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1032,
												"nodeType": "ExpressionStatement",
												"src": "309:24:1"
											}
										]
									},
									"id": 1034,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 1027,
											"modifierName": {
												"argumentTypes": null,
												"id": 1026,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1056,
												"src": "288:9:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "288:9:1"
										}
									],
									"name": "destroyAndSend",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1024,
												"name": "_recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "261:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1023,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "261:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "260:20:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 1028,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "298:0:1"
									},
									"scope": 1035,
									"src": "237:104:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 1036,
							"src": "55:289:1"
						}
					],
					"src": "0:344:1"
				},
				"id": 1,
				"legacyAST": {
					"attributes": {
						"absolutePath": "smart-contracts/contracts/common/Destructible.sol",
						"exportedSymbols": {
							"Destructible": [
								1035
							]
						}
					},
					"children": [
						{
							"attributes": {
								"literals": [
									"solidity",
									"^",
									"0.4",
									".18"
								]
							},
							"id": 1005,
							"name": "PragmaDirective",
							"src": "0:24:1"
						},
						{
							"attributes": {
								"SourceUnit": 1058,
								"absolutePath": "smart-contracts/contracts/common/Ownable.sol",
								"file": "./Ownable.sol",
								"scope": 1036,
								"symbolAliases": [
									null
								],
								"unitAlias": ""
							},
							"id": 1006,
							"name": "ImportDirective",
							"src": "28:23:1"
						},
						{
							"attributes": {
								"contractDependencies": [
									1057
								],
								"contractKind": "contract",
								"documentation": null,
								"fullyImplemented": true,
								"linearizedBaseContracts": [
									1035,
									1057
								],
								"name": "Destructible",
								"scope": 1036
							},
							"children": [
								{
									"attributes": {
										"arguments": [
											null
										]
									},
									"children": [
										{
											"attributes": {
												"contractScope": null,
												"name": "Ownable",
												"referencedDeclaration": 1057,
												"type": "contract Ownable"
											},
											"id": 1007,
											"name": "UserDefinedTypeName",
											"src": "80:7:1"
										}
									],
									"id": 1008,
									"name": "InheritanceSpecifier",
									"src": "80:7:1"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": true,
										"modifiers": [
											null
										],
										"name": "Destructible",
										"payable": true,
										"scope": 1035,
										"stateMutability": "payable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 1009,
											"name": "ParameterList",
											"src": "122:2:1"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 1010,
											"name": "ParameterList",
											"src": "140:0:1"
										},
										{
											"attributes": {
												"statements": [
													null
												]
											},
											"children": [],
											"id": 1011,
											"name": "Block",
											"src": "140:3:1"
										}
									],
									"id": 1012,
									"name": "FunctionDefinition",
									"src": "101:42:1"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "destroy",
										"payable": false,
										"scope": 1035,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 1013,
											"name": "ParameterList",
											"src": "167:2:1"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 1016,
											"name": "ParameterList",
											"src": "187:0:1"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 1056,
														"type": "modifier ()",
														"value": "onlyOwner"
													},
													"id": 1014,
													"name": "Identifier",
													"src": "177:9:1"
												}
											],
											"id": 1015,
											"name": "ModifierInvocation",
											"src": "177:9:1"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1173,
																		"type": "function (address)",
																		"value": "selfdestruct"
																	},
																	"id": 1017,
																	"name": "Identifier",
																	"src": "198:12:1"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1039,
																		"type": "address",
																		"value": "owner"
																	},
																	"id": 1018,
																	"name": "Identifier",
																	"src": "211:5:1"
																}
															],
															"id": 1019,
															"name": "FunctionCall",
															"src": "198:19:1"
														}
													],
													"id": 1020,
													"name": "ExpressionStatement",
													"src": "198:19:1"
												}
											],
											"id": 1021,
											"name": "Block",
											"src": "187:38:1"
										}
									],
									"id": 1022,
									"name": "FunctionDefinition",
									"src": "151:74:1"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "destroyAndSend",
										"payable": false,
										"scope": 1035,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_recipient",
														"scope": 1034,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 1023,
															"name": "ElementaryTypeName",
															"src": "261:7:1"
														}
													],
													"id": 1024,
													"name": "VariableDeclaration",
													"src": "261:18:1"
												}
											],
											"id": 1025,
											"name": "ParameterList",
											"src": "260:20:1"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 1028,
											"name": "ParameterList",
											"src": "298:0:1"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 1056,
														"type": "modifier ()",
														"value": "onlyOwner"
													},
													"id": 1026,
													"name": "Identifier",
													"src": "288:9:1"
												}
											],
											"id": 1027,
											"name": "ModifierInvocation",
											"src": "288:9:1"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1173,
																		"type": "function (address)",
																		"value": "selfdestruct"
																	},
																	"id": 1029,
																	"name": "Identifier",
																	"src": "309:12:1"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1024,
																		"type": "address",
																		"value": "_recipient"
																	},
																	"id": 1030,
																	"name": "Identifier",
																	"src": "322:10:1"
																}
															],
															"id": 1031,
															"name": "FunctionCall",
															"src": "309:24:1"
														}
													],
													"id": 1032,
													"name": "ExpressionStatement",
													"src": "309:24:1"
												}
											],
											"id": 1033,
											"name": "Block",
											"src": "298:43:1"
										}
									],
									"id": 1034,
									"name": "FunctionDefinition",
									"src": "237:104:1"
								}
							],
							"id": 1035,
							"name": "ContractDefinition",
							"src": "55:289:1"
						}
					],
					"id": 1036,
					"name": "SourceUnit",
					"src": "0:344:1"
				}
			},
			"smart-contracts/contracts/common/Ownable.sol": {
				"ast": {
					"absolutePath": "smart-contracts/contracts/common/Ownable.sol",
					"exportedSymbols": {
						"Ownable": [
							1057
						]
					},
					"id": 1058,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1037,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:2"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1057,
							"linearizedBaseContracts": [
								1057
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1039,
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"scope": 1057,
									"src": "54:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1038,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "54:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 1045,
									"name": "LogOwnershipTransfered",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1044,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1041,
												"indexed": true,
												"name": "_currentOwner",
												"nodeType": "VariableDeclaration",
												"scope": 1045,
												"src": "112:29:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1040,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "112:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1043,
												"indexed": true,
												"name": "_newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 1045,
												"src": "143:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1042,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "143:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "111:58:2"
									},
									"src": "83:87:2"
								},
								{
									"body": {
										"id": 1055,
										"nodeType": "Block",
										"src": "199:59:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1051,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1048,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1167,
																	"src": "218:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1049,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "218:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1050,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1039,
																"src": "232:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "218:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1047,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1170,
														"src": "210:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1052,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "210:28:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1053,
												"nodeType": "ExpressionStatement",
												"src": "210:28:2"
											},
											{
												"id": 1054,
												"nodeType": "PlaceholderStatement",
												"src": "249:1:2"
											}
										]
									},
									"id": 1056,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "196:2:2"
									},
									"src": "178:80:2",
									"visibility": "internal"
								}
							],
							"scope": 1058,
							"src": "30:505:2"
						}
					],
					"src": "0:537:2"
				},
				"id": 2,
				"legacyAST": {
					"attributes": {
						"absolutePath": "smart-contracts/contracts/common/Ownable.sol",
						"exportedSymbols": {
							"Ownable": [
								1057
							]
						}
					},
					"children": [
						{
							"attributes": {
								"literals": [
									"solidity",
									"^",
									"0.4",
									".18"
								]
							},
							"id": 1037,
							"name": "PragmaDirective",
							"src": "0:24:2"
						},
						{
							"attributes": {
								"baseContracts": [
									null
								],
								"contractDependencies": [
									null
								],
								"contractKind": "contract",
								"documentation": null,
								"fullyImplemented": true,
								"linearizedBaseContracts": [
									1057
								],
								"name": "Ownable",
								"scope": 1058
							},
							"children": [
								{
									"attributes": {
										"constant": false,
										"name": "owner",
										"scope": 1057,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "address",
										"value": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"name": "address",
												"type": "address"
											},
											"id": 1038,
											"name": "ElementaryTypeName",
											"src": "54:7:2"
										}
									],
									"id": 1039,
									"name": "VariableDeclaration",
									"src": "54:20:2"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "LogOwnershipTransfered"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "_currentOwner",
														"scope": 1045,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 1040,
															"name": "ElementaryTypeName",
															"src": "112:7:2"
														}
													],
													"id": 1041,
													"name": "VariableDeclaration",
													"src": "112:29:2"
												},
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "_newOwner",
														"scope": 1045,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 1042,
															"name": "ElementaryTypeName",
															"src": "143:7:2"
														}
													],
													"id": 1043,
													"name": "VariableDeclaration",
													"src": "143:25:2"
												}
											],
											"id": 1044,
											"name": "ParameterList",
											"src": "111:58:2"
										}
									],
									"id": 1045,
									"name": "EventDefinition",
									"src": "83:87:2"
								},
								{
									"attributes": {
										"name": "onlyOwner",
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 1046,
											"name": "ParameterList",
											"src": "196:2:2"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1170,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 1047,
																	"name": "Identifier",
																	"src": "210:7:2"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "==",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"member_name": "sender",
																				"referencedDeclaration": null,
																				"type": "address"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 1167,
																						"type": "msg",
																						"value": "msg"
																					},
																					"id": 1048,
																					"name": "Identifier",
																					"src": "218:3:2"
																				}
																			],
																			"id": 1049,
																			"name": "MemberAccess",
																			"src": "218:10:2"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1039,
																				"type": "address",
																				"value": "owner"
																			},
																			"id": 1050,
																			"name": "Identifier",
																			"src": "232:5:2"
																		}
																	],
																	"id": 1051,
																	"name": "BinaryOperation",
																	"src": "218:19:2"
																}
															],
															"id": 1052,
															"name": "FunctionCall",
															"src": "210:28:2"
														}
													],
													"id": 1053,
													"name": "ExpressionStatement",
													"src": "210:28:2"
												},
												{
													"id": 1054,
													"name": "PlaceholderStatement",
													"src": "249:1:2"
												}
											],
											"id": 1055,
											"name": "Block",
											"src": "199:59:2"
										}
									],
									"id": 1056,
									"name": "ModifierDefinition",
									"src": "178:80:2"
								}
							],
							"id": 1057,
							"name": "ContractDefinition",
							"src": "30:505:2"
						}
					],
					"id": 1058,
					"name": "SourceUnit",
					"src": "0:537:2"
				}
			},
			"smart-contracts/contracts/common/SafeMath.sol": {
				"ast": {
					"absolutePath": "smart-contracts/contracts/common/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1155
						]
					},
					"id": 1156,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1059,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:3"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1155,
							"linearizedBaseContracts": [
								1155
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1091,
										"nodeType": "Block",
										"src": "121:141:3",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1068,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1061,
														"src": "136:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1069,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "141:1:3",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "136:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1074,
												"nodeType": "IfStatement",
												"src": "132:47:3",
												"trueBody": {
													"id": 1073,
													"nodeType": "Block",
													"src": "144:35:3",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1071,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "166:1:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1067,
															"id": 1072,
															"nodeType": "Return",
															"src": "159:8:3"
														}
													]
												}
											},
											{
												"assignments": [
													1076
												],
												"declarations": [
													{
														"constant": false,
														"id": 1076,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 1092,
														"src": "189:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1075,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "189:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1080,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1079,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1077,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1061,
														"src": "201:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1078,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1063,
														"src": "205:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "201:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "189:17:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1086,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1084,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1082,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1076,
																	"src": "224:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1083,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1061,
																	"src": "228:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "224:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1085,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1063,
																"src": "233:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "224:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1081,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1158,
														"src": "217:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "217:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1088,
												"nodeType": "ExpressionStatement",
												"src": "217:18:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1089,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1076,
													"src": "253:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1067,
												"id": 1090,
												"nodeType": "Return",
												"src": "246:8:3"
											}
										]
									},
									"id": 1092,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1061,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "67:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1060,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "67:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1063,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "78:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1062,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "78:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "66:22:3"
									},
									"payable": false,
									"returnParameters": {
										"id": 1067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1066,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "112:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1065,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "112:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "111:9:3"
									},
									"scope": 1155,
									"src": "54:208:3",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1109,
										"nodeType": "Block",
										"src": "337:126:3",
										"statements": [
											{
												"assignments": [
													1102
												],
												"declarations": [
													{
														"constant": false,
														"id": 1102,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 1110,
														"src": "419:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1101,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "419:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1106,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1103,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1094,
														"src": "431:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1104,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1096,
														"src": "435:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "431:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "419:17:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1107,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1102,
													"src": "454:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1100,
												"id": 1108,
												"nodeType": "Return",
												"src": "447:8:3"
											}
										]
									},
									"id": 1110,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1097,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1094,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "283:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1093,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "283:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1096,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "294:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1095,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "294:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "282:22:3"
									},
									"payable": false,
									"returnParameters": {
										"id": 1100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1099,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "328:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1098,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "328:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "327:9:3"
									},
									"scope": 1155,
									"src": "270:193:3",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1129,
										"nodeType": "Block",
										"src": "548:56:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1122,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1120,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1114,
																"src": "566:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1121,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1112,
																"src": "571:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "566:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1119,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1158,
														"src": "559:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "559:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1124,
												"nodeType": "ExpressionStatement",
												"src": "559:14:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1125,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1112,
														"src": "591:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1126,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1114,
														"src": "595:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "591:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1118,
												"id": 1128,
												"nodeType": "Return",
												"src": "584:12:3"
											}
										]
									},
									"id": 1130,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1112,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "494:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1111,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "494:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1114,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "505:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "493:22:3"
									},
									"payable": false,
									"returnParameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1117,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "539:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "539:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "538:9:3"
									},
									"scope": 1155,
									"src": "481:123:3",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1153,
										"nodeType": "Block",
										"src": "689:80:3",
										"statements": [
											{
												"assignments": [
													1140
												],
												"declarations": [
													{
														"constant": false,
														"id": 1140,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 1154,
														"src": "700:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1139,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "700:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1144,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1141,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1132,
														"src": "712:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1142,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1134,
														"src": "716:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "712:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "700:17:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1148,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1146,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1140,
																"src": "735:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1147,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1132,
																"src": "740:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "735:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1145,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1158,
														"src": "728:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "728:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1150,
												"nodeType": "ExpressionStatement",
												"src": "728:14:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1151,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1140,
													"src": "760:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1138,
												"id": 1152,
												"nodeType": "Return",
												"src": "753:8:3"
											}
										]
									},
									"id": 1154,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1132,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "635:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1134,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "646:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "634:22:3"
									},
									"payable": false,
									"returnParameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1137,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "680:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "680:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "679:9:3"
									},
									"scope": 1155,
									"src": "622:147:3",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 1156,
							"src": "30:742:3"
						}
					],
					"src": "0:774:3"
				},
				"id": 3,
				"legacyAST": {
					"attributes": {
						"absolutePath": "smart-contracts/contracts/common/SafeMath.sol",
						"exportedSymbols": {
							"SafeMath": [
								1155
							]
						}
					},
					"children": [
						{
							"attributes": {
								"literals": [
									"solidity",
									"^",
									"0.4",
									".18"
								]
							},
							"id": 1059,
							"name": "PragmaDirective",
							"src": "0:24:3"
						},
						{
							"attributes": {
								"baseContracts": [
									null
								],
								"contractDependencies": [
									null
								],
								"contractKind": "library",
								"documentation": null,
								"fullyImplemented": true,
								"linearizedBaseContracts": [
									1155
								],
								"name": "SafeMath",
								"scope": 1156
							},
							"children": [
								{
									"attributes": {
										"constant": true,
										"implemented": true,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "mul",
										"payable": false,
										"scope": 1155,
										"stateMutability": "pure",
										"superFunction": null,
										"visibility": "internal"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "a",
														"scope": 1092,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 1060,
															"name": "ElementaryTypeName",
															"src": "67:7:3"
														}
													],
													"id": 1061,
													"name": "VariableDeclaration",
													"src": "67:9:3"
												},
												{
													"attributes": {
														"constant": false,
														"name": "b",
														"scope": 1092,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 1062,
															"name": "ElementaryTypeName",
															"src": "78:7:3"
														}
													],
													"id": 1063,
													"name": "VariableDeclaration",
													"src": "78:9:3"
												}
											],
											"id": 1064,
											"name": "ParameterList",
											"src": "66:22:3"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 1092,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 1065,
															"name": "ElementaryTypeName",
															"src": "112:7:3"
														}
													],
													"id": 1066,
													"name": "VariableDeclaration",
													"src": "112:7:3"
												}
											],
											"id": 1067,
											"name": "ParameterList",
											"src": "111:9:3"
										},
										{
											"children": [
												{
													"attributes": {
														"falseBody": null
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "==",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1061,
																		"type": "uint256",
																		"value": "a"
																	},
																	"id": 1068,
																	"name": "Identifier",
																	"src": "136:1:3"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "30",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "number",
																		"type": "int_const 0",
																		"value": "0"
																	},
																	"id": 1069,
																	"name": "Literal",
																	"src": "141:1:3"
																}
															],
															"id": 1070,
															"name": "BinaryOperation",
															"src": "136:6:3"
														},
														{
															"children": [
																{
																	"attributes": {
																		"functionReturnParameters": 1067
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"hexvalue": "30",
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"subdenomination": null,
																				"token": "number",
																				"type": "int_const 0",
																				"value": "0"
																			},
																			"id": 1071,
																			"name": "Literal",
																			"src": "166:1:3"
																		}
																	],
																	"id": 1072,
																	"name": "Return",
																	"src": "159:8:3"
																}
															],
															"id": 1073,
															"name": "Block",
															"src": "144:35:3"
														}
													],
													"id": 1074,
													"name": "IfStatement",
													"src": "132:47:3"
												},
												{
													"attributes": {
														"assignments": [
															1076
														]
													},
													"children": [
														{
															"attributes": {
																"constant": false,
																"name": "c",
																"scope": 1092,
																"stateVariable": false,
																"storageLocation": "default",
																"type": "uint256",
																"value": null,
																"visibility": "internal"
															},
															"children": [
																{
																	"attributes": {
																		"name": "uint256",
																		"type": "uint256"
																	},
																	"id": 1075,
																	"name": "ElementaryTypeName",
																	"src": "189:7:3"
																}
															],
															"id": 1076,
															"name": "VariableDeclaration",
															"src": "189:9:3"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "*",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1061,
																		"type": "uint256",
																		"value": "a"
																	},
																	"id": 1077,
																	"name": "Identifier",
																	"src": "201:1:3"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1063,
																		"type": "uint256",
																		"value": "b"
																	},
																	"id": 1078,
																	"name": "Identifier",
																	"src": "205:1:3"
																}
															],
															"id": 1079,
															"name": "BinaryOperation",
															"src": "201:5:3"
														}
													],
													"id": 1080,
													"name": "VariableDeclarationStatement",
													"src": "189:17:3"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1158,
																		"type": "function (bool) pure",
																		"value": "assert"
																	},
																	"id": 1081,
																	"name": "Identifier",
																	"src": "217:6:3"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "==",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"operator": "/",
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 1076,
																						"type": "uint256",
																						"value": "c"
																					},
																					"id": 1082,
																					"name": "Identifier",
																					"src": "224:1:3"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 1061,
																						"type": "uint256",
																						"value": "a"
																					},
																					"id": 1083,
																					"name": "Identifier",
																					"src": "228:1:3"
																				}
																			],
																			"id": 1084,
																			"name": "BinaryOperation",
																			"src": "224:5:3"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1063,
																				"type": "uint256",
																				"value": "b"
																			},
																			"id": 1085,
																			"name": "Identifier",
																			"src": "233:1:3"
																		}
																	],
																	"id": 1086,
																	"name": "BinaryOperation",
																	"src": "224:10:3"
																}
															],
															"id": 1087,
															"name": "FunctionCall",
															"src": "217:18:3"
														}
													],
													"id": 1088,
													"name": "ExpressionStatement",
													"src": "217:18:3"
												},
												{
													"attributes": {
														"functionReturnParameters": 1067
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"overloadedDeclarations": [
																	null
																],
																"referencedDeclaration": 1076,
																"type": "uint256",
																"value": "c"
															},
															"id": 1089,
															"name": "Identifier",
															"src": "253:1:3"
														}
													],
													"id": 1090,
													"name": "Return",
													"src": "246:8:3"
												}
											],
											"id": 1091,
											"name": "Block",
											"src": "121:141:3"
										}
									],
									"id": 1092,
									"name": "FunctionDefinition",
									"src": "54:208:3"
								},
								{
									"attributes": {
										"constant": true,
										"implemented": true,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "div",
										"payable": false,
										"scope": 1155,
										"stateMutability": "pure",
										"superFunction": null,
										"visibility": "internal"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "a",
														"scope": 1110,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 1093,
															"name": "ElementaryTypeName",
															"src": "283:7:3"
														}
													],
													"id": 1094,
													"name": "VariableDeclaration",
													"src": "283:9:3"
												},
												{
													"attributes": {
														"constant": false,
														"name": "b",
														"scope": 1110,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 1095,
															"name": "ElementaryTypeName",
															"src": "294:7:3"
														}
													],
													"id": 1096,
													"name": "VariableDeclaration",
													"src": "294:9:3"
												}
											],
											"id": 1097,
											"name": "ParameterList",
											"src": "282:22:3"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 1110,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 1098,
															"name": "ElementaryTypeName",
															"src": "328:7:3"
														}
													],
													"id": 1099,
													"name": "VariableDeclaration",
													"src": "328:7:3"
												}
											],
											"id": 1100,
											"name": "ParameterList",
											"src": "327:9:3"
										},
										{
											"children": [
												{
													"attributes": {
														"assignments": [
															1102
														]
													},
													"children": [
														{
															"attributes": {
																"constant": false,
																"name": "c",
																"scope": 1110,
																"stateVariable": false,
																"storageLocation": "default",
																"type": "uint256",
																"value": null,
																"visibility": "internal"
															},
															"children": [
																{
																	"attributes": {
																		"name": "uint256",
																		"type": "uint256"
																	},
																	"id": 1101,
																	"name": "ElementaryTypeName",
																	"src": "419:7:3"
																}
															],
															"id": 1102,
															"name": "VariableDeclaration",
															"src": "419:9:3"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "/",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1094,
																		"type": "uint256",
																		"value": "a"
																	},
																	"id": 1103,
																	"name": "Identifier",
																	"src": "431:1:3"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1096,
																		"type": "uint256",
																		"value": "b"
																	},
																	"id": 1104,
																	"name": "Identifier",
																	"src": "435:1:3"
																}
															],
															"id": 1105,
															"name": "BinaryOperation",
															"src": "431:5:3"
														}
													],
													"id": 1106,
													"name": "VariableDeclarationStatement",
													"src": "419:17:3"
												},
												{
													"attributes": {
														"functionReturnParameters": 1100
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"overloadedDeclarations": [
																	null
																],
																"referencedDeclaration": 1102,
																"type": "uint256",
																"value": "c"
															},
															"id": 1107,
															"name": "Identifier",
															"src": "454:1:3"
														}
													],
													"id": 1108,
													"name": "Return",
													"src": "447:8:3"
												}
											],
											"id": 1109,
											"name": "Block",
											"src": "337:126:3"
										}
									],
									"id": 1110,
									"name": "FunctionDefinition",
									"src": "270:193:3"
								},
								{
									"attributes": {
										"constant": true,
										"implemented": true,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "sub",
										"payable": false,
										"scope": 1155,
										"stateMutability": "pure",
										"superFunction": null,
										"visibility": "internal"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "a",
														"scope": 1130,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 1111,
															"name": "ElementaryTypeName",
															"src": "494:7:3"
														}
													],
													"id": 1112,
													"name": "VariableDeclaration",
													"src": "494:9:3"
												},
												{
													"attributes": {
														"constant": false,
														"name": "b",
														"scope": 1130,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 1113,
															"name": "ElementaryTypeName",
															"src": "505:7:3"
														}
													],
													"id": 1114,
													"name": "VariableDeclaration",
													"src": "505:9:3"
												}
											],
											"id": 1115,
											"name": "ParameterList",
											"src": "493:22:3"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 1130,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 1116,
															"name": "ElementaryTypeName",
															"src": "539:7:3"
														}
													],
													"id": 1117,
													"name": "VariableDeclaration",
													"src": "539:7:3"
												}
											],
											"id": 1118,
											"name": "ParameterList",
											"src": "538:9:3"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1158,
																		"type": "function (bool) pure",
																		"value": "assert"
																	},
																	"id": 1119,
																	"name": "Identifier",
																	"src": "559:6:3"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "<=",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1114,
																				"type": "uint256",
																				"value": "b"
																			},
																			"id": 1120,
																			"name": "Identifier",
																			"src": "566:1:3"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1112,
																				"type": "uint256",
																				"value": "a"
																			},
																			"id": 1121,
																			"name": "Identifier",
																			"src": "571:1:3"
																		}
																	],
																	"id": 1122,
																	"name": "BinaryOperation",
																	"src": "566:6:3"
																}
															],
															"id": 1123,
															"name": "FunctionCall",
															"src": "559:14:3"
														}
													],
													"id": 1124,
													"name": "ExpressionStatement",
													"src": "559:14:3"
												},
												{
													"attributes": {
														"functionReturnParameters": 1118
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "-",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1112,
																		"type": "uint256",
																		"value": "a"
																	},
																	"id": 1125,
																	"name": "Identifier",
																	"src": "591:1:3"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1114,
																		"type": "uint256",
																		"value": "b"
																	},
																	"id": 1126,
																	"name": "Identifier",
																	"src": "595:1:3"
																}
															],
															"id": 1127,
															"name": "BinaryOperation",
															"src": "591:5:3"
														}
													],
													"id": 1128,
													"name": "Return",
													"src": "584:12:3"
												}
											],
											"id": 1129,
											"name": "Block",
											"src": "548:56:3"
										}
									],
									"id": 1130,
									"name": "FunctionDefinition",
									"src": "481:123:3"
								},
								{
									"attributes": {
										"constant": true,
										"implemented": true,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "add",
										"payable": false,
										"scope": 1155,
										"stateMutability": "pure",
										"superFunction": null,
										"visibility": "internal"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "a",
														"scope": 1154,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 1131,
															"name": "ElementaryTypeName",
															"src": "635:7:3"
														}
													],
													"id": 1132,
													"name": "VariableDeclaration",
													"src": "635:9:3"
												},
												{
													"attributes": {
														"constant": false,
														"name": "b",
														"scope": 1154,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 1133,
															"name": "ElementaryTypeName",
															"src": "646:7:3"
														}
													],
													"id": 1134,
													"name": "VariableDeclaration",
													"src": "646:9:3"
												}
											],
											"id": 1135,
											"name": "ParameterList",
											"src": "634:22:3"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 1154,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 1136,
															"name": "ElementaryTypeName",
															"src": "680:7:3"
														}
													],
													"id": 1137,
													"name": "VariableDeclaration",
													"src": "680:7:3"
												}
											],
											"id": 1138,
											"name": "ParameterList",
											"src": "679:9:3"
										},
										{
											"children": [
												{
													"attributes": {
														"assignments": [
															1140
														]
													},
													"children": [
														{
															"attributes": {
																"constant": false,
																"name": "c",
																"scope": 1154,
																"stateVariable": false,
																"storageLocation": "default",
																"type": "uint256",
																"value": null,
																"visibility": "internal"
															},
															"children": [
																{
																	"attributes": {
																		"name": "uint256",
																		"type": "uint256"
																	},
																	"id": 1139,
																	"name": "ElementaryTypeName",
																	"src": "700:7:3"
																}
															],
															"id": 1140,
															"name": "VariableDeclaration",
															"src": "700:9:3"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "+",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1132,
																		"type": "uint256",
																		"value": "a"
																	},
																	"id": 1141,
																	"name": "Identifier",
																	"src": "712:1:3"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1134,
																		"type": "uint256",
																		"value": "b"
																	},
																	"id": 1142,
																	"name": "Identifier",
																	"src": "716:1:3"
																}
															],
															"id": 1143,
															"name": "BinaryOperation",
															"src": "712:5:3"
														}
													],
													"id": 1144,
													"name": "VariableDeclarationStatement",
													"src": "700:17:3"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1158,
																		"type": "function (bool) pure",
																		"value": "assert"
																	},
																	"id": 1145,
																	"name": "Identifier",
																	"src": "728:6:3"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": ">=",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1140,
																				"type": "uint256",
																				"value": "c"
																			},
																			"id": 1146,
																			"name": "Identifier",
																			"src": "735:1:3"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1132,
																				"type": "uint256",
																				"value": "a"
																			},
																			"id": 1147,
																			"name": "Identifier",
																			"src": "740:1:3"
																		}
																	],
																	"id": 1148,
																	"name": "BinaryOperation",
																	"src": "735:6:3"
																}
															],
															"id": 1149,
															"name": "FunctionCall",
															"src": "728:14:3"
														}
													],
													"id": 1150,
													"name": "ExpressionStatement",
													"src": "728:14:3"
												},
												{
													"attributes": {
														"functionReturnParameters": 1138
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"overloadedDeclarations": [
																	null
																],
																"referencedDeclaration": 1140,
																"type": "uint256",
																"value": "c"
															},
															"id": 1151,
															"name": "Identifier",
															"src": "760:1:3"
														}
													],
													"id": 1152,
													"name": "Return",
													"src": "753:8:3"
												}
											],
											"id": 1153,
											"name": "Block",
											"src": "689:80:3"
										}
									],
									"id": 1154,
									"name": "FunctionDefinition",
									"src": "622:147:3"
								}
							],
							"id": 1155,
							"name": "ContractDefinition",
							"src": "30:742:3"
						}
					],
					"id": 1156,
					"name": "SourceUnit",
					"src": "0:774:3"
				}
			}
		}
	}
}